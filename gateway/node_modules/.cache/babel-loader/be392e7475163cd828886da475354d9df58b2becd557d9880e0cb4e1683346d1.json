{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport * as echarts from 'echarts/lib/echarts';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\nvar vec2 = glmatrix.vec2;\nvar normalize = vec3.normalize;\nvar cross = vec3.cross;\nvar sub = vec3.sub;\nvar add = vec3.add;\nvar create = vec3.create;\nvar normal = create();\nvar tangent = create();\nvar bitangent = create();\nvar halfVector = create();\nvar coord0 = [];\nvar coord1 = [];\nfunction getCubicPointsOnGlobe(coords, coordSys) {\n  vec2.copy(coord0, coords[0]);\n  vec2.copy(coord1, coords[1]);\n  var pts = [];\n  var p0 = pts[0] = create();\n  var p1 = pts[1] = create();\n  var p2 = pts[2] = create();\n  var p3 = pts[3] = create();\n  coordSys.dataToPoint(coord0, p0);\n  coordSys.dataToPoint(coord1, p3); // Get p1\n\n  normalize(normal, p0); // TODO p0-p3 is parallel with normal\n\n  sub(tangent, p3, p0);\n  normalize(tangent, tangent);\n  cross(bitangent, tangent, normal);\n  normalize(bitangent, bitangent);\n  cross(tangent, normal, bitangent); // p1 is half vector of p0 and tangent on p0\n\n  add(p1, normal, tangent);\n  normalize(p1, p1); // Get p2\n\n  normalize(normal, p3);\n  sub(tangent, p0, p3);\n  normalize(tangent, tangent);\n  cross(bitangent, tangent, normal);\n  normalize(bitangent, bitangent);\n  cross(tangent, normal, bitangent); // p2 is half vector of p3 and tangent on p3\n\n  add(p2, normal, tangent);\n  normalize(p2, p2); // Project distance of p0 on halfVector\n\n  add(halfVector, p0, p3);\n  normalize(halfVector, halfVector);\n  var projDist = vec3.dot(p0, halfVector); // Angle of halfVector and p1\n\n  var cosTheta = vec3.dot(halfVector, p1);\n  var len = (Math.max(vec3.len(p0), vec3.len(p3)) - projDist) / cosTheta * 2;\n  vec3.scaleAndAdd(p1, p0, p1, len);\n  vec3.scaleAndAdd(p2, p3, p2, len);\n  return pts;\n}\nfunction getCubicPointsOnPlane(coords, coordSys, up) {\n  var pts = [];\n  var p0 = pts[0] = vec3.create();\n  var p1 = pts[1] = vec3.create();\n  var p2 = pts[2] = vec3.create();\n  var p3 = pts[3] = vec3.create();\n  coordSys.dataToPoint(coords[0], p0);\n  coordSys.dataToPoint(coords[1], p3);\n  var len = vec3.dist(p0, p3);\n  vec3.lerp(p1, p0, p3, 0.3);\n  vec3.lerp(p2, p0, p3, 0.3);\n  vec3.scaleAndAdd(p1, p1, up, Math.min(len * 0.1, 10));\n  vec3.scaleAndAdd(p2, p2, up, Math.min(len * 0.1, 10));\n  return pts;\n}\nfunction getPolylinePoints(coords, coordSys) {\n  var pts = new Float32Array(coords.length * 3);\n  var off = 0;\n  var pt = [];\n  for (var i = 0; i < coords.length; i++) {\n    coordSys.dataToPoint(coords[i], pt);\n    pts[off++] = pt[0];\n    pts[off++] = pt[1];\n    pts[off++] = pt[2];\n  }\n  return pts;\n}\nfunction prepareCoords(data) {\n  var coordsList = [];\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords', true);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(coords instanceof Array && coords.length > 0 && coords[0] instanceof Array)) {\n        throw new Error('Invalid coords ' + JSON.stringify(coords) + '. Lines must have 2d coords array in data item.');\n      }\n    }\n    coordsList.push(coords);\n  });\n  return {\n    coordsList: coordsList\n  };\n}\nfunction layoutGlobe(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var isPolyline = seriesModel.get('polyline');\n  data.setLayout('lineType', isPolyline ? 'polyline' : 'cubicBezier');\n  var res = prepareCoords(data);\n  data.each(function (idx) {\n    var coords = res.coordsList[idx];\n    var getPointsMethod = isPolyline ? getPolylinePoints : getCubicPointsOnGlobe;\n    data.setItemLayout(idx, getPointsMethod(coords, coordSys));\n  });\n}\nfunction layoutOnPlane(seriesModel, coordSys, normal) {\n  var data = seriesModel.getData();\n  var isPolyline = seriesModel.get('polyline');\n  var res = prepareCoords(data);\n  data.setLayout('lineType', isPolyline ? 'polyline' : 'cubicBezier');\n  data.each(function (idx) {\n    var coords = res.coordsList[idx];\n    var pts = isPolyline ? getPolylinePoints(coords, coordSys) : getCubicPointsOnPlane(coords, coordSys, normal);\n    data.setItemLayout(idx, pts);\n  });\n}\nexport default function lines3DLayout(ecModel, api) {\n  ecModel.eachSeriesByType('lines3D', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    if (coordSys.type === 'globe') {\n      layoutGlobe(seriesModel, coordSys);\n    } else if (coordSys.type === 'geo3D') {\n      layoutOnPlane(seriesModel, coordSys, [0, 1, 0]);\n    } else if (coordSys.type === 'mapbox3D' || coordSys.type === 'maptalks3D') {\n      layoutOnPlane(seriesModel, coordSys, [0, 0, 1]);\n    }\n  });\n}\n;","map":{"version":3,"names":["echarts","glmatrix","vec3","vec2","normalize","cross","sub","add","create","normal","tangent","bitangent","halfVector","coord0","coord1","getCubicPointsOnGlobe","coords","coordSys","copy","pts","p0","p1","p2","p3","dataToPoint","projDist","dot","cosTheta","len","Math","max","scaleAndAdd","getCubicPointsOnPlane","up","dist","lerp","min","getPolylinePoints","Float32Array","length","off","pt","i","prepareCoords","data","coordsList","each","idx","itemModel","getItemModel","option","Array","getShallow","process","env","NODE_ENV","Error","JSON","stringify","push","layoutGlobe","seriesModel","getData","isPolyline","get","setLayout","res","getPointsMethod","setItemLayout","layoutOnPlane","lines3DLayout","ecModel","api","eachSeriesByType","coordinateSystem","type"],"sources":["E:/mytest/node_modules/echarts-gl/lib/chart/lines3D/lines3DLayout.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\nvar vec2 = glmatrix.vec2;\nvar normalize = vec3.normalize;\nvar cross = vec3.cross;\nvar sub = vec3.sub;\nvar add = vec3.add;\nvar create = vec3.create;\nvar normal = create();\nvar tangent = create();\nvar bitangent = create();\nvar halfVector = create();\nvar coord0 = [];\nvar coord1 = [];\n\nfunction getCubicPointsOnGlobe(coords, coordSys) {\n  vec2.copy(coord0, coords[0]);\n  vec2.copy(coord1, coords[1]);\n  var pts = [];\n  var p0 = pts[0] = create();\n  var p1 = pts[1] = create();\n  var p2 = pts[2] = create();\n  var p3 = pts[3] = create();\n  coordSys.dataToPoint(coord0, p0);\n  coordSys.dataToPoint(coord1, p3); // Get p1\n\n  normalize(normal, p0); // TODO p0-p3 is parallel with normal\n\n  sub(tangent, p3, p0);\n  normalize(tangent, tangent);\n  cross(bitangent, tangent, normal);\n  normalize(bitangent, bitangent);\n  cross(tangent, normal, bitangent); // p1 is half vector of p0 and tangent on p0\n\n  add(p1, normal, tangent);\n  normalize(p1, p1); // Get p2\n\n  normalize(normal, p3);\n  sub(tangent, p0, p3);\n  normalize(tangent, tangent);\n  cross(bitangent, tangent, normal);\n  normalize(bitangent, bitangent);\n  cross(tangent, normal, bitangent); // p2 is half vector of p3 and tangent on p3\n\n  add(p2, normal, tangent);\n  normalize(p2, p2); // Project distance of p0 on halfVector\n\n  add(halfVector, p0, p3);\n  normalize(halfVector, halfVector);\n  var projDist = vec3.dot(p0, halfVector); // Angle of halfVector and p1\n\n  var cosTheta = vec3.dot(halfVector, p1);\n  var len = (Math.max(vec3.len(p0), vec3.len(p3)) - projDist) / cosTheta * 2;\n  vec3.scaleAndAdd(p1, p0, p1, len);\n  vec3.scaleAndAdd(p2, p3, p2, len);\n  return pts;\n}\n\nfunction getCubicPointsOnPlane(coords, coordSys, up) {\n  var pts = [];\n  var p0 = pts[0] = vec3.create();\n  var p1 = pts[1] = vec3.create();\n  var p2 = pts[2] = vec3.create();\n  var p3 = pts[3] = vec3.create();\n  coordSys.dataToPoint(coords[0], p0);\n  coordSys.dataToPoint(coords[1], p3);\n  var len = vec3.dist(p0, p3);\n  vec3.lerp(p1, p0, p3, 0.3);\n  vec3.lerp(p2, p0, p3, 0.3);\n  vec3.scaleAndAdd(p1, p1, up, Math.min(len * 0.1, 10));\n  vec3.scaleAndAdd(p2, p2, up, Math.min(len * 0.1, 10));\n  return pts;\n}\n\nfunction getPolylinePoints(coords, coordSys) {\n  var pts = new Float32Array(coords.length * 3);\n  var off = 0;\n  var pt = [];\n\n  for (var i = 0; i < coords.length; i++) {\n    coordSys.dataToPoint(coords[i], pt);\n    pts[off++] = pt[0];\n    pts[off++] = pt[1];\n    pts[off++] = pt[2];\n  }\n\n  return pts;\n}\n\nfunction prepareCoords(data) {\n  var coordsList = [];\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords', true);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(coords instanceof Array && coords.length > 0 && coords[0] instanceof Array)) {\n        throw new Error('Invalid coords ' + JSON.stringify(coords) + '. Lines must have 2d coords array in data item.');\n      }\n    }\n\n    coordsList.push(coords);\n  });\n  return {\n    coordsList: coordsList\n  };\n}\n\nfunction layoutGlobe(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var isPolyline = seriesModel.get('polyline');\n  data.setLayout('lineType', isPolyline ? 'polyline' : 'cubicBezier');\n  var res = prepareCoords(data);\n  data.each(function (idx) {\n    var coords = res.coordsList[idx];\n    var getPointsMethod = isPolyline ? getPolylinePoints : getCubicPointsOnGlobe;\n    data.setItemLayout(idx, getPointsMethod(coords, coordSys));\n  });\n}\n\nfunction layoutOnPlane(seriesModel, coordSys, normal) {\n  var data = seriesModel.getData();\n  var isPolyline = seriesModel.get('polyline');\n  var res = prepareCoords(data);\n  data.setLayout('lineType', isPolyline ? 'polyline' : 'cubicBezier');\n  data.each(function (idx) {\n    var coords = res.coordsList[idx];\n    var pts = isPolyline ? getPolylinePoints(coords, coordSys) : getCubicPointsOnPlane(coords, coordSys, normal);\n    data.setItemLayout(idx, pts);\n  });\n}\n\nexport default function lines3DLayout(ecModel, api) {\n  ecModel.eachSeriesByType('lines3D', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'globe') {\n      layoutGlobe(seriesModel, coordSys);\n    } else if (coordSys.type === 'geo3D') {\n      layoutOnPlane(seriesModel, coordSys, [0, 1, 0]);\n    } else if (coordSys.type === 'mapbox3D' || coordSys.type === 'maptalks3D') {\n      layoutOnPlane(seriesModel, coordSys, [0, 0, 1]);\n    }\n  });\n}\n;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}