{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nimport Mapbox3DLayer from './Mapbox3DLayer';\nimport SceneHelper from '../common/SceneHelper';\nimport graphicGL from '../../util/graphicGL';\nimport displayShadowGLSL from '../../util/shader/displayShadow.glsl.js';\ngraphicGL.Shader.import(displayShadowGLSL);\nvar TILE_SIZE = 512;\nexport default echarts.ComponentView.extend({\n  type: 'mapbox3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    var zr = api.getZr();\n    this._zrLayer = new Mapbox3DLayer('mapbox3D', zr);\n    zr.painter.insertLayer(-1000, this._zrLayer);\n    this._lightRoot = new graphicGL.Node();\n    this._sceneHelper = new SceneHelper(this._lightRoot);\n    this._sceneHelper.initLight(this._lightRoot);\n    var mapbox = this._zrLayer.getMapbox();\n    var dispatchInteractAction = this._dispatchInteractAction.bind(this, api, mapbox); // PENDING\n\n    ['zoom', 'rotate', 'drag', 'pitch', 'rotate', 'move'].forEach(function (eName) {\n      mapbox.on(eName, dispatchInteractAction);\n    });\n    this._groundMesh = new graphicGL.Mesh({\n      geometry: new graphicGL.PlaneGeometry(),\n      material: new graphicGL.Material({\n        shader: new graphicGL.Shader({\n          vertex: graphicGL.Shader.source('ecgl.displayShadow.vertex'),\n          fragment: graphicGL.Shader.source('ecgl.displayShadow.fragment')\n        }),\n        depthMask: false\n      }),\n      // Render first\n      renderOrder: -100,\n      culling: false,\n      castShadow: false,\n      $ignorePicking: true,\n      renderNormal: true\n    });\n  },\n  render: function (mapbox3DModel, ecModel, api) {\n    var mapbox = this._zrLayer.getMapbox();\n    var styleDesc = mapbox3DModel.get('style');\n    var styleStr = JSON.stringify(styleDesc);\n    if (styleStr !== this._oldStyleStr) {\n      if (styleDesc) {\n        mapbox.setStyle(styleDesc);\n      }\n    }\n    this._oldStyleStr = styleStr;\n    mapbox.setCenter(mapbox3DModel.get('center'));\n    mapbox.setZoom(mapbox3DModel.get('zoom'));\n    mapbox.setPitch(mapbox3DModel.get('pitch'));\n    mapbox.setBearing(mapbox3DModel.get('bearing'));\n    mapbox3DModel.setMapbox(mapbox);\n    var coordSys = mapbox3DModel.coordinateSystem; // Not add to rootNode. Or light direction will be stretched by rootNode scale\n\n    coordSys.viewGL.scene.add(this._lightRoot);\n    coordSys.viewGL.add(this._groundMesh);\n    this._updateGroundMesh(); // Update lights\n\n    this._sceneHelper.setScene(coordSys.viewGL.scene);\n    this._sceneHelper.updateLight(mapbox3DModel); // Update post effects\n\n    coordSys.viewGL.setPostEffect(mapbox3DModel.getModel('postEffect'), api);\n    coordSys.viewGL.setTemporalSuperSampling(mapbox3DModel.getModel('temporalSuperSampling'));\n    this._mapbox3DModel = mapbox3DModel;\n  },\n  afterRender: function (mapbox3DModel, ecModel, api, layerGL) {\n    var renderer = layerGL.renderer;\n    this._sceneHelper.updateAmbientCubemap(renderer, mapbox3DModel, api);\n    this._sceneHelper.updateSkybox(renderer, mapbox3DModel, api); // FIXME If other series changes coordinate system.\n    // FIXME When doing progressive rendering.\n\n    mapbox3DModel.coordinateSystem.viewGL.scene.traverse(function (mesh) {\n      if (mesh.material) {\n        mesh.material.define('fragment', 'NORMAL_UP_AXIS', 2);\n        mesh.material.define('fragment', 'NORMAL_FRONT_AXIS', 1);\n      }\n    });\n  },\n  updateCamera: function (mapbox3DModel, ecModel, api, payload) {\n    mapbox3DModel.coordinateSystem.setCameraOption(payload);\n    this._updateGroundMesh();\n    api.getZr().refresh();\n  },\n  _dispatchInteractAction: function (api, mapbox, mapbox3DModel) {\n    api.dispatchAction({\n      type: 'mapbox3DChangeCamera',\n      pitch: mapbox.getPitch(),\n      zoom: mapbox.getZoom(),\n      center: mapbox.getCenter().toArray(),\n      bearing: mapbox.getBearing(),\n      mapbox3DId: this._mapbox3DModel && this._mapbox3DModel.id\n    });\n  },\n  _updateGroundMesh: function () {\n    if (this._mapbox3DModel) {\n      var coordSys = this._mapbox3DModel.coordinateSystem;\n      var pt = coordSys.dataToPoint(coordSys.center);\n      this._groundMesh.position.set(pt[0], pt[1], -0.001);\n      var plane = new graphicGL.Plane(new graphicGL.Vector3(0, 0, 1), 0);\n      var ray1 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(-1, -1));\n      var ray2 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(1, 1));\n      var pos0 = ray1.intersectPlane(plane);\n      var pos1 = ray2.intersectPlane(plane);\n      var scale = pos0.dist(pos1) / coordSys.viewGL.rootNode.scale.x;\n      this._groundMesh.scale.set(scale, scale, 1);\n    }\n  },\n  dispose: function (ecModel, api) {\n    if (this._zrLayer) {\n      this._zrLayer.dispose();\n    }\n    api.getZr().painter.delLayer(-1000);\n  }\n});","map":{"version":3,"names":["echarts","Mapbox3DLayer","SceneHelper","graphicGL","displayShadowGLSL","Shader","import","TILE_SIZE","ComponentView","extend","type","__ecgl__","init","ecModel","api","zr","getZr","_zrLayer","painter","insertLayer","_lightRoot","Node","_sceneHelper","initLight","mapbox","getMapbox","dispatchInteractAction","_dispatchInteractAction","bind","forEach","eName","on","_groundMesh","Mesh","geometry","PlaneGeometry","material","Material","shader","vertex","source","fragment","depthMask","renderOrder","culling","castShadow","$ignorePicking","renderNormal","render","mapbox3DModel","styleDesc","get","styleStr","JSON","stringify","_oldStyleStr","setStyle","setCenter","setZoom","setPitch","setBearing","setMapbox","coordSys","coordinateSystem","viewGL","scene","add","_updateGroundMesh","setScene","updateLight","setPostEffect","getModel","setTemporalSuperSampling","_mapbox3DModel","afterRender","layerGL","renderer","updateAmbientCubemap","updateSkybox","traverse","mesh","define","updateCamera","payload","setCameraOption","refresh","dispatchAction","pitch","getPitch","zoom","getZoom","center","getCenter","toArray","bearing","getBearing","mapbox3DId","id","pt","dataToPoint","position","set","plane","Plane","Vector3","ray1","camera","castRay","Vector2","ray2","pos0","intersectPlane","pos1","scale","dist","rootNode","x","dispose","delLayer"],"sources":["E:/mytest/node_modules/echarts-gl/lib/component/mapbox3D/Mapbox3DView.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport Mapbox3DLayer from './Mapbox3DLayer';\nimport SceneHelper from '../common/SceneHelper';\nimport graphicGL from '../../util/graphicGL';\nimport displayShadowGLSL from '../../util/shader/displayShadow.glsl.js';\ngraphicGL.Shader.import(displayShadowGLSL);\nvar TILE_SIZE = 512;\nexport default echarts.ComponentView.extend({\n  type: 'mapbox3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    var zr = api.getZr();\n    this._zrLayer = new Mapbox3DLayer('mapbox3D', zr);\n    zr.painter.insertLayer(-1000, this._zrLayer);\n    this._lightRoot = new graphicGL.Node();\n    this._sceneHelper = new SceneHelper(this._lightRoot);\n\n    this._sceneHelper.initLight(this._lightRoot);\n\n    var mapbox = this._zrLayer.getMapbox();\n\n    var dispatchInteractAction = this._dispatchInteractAction.bind(this, api, mapbox); // PENDING\n\n\n    ['zoom', 'rotate', 'drag', 'pitch', 'rotate', 'move'].forEach(function (eName) {\n      mapbox.on(eName, dispatchInteractAction);\n    });\n    this._groundMesh = new graphicGL.Mesh({\n      geometry: new graphicGL.PlaneGeometry(),\n      material: new graphicGL.Material({\n        shader: new graphicGL.Shader({\n          vertex: graphicGL.Shader.source('ecgl.displayShadow.vertex'),\n          fragment: graphicGL.Shader.source('ecgl.displayShadow.fragment')\n        }),\n        depthMask: false\n      }),\n      // Render first\n      renderOrder: -100,\n      culling: false,\n      castShadow: false,\n      $ignorePicking: true,\n      renderNormal: true\n    });\n  },\n  render: function (mapbox3DModel, ecModel, api) {\n    var mapbox = this._zrLayer.getMapbox();\n\n    var styleDesc = mapbox3DModel.get('style');\n    var styleStr = JSON.stringify(styleDesc);\n\n    if (styleStr !== this._oldStyleStr) {\n      if (styleDesc) {\n        mapbox.setStyle(styleDesc);\n      }\n    }\n\n    this._oldStyleStr = styleStr;\n    mapbox.setCenter(mapbox3DModel.get('center'));\n    mapbox.setZoom(mapbox3DModel.get('zoom'));\n    mapbox.setPitch(mapbox3DModel.get('pitch'));\n    mapbox.setBearing(mapbox3DModel.get('bearing'));\n    mapbox3DModel.setMapbox(mapbox);\n    var coordSys = mapbox3DModel.coordinateSystem; // Not add to rootNode. Or light direction will be stretched by rootNode scale\n\n    coordSys.viewGL.scene.add(this._lightRoot);\n    coordSys.viewGL.add(this._groundMesh);\n\n    this._updateGroundMesh(); // Update lights\n\n\n    this._sceneHelper.setScene(coordSys.viewGL.scene);\n\n    this._sceneHelper.updateLight(mapbox3DModel); // Update post effects\n\n\n    coordSys.viewGL.setPostEffect(mapbox3DModel.getModel('postEffect'), api);\n    coordSys.viewGL.setTemporalSuperSampling(mapbox3DModel.getModel('temporalSuperSampling'));\n    this._mapbox3DModel = mapbox3DModel;\n  },\n  afterRender: function (mapbox3DModel, ecModel, api, layerGL) {\n    var renderer = layerGL.renderer;\n\n    this._sceneHelper.updateAmbientCubemap(renderer, mapbox3DModel, api);\n\n    this._sceneHelper.updateSkybox(renderer, mapbox3DModel, api); // FIXME If other series changes coordinate system.\n    // FIXME When doing progressive rendering.\n\n\n    mapbox3DModel.coordinateSystem.viewGL.scene.traverse(function (mesh) {\n      if (mesh.material) {\n        mesh.material.define('fragment', 'NORMAL_UP_AXIS', 2);\n        mesh.material.define('fragment', 'NORMAL_FRONT_AXIS', 1);\n      }\n    });\n  },\n  updateCamera: function (mapbox3DModel, ecModel, api, payload) {\n    mapbox3DModel.coordinateSystem.setCameraOption(payload);\n\n    this._updateGroundMesh();\n\n    api.getZr().refresh();\n  },\n  _dispatchInteractAction: function (api, mapbox, mapbox3DModel) {\n    api.dispatchAction({\n      type: 'mapbox3DChangeCamera',\n      pitch: mapbox.getPitch(),\n      zoom: mapbox.getZoom(),\n      center: mapbox.getCenter().toArray(),\n      bearing: mapbox.getBearing(),\n      mapbox3DId: this._mapbox3DModel && this._mapbox3DModel.id\n    });\n  },\n  _updateGroundMesh: function () {\n    if (this._mapbox3DModel) {\n      var coordSys = this._mapbox3DModel.coordinateSystem;\n      var pt = coordSys.dataToPoint(coordSys.center);\n\n      this._groundMesh.position.set(pt[0], pt[1], -0.001);\n\n      var plane = new graphicGL.Plane(new graphicGL.Vector3(0, 0, 1), 0);\n      var ray1 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(-1, -1));\n      var ray2 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(1, 1));\n      var pos0 = ray1.intersectPlane(plane);\n      var pos1 = ray2.intersectPlane(plane);\n      var scale = pos0.dist(pos1) / coordSys.viewGL.rootNode.scale.x;\n\n      this._groundMesh.scale.set(scale, scale, 1);\n    }\n  },\n  dispose: function (ecModel, api) {\n    if (this._zrLayer) {\n      this._zrLayer.dispose();\n    }\n\n    api.getZr().painter.delLayer(-1000);\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}