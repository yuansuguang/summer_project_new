{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nexport default function (seriesModel, dims, source) {\n  source = source || seriesModel.getSource();\n  var coordSysDimensions = dims || echarts.getCoordinateSystemDimensions(seriesModel.get('coordinateSystem')) || ['x', 'y', 'z'];\n  var dimensions = echarts.helper.createDimensions(source, {\n    dimensionsDefine: source.dimensionsDefine || seriesModel.get('dimensions'),\n    encodeDefine: source.encodeDefine || seriesModel.get('encode'),\n    coordDimensions: coordSysDimensions.map(function (dim) {\n      var axis3DModel = seriesModel.getReferringComponents(dim + 'Axis3D').models[0];\n      return {\n        type: axis3DModel && axis3DModel.get('type') === 'category' ? 'ordinal' : 'float',\n        name: dim // Find stackable dimension. Which will represent value.\n        // stackable: dim === 'z'\n      };\n    })\n  });\n  if (seriesModel.get('coordinateSystem') === 'cartesian3D') {\n    dimensions.forEach(function (dimInfo) {\n      if (coordSysDimensions.indexOf(dimInfo.coordDim) >= 0) {\n        var axis3DModel = seriesModel.getReferringComponents(dimInfo.coordDim + 'Axis3D').models[0];\n        if (axis3DModel && axis3DModel.get('type') === 'category') {\n          dimInfo.ordinalMeta = axis3DModel.getOrdinalMeta();\n        }\n      }\n    });\n  }\n  var stackCalculationInfo = echarts.helper.dataStack.enableDataStack(\n  // Only support 'z' and `byIndex` now.\n  seriesModel, dimensions, {\n    byIndex: true,\n    stackedCoordDimension: 'z'\n  });\n  var data = new echarts.List(dimensions, seriesModel);\n  data.setCalculationInfo(stackCalculationInfo);\n  data.initData(source);\n  return data;\n}","map":{"version":3,"names":["echarts","seriesModel","dims","source","getSource","coordSysDimensions","getCoordinateSystemDimensions","get","dimensions","helper","createDimensions","dimensionsDefine","encodeDefine","coordDimensions","map","dim","axis3DModel","getReferringComponents","models","type","name","forEach","dimInfo","indexOf","coordDim","ordinalMeta","getOrdinalMeta","stackCalculationInfo","dataStack","enableDataStack","byIndex","stackedCoordDimension","data","List","setCalculationInfo","initData"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/chart/common/createList.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nexport default function (seriesModel, dims, source) {\n  source = source || seriesModel.getSource();\n  var coordSysDimensions = dims || echarts.getCoordinateSystemDimensions(seriesModel.get('coordinateSystem')) || ['x', 'y', 'z'];\n  var dimensions = echarts.helper.createDimensions(source, {\n    dimensionsDefine: source.dimensionsDefine || seriesModel.get('dimensions'),\n    encodeDefine: source.encodeDefine || seriesModel.get('encode'),\n    coordDimensions: coordSysDimensions.map(function (dim) {\n      var axis3DModel = seriesModel.getReferringComponents(dim + 'Axis3D').models[0];\n      return {\n        type: axis3DModel && axis3DModel.get('type') === 'category' ? 'ordinal' : 'float',\n        name: dim // Find stackable dimension. Which will represent value.\n        // stackable: dim === 'z'\n\n      };\n    })\n  });\n\n  if (seriesModel.get('coordinateSystem') === 'cartesian3D') {\n    dimensions.forEach(function (dimInfo) {\n      if (coordSysDimensions.indexOf(dimInfo.coordDim) >= 0) {\n        var axis3DModel = seriesModel.getReferringComponents(dimInfo.coordDim + 'Axis3D').models[0];\n\n        if (axis3DModel && axis3DModel.get('type') === 'category') {\n          dimInfo.ordinalMeta = axis3DModel.getOrdinalMeta();\n        }\n      }\n    });\n  }\n\n  var stackCalculationInfo = echarts.helper.dataStack.enableDataStack( // Only support 'z' and `byIndex` now.\n  seriesModel, dimensions, {\n    byIndex: true,\n    stackedCoordDimension: 'z'\n  });\n  var data = new echarts.List(dimensions, seriesModel);\n  data.setCalculationInfo(stackCalculationInfo);\n  data.initData(source);\n  return data;\n}"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,qBAAqB;AAC9C,eAAe,UAAUC,WAAW,EAAEC,IAAI,EAAEC,MAAM,EAAE;EAClDA,MAAM,GAAGA,MAAM,IAAIF,WAAW,CAACG,SAAS,CAAC,CAAC;EAC1C,IAAIC,kBAAkB,GAAGH,IAAI,IAAIF,OAAO,CAACM,6BAA6B,CAACL,WAAW,CAACM,GAAG,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC9H,IAAIC,UAAU,GAAGR,OAAO,CAACS,MAAM,CAACC,gBAAgB,CAACP,MAAM,EAAE;IACvDQ,gBAAgB,EAAER,MAAM,CAACQ,gBAAgB,IAAIV,WAAW,CAACM,GAAG,CAAC,YAAY,CAAC;IAC1EK,YAAY,EAAET,MAAM,CAACS,YAAY,IAAIX,WAAW,CAACM,GAAG,CAAC,QAAQ,CAAC;IAC9DM,eAAe,EAAER,kBAAkB,CAACS,GAAG,CAAC,UAAUC,GAAG,EAAE;MACrD,IAAIC,WAAW,GAAGf,WAAW,CAACgB,sBAAsB,CAACF,GAAG,GAAG,QAAQ,CAAC,CAACG,MAAM,CAAC,CAAC,CAAC;MAC9E,OAAO;QACLC,IAAI,EAAEH,WAAW,IAAIA,WAAW,CAACT,GAAG,CAAC,MAAM,CAAC,KAAK,UAAU,GAAG,SAAS,GAAG,OAAO;QACjFa,IAAI,EAAEL,GAAG,CAAC;QACV;MAEF,CAAC;IACH,CAAC;EACH,CAAC,CAAC;EAEF,IAAId,WAAW,CAACM,GAAG,CAAC,kBAAkB,CAAC,KAAK,aAAa,EAAE;IACzDC,UAAU,CAACa,OAAO,CAAC,UAAUC,OAAO,EAAE;MACpC,IAAIjB,kBAAkB,CAACkB,OAAO,CAACD,OAAO,CAACE,QAAQ,CAAC,IAAI,CAAC,EAAE;QACrD,IAAIR,WAAW,GAAGf,WAAW,CAACgB,sBAAsB,CAACK,OAAO,CAACE,QAAQ,GAAG,QAAQ,CAAC,CAACN,MAAM,CAAC,CAAC,CAAC;QAE3F,IAAIF,WAAW,IAAIA,WAAW,CAACT,GAAG,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;UACzDe,OAAO,CAACG,WAAW,GAAGT,WAAW,CAACU,cAAc,CAAC,CAAC;QACpD;MACF;IACF,CAAC,CAAC;EACJ;EAEA,IAAIC,oBAAoB,GAAG3B,OAAO,CAACS,MAAM,CAACmB,SAAS,CAACC,eAAe;EAAE;EACrE5B,WAAW,EAAEO,UAAU,EAAE;IACvBsB,OAAO,EAAE,IAAI;IACbC,qBAAqB,EAAE;EACzB,CAAC,CAAC;EACF,IAAIC,IAAI,GAAG,IAAIhC,OAAO,CAACiC,IAAI,CAACzB,UAAU,EAAEP,WAAW,CAAC;EACpD+B,IAAI,CAACE,kBAAkB,CAACP,oBAAoB,CAAC;EAC7CK,IAAI,CAACG,QAAQ,CAAChC,MAAM,CAAC;EACrB,OAAO6B,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}