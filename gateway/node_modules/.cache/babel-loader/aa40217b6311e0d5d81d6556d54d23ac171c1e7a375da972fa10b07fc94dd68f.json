{"ast":null,"code":"import mat4 from '../glmatrix/mat4';\nimport vec3 from '../glmatrix/vec3';\nimport quat from '../glmatrix/quat';\nimport mat3 from '../glmatrix/mat3';\nimport Vector3 from './Vector3';\n\n/**\n * @constructor\n * @alias clay.Matrix4\n */\nvar Matrix4 = function () {\n  this._axisX = new Vector3();\n  this._axisY = new Vector3();\n  this._axisZ = new Vector3();\n\n  /**\n   * Storage of Matrix4\n   * @name array\n   * @type {Float32Array}\n   * @memberOf clay.Matrix4#\n   */\n  this.array = mat4.create();\n\n  /**\n   * @name _dirty\n   * @type {boolean}\n   * @memberOf clay.Matrix4#\n   */\n  this._dirty = true;\n};\nMatrix4.prototype = {\n  constructor: Matrix4,\n  /**\n   * Set components from array\n   * @param  {Float32Array|number[]} arr\n   */\n  setArray: function (arr) {\n    for (var i = 0; i < this.array.length; i++) {\n      this.array[i] = arr[i];\n    }\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Calculate the adjugate of self, in-place\n   * @return {clay.Matrix4}\n   */\n  adjoint: function () {\n    mat4.adjoint(this.array, this.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Clone a new Matrix4\n   * @return {clay.Matrix4}\n   */\n  clone: function () {\n    return new Matrix4().copy(this);\n  },\n  /**\n   * Copy from b\n   * @param  {clay.Matrix4} b\n   * @return {clay.Matrix4}\n   */\n  copy: function (a) {\n    mat4.copy(this.array, a.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Calculate matrix determinant\n   * @return {number}\n   */\n  determinant: function () {\n    return mat4.determinant(this.array);\n  },\n  /**\n   * Set upper 3x3 part from quaternion\n   * @param  {clay.Quaternion} q\n   * @return {clay.Matrix4}\n   */\n  fromQuat: function (q) {\n    mat4.fromQuat(this.array, q.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Set from a quaternion rotation and a vector translation\n   * @param  {clay.Quaternion} q\n   * @param  {clay.Vector3} v\n   * @return {clay.Matrix4}\n   */\n  fromRotationTranslation: function (q, v) {\n    mat4.fromRotationTranslation(this.array, q.array, v.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Set from Matrix2d, it is used when converting a 2d shape to 3d space.\n   * In 3d space it is equivalent to ranslate on xy plane and rotate about z axis\n   * @param  {clay.Matrix2d} m2d\n   * @return {clay.Matrix4}\n   */\n  fromMat2d: function (m2d) {\n    Matrix4.fromMat2d(this, m2d);\n    return this;\n  },\n  /**\n   * Set from frustum bounds\n   * @param  {number} left\n   * @param  {number} right\n   * @param  {number} bottom\n   * @param  {number} top\n   * @param  {number} near\n   * @param  {number} far\n   * @return {clay.Matrix4}\n   */\n  frustum: function (left, right, bottom, top, near, far) {\n    mat4.frustum(this.array, left, right, bottom, top, near, far);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Set to a identity matrix\n   * @return {clay.Matrix4}\n   */\n  identity: function () {\n    mat4.identity(this.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Invert self\n   * @return {clay.Matrix4}\n   */\n  invert: function () {\n    mat4.invert(this.array, this.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Set as a matrix with the given eye position, focal point, and up axis\n   * @param  {clay.Vector3} eye\n   * @param  {clay.Vector3} center\n   * @param  {clay.Vector3} up\n   * @return {clay.Matrix4}\n   */\n  lookAt: function (eye, center, up) {\n    mat4.lookAt(this.array, eye.array, center.array, up.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Alias for mutiply\n   * @param  {clay.Matrix4} b\n   * @return {clay.Matrix4}\n   */\n  mul: function (b) {\n    mat4.mul(this.array, this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Alias for multiplyLeft\n   * @param  {clay.Matrix4} a\n   * @return {clay.Matrix4}\n   */\n  mulLeft: function (a) {\n    mat4.mul(this.array, a.array, this.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Multiply self and b\n   * @param  {clay.Matrix4} b\n   * @return {clay.Matrix4}\n   */\n  multiply: function (b) {\n    mat4.multiply(this.array, this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Multiply a and self, a is on the left\n   * @param  {clay.Matrix3} a\n   * @return {clay.Matrix3}\n   */\n  multiplyLeft: function (a) {\n    mat4.multiply(this.array, a.array, this.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Set as a orthographic projection matrix\n   * @param  {number} left\n   * @param  {number} right\n   * @param  {number} bottom\n   * @param  {number} top\n   * @param  {number} near\n   * @param  {number} far\n   * @return {clay.Matrix4}\n   */\n  ortho: function (left, right, bottom, top, near, far) {\n    mat4.ortho(this.array, left, right, bottom, top, near, far);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Set as a perspective projection matrix\n   * @param  {number} fovy\n   * @param  {number} aspect\n   * @param  {number} near\n   * @param  {number} far\n   * @return {clay.Matrix4}\n   */\n  perspective: function (fovy, aspect, near, far) {\n    mat4.perspective(this.array, fovy, aspect, near, far);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Rotate self by rad about axis.\n   * Equal to right-multiply a rotaion matrix\n   * @param  {number}   rad\n   * @param  {clay.Vector3} axis\n   * @return {clay.Matrix4}\n   */\n  rotate: function (rad, axis) {\n    mat4.rotate(this.array, this.array, rad, axis.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Rotate self by a given radian about X axis.\n   * Equal to right-multiply a rotaion matrix\n   * @param {number} rad\n   * @return {clay.Matrix4}\n   */\n  rotateX: function (rad) {\n    mat4.rotateX(this.array, this.array, rad);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Rotate self by a given radian about Y axis.\n   * Equal to right-multiply a rotaion matrix\n   * @param {number} rad\n   * @return {clay.Matrix4}\n   */\n  rotateY: function (rad) {\n    mat4.rotateY(this.array, this.array, rad);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Rotate self by a given radian about Z axis.\n   * Equal to right-multiply a rotaion matrix\n   * @param {number} rad\n   * @return {clay.Matrix4}\n   */\n  rotateZ: function (rad) {\n    mat4.rotateZ(this.array, this.array, rad);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Scale self by s\n   * Equal to right-multiply a scale matrix\n   * @param  {clay.Vector3}  s\n   * @return {clay.Matrix4}\n   */\n  scale: function (v) {\n    mat4.scale(this.array, this.array, v.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Translate self by v.\n   * Equal to right-multiply a translate matrix\n   * @param  {clay.Vector3}  v\n   * @return {clay.Matrix4}\n   */\n  translate: function (v) {\n    mat4.translate(this.array, this.array, v.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Transpose self, in-place.\n   * @return {clay.Matrix2}\n   */\n  transpose: function () {\n    mat4.transpose(this.array, this.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Decompose a matrix to SRT\n   * @param {clay.Vector3} [scale]\n   * @param {clay.Quaternion} rotation\n   * @param {clay.Vector} position\n   * @see http://msdn.microsoft.com/en-us/library/microsoft.xna.framework.matrix.decompose.aspx\n   */\n  decomposeMatrix: function () {\n    var x = vec3.create();\n    var y = vec3.create();\n    var z = vec3.create();\n    var m3 = mat3.create();\n    return function (scale, rotation, position) {\n      var el = this.array;\n      vec3.set(x, el[0], el[1], el[2]);\n      vec3.set(y, el[4], el[5], el[6]);\n      vec3.set(z, el[8], el[9], el[10]);\n      var sx = vec3.length(x);\n      var sy = vec3.length(y);\n      var sz = vec3.length(z);\n\n      // if determine is negative, we need to invert one scale\n      var det = this.determinant();\n      if (det < 0) {\n        sx = -sx;\n      }\n      if (scale) {\n        scale.set(sx, sy, sz);\n      }\n      position.set(el[12], el[13], el[14]);\n      mat3.fromMat4(m3, el);\n      // Not like mat4, mat3 in glmatrix seems to be row-based\n      // Seems fixed in gl-matrix 2.2.2\n      // https://github.com/toji/gl-matrix/issues/114\n      // mat3.transpose(m3, m3);\n\n      m3[0] /= sx;\n      m3[1] /= sx;\n      m3[2] /= sx;\n      m3[3] /= sy;\n      m3[4] /= sy;\n      m3[5] /= sy;\n      m3[6] /= sz;\n      m3[7] /= sz;\n      m3[8] /= sz;\n      quat.fromMat3(rotation.array, m3);\n      quat.normalize(rotation.array, rotation.array);\n      rotation._dirty = true;\n      position._dirty = true;\n    };\n  }(),\n  toString: function () {\n    return '[' + Array.prototype.join.call(this.array, ',') + ']';\n  },\n  toArray: function () {\n    return Array.prototype.slice.call(this.array);\n  }\n};\nvar defineProperty = Object.defineProperty;\nif (defineProperty) {\n  var proto = Matrix4.prototype;\n  /**\n   * Z Axis of local transform\n   * @name z\n   * @type {clay.Vector3}\n   * @memberOf clay.Matrix4\n   * @instance\n   */\n  defineProperty(proto, 'z', {\n    get: function () {\n      var el = this.array;\n      this._axisZ.set(el[8], el[9], el[10]);\n      return this._axisZ;\n    },\n    set: function (v) {\n      // TODO Here has a problem\n      // If only set an item of vector will not work\n      var el = this.array;\n      v = v.array;\n      el[8] = v[0];\n      el[9] = v[1];\n      el[10] = v[2];\n      this._dirty = true;\n    }\n  });\n\n  /**\n   * Y Axis of local transform\n   * @name y\n   * @type {clay.Vector3}\n   * @memberOf clay.Matrix4\n   * @instance\n   */\n  defineProperty(proto, 'y', {\n    get: function () {\n      var el = this.array;\n      this._axisY.set(el[4], el[5], el[6]);\n      return this._axisY;\n    },\n    set: function (v) {\n      var el = this.array;\n      v = v.array;\n      el[4] = v[0];\n      el[5] = v[1];\n      el[6] = v[2];\n      this._dirty = true;\n    }\n  });\n\n  /**\n   * X Axis of local transform\n   * @name x\n   * @type {clay.Vector3}\n   * @memberOf clay.Matrix4\n   * @instance\n   */\n  defineProperty(proto, 'x', {\n    get: function () {\n      var el = this.array;\n      this._axisX.set(el[0], el[1], el[2]);\n      return this._axisX;\n    },\n    set: function (v) {\n      var el = this.array;\n      v = v.array;\n      el[0] = v[0];\n      el[1] = v[1];\n      el[2] = v[2];\n      this._dirty = true;\n    }\n  });\n}\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.adjoint = function (out, a) {\n  mat4.adjoint(out.array, a.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.copy = function (out, a) {\n  mat4.copy(out.array, a.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} a\n * @return {number}\n */\nMatrix4.determinant = function (a) {\n  return mat4.determinant(a.array);\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @return {clay.Matrix4}\n */\nMatrix4.identity = function (out) {\n  mat4.identity(out.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {number}  left\n * @param  {number}  right\n * @param  {number}  bottom\n * @param  {number}  top\n * @param  {number}  near\n * @param  {number}  far\n * @return {clay.Matrix4}\n */\nMatrix4.ortho = function (out, left, right, bottom, top, near, far) {\n  mat4.ortho(out.array, left, right, bottom, top, near, far);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {number}  fovy\n * @param  {number}  aspect\n * @param  {number}  near\n * @param  {number}  far\n * @return {clay.Matrix4}\n */\nMatrix4.perspective = function (out, fovy, aspect, near, far) {\n  mat4.perspective(out.array, fovy, aspect, near, far);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Vector3} eye\n * @param  {clay.Vector3} center\n * @param  {clay.Vector3} up\n * @return {clay.Matrix4}\n */\nMatrix4.lookAt = function (out, eye, center, up) {\n  mat4.lookAt(out.array, eye.array, center.array, up.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.invert = function (out, a) {\n  mat4.invert(out.array, a.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Matrix4} b\n * @return {clay.Matrix4}\n */\nMatrix4.mul = function (out, a, b) {\n  mat4.mul(out.array, a.array, b.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @function\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Matrix4} b\n * @return {clay.Matrix4}\n */\nMatrix4.multiply = Matrix4.mul;\n\n/**\n * @param  {clay.Matrix4}    out\n * @param  {clay.Quaternion} q\n * @return {clay.Matrix4}\n */\nMatrix4.fromQuat = function (out, q) {\n  mat4.fromQuat(out.array, q.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4}    out\n * @param  {clay.Quaternion} q\n * @param  {clay.Vector3}    v\n * @return {clay.Matrix4}\n */\nMatrix4.fromRotationTranslation = function (out, q, v) {\n  mat4.fromRotationTranslation(out.array, q.array, v.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} m4\n * @param  {clay.Matrix2d} m2d\n * @return {clay.Matrix4}\n */\nMatrix4.fromMat2d = function (m4, m2d) {\n  m4._dirty = true;\n  var m2d = m2d.array;\n  var m4 = m4.array;\n  m4[0] = m2d[0];\n  m4[4] = m2d[2];\n  m4[12] = m2d[4];\n  m4[1] = m2d[1];\n  m4[5] = m2d[3];\n  m4[13] = m2d[5];\n  return m4;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @param  {clay.Vector3} axis\n * @return {clay.Matrix4}\n */\nMatrix4.rotate = function (out, a, rad, axis) {\n  mat4.rotate(out.array, a.array, rad, axis.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateX = function (out, a, rad) {\n  mat4.rotateX(out.array, a.array, rad);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateY = function (out, a, rad) {\n  mat4.rotateY(out.array, a.array, rad);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateZ = function (out, a, rad) {\n  mat4.rotateZ(out.array, a.array, rad);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Vector3} v\n * @return {clay.Matrix4}\n */\nMatrix4.scale = function (out, a, v) {\n  mat4.scale(out.array, a.array, v.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.transpose = function (out, a) {\n  mat4.transpose(out.array, a.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Vector3} v\n * @return {clay.Matrix4}\n */\nMatrix4.translate = function (out, a, v) {\n  mat4.translate(out.array, a.array, v.array);\n  out._dirty = true;\n  return out;\n};\nexport default Matrix4;","map":{"version":3,"names":["mat4","vec3","quat","mat3","Vector3","Matrix4","_axisX","_axisY","_axisZ","array","create","_dirty","prototype","constructor","setArray","arr","i","length","adjoint","clone","copy","a","determinant","fromQuat","q","fromRotationTranslation","v","fromMat2d","m2d","frustum","left","right","bottom","top","near","far","identity","invert","lookAt","eye","center","up","mul","b","mulLeft","multiply","multiplyLeft","ortho","perspective","fovy","aspect","rotate","rad","axis","rotateX","rotateY","rotateZ","scale","translate","transpose","decomposeMatrix","x","y","z","m3","rotation","position","el","set","sx","sy","sz","det","fromMat4","fromMat3","normalize","toString","Array","join","call","toArray","slice","defineProperty","Object","proto","get","out","m4"],"sources":["E:/mytest/node_modules/claygl/src/math/Matrix4.js"],"sourcesContent":["import mat4 from '../glmatrix/mat4';\nimport vec3 from '../glmatrix/vec3';\nimport quat from '../glmatrix/quat';\nimport mat3 from '../glmatrix/mat3';\nimport Vector3 from './Vector3';\n\n/**\n * @constructor\n * @alias clay.Matrix4\n */\nvar Matrix4 = function() {\n\n    this._axisX = new Vector3();\n    this._axisY = new Vector3();\n    this._axisZ = new Vector3();\n\n    /**\n     * Storage of Matrix4\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Matrix4#\n     */\n    this.array = mat4.create();\n\n    /**\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Matrix4#\n     */\n    this._dirty = true;\n};\n\nMatrix4.prototype = {\n\n    constructor: Matrix4,\n\n    /**\n     * Set components from array\n     * @param  {Float32Array|number[]} arr\n     */\n    setArray: function (arr) {\n        for (var i = 0; i < this.array.length; i++) {\n            this.array[i] = arr[i];\n        }\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Calculate the adjugate of self, in-place\n     * @return {clay.Matrix4}\n     */\n    adjoint: function() {\n        mat4.adjoint(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Matrix4\n     * @return {clay.Matrix4}\n     */\n    clone: function() {\n        return (new Matrix4()).copy(this);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    copy: function(a) {\n        mat4.copy(this.array, a.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate matrix determinant\n     * @return {number}\n     */\n    determinant: function() {\n        return mat4.determinant(this.array);\n    },\n\n    /**\n     * Set upper 3x3 part from quaternion\n     * @param  {clay.Quaternion} q\n     * @return {clay.Matrix4}\n     */\n    fromQuat: function(q) {\n        mat4.fromQuat(this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set from a quaternion rotation and a vector translation\n     * @param  {clay.Quaternion} q\n     * @param  {clay.Vector3} v\n     * @return {clay.Matrix4}\n     */\n    fromRotationTranslation: function(q, v) {\n        mat4.fromRotationTranslation(this.array, q.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set from Matrix2d, it is used when converting a 2d shape to 3d space.\n     * In 3d space it is equivalent to ranslate on xy plane and rotate about z axis\n     * @param  {clay.Matrix2d} m2d\n     * @return {clay.Matrix4}\n     */\n    fromMat2d: function(m2d) {\n        Matrix4.fromMat2d(this, m2d);\n        return this;\n    },\n\n    /**\n     * Set from frustum bounds\n     * @param  {number} left\n     * @param  {number} right\n     * @param  {number} bottom\n     * @param  {number} top\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    frustum: function (left, right, bottom, top, near, far) {\n        mat4.frustum(this.array, left, right, bottom, top, near, far);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set to a identity matrix\n     * @return {clay.Matrix4}\n     */\n    identity: function() {\n        mat4.identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Invert self\n     * @return {clay.Matrix4}\n     */\n    invert: function() {\n        mat4.invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set as a matrix with the given eye position, focal point, and up axis\n     * @param  {clay.Vector3} eye\n     * @param  {clay.Vector3} center\n     * @param  {clay.Vector3} up\n     * @return {clay.Matrix4}\n     */\n    lookAt: function(eye, center, up) {\n        mat4.lookAt(this.array, eye.array, center.array, up.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for mutiply\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    mul: function(b) {\n        mat4.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Matrix4} a\n     * @return {clay.Matrix4}\n     */\n    mulLeft: function(a) {\n        mat4.mul(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply self and b\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    multiply: function(b) {\n        mat4.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply a and self, a is on the left\n     * @param  {clay.Matrix3} a\n     * @return {clay.Matrix3}\n     */\n    multiplyLeft: function(a) {\n        mat4.multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set as a orthographic projection matrix\n     * @param  {number} left\n     * @param  {number} right\n     * @param  {number} bottom\n     * @param  {number} top\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    ortho: function(left, right, bottom, top, near, far) {\n        mat4.ortho(this.array, left, right, bottom, top, near, far);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Set as a perspective projection matrix\n     * @param  {number} fovy\n     * @param  {number} aspect\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    perspective: function(fovy, aspect, near, far) {\n        mat4.perspective(this.array, fovy, aspect, near, far);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by rad about axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param  {number}   rad\n     * @param  {clay.Vector3} axis\n     * @return {clay.Matrix4}\n     */\n    rotate: function(rad, axis) {\n        mat4.rotate(this.array, this.array, rad, axis.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about X axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateX: function(rad) {\n        mat4.rotateX(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Y axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateY: function(rad) {\n        mat4.rotateY(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Z axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateZ: function(rad) {\n        mat4.rotateZ(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self by s\n     * Equal to right-multiply a scale matrix\n     * @param  {clay.Vector3}  s\n     * @return {clay.Matrix4}\n     */\n    scale: function(v) {\n        mat4.scale(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Translate self by v.\n     * Equal to right-multiply a translate matrix\n     * @param  {clay.Vector3}  v\n     * @return {clay.Matrix4}\n     */\n    translate: function(v) {\n        mat4.translate(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transpose self, in-place.\n     * @return {clay.Matrix2}\n     */\n    transpose: function() {\n        mat4.transpose(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Decompose a matrix to SRT\n     * @param {clay.Vector3} [scale]\n     * @param {clay.Quaternion} rotation\n     * @param {clay.Vector} position\n     * @see http://msdn.microsoft.com/en-us/library/microsoft.xna.framework.matrix.decompose.aspx\n     */\n    decomposeMatrix: (function() {\n\n        var x = vec3.create();\n        var y = vec3.create();\n        var z = vec3.create();\n\n        var m3 = mat3.create();\n\n        return function(scale, rotation, position) {\n\n            var el = this.array;\n            vec3.set(x, el[0], el[1], el[2]);\n            vec3.set(y, el[4], el[5], el[6]);\n            vec3.set(z, el[8], el[9], el[10]);\n\n            var sx = vec3.length(x);\n            var sy = vec3.length(y);\n            var sz = vec3.length(z);\n\n            // if determine is negative, we need to invert one scale\n            var det = this.determinant();\n            if (det < 0) {\n                sx = -sx;\n            }\n\n            if (scale) {\n                scale.set(sx, sy, sz);\n            }\n\n            position.set(el[12], el[13], el[14]);\n\n            mat3.fromMat4(m3, el);\n            // Not like mat4, mat3 in glmatrix seems to be row-based\n            // Seems fixed in gl-matrix 2.2.2\n            // https://github.com/toji/gl-matrix/issues/114\n            // mat3.transpose(m3, m3);\n\n            m3[0] /= sx;\n            m3[1] /= sx;\n            m3[2] /= sx;\n\n            m3[3] /= sy;\n            m3[4] /= sy;\n            m3[5] /= sy;\n\n            m3[6] /= sz;\n            m3[7] /= sz;\n            m3[8] /= sz;\n\n            quat.fromMat3(rotation.array, m3);\n            quat.normalize(rotation.array, rotation.array);\n\n            rotation._dirty = true;\n            position._dirty = true;\n        };\n    })(),\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n\nif (defineProperty) {\n    var proto = Matrix4.prototype;\n    /**\n     * Z Axis of local transform\n     * @name z\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            var el = this.array;\n            this._axisZ.set(el[8], el[9], el[10]);\n            return this._axisZ;\n        },\n        set: function (v) {\n            // TODO Here has a problem\n            // If only set an item of vector will not work\n            var el = this.array;\n            v = v.array;\n            el[8] = v[0];\n            el[9] = v[1];\n            el[10] = v[2];\n\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * Y Axis of local transform\n     * @name y\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            var el = this.array;\n            this._axisY.set(el[4], el[5], el[6]);\n            return this._axisY;\n        },\n        set: function (v) {\n            var el = this.array;\n            v = v.array;\n            el[4] = v[0];\n            el[5] = v[1];\n            el[6] = v[2];\n\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * X Axis of local transform\n     * @name x\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            var el = this.array;\n            this._axisX.set(el[0], el[1], el[2]);\n            return this._axisX;\n        },\n        set: function (v) {\n            var el = this.array;\n            v = v.array;\n            el[0] = v[0];\n            el[1] = v[1];\n            el[2] = v[2];\n\n            this._dirty = true;\n        }\n    })\n}\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.adjoint = function(out, a) {\n    mat4.adjoint(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.copy = function(out, a) {\n    mat4.copy(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} a\n * @return {number}\n */\nMatrix4.determinant = function(a) {\n    return mat4.determinant(a.array);\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @return {clay.Matrix4}\n */\nMatrix4.identity = function(out) {\n    mat4.identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {number}  left\n * @param  {number}  right\n * @param  {number}  bottom\n * @param  {number}  top\n * @param  {number}  near\n * @param  {number}  far\n * @return {clay.Matrix4}\n */\nMatrix4.ortho = function(out, left, right, bottom, top, near, far) {\n    mat4.ortho(out.array, left, right, bottom, top, near, far);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {number}  fovy\n * @param  {number}  aspect\n * @param  {number}  near\n * @param  {number}  far\n * @return {clay.Matrix4}\n */\nMatrix4.perspective = function(out, fovy, aspect, near, far) {\n    mat4.perspective(out.array, fovy, aspect, near, far);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Vector3} eye\n * @param  {clay.Vector3} center\n * @param  {clay.Vector3} up\n * @return {clay.Matrix4}\n */\nMatrix4.lookAt = function(out, eye, center, up) {\n    mat4.lookAt(out.array, eye.array, center.array, up.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.invert = function(out, a) {\n    mat4.invert(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Matrix4} b\n * @return {clay.Matrix4}\n */\nMatrix4.mul = function(out, a, b) {\n    mat4.mul(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Matrix4} b\n * @return {clay.Matrix4}\n */\nMatrix4.multiply = Matrix4.mul;\n\n/**\n * @param  {clay.Matrix4}    out\n * @param  {clay.Quaternion} q\n * @return {clay.Matrix4}\n */\nMatrix4.fromQuat = function(out, q) {\n    mat4.fromQuat(out.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4}    out\n * @param  {clay.Quaternion} q\n * @param  {clay.Vector3}    v\n * @return {clay.Matrix4}\n */\nMatrix4.fromRotationTranslation = function(out, q, v) {\n    mat4.fromRotationTranslation(out.array, q.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} m4\n * @param  {clay.Matrix2d} m2d\n * @return {clay.Matrix4}\n */\nMatrix4.fromMat2d = function(m4, m2d) {\n    m4._dirty = true;\n    var m2d = m2d.array;\n    var m4 = m4.array;\n\n    m4[0] = m2d[0];\n    m4[4] = m2d[2];\n    m4[12] = m2d[4];\n\n    m4[1] = m2d[1];\n    m4[5] = m2d[3];\n    m4[13] = m2d[5];\n\n    return m4;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @param  {clay.Vector3} axis\n * @return {clay.Matrix4}\n */\nMatrix4.rotate = function(out, a, rad, axis) {\n    mat4.rotate(out.array, a.array, rad, axis.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateX = function(out, a, rad) {\n    mat4.rotateX(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateY = function(out, a, rad) {\n    mat4.rotateY(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateZ = function(out, a, rad) {\n    mat4.rotateZ(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Vector3} v\n * @return {clay.Matrix4}\n */\nMatrix4.scale = function(out, a, v) {\n    mat4.scale(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.transpose = function(out, a) {\n    mat4.transpose(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Vector3} v\n * @return {clay.Matrix4}\n */\nMatrix4.translate = function(out, a, v) {\n    mat4.translate(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Matrix4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}