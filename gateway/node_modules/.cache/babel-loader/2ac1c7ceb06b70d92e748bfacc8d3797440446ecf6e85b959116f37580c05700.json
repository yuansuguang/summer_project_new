{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, watch, nextTick } from 'vue';\nimport * as echarts from 'echarts';\nimport 'echarts-gl';\n//   import ecStat from 'echarts-stat';\n\nexport default {\n  __name: 'qnAnalysis',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const selectedPrimary = ref('');\n    const selectedSecondary = ref('');\n    const analysisResult = ref({});\n    const surveyData = ref([{\n      age: '18-25',\n      occupation: 'Student',\n      education: 'Bachelors',\n      satisfaction: 'High',\n      recommendation: 'Likely',\n      productUsage: 'Daily'\n    }, {\n      age: '18-25',\n      occupation: 'Student',\n      education: 'Bachelors',\n      satisfaction: 'Mid',\n      recommendation: 'Likely',\n      productUsage: 'Daily'\n    }, {\n      age: '18-25',\n      occupation: 'Student',\n      education: 'Bachelors',\n      satisfaction: 'Mid',\n      recommendation: 'Likely',\n      productUsage: 'Daily'\n    }, {\n      age: '25-32',\n      occupation: 'Student',\n      education: 'Doctor',\n      satisfaction: 'High',\n      recommendation: 'Likely',\n      productUsage: 'Daily'\n    }, {\n      age: '18-25',\n      occupation: 'Teacher',\n      education: 'Doctor',\n      satisfaction: 'High',\n      recommendation: 'Likely',\n      productUsage: 'Daily'\n    }, {\n      age: '25-32',\n      occupation: 'Teacher',\n      education: 'Bachelors',\n      satisfaction: 'High',\n      recommendation: 'Likely',\n      productUsage: 'Daily'\n    }, {\n      age: '25-32',\n      occupation: 'Student',\n      education: 'Bachelors',\n      satisfaction: 'Low',\n      recommendation: 'Likely',\n      productUsage: '2 days per week'\n    }, {\n      age: '18-25',\n      occupation: 'Student',\n      education: 'Bachelors',\n      satisfaction: 'High',\n      recommendation: 'Likely',\n      productUsage: 'Daily'\n    }, {\n      age: '10-18',\n      occupation: 'Student',\n      education: 'Bachelors',\n      satisfaction: 'Mid',\n      recommendation: 'Likely',\n      productUsage: '3 days per week'\n    }]);\n    const questionsData = computed(() => {\n      if (!surveyData.value.length) return [];\n      const questionNames = Object.keys(surveyData.value[0]);\n      return questionNames.map(name => ({\n        name,\n        displayName: name.charAt(0).toUpperCase() + name.slice(1)\n      }));\n    });\n    onMounted(() => {\n      if (questionsData.value.length > 0) {\n        selectedPrimary.value = questionsData.value[0].name;\n        selectedSecondary.value = questionsData.value.length > 1 ? questionsData.value[1].name : questionsData.value[0].name;\n      }\n    });\n    const formattedTableData = computed(() => {\n      let tableData = [];\n      if (analysisResult.value && Object.keys(analysisResult.value).length) {\n        Object.keys(analysisResult.value).forEach(primary => {\n          Object.keys(analysisResult.value[primary]).forEach(secondary => {\n            tableData.push({\n              primary: getDisplayName(primary),\n              secondary: getDisplayName(secondary),\n              count: analysisResult.value[primary][secondary]\n            });\n          });\n        });\n      }\n      return tableData;\n    });\n    const performAnalysis = () => {\n      const primaryQuestion = selectedPrimary.value;\n      const secondaryQuestion = selectedSecondary.value;\n      let analysisMap = new Map();\n      surveyData.value.forEach(response => {\n        const primaryResponse = response[primaryQuestion];\n        const secondaryResponse = response[secondaryQuestion];\n        if (!analysisMap.has(primaryResponse)) {\n          analysisMap.set(primaryResponse, {});\n        }\n        const secondaryCounts = analysisMap.get(primaryResponse);\n        secondaryCounts[secondaryResponse] = (secondaryCounts[secondaryResponse] || 0) + 1;\n      });\n      let result = {};\n      analysisMap.forEach((value, key) => {\n        result[key] = value;\n      });\n      analysisResult.value = result;\n\n      // Ensure the chart updates with the new analysis result\n      nextTick(() => {\n        if (Object.keys(analysisResult.value).length > 0) {\n          setChart();\n        }\n      });\n    };\n    const getDisplayName = questionName => {\n      const question = questionsData.value.find(q => q.name === questionName);\n      return question ? question.displayName : questionName;\n    };\n    const setChart = () => {\n      nextTick(() => {\n        const chartDom = document.getElementById('chart');\n        if (chartDom && analysisResult.value) {\n          const myChart = echarts.init(chartDom);\n          const dimensions = {\n            x: '',\n            y: '',\n            z: ''\n          };\n          let data = [];\n          let xData = [];\n          let yData = [];\n          Object.keys(analysisResult.value).forEach(x => {\n            Object.keys(analysisResult.value[x]).forEach(y => {\n              data.push([x, y, analysisResult.value[x][y]]);\n              if (xData.indexOf(x) === -1) xData.push(x);\n              if (yData.indexOf(y) === -1) yData.push(y);\n            });\n          });\n          dimensions.x = selectedPrimary.value;\n          dimensions.y = selectedSecondary.value;\n          dimensions.z = 'Count';\n          let option = {\n            tooltip: {},\n            visualMap: {\n              max: 20,\n              inRange: {\n                color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n              }\n            },\n            xAxis3D: {\n              type: 'category',\n              data: xData,\n              name: dimensions.x,\n              axisLabel: {\n                formatter: function (value) {\n                  return value;\n                }\n              }\n            },\n            yAxis3D: {\n              type: 'category',\n              data: yData,\n              name: dimensions.y\n            },\n            zAxis3D: {\n              type: 'value',\n              name: dimensions.z\n            },\n            grid3D: {\n              boxWidth: 200,\n              boxDepth: 80,\n              viewControl: {\n                // projection: 'orthographic'\n              },\n              light: {\n                main: {\n                  intensity: 1.2,\n                  shadow: true\n                },\n                ambient: {\n                  intensity: 0.3\n                }\n              }\n            },\n            series: [{\n              type: 'bar3D',\n              data: data.map(function (item) {\n                return {\n                  value: [item[0], item[1], item[2]]\n                };\n              }),\n              shading: 'lambert',\n              label: {\n                textStyle: {\n                  fontSize: 16,\n                  borderWidth: 1\n                }\n              },\n              emphasis: {\n                label: {\n                  textStyle: {\n                    fontSize: 20,\n                    color: '#900'\n                  }\n                },\n                itemStyle: {\n                  color: '#900'\n                }\n              }\n            }]\n          };\n          myChart.setOption(option);\n        }\n      });\n    };\n    watch(analysisResult, newVal => {\n      if (newVal) {\n        setChart();\n      }\n    });\n    const __returned__ = {\n      selectedPrimary,\n      selectedSecondary,\n      analysisResult,\n      surveyData,\n      questionsData,\n      formattedTableData,\n      performAnalysis,\n      getDisplayName,\n      setChart,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      nextTick,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","nextTick","echarts","selectedPrimary","selectedSecondary","analysisResult","surveyData","age","occupation","education","satisfaction","recommendation","productUsage","questionsData","value","length","questionNames","Object","keys","map","name","displayName","charAt","toUpperCase","slice","formattedTableData","tableData","forEach","primary","secondary","push","getDisplayName","count","performAnalysis","primaryQuestion","secondaryQuestion","analysisMap","Map","response","primaryResponse","secondaryResponse","has","set","secondaryCounts","get","result","key","setChart","questionName","question","find","q","chartDom","document","getElementById","myChart","init","dimensions","x","y","z","data","xData","yData","indexOf","option","tooltip","visualMap","max","inRange","color","xAxis3D","type","axisLabel","formatter","yAxis3D","zAxis3D","grid3D","boxWidth","boxDepth","viewControl","light","main","intensity","shadow","ambient","series","item","shading","label","textStyle","fontSize","borderWidth","emphasis","itemStyle","setOption","newVal"],"sources":["E:/mytest/src/views/qn-data/qnAnalysis.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <el-row type=\"flex\" justify=\"center\">\r\n        <el-col :span=\"12\">\r\n          <h1>问卷交叉分析</h1>\r\n          <el-form>\r\n            <el-form-item label=\"选择分析的第一个维度：\">\r\n              <el-select v-model=\"selectedPrimary\" placeholder=\"请选择\">\r\n                <el-option\r\n                  v-for=\"question in questionsData\"\r\n                  :key=\"question.name\"\r\n                  :label=\"question.displayName\"\r\n                  :value=\"question.name\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"选择分析的第二个维度：\">\r\n              <el-select v-model=\"selectedSecondary\" placeholder=\"请选择\">\r\n                <el-option\r\n                  v-for=\"question in questionsData\"\r\n                  :key=\"question.name\"\r\n                  :label=\"question.displayName\"\r\n                  :value=\"question.name\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"performAnalysis\">执行分析</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          <div v-if=\"analysisResult && Object.keys(analysisResult).length\">\r\n            <h2>分析结果：</h2>\r\n            <el-card class=\"box-card\" v-for=\"(result, key) in analysisResult\" :key=\"key\">\r\n              <div>\r\n                <h3>{{ getDisplayName(key) }}:</h3>\r\n                <el-list v-for=\"(count, answer) in result\" :key=\"answer\">\r\n                  <el-list-item>{{ getDisplayName(answer) }}: {{ count }} 次</el-list-item>\r\n                </el-list>\r\n              </div>\r\n            </el-card>\r\n            <h2>交叉分析表格：</h2>\r\n            <el-table :data=\"formattedTableData\" style=\"width: 100%\">\r\n                <el-table-column prop=\"primary\" label=\"第一维度\"></el-table-column>\r\n                <el-table-column prop=\"secondary\" label=\"第二维度\"></el-table-column>\r\n                <el-table-column prop=\"count\" label=\"计数\"></el-table-column>\r\n            </el-table>\r\n            <div id=\"chart\" style=\"width: 800px;height:600px;\"></div>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, computed, onMounted, watch, nextTick } from 'vue';\r\n  import * as echarts from 'echarts';\r\n  import 'echarts-gl';\r\n//   import ecStat from 'echarts-stat';\r\n  \r\n  const selectedPrimary = ref('');\r\n  const selectedSecondary = ref('');\r\n  const analysisResult = ref({});\r\n  \r\n  const surveyData = ref([{\r\n      age: '18-25', occupation: 'Student', education: 'Bachelors', satisfaction: 'High', recommendation: 'Likely', productUsage: 'Daily'\r\n  }, {\r\n      age: '18-25', occupation: 'Student', education: 'Bachelors', satisfaction: 'Mid', recommendation: 'Likely', productUsage: 'Daily'\r\n  }, {\r\n      age: '18-25', occupation: 'Student', education: 'Bachelors', satisfaction: 'Mid', recommendation: 'Likely', productUsage: 'Daily'\r\n  }, {\r\n      age: '25-32', occupation: 'Student', education: 'Doctor', satisfaction: 'High', recommendation: 'Likely', productUsage: 'Daily'\r\n  }, {\r\n      age: '18-25', occupation: 'Teacher', education: 'Doctor', satisfaction: 'High', recommendation: 'Likely', productUsage: 'Daily'\r\n  }, {\r\n      age: '25-32', occupation: 'Teacher', education: 'Bachelors', satisfaction: 'High', recommendation: 'Likely', productUsage: 'Daily'\r\n  }, {\r\n      age: '25-32', occupation: 'Student', education: 'Bachelors', satisfaction: 'Low', recommendation: 'Likely', productUsage: '2 days per week'\r\n  }, {\r\n      age: '18-25', occupation: 'Student', education: 'Bachelors', satisfaction: 'High', recommendation: 'Likely', productUsage: 'Daily'\r\n  }, {\r\n      age: '10-18', occupation: 'Student', education: 'Bachelors', satisfaction: 'Mid', recommendation: 'Likely', productUsage: '3 days per week'\r\n  }]);\r\n  \r\n  const questionsData = computed(() => {\r\n    if (!surveyData.value.length) return [];\r\n    const questionNames = Object.keys(surveyData.value[0]);\r\n    return questionNames.map(name => ({ name, displayName: name.charAt(0).toUpperCase() + name.slice(1) }));\r\n  });\r\n  \r\n  onMounted(() => {\r\n    if (questionsData.value.length > 0) {\r\n      selectedPrimary.value = questionsData.value[0].name;\r\n      selectedSecondary.value = questionsData.value.length > 1 ? questionsData.value[1].name : questionsData.value[0].name;\r\n    }\r\n  });\r\n\r\n  const formattedTableData = computed(() => {\r\n    let tableData = [];\r\n    if (analysisResult.value && Object.keys(analysisResult.value).length) {\r\n        Object.keys(analysisResult.value).forEach(primary => {\r\n        Object.keys(analysisResult.value[primary]).forEach(secondary => {\r\n            tableData.push({\r\n            primary: getDisplayName(primary),\r\n            secondary: getDisplayName(secondary),\r\n            count: analysisResult.value[primary][secondary]\r\n            });\r\n        });\r\n        });\r\n    }\r\n    return tableData;\r\n    });\r\n  \r\n  const performAnalysis = () => {\r\n    const primaryQuestion = selectedPrimary.value;\r\n    const secondaryQuestion = selectedSecondary.value;\r\n    let analysisMap = new Map();\r\n  \r\n    surveyData.value.forEach(response => {\r\n      const primaryResponse = response[primaryQuestion];\r\n      const secondaryResponse = response[secondaryQuestion];\r\n  \r\n      if (!analysisMap.has(primaryResponse)) {\r\n        analysisMap.set(primaryResponse, {});\r\n      }\r\n  \r\n      const secondaryCounts = analysisMap.get(primaryResponse);\r\n      secondaryCounts[secondaryResponse] = (secondaryCounts[secondaryResponse] || 0) + 1;\r\n    });\r\n  \r\n    let result = {};\r\n    analysisMap.forEach((value, key) => {\r\n      result[key] = value;\r\n    });\r\n  \r\n    analysisResult.value = result;\r\n  \r\n    // Ensure the chart updates with the new analysis result\r\n    nextTick(() => {\r\n      if (Object.keys(analysisResult.value).length > 0) {\r\n        setChart();\r\n      }\r\n    });\r\n  };\r\n  \r\n  const getDisplayName = (questionName) => {\r\n    const question = questionsData.value.find(q => q.name === questionName);\r\n    return question ? question.displayName : questionName;\r\n  };\r\n  \r\n  const setChart = () => {\r\n  nextTick(() => {\r\n    const chartDom = document.getElementById('chart');\r\n    if (chartDom && analysisResult.value) {\r\n      const myChart = echarts.init(chartDom);\r\n      const dimensions = { x: '', y: '', z: '' };\r\n\r\n      let data = [];\r\n      let xData = [];\r\n      let yData = [];\r\n      Object.keys(analysisResult.value).forEach(x => {\r\n        Object.keys(analysisResult.value[x]).forEach(y => {\r\n          data.push([x, y, analysisResult.value[x][y]]);\r\n          if (xData.indexOf(x) === -1) xData.push(x);\r\n          if (yData.indexOf(y) === -1) yData.push(y);\r\n        });\r\n      });\r\n\r\n      dimensions.x = selectedPrimary.value;\r\n      dimensions.y = selectedSecondary.value;\r\n      dimensions.z = 'Count';\r\n\r\n      let option = {\r\n        tooltip: {},\r\n        visualMap: {\r\n          max: 20,\r\n          inRange: {\r\n            color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\r\n          }\r\n        },\r\n        xAxis3D: {\r\n          type: 'category',\r\n          data: xData,\r\n          name: dimensions.x,\r\n          axisLabel: {\r\n            formatter: function (value) {\r\n              return value;\r\n            }\r\n          }\r\n        },\r\n        yAxis3D: {\r\n          type: 'category',\r\n          data: yData,\r\n          name: dimensions.y\r\n        },\r\n        zAxis3D: {\r\n          type: 'value',\r\n          name: dimensions.z\r\n        },\r\n        grid3D: {\r\n          boxWidth: 200,\r\n          boxDepth: 80,\r\n          viewControl: {\r\n            // projection: 'orthographic'\r\n          },\r\n          light: {\r\n            main: {\r\n              intensity: 1.2,\r\n              shadow: true\r\n            },\r\n            ambient: {\r\n              intensity: 0.3\r\n            }\r\n          }\r\n        },\r\n        series: [{\r\n          type: 'bar3D',\r\n          data: data.map(function (item) {\r\n            return {\r\n              value: [item[0], item[1], item[2]],\r\n            }\r\n          }),\r\n          shading: 'lambert',\r\n          label: {\r\n            textStyle: {\r\n              fontSize: 16,\r\n              borderWidth: 1\r\n            }\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              textStyle: {\r\n                fontSize: 20,\r\n                color: '#900'\r\n              }\r\n            },\r\n            itemStyle: {\r\n              color: '#900'\r\n            }\r\n          }\r\n        }]\r\n      };\r\n      myChart.setOption(option);\r\n    }\r\n  });\r\n};\r\n  \r\n  watch(analysisResult, (newVal) => {\r\n    if (newVal) {\r\n      setChart();\r\n    }\r\n  });\r\n  </script>\r\n  \r\n  <style>\r\n  .box-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .el-col {\r\n    padding-top: 100px; /* Adjust this value as necessary */\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}