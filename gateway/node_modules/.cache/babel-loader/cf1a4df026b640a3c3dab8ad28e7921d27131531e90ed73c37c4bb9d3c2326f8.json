{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, mergeProps as _mergeProps, resolveDirective as _resolveDirective, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7a88a63c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"form\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"问卷题目\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"题目\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"个人信息\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"qnMain\"\n};\nconst _hoisted_6 = {\n  class: \"ques\"\n};\nconst _hoisted_7 = {\n  class: \"title\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"description\"\n};\nconst _hoisted_9 = {\n  class: \"content\"\n};\nconst _hoisted_10 = {\n  class: \"block-title\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"must\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"block-info\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"block-choice\"\n};\nconst _hoisted_14 = {\n  style: {\n    \"padding-bottom\": \"10px\"\n  }\n};\nconst _hoisted_15 = {\n  key: 2,\n  class: \"block-description\"\n};\nconst _hoisted_16 = {\n  key: 3,\n  style: {\n    \"color\": \"#9b9ea0\",\n    \"font-size\": \"x-small\"\n  }\n};\nconst _hoisted_17 = [\"src\"];\nconst _hoisted_18 = {\n  key: 0,\n  style: {\n    \"color\": \"#aaaaaa\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"15px\"\n  }\n};\nconst _hoisted_19 = {\n  key: 0,\n  style: {\n    \"color\": \"#aaaaaa\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"15px\"\n  }\n};\nconst _hoisted_20 = {\n  key: 4,\n  class: \"block-choice\"\n};\nconst _hoisted_21 = {\n  key: 5,\n  class: \"block-relation\"\n};\nconst _hoisted_22 = {\n  key: 0,\n  class: \"is-info\"\n};\nconst _hoisted_23 = {\n  key: 1,\n  class: \"non-pre\"\n};\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"el-upload__tip\"\n}, \" 只能上传jpg/png文件，且不超过5mb\", -1 /* HOISTED */));\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"el-upload__tip\"\n}, \" 只能上传mp4/mkv文件，且不超过10mb\", -1 /* HOISTED */));\nconst _hoisted_26 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_27 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"qrcode_2\",\n  style: {\n    \"height\": \"200px\",\n    \"width\": \"200px\",\n    \"margin-left\": \"22px\"\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_28 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"链接与二维码\", -1 /* HOISTED */));\nconst _hoisted_29 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_30 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_31 = {\n  class: \"logic-title\"\n};\nconst _hoisted_32 = {\n  key: 1,\n  class: \"logic-info\"\n};\nconst _hoisted_33 = {\n  style: {\n    \"color\": \"#1687fd\"\n  }\n};\nconst _hoisted_34 = {\n  style: {\n    \"color\": \"#1687fd\"\n  }\n};\nconst _hoisted_35 = {\n  key: 2,\n  class: \"logic-info\"\n};\nconst _hoisted_36 = {\n  class: \"logic-bt\"\n};\nconst _hoisted_37 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"logic-description\"\n}, \" 题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】 \", -1 /* HOISTED */));\nconst _hoisted_38 = {\n  key: 0,\n  class: \"logic-description important\"\n};\nconst _hoisted_39 = {\n  class: \"setting-bt\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Edit = _resolveComponent(\"Edit\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_menu_item_group = _resolveComponent(\"el-menu-item-group\");\n  const _component_el_sub_menu = _resolveComponent(\"el-sub-menu\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_View = _resolveComponent(\"View\");\n  const _component_Link = _resolveComponent(\"Link\");\n  const _component_setting = _resolveComponent(\"setting\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_rate = _resolveComponent(\"el-rate\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  const _component_el_button_group = _resolveComponent(\"el-button-group\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  const _directive_medel = _resolveDirective(\"medel\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"qnBoard\",\n    style: _normalizeStyle({\n      boxShadow: `var(--el-box-shadow-light)`\n    })\n  }, [_createCommentVNode(\" <el-tabs :tab-position=\\\"'left'\\\" style=\\\"height: 700px;\\\" type=\\\"border-card\\\" class=\\\"demo-tabs\\\" stretch=\\\"true\\\">\\r\\n            <el-tab-pane style=\\\"padding: 140px\\\">\\r\\n                <template #label>\\r\\n                    <span class=\\\"custom-tabs-label\\\">\\r\\n                        <el-icon>\\r\\n                            <Edit />\\r\\n                        </el-icon>\\r\\n                        <span>Edit</span>\\r\\n                    </span>\\r\\n                </template>\\r\\n\\r\\n</el-tab-pane>\\r\\n<el-tab-pane label=\\\"Config\\\">Config</el-tab-pane>\\r\\n<el-tab-pane label=\\\"Role\\\">Role</el-tab-pane>\\r\\n<el-tab-pane label=\\\"Task\\\">Task</el-tab-pane>\\r\\n</el-tabs> \"), _createVNode(_component_el_tabs, {\n    type: \"card\",\n    stretch: \"true\",\n    class: \"qn-tabs\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"编辑问卷\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_menu, {\n        class: \"el-menu-vertical-demo\",\n        style: {\n          \"position\": \"relative\",\n          \"width\": \"190px\"\n        }\n      }, {\n        title: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Edit)]),\n          _: 1 /* STABLE */\n        }), _hoisted_2]),\n        default: _withCtx(() => [_createVNode(_component_el_menu_item_group, null, {\n          title: _withCtx(() => [_hoisted_3]),\n          default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n            onClick: _cache[0] || (_cache[0] = $event => {\n              $data.willAddQuestion.type = 'radio';\n              $data.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"单选题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, null, {\n            default: _withCtx(() => [_createTextVNode(\"多选题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, null, {\n            default: _withCtx(() => [_createTextVNode(\"填空题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, null, {\n            default: _withCtx(() => [_createTextVNode(\"评分题\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item_group, {\n          title: \"预设题目\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_sub_menu, null, {\n            title: _withCtx(() => [_hoisted_4]),\n            default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n              onClick: $options.addName\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"姓名\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_menu_item, null, {\n              default: _withCtx(() => [_createTextVNode(\"学号\")]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_el_menu_item, null, {\n              default: _withCtx(() => [_createTextVNode(\"电话号码\")]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"问卷相关\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_menu, {\n        class: \"el-menu-vertical-demo\",\n        style: {\n          \"position\": \"relative\",\n          \"width\": \"190px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n          index: \"2\"\n        }, {\n          title: _withCtx(() => [_createTextVNode(\"问卷预览\")]),\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode(_component_View)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item, {\n          index: \"3\"\n        }, {\n          title: _withCtx(() => [_createTextVNode(\"问卷逻辑\")]),\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode(_component_Link)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item, {\n          index: \"4\"\n        }, {\n          title: _withCtx(() => [_createTextVNode(\"问卷设置\")]),\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode(_component_setting)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })], 4 /* STYLE */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString($data.title), 1 /* TEXT */), this.description !== '' && this.description !== null && this.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"   \" + _toDisplayString($data.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, item => {\n    return _openBlock(), _createBlock(_component_el_row, {\n      class: \"ques-block\",\n      key: item.id,\n      onMouseover: $event => $data.hoverItem = item.id\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 16,\n        class: \"block-content\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_10, [_createTextVNode(_toDisplayString(item.id) + \". \" + _toDisplayString(item.title) + \" \", 1 /* TEXT */), item.must ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, \"(必填)\")) : _createCommentVNode(\"v-if\", true)]), item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school' || item.type === 'phone' || item.type === 'email' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createVNode(_component_el_input, {\n          placeholder: \"请输入内容\",\n          style: {\n            \"margin-left\": \"10px\"\n          }\n        })])) : _createCommentVNode(\"v-if\", true), item.type === 'sex' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_el_radio, {\n          value: \"0\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"男\")]),\n          _: 1 /* STABLE */\n        })]), _createElementVNode(\"div\", null, [_createVNode(_component_el_radio, {\n          value: \"0\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"女\")]),\n          _: 1 /* STABLE */\n        })])])) : _createCommentVNode(\"v-if\", true), item.description !== '' && item.description !== null && item.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _toDisplayString(item.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  图片\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.imgList, (i, index) => {\n          return _openBlock(), _createBlock(_component_el_row, {\n            class: \"block-img\",\n            key: i.index\n          }, {\n            default: _withCtx(() => [index % 2 === 0 ? (_openBlock(), _createBlock(_component_el_col, {\n              key: 0,\n              offset: 2,\n              span: 10,\n              class: \"demo-image__preview\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_image, {\n                style: {\n                  \"width\": \"200px\",\n                  \"height\": \"200px\"\n                },\n                src: i.url,\n                \"preview-src-list\": [i.url]\n              }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), index % 2 === 0 && index + 1 <= item.imgList.length - 1 ? (_openBlock(), _createBlock(_component_el_col, {\n              key: 1,\n              span: 10,\n              class: \"demo-image__preview\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_image, {\n                style: {\n                  \"width\": \"200px\",\n                  \"height\": \"200px\"\n                },\n                src: item.imgList[index + 1].url,\n                \"preview-src-list\": [item.imgList[index + 1].url]\n              }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */)), item.imgList.length !== 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_16, \"（点击图片查看大图）\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                视频\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.videoList, i => {\n          return _openBlock(), _createBlock(_component_el_row, {\n            class: \"block-img\",\n            key: i.index\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"embed\", {\n              width: \"400\",\n              height: \"230\",\n              transparentatstart: \"true\",\n              animationatstart: \"false\",\n              autostart: \"true\",\n              autosize: \"false\",\n              volume: \"100\",\n              displaysize: \"0\",\n              showdisplay: \"true\",\n              showstatusbar: \"true\",\n              showcontrols: \"true\",\n              showaudiocontrols: \"true\",\n              showtracker: \"true\",\n              showpositioncontrols: \"true\",\n              balance: \"true\",\n              src: i.url\n            }, null, 8 /* PROPS */, _hoisted_17)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.options, ans => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            class: \"block-choice\",\n            key: ans.id\n          }, [_createCommentVNode(\"                  单选\"), item.type === 'radio' ? (_openBlock(), _createBlock(_component_el_radio, {\n            key: 0,\n            value: \"0\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(ans.title), 1 /* TEXT */), ans.hasNumLimit ? (_openBlock(), _createElementBlock(\"span\", _hoisted_18, \"剩余\" + _toDisplayString(ans.supply - ans.consume) + \" 总计\" + _toDisplayString(ans.supply), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  多选\"), item.type === 'checkbox' ? (_openBlock(), _createBlock(_component_el_checkbox, {\n            key: 1,\n            value: \"0\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(ans.title) + \" \", 1 /* TEXT */), ans.hasNumLimit ? (_openBlock(), _createElementBlock(\"span\", _hoisted_19, \"剩余\" + _toDisplayString(ans.supply - ans.consume) + \" 总计\" + _toDisplayString(ans.supply), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  填空\"), item.type === 'text' && item.row > 1 ? (_openBlock(), _createBlock(_component_el_input, _mergeProps({\n            key: 2,\n            type: \"textarea\",\n            placeholder: \"请输入内容\",\n            ref_for: true\n          }, ans.title), null, 16 /* FULL_PROPS */)) : _createCommentVNode(\"v-if\", true), item.type === 'text' && item.row === 1 ? (_openBlock(), _createBlock(_component_el_input, _mergeProps({\n            key: 3,\n            placeholder: \"请输入内容\",\n            ref_for: true\n          }, ans.title), null, 16 /* FULL_PROPS */)) : _createCommentVNode(\"v-if\", true)]);\n        }), 128 /* KEYED_FRAGMENT */)), item.type === 'mark' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createCommentVNode(\"                  评分\"), _createVNode(_component_el_rate, {\n          value: \"0\",\n          max: item.score\n        }, null, 8 /* PROPS */, [\"max\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                 关联信息\"), $data.isLogic && item.last_question !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createElementVNode(\"div\", null, _toDisplayString($options.relatedQs(item)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), $data.hoverItem === item.id ? (_openBlock(), _createBlock(_component_el_col, {\n        key: 0,\n        span: 8,\n        class: \"block-button\",\n        style: {\n          \"text-align\": \"right\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button_group, null, {\n          default: _withCtx(() => [_createVNode(_component_el_tooltip, {\n            class: \"item\",\n            effect: \"light\",\n            content: \"编辑\",\n            placement: \"bottom\",\n            \"open-delay\": \"400\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              class: \"bt\",\n              type: \"primary\",\n              icon: \"el-icon-edit\",\n              onClick: $event => $options.edit(item.id)\n            }, null, 8 /* PROPS */, [\"onClick\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), $data.isLogic ? (_openBlock(), _createBlock(_component_el_tooltip, {\n            key: 0,\n            class: \"item\",\n            effect: \"light\",\n            content: \"添加关联逻辑\",\n            placement: \"bottom\",\n            \"open-delay\": \"400\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              class: \"bt\",\n              type: \"primary\",\n              icon: \"el-icon-paperclip\",\n              onClick: $event => $options.logic(item.id)\n            }, null, 8 /* PROPS */, [\"onClick\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_tooltip, {\n            class: \"item\",\n            effect: \"light\",\n            content: \"复制\",\n            placement: \"bottom\",\n            \"open-delay\": \"400\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              class: \"bt\",\n              type: \"primary\",\n              icon: \"el-icon-document-copy\",\n              onClick: $event => $options.copy(item.id)\n            }, null, 8 /* PROPS */, [\"onClick\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n            class: \"item\",\n            effect: \"light\",\n            content: \"删除\",\n            placement: \"bottom\",\n            \"open-delay\": \"400\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              class: \"bt\",\n              type: \"primary\",\n              icon: \"el-icon-delete\",\n              onClick: $event => $options.del_pre(item.id)\n            }, null, 8 /* PROPS */, [\"onClick\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n            class: \"item\",\n            effect: \"light\",\n            content: \"上移\",\n            placement: \"bottom\",\n            \"open-delay\": \"400\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              class: \"bt\",\n              type: \"primary\",\n              icon: \"el-icon-caret-top\",\n              onClick: $event => $options.up(item.id)\n            }, null, 8 /* PROPS */, [\"onClick\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n            class: \"item\",\n            effect: \"light\",\n            content: \"下移\",\n            placement: \"bottom\",\n            \"open-delay\": \"400\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              class: \"bt\",\n              type: \"primary\",\n              icon: \"el-icon-caret-bottom\",\n              onClick: $event => $options.down(item.id)\n            }, null, 8 /* PROPS */, [\"onClick\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onMouseover\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createVNode(_component_el_dialog, {\n    title: $data.qsEditDialogTitle,\n    modelValue: $data.qsEditDialogVisible,\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.qsEditDialogVisible = $event),\n    \"before-close\": $options.cancel_pre,\n    class: \"dialog\",\n    width: \"1100px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"form\",\n      model: $data.willAddQuestion,\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"题目类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          disabled: $data.selectDisAble,\n          modelValue: $data.willAddQuestion.type,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.willAddQuestion.type = $event),\n          placeholder: \"请选择题目类型\",\n          onChange: $options.typeChange\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allType, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.value,\n              label: item.label,\n              value: item.value\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"disabled\", \"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), $data.willAddQuestion.type === 'name' || $data.willAddQuestion.type === 'stuId' || $data.willAddQuestion.type === 'class' || $data.willAddQuestion.type === 'school' || $data.willAddQuestion.type === 'phone' || $data.willAddQuestion.type === 'email' || $data.willAddQuestion.type === 'sex' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [$data.willAddQuestion.type === 'name' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"姓名\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'stuId' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 1,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"学号\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'school' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"学校\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'sex' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 3,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"性别\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'phone' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 4,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"手机号\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'email' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 5,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"邮箱\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"是否必填\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          modelValue: $data.willAddQuestion.must,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.willAddQuestion.must = $event)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"必填\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createVNode(_component_el_form_item, {\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.willAddQuestion.title,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.willAddQuestion.title = $event),\n          placeholder: \"请输入标题\",\n          style: {\n            \"width\": \"800px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"题目描述\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.willAddQuestion.description,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.willAddQuestion.description = $event),\n          placeholder: \"请输入题目描述\",\n          style: {\n            \"width\": \"800px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"是否必填\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          modelValue: $data.willAddQuestion.must,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.willAddQuestion.must = $event)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"必填\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), $data.willAddQuestion.type === 'radio' || $data.willAddQuestion.type === 'checkbox' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.willAddQuestion.options, (item, index) => {\n        return _openBlock(), _createBlock(_component_el_form_item, {\n          label: '选项' + (index + 1),\n          key: index\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_row, null, {\n            default: _withCtx(() => [_createVNode(_component_el_col, {\n              span: 12\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_input, {\n                modelValue: item.title,\n                \"onUpdate:modelValue\": $event => item.title = $event,\n                placeholder: \"请输入选项名\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_col, {\n              span: 12\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_button, {\n                type: \"danger\",\n                plain: \"\",\n                class: \"deleteOptionButton\",\n                onClick: $event => $options.deleteOption(index)\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"删除选项\")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), !item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 0,\n                type: \"success\",\n                plain: \"\",\n                style: {\n                  \"margin-right\": \"8px\"\n                },\n                onClick: $event => item.hasNumLimit = true\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"添加库存限制\")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 1,\n                type: \"info\",\n                plain: \"\",\n                style: {\n                  \"margin-right\": \"8px\"\n                },\n                onClick: $event => item.hasNumLimit = false\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"取消库存限制\")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_input_number, {\n                key: 2,\n                modelValue: item.supply,\n                \"onUpdate:modelValue\": $event => item.supply = $event\n              }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n      }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_el_button, {\n        type: \"primary\",\n        plain: \"\",\n        class: \"addOptionButton\",\n        onClick: $options.addOption\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"新增选项\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'text' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createVNode(_component_el_form_item, {\n        label: \"填空\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"textarea\",\n          class: \"my-input\",\n          rows: $data.willAddQuestion.row,\n          resize: \"none\"\n        }, null, 8 /* PROPS */, [\"rows\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"行数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $data.willAddQuestion.row,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.willAddQuestion.row = $event),\n          min: 1,\n          max: 10\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'mark' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"最大分数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $data.willAddQuestion.score,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.willAddQuestion.score = $event),\n          min: 3,\n          max: 10\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"上传图片\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          class: \"upload-img\",\n          action: _ctx.uploadImgUrl,\n          multiple: \"\",\n          \"http-request\": $options.upLoadImage,\n          \"before-upload\": $options.beforeImageUpload,\n          \"file-list\": $data.willAddQuestion.imgList,\n          limit: 6\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            plain: \"\",\n            style: {\n              \"width\": \"100px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1 /* STABLE */\n          }), _hoisted_24]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"action\", \"http-request\", \"before-upload\", \"file-list\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"上传视频\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          class: \"upload-video\",\n          action: _ctx.uploadVideoUrl,\n          \"http-request\": $options.upLoadVideo,\n          \"before-upload\": $options.beforeVideoUpload,\n          \"file-list\": $data.willAddQuestion.videoList,\n          limit: 1\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            plain: \"\",\n            style: {\n              \"width\": \"100px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1 /* STABLE */\n          }), _hoisted_25]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"action\", \"http-request\", \"before-upload\", \"file-list\"])]),\n        _: 1 /* STABLE */\n      })]))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"]), _createElementVNode(\"span\", _hoisted_26, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"primary\",\n        onClick: $options.dialogConfirm\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"确定\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createTextVNode(\"   \"), _createVNode(_component_el_button, {\n        span: 6,\n        onClick: $options.cancel_pre\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"取消\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\", \"before-close\"]), _createVNode(_component_el_dialog, {\n    modelValue: $data.qsLinkDialogVisible,\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.qsLinkDialogVisible = $event),\n    title: $data.qsLinkDialogTitle,\n    class: \"linkDialog\",\n    \"show-close\": false,\n    width: \"800px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: \"8\",\n        style: {\n          \"text-align\": \"center\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_hoisted_27]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: \"16\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_hoisted_28]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, {\n          style: {\n            \"margin-top\": \"15px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 16,\n            style: {\n              \"margin-right\": \"5px\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              placeholder: $data.linkShare,\n              modelValue: $data.linkShare,\n              \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.linkShare = $event),\n              id: \"copyText\",\n              disabled: true\n            }, null, 8 /* PROPS */, [\"placeholder\", \"modelValue\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_button, {\n            type: \"info\",\n            plain: \"\",\n            id: \"copyBtn\",\n            onClick: $options.copyToClip\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"复制链接\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, {\n          style: {\n            \"margin-top\": \"25px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            plain: \"\",\n            onClick: _ctx.downloadQrcode\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"下载二维码\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $options.genCodeAgain,\n            style: {\n              \"margin-left\": \"30px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"重新生成链接\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"span\", _hoisted_29, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"success\",\n        style: {\n          \"width\": \"80px\"\n        },\n        onClick: $options.finish\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"完 成\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"title\"]), _createVNode(_component_el_dialog, {\n    modelValue: $data.editWrongMsgVisible,\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.editWrongMsgVisible = $event),\n    class: \"linkDialog\",\n    \"show-close\": false,\n    \"close-on-click-modal\": false,\n    width: \"300px\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString($data.editWrongMsg), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_30, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"danger\",\n        style: {\n          \"width\": \"80px\"\n        },\n        onClick: _cache[11] || (_cache[11] = $event => $data.editWrongMsgVisible = false)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"知道了\")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\"    关联问题弹框\"), _createVNode(_component_el_dialog, {\n    title: $data.qsLogicDialogTitle,\n    modelValue: $data.qsLogicDialogVisible,\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.qsLogicDialogVisible = $event),\n    \"before-close\": $options.cancel_pre_logic,\n    class: \"dialog\"\n  }, {\n    default: _withCtx(() => [$data.questions.length !== 0 ? (_openBlock(), _createBlock(_component_el_form, {\n      key: 0,\n      class: \"logic-form\",\n      ref: \"form\",\n      \"label-width\": \"80px\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_31, \" 当前题目：\" + _toDisplayString($data.questions[$data.logicIndex].id) + \". \" + _toDisplayString($data.questions[$data.logicIndex].title), 1 /* TEXT */), _createVNode(_component_el_form_item, {\n        label: \"关联题目\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.willAddLogic.question_id,\n          \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.willAddLogic.question_id = $event),\n          placeholder: \"请选择关联题目\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.questionsFilter, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: $options.idTitle(item),\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), $data.willAddLogic.question_id !== 0 ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"关联选项\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.willAddLogic.option_id,\n          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.willAddLogic.option_id = $event),\n          placeholder: \"请选择关联选项\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions[$data.willAddLogic.question_id - 1].options, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: item.title,\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddLogic.question_id !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [_createCommentVNode(\"          保存加入后选项id记得减一\"), _createTextVNode(\" 当题目\"), _createElementVNode(\"span\", _hoisted_33, \" \\\"\" + _toDisplayString($options.idTitle($data.questions[$data.willAddLogic.question_id - 1])) + \"\\\" \", 1 /* TEXT */), _createTextVNode(\"选择选项\"), _createElementVNode(\"span\", _hoisted_34, \" \\\"\" + _toDisplayString($data.questions[$data.willAddLogic.question_id - 1].options[$data.willAddLogic.option_id - 1].title) + \"\\\" \", 1 /* TEXT */), _createTextVNode(\"时此题才会显示 \")])) : _createCommentVNode(\"v-if\", true), $options.questionsFilter.length === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, \" 题目之前不存在单（多）选题，无法设置关联题目 \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_36, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[15] || (_cache[15] = $event => $options.logicConfirm($data.logicIndex))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"确定\")]),\n        _: 1 /* STABLE */\n      })])]),\n      _: 1 /* STABLE */\n    }, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\", \"before-close\"]), _withDirectives((_openBlock(), _createBlock(_component_el_dialog, {\n    title: $data.settingDialogTitle,\n    class: \"settingDialog\",\n    width: \"30%\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, null, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        class: \"timeBlock\",\n        label: \"截止时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n          style: {\n            \"margin-left\": \"100px\"\n          },\n          modelValue: $data.timeFrame,\n          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.timeFrame = $event),\n          onChange: $options.formatTime,\n          type: \"datetime\",\n          \"value-format\": \"yyyy-MM-dd HH:mm\",\n          placeholder: \"选择结束时间\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"是否限制回收量\",\n        class: \"recycleBlock\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_switch, {\n            modelValue: $data.hasRecycleLimit,\n            \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $data.hasRecycleLimit = $event),\n            \"active-color\": \"#13ce66\",\n            \"inactive-color\": \"grey\",\n            \"active-text\": \"是\",\n            \"inactive-text\": \"否\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, null, {\n          default: _withCtx(() => [$data.hasRecycleLimit ? (_openBlock(), _createBlock(_component_el_input_number, {\n            key: 0,\n            modelValue: $data.max_recycling,\n            \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => $data.max_recycling = $event),\n            min: 1,\n            style: {\n              \"margin-left\": \"120px\",\n              \"height\": \"40px\",\n              \"margin-top\": \"10px\"\n            }\n          }, null, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"题目关联逻辑开关\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_switch, {\n          modelValue: $data.isLogic,\n          \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => $data.isLogic = $event),\n          \"active-text\": \"开\",\n          \"inactive-text\": \"关\",\n          onChange: $options.closeGlobalLogic\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _hoisted_37, $data.isLogic ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, \" 为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑 \")) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_39, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.settingSuccess\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"完成\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\"])), [[_directive_medel, $data.settingDialogVisible]])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","style","id","_createElementBlock","_hoisted_1","_normalizeStyle","_createCommentVNode","_createVNode","_component_el_tabs","type","stretch","default","_withCtx","_component_el_tab_pane","label","_component_el_menu","title","_component_el_icon","_component_Edit","_","_hoisted_2","_component_el_menu_item_group","_hoisted_3","_component_el_menu_item","onClick","_cache","$event","$data","willAddQuestion","qsEditDialogVisible","_createTextVNode","_component_el_sub_menu","_hoisted_4","$options","addName","index","_component_View","_component_Link","_component_setting","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","description","undefined","_hoisted_8","_hoisted_9","_Fragment","_renderList","questions","item","_createBlock","_component_el_row","onMouseover","hoverItem","_component_el_col","span","_hoisted_10","must","_hoisted_11","_hoisted_12","_component_el_input","placeholder","_hoisted_13","_hoisted_14","_component_el_radio","value","_hoisted_15","imgList","i","offset","_component_el_image","src","url","length","_hoisted_16","videoList","width","height","transparentatstart","animationatstart","autostart","autosize","volume","displaysize","showdisplay","showstatusbar","showcontrols","showaudiocontrols","showtracker","showpositioncontrols","balance","_hoisted_17","options","ans","hasNumLimit","_hoisted_18","supply","consume","_component_el_checkbox","_hoisted_19","row","_mergeProps","ref_for","_hoisted_20","_component_el_rate","max","score","isLogic","last_question","_hoisted_21","relatedQs","_component_el_button_group","_component_el_tooltip","effect","content","placement","_component_el_button","icon","edit","logic","copy","del_pre","up","down","_component_el_dialog","qsEditDialogTitle","modelValue","cancel_pre","_component_el_form","ref","model","_component_el_form_item","_component_el_select","disabled","selectDisAble","onChange","typeChange","allType","_component_el_option","_hoisted_22","_hoisted_23","plain","deleteOption","_component_el_input_number","addOption","rows","resize","min","_component_el_upload","action","_ctx","uploadImgUrl","multiple","upLoadImage","beforeImageUpload","limit","size","_hoisted_24","uploadVideoUrl","upLoadVideo","beforeVideoUpload","_hoisted_25","_hoisted_26","dialogConfirm","qsLinkDialogVisible","qsLinkDialogTitle","_hoisted_27","_hoisted_28","linkShare","copyToClip","downloadQrcode","genCodeAgain","_hoisted_29","finish","editWrongMsgVisible","editWrongMsg","_hoisted_30","qsLogicDialogTitle","qsLogicDialogVisible","cancel_pre_logic","_hoisted_31","logicIndex","willAddLogic","question_id","questionsFilter","idTitle","option_id","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","logicConfirm","settingDialogTitle","_component_el_date_picker","timeFrame","formatTime","_component_el_switch","hasRecycleLimit","max_recycling","closeGlobalLogic","_hoisted_37","_hoisted_38","_hoisted_39","settingSuccess","settingDialogVisible"],"sources":["E:\\mytest\\src\\views\\qn-createpane\\qnEdit.vue"],"sourcesContent":["<template>\r\n    <div class=\"form\">\r\n        <div class=\"qnBoard\" :style=\"{\r\n            boxShadow: `var(--el-box-shadow-light)`,\r\n        }\">\r\n            <!-- <el-tabs :tab-position=\"'left'\" style=\"height: 700px;\" type=\"border-card\" class=\"demo-tabs\" stretch=\"true\">\r\n            <el-tab-pane style=\"padding: 140px\">\r\n                <template #label>\r\n                    <span class=\"custom-tabs-label\">\r\n                        <el-icon>\r\n                            <Edit />\r\n                        </el-icon>\r\n                        <span>Edit</span>\r\n                    </span>\r\n                </template>\r\n\r\n</el-tab-pane>\r\n<el-tab-pane label=\"Config\">Config</el-tab-pane>\r\n<el-tab-pane label=\"Role\">Role</el-tab-pane>\r\n<el-tab-pane label=\"Task\">Task</el-tab-pane>\r\n</el-tabs> -->\r\n            <el-tabs type=\"card\" stretch=\"true\" class=\"qn-tabs\">\r\n                <el-tab-pane label=\"编辑问卷\">\r\n                    <el-menu class=\"el-menu-vertical-demo\" style=\"position: relative; width: 190px;\">\r\n                        <template #title>\r\n                            <el-icon>\r\n                                <Edit />\r\n                            </el-icon>\r\n                            <span>问卷题目</span>\r\n                        </template>\r\n                        <el-menu-item-group>\r\n                            <template #title><span>题目</span></template>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'radio'; qsEditDialogVisible = true\">单选题</el-menu-item>\r\n                            <el-menu-item>多选题</el-menu-item>\r\n                            <el-menu-item>填空题</el-menu-item>\r\n                            <el-menu-item>评分题</el-menu-item>\r\n                        </el-menu-item-group>\r\n                        <el-menu-item-group title=\"预设题目\">\r\n                            <el-sub-menu>\r\n                                <template #title><span>个人信息</span></template>\r\n                                <el-menu-item @click=\"addName\">姓名</el-menu-item>\r\n                                <el-menu-item>学号</el-menu-item>\r\n                                <el-menu-item>电话号码</el-menu-item>\r\n                            </el-sub-menu>\r\n                        </el-menu-item-group>\r\n\r\n                    </el-menu>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"问卷相关\">\r\n                    <el-menu class=\"el-menu-vertical-demo\" style=\"position: relative; width: 190px;\">\r\n\r\n                        <el-menu-item index=\"2\">\r\n                            <el-icon>\r\n                                <View />\r\n                            </el-icon>\r\n                            <template #title>问卷预览</template>\r\n                        </el-menu-item>\r\n                        <el-menu-item index=\"3\">\r\n                            <el-icon>\r\n                                <Link />\r\n                            </el-icon>\r\n                            <template #title>问卷逻辑</template>\r\n                        </el-menu-item>\r\n                        <el-menu-item index=\"4\">\r\n                            <el-icon>\r\n                                <setting />\r\n                            </el-icon>\r\n                            <template #title>问卷设置</template>\r\n                        </el-menu-item>\r\n                    </el-menu>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n\r\n        </div>\r\n        <div class=\"qnMain\">\r\n            <div class=\"ques\">\r\n\r\n                <div class=\"title\">\r\n                    {{ title }}\r\n                </div>\r\n                <div class=\"description\"\r\n                    v-if=\"this.description !== '' && this.description !== null && this.description !== undefined\">\r\n                    &emsp;&emsp;{{ description }}\r\n                </div>\r\n                <div class=\"content\">\r\n                    <el-row class=\"ques-block\" v-for=\"item in questions\" :key=\"item.id\"\r\n                        @mouseover.enter=\"hoverItem = item.id\">\r\n\r\n                        <el-col :span=\"16\" class=\"block-content\">\r\n                            <div class=\"block-title\">\r\n                                {{ item.id }}. {{ item.title }} <span class=\"must\" v-if=\"item.must\">(必填)</span>\r\n                            </div>\r\n\r\n                            <div class=\"block-info\" v-if=\"item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school'\r\n                                || item.type === 'phone' || item.type === 'email'\">\r\n                                <el-input placeholder=\"请输入内容\" style=\"margin-left: 10px\">\r\n                                </el-input>\r\n                            </div>\r\n\r\n                            <div class=\"block-choice\" v-if=\"item.type === 'sex'\">\r\n                                <div style=\"padding-bottom: 10px\"><el-radio value=\"0\">男</el-radio></div>\r\n                                <div><el-radio value=\"0\">女</el-radio></div>\r\n                            </div>\r\n\r\n                            <div class=\"block-description\"\r\n                                v-if=\"item.description !== '' && item.description !== null && item.description !== undefined\">\r\n                                {{ item.description }}\r\n                            </div>\r\n\r\n                            <!--                  图片-->\r\n                            <el-row class=\"block-img\" v-for=\"(i, index) in item.imgList\" :key=\"i.index\">\r\n                                <el-col :offset=\"2\" :span=\"10\" class=\"demo-image__preview\" v-if=\"index % 2 === 0\">\r\n                                    <el-image style=\"width: 200px; height: 200px\" :src=\"i.url\"\r\n                                        :preview-src-list=\"[i.url]\">\r\n                                    </el-image>\r\n                                </el-col>\r\n                                <el-col :span=\"10\" class=\"demo-image__preview\"\r\n                                    v-if=\"index % 2 === 0 && index + 1 <= item.imgList.length - 1\">\r\n                                    <el-image style=\"width: 200px; height: 200px\" :src=\"item.imgList[index + 1].url\"\r\n                                        :preview-src-list=\"[item.imgList[index + 1].url]\">\r\n                                    </el-image>\r\n                                </el-col>\r\n                            </el-row>\r\n                            <span style=\"color: #9b9ea0;font-size: x-small\"\r\n                                v-if=\"item.imgList.length !== 0\">（点击图片查看大图）</span>\r\n\r\n\r\n                            <!--                视频-->\r\n                            <el-row class=\"block-img\" v-for=\"i in item.videoList\" :key=\"i.index\">\r\n                                <embed width=400 height=230 transparentatstart=true animationatstart=false\r\n                                    autostart=true autosize=false volume=100 displaysize=0 showdisplay=true\r\n                                    showstatusbar=true showcontrols=true showaudiocontrols=true showtracker=true\r\n                                    showpositioncontrols=true balance=true :src=\"i.url\">\r\n                            </el-row>\r\n\r\n\r\n                            <div class=\"block-choice\" v-for=\"ans in item.options\" :key=\"ans.id\">\r\n\r\n                                <!--                  单选-->\r\n                                <el-radio v-if=\"item.type === 'radio'\" value=\"0\">\r\n                                    {{ ans.title }}<span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\"\r\n                                        v-if=\"ans.hasNumLimit\">剩余{{\r\n                                            ans.supply - ans.consume }}&emsp;总计{{ ans.supply }}</span>\r\n                                </el-radio>\r\n\r\n                                <!--                  多选-->\r\n                                <el-checkbox v-if=\"item.type === 'checkbox'\" value=\"0\">\r\n                                    {{ ans.title }}\r\n                                    <span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\"\r\n                                        v-if=\"ans.hasNumLimit\">剩余{{\r\n                                            ans.supply -\r\n                                            ans.consume }}&emsp;总计{{ ans.supply }}</span>\r\n                                </el-checkbox>\r\n\r\n                                <!--                  填空-->\r\n                                <el-input v-if=\"item.type === 'text' && item.row > 1\" type=\"textarea\"\r\n                                    placeholder=\"请输入内容\" v-bind=\"ans.title\">\r\n                                </el-input>\r\n                                <el-input v-if=\"item.type === 'text' && item.row === 1\" placeholder=\"请输入内容\"\r\n                                    v-bind=\"ans.title\">\r\n                                </el-input>\r\n                            </div>\r\n\r\n                            <div class=\"block-choice\" v-if=\"item.type === 'mark'\">\r\n                                <!--                  评分-->\r\n                                <el-rate value=\"0\" :max=\"item.score\"></el-rate>\r\n                            </div>\r\n\r\n                            <!--                 关联信息-->\r\n                            <div class=\"block-relation\" v-if=\"isLogic && item.last_question !== 0\">\r\n                                <div>{{ relatedQs(item) }}</div>\r\n                            </div>\r\n                        </el-col>\r\n\r\n                        <el-col :span=\"8\" class=\"block-button\" style=\"text-align: right\" v-if=\"hoverItem === item.id\">\r\n                            <el-button-group>\r\n                                <el-tooltip class=\"item\" effect=\"light\" content=\"编辑\" placement=\"bottom\"\r\n                                    open-delay=\"400\">\r\n                                    <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-edit\"\r\n                                        @click=\"edit(item.id)\"></el-button>\r\n                                </el-tooltip>\r\n                                <el-tooltip class=\"item\" v-if=\"isLogic\" effect=\"light\" content=\"添加关联逻辑\"\r\n                                    placement=\"bottom\" open-delay=\"400\">\r\n                                    <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-paperclip\"\r\n                                        @click=\"logic(item.id)\"></el-button>\r\n                                </el-tooltip>\r\n                                <el-tooltip class=\"item\" effect=\"light\" content=\"复制\" placement=\"bottom\"\r\n                                    open-delay=\"400\">\r\n                                    <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-document-copy\"\r\n                                        @click=\"copy(item.id)\"></el-button>\r\n                                </el-tooltip>\r\n                                <el-tooltip class=\"item\" effect=\"light\" content=\"删除\" placement=\"bottom\"\r\n                                    open-delay=\"400\">\r\n                                    <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-delete\"\r\n                                        @click=\"del_pre(item.id)\"></el-button>\r\n                                </el-tooltip>\r\n                                <el-tooltip class=\"item\" effect=\"light\" content=\"上移\" placement=\"bottom\"\r\n                                    open-delay=\"400\">\r\n                                    <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-caret-top\"\r\n                                        @click=\"up(item.id)\"></el-button>\r\n                                </el-tooltip>\r\n                                <el-tooltip class=\"item\" effect=\"light\" content=\"下移\" placement=\"bottom\"\r\n                                    open-delay=\"400\">\r\n                                    <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-caret-bottom\"\r\n                                        @click=\"down(item.id)\"></el-button>\r\n                                </el-tooltip>\r\n                            </el-button-group>\r\n                        </el-col>\r\n\r\n                    </el-row>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <el-dialog :title=\"qsEditDialogTitle\" v-model=\"qsEditDialogVisible\" :before-close=\"cancel_pre\" class=\"dialog\"\r\n            width=\"1100px\">\r\n            <el-form ref=\"form\" :model=\"willAddQuestion\" label-width=\"100px\">\r\n                <el-form-item label=\"题目类型\">\r\n                    <el-select :disabled=\"selectDisAble\" v-model=\"willAddQuestion.type\" placeholder=\"请选择题目类型\"\r\n                        @change=\"typeChange\">\r\n                        <el-option v-for=\"item in allType\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <div class=\"is-info\" v-if=\"willAddQuestion.type === 'name'\r\n                    || willAddQuestion.type === 'stuId'\r\n                    || willAddQuestion.type === 'class'\r\n                    || willAddQuestion.type === 'school'\r\n                    || willAddQuestion.type === 'phone'\r\n                    || willAddQuestion.type === 'email'\r\n                    || willAddQuestion.type === 'sex'\">\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'name'\">\r\n                        <el-input value=\"姓名\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'stuId'\">\r\n                        <el-input value=\"学号\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'school'\">\r\n                        <el-input value=\"学校\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'sex'\">\r\n                        <el-input value=\"性别\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'phone'\">\r\n                        <el-input value=\"手机号\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'email'\">\r\n                        <el-input value=\"邮箱\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"是否必填\">\r\n                        <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n                    </el-form-item>\r\n                </div>\r\n                <div v-else class=\"non-pre\">\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.title\" placeholder=\"请输入标题\" style=\"width: 800px\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"题目描述\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.description\" placeholder=\"请输入题目描述\"\r\n                            style=\"width: 800px\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"是否必填\">\r\n                        <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n                    </el-form-item>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'radio' || willAddQuestion.type === 'checkbox'\">\r\n                        <el-form-item :label=\"'选项' + (index + 1)\" v-for=\"(item, index) in willAddQuestion.options\"\r\n                            :key=\"index\">\r\n                            <el-row>\r\n                                <el-col :span=\"12\">\r\n                                    <el-input v-model=\"item.title\" placeholder=\"请输入选项名\"></el-input>\r\n                                </el-col>\r\n                                <el-col :span=\"12\">\r\n                                    <el-button type=\"danger\" plain class=\"deleteOptionButton\"\r\n                                        @click=\"deleteOption(index)\">删除选项</el-button>\r\n                                    <el-button type=\"success\" plain style=\"margin-right: 8px\" v-if=\"!item.hasNumLimit\"\r\n                                        @click=\"item.hasNumLimit = true\">添加库存限制</el-button>\r\n                                    <el-button type=\"info\" plain style=\"margin-right: 8px\" v-if=\"item.hasNumLimit\"\r\n                                        @click=\"item.hasNumLimit = false\">取消库存限制</el-button>\r\n                                    <el-input-number v-model=\"item.supply\" v-if=\"item.hasNumLimit\"></el-input-number>\r\n                                </el-col>\r\n                            </el-row>\r\n\r\n                        </el-form-item>\r\n                        <el-button type=\"primary\" plain class=\"addOptionButton\" @click=\"addOption\">新增选项</el-button>\r\n                    </template>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'text'\">\r\n                        <el-form-item label=\"填空\">\r\n                            <el-input type=\"textarea\" class=\"my-input\" :rows=\"willAddQuestion.row\" resize=\"none\">\r\n                            </el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"行数\">\r\n                            <el-input-number v-model=\"willAddQuestion.row\" :min=\"1\" :max=\"10\"></el-input-number>\r\n                        </el-form-item>\r\n                    </template>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'mark'\">\r\n                        <el-form-item label=\"最大分数\">\r\n                            <el-input-number v-model=\"willAddQuestion.score\" :min=\"3\" :max=\"10\"></el-input-number>\r\n                        </el-form-item>\r\n                    </template>\r\n                    <el-form-item label=\"上传图片\">\r\n                        <el-upload class=\"upload-img\" :action=uploadImgUrl multiple :http-request=\"upLoadImage\"\r\n                            :before-upload=\"beforeImageUpload\" :file-list=\"willAddQuestion.imgList\" :limit=\"6\">\r\n                            <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n                            <span class=\"el-upload__tip\">&emsp;只能上传jpg/png文件，且不超过5mb</span>\r\n                        </el-upload>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"上传视频\">\r\n                        <el-upload class=\"upload-video\" :action=uploadVideoUrl :http-request=\"upLoadVideo\"\r\n                            :before-upload=\"beforeVideoUpload\" :file-list=\"willAddQuestion.videoList\" :limit=\"1\">\r\n                            <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n                            <span class=\"el-upload__tip\">&emsp;只能上传mp4/mkv文件，且不超过10mb</span>\r\n                        </el-upload>\r\n                    </el-form-item>\r\n                </div>\r\n            </el-form>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"primary\" @click=\"dialogConfirm\">确定</el-button>\r\n                    &emsp;\r\n                    <el-button :span=\"6\" @click=\"cancel_pre\">取消</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog v-model=\"qsLinkDialogVisible\" :title=\"qsLinkDialogTitle\" class=\"linkDialog\" :show-close=\"false\"\r\n            width=\"800px\">\r\n            <el-row>\r\n                <el-col span=\"8\" style=\"text-align: center\">\r\n                    <el-row>\r\n                        <div id=\"qrcode_2\" style=\"height:200px; width:200px; margin-left: 22px;\"></div>\r\n                    </el-row>\r\n                </el-col>\r\n                <el-col span=\"16\">\r\n                    <el-row>\r\n                        <h2>链接与二维码</h2>\r\n                    </el-row>\r\n                    <el-row style=\"margin-top:15px\">\r\n                        <el-col :span=\"16\" style=\"margin-right: 5px\">\r\n                            <el-input :placeholder=linkShare v-model=\"linkShare\" id=\"copyText\" :disabled=\"true\">\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-button type=\"info\" plain id=\"copyBtn\" @click=\"copyToClip\">复制链接</el-button></el-row>\r\n                    <el-row style=\"margin-top: 25px\">\r\n                        <el-button type=\"primary\" plain @click=\"downloadQrcode\">下载二维码</el-button>\r\n                        <el-button type=\"primary\" @click=\"genCodeAgain\" style=\"margin-left: 30px\">重新生成链接</el-button>\r\n                    </el-row>\r\n                </el-col>\r\n            </el-row>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"success\" style=\"width: 80px\" @click=\"finish\">完 成</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog v-model=\"editWrongMsgVisible\" class=\"linkDialog\" :show-close=\"false\" :close-on-click-modal=\"false\"\r\n            width=\"300px\">\r\n            <span>{{ editWrongMsg }}</span>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"danger\" style=\"width: 80px\"\r\n                        @click=\"editWrongMsgVisible = false\">知道了</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <!--    关联问题弹框-->\r\n        <el-dialog :title=\"qsLogicDialogTitle\" v-model=\"qsLogicDialogVisible\" :before-close=\"cancel_pre_logic\"\r\n            class=\"dialog\">\r\n            <el-form v-if=\"questions.length !== 0\" class=\"logic-form\" ref=\"form\" label-width=\"80px\">\r\n\r\n                <div class=\"logic-title\">\r\n                    当前题目：{{ questions[logicIndex].id }}. {{ questions[logicIndex].title }}\r\n                </div>\r\n\r\n                <el-form-item label=\"关联题目\">\r\n                    <el-select v-model=\"willAddLogic.question_id\" placeholder=\"请选择关联题目\">\r\n                        <el-option v-for=\"item in questionsFilter\" :key=\"item.id\" :label=\"idTitle(item)\"\r\n                            :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"关联选项\" v-if=\"willAddLogic.question_id !== 0\">\r\n                    <el-select v-model=\"willAddLogic.option_id\" placeholder=\"请选择关联选项\">\r\n                        <el-option v-for=\"item in questions[willAddLogic.question_id - 1].options\" :key=\"item.id\"\r\n                            :label=\"item.title\" :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <div class=\"logic-info\" v-if=\"willAddLogic.question_id !== 0\">\r\n                    <!--          保存加入后选项id记得减一-->\r\n                    当题目<span style=\"color: #1687fd\"> \"{{ idTitle(questions[willAddLogic.question_id - 1]) }}\"\r\n                    </span>选择选项<span style=\"color: #1687fd\"> \"{{ questions[willAddLogic.question_id -\r\n                        1].options[willAddLogic.option_id -\r\n                        1].title\r\n                        }}\"\r\n                    </span>时此题才会显示\r\n                </div>\r\n                <div class=\"logic-info\" v-if=\"questionsFilter.length === 1\">\r\n                    题目之前不存在单（多）选题，无法设置关联题目\r\n                </div>\r\n\r\n                <div class=\"logic-bt\">\r\n                    <el-button type=\"primary\" @click=\"logicConfirm(logicIndex)\">确定</el-button>\r\n                </div>\r\n\r\n            </el-form>\r\n        </el-dialog>\r\n        <el-dialog :title=\"settingDialogTitle\" v-medel=\"settingDialogVisible\" class=\"settingDialog\" width=\"30%\">\r\n            <el-form>\r\n                <el-form-item class=\"timeBlock\" label=\"截止时间\">\r\n                    <el-date-picker style=\"margin-left: 100px\" v-model=\"timeFrame\" @change=\"formatTime\" type=\"datetime\"\r\n                        value-format=\"yyyy-MM-dd HH:mm\" placeholder=\"选择结束时间\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item label=\"是否限制回收量\" class=\"recycleBlock\">\r\n                    <el-row>\r\n                        <el-switch v-model=\"hasRecycleLimit\" active-color=\"#13ce66\" inactive-color=\"grey\"\r\n                            active-text=\"是\" inactive-text=\"否\">\r\n                        </el-switch>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <el-input-number v-model=\"max_recycling\" :min=\"1\" v-if=\"hasRecycleLimit\"\r\n                            style=\"margin-left: 120px;height: 40px;margin-top: 10px\">\r\n                        </el-input-number>\r\n                    </el-row>\r\n                </el-form-item>\r\n                <el-form-item label=\"题目关联逻辑开关\">\r\n                    <el-switch v-model=\"isLogic\" active-text=\"开\" inactive-text=\"关\" @change=\"closeGlobalLogic\">\r\n                    </el-switch>\r\n                </el-form-item>\r\n\r\n                <div class=\"logic-description\">\r\n                    题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】\r\n                </div>\r\n\r\n                <div class=\"logic-description important\" v-if=\"isLogic\">\r\n                    为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑\r\n                </div>\r\n            </el-form>\r\n\r\n            <div class=\"setting-bt\">\r\n                <el-button type=\"primary\" @click=\"settingSuccess\">完成</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n//import editHeader from \"@/components/header/editPageHeader\";\r\nimport QRCode from \"qrcodejs2\";\r\nimport getDataApi from \"@/utils/getDataApi\";\r\nimport saveDataApi from \"@/utils/saveDataApi\";\r\nimport qrcodeApi from \"@/utils/qrcodeApi\";\r\nimport user from \"@/storage/user\";\r\n\r\nexport default {\r\n    name: \"myForm\",\r\n    mixins: [getDataApi, saveDataApi, qrcodeApi],\r\n    data() {\r\n        return {\r\n            logicQuestionState: 0,  // 用于判断用户是否更改关联问题设置\r\n            logicOptionState: 0,    // 用于判断用户是否更改关联选项设置\r\n\r\n            //uploadImgUrl: this.GLOBAL.backUrl + 'upload/image',\r\n            //uploadVideoUrl: this.GLOBAL.backUrl + 'upload/video',\r\n\r\n            timer: '',\r\n            value: '',\r\n            qrcode: null,\r\n            timeFrame: '',\r\n            linkShare: '',\r\n            editWrongMsg: \"\",\r\n            editWrongMsgVisible: false,\r\n            qsLinkDialogVisible: false,\r\n            dialogVisibleAsso: false,\r\n            qsLinkDialogTitle: \"发布成功！\",\r\n            settingDialogTitle: \"高级设置\",   // 高级设置弹框的标题\r\n            settingDialogVisible: false,     // 高级设置对话框可见性\r\n            closingDate: null,   // 高级设置中问卷回收的截止日期\r\n            isLogic: true,      // 问卷是否引入关联逻辑\r\n            isReleased: false,   // 是否发布\r\n            hasRecycleLimit: false,\r\n            max_recycling: 10000,\r\n            editIndex: 0,\r\n            logicIndex: 0,          // 当前添加题目逻辑的问题ID\r\n            selectDisAble: false,\r\n            hoverItem: 0,\r\n            activeName: 'first',\r\n            title: '',\r\n            description: '',\r\n            defaultProps: {\r\n                children: 'children',\r\n                label: 'label'\r\n            },\r\n            type: 1,\r\n            questions: [],\r\n            outline: [],\r\n            pid: this.$route.query.pid,\r\n            qsEditDialogVisible: false,\r\n            qsEditDialogTitle: \"新建题目\",\r\n            qsLogicDialogVisible: false,\r\n            qsLogicDialogTitle: \"关联逻辑设置\",\r\n            willAddQuestion: {\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        hasNumLimit: false,  // 是否添加库存限制\r\n                        title: '', // 选项标题\r\n                        id: 1, // 选项id\r\n                        supply: 1,  // 库存\r\n                        consume: 0, // 已消耗库存（已选）\r\n                    }\r\n                ],\r\n                row: 1, // 填空题区域显示行数\r\n                score: 5, // 评分题的最大评分\r\n                imgList: [],\r\n                videoList: [],\r\n            },\r\n            willAddLogic: {\r\n                question_id: 0,\r\n                option_id: 1,\r\n            },\r\n            allType: [\r\n                {\r\n                    value: 'radio',\r\n                    label: '单选题',\r\n                },\r\n                {\r\n                    value: 'checkbox',\r\n                    label: '多选题',\r\n                },\r\n                {\r\n                    value: 'text',\r\n                    label: '填空题',\r\n                }, {\r\n                    value: 'mark',\r\n                    label: '评分题',\r\n                }, {\r\n                    value: 'name',\r\n                    label: '姓名'\r\n                },\r\n                {\r\n                    value: 'stuId',\r\n                    label: '学号'\r\n                },\r\n                {\r\n                    value: 'phone',\r\n                    label: '手机号'\r\n                },\r\n                {\r\n                    value: 'school',\r\n                    label: '学校'\r\n                },\r\n                {\r\n                    value: 'sex',\r\n                    label: '性别'\r\n                },\r\n                {\r\n                    value: 'email',\r\n                    label: '邮箱'\r\n                },\r\n            ],\r\n\r\n            xiaoxueqi_questions: [\r\n                {\r\n                    id: 1,\r\n                    type: 'radio',\r\n                    title: '这是一个什么网站？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '问卷系统',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '出版系统',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    type: 'checkbox',\r\n                    title: '软工小学期助教都有谁？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: 'ZYH',\r\n                    }, {\r\n                        id: 2,\r\n                        title: 'LKW',\r\n                    }, {\r\n                        id: 3,\r\n                        title: 'ZXH',\r\n                    }, {\r\n                        id: 4,\r\n                        title: 'HZH',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    type: 'radio',\r\n                    title: '软工小学期累不累',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '累',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '非常累',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 4,\r\n                    type: 'text',\r\n                    title: '您对小学期的评价如何？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 0,\r\n                        title: '',\r\n                    }],\r\n                    row: 3,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 5,\r\n                    type: 'mark',\r\n                    title: '给小学期打个分吧~',\r\n                    description: '请考虑妥当后填写',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 0,\r\n                        title: '',\r\n                    }],\r\n                    row: 0,\r\n                    score: 10,\r\n                },\r\n            ],\r\n            xiaoxueqi_outline: [\r\n                {\r\n                    id: 1,\r\n                    label: '1. 这是一个什么网站？',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    label: '2. 软工小学期助教都有谁？',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    label: '3. 软工小学期累不累',\r\n                },\r\n                {\r\n                    id: 4,\r\n                    label: '4. 您对小学期的评价如何？',\r\n                },\r\n                {\r\n                    id: 5,\r\n                    label: '5. 给小学期打个分吧~',\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    // components: {\r\n    //     editHeader,\r\n    // },\r\n    methods: {\r\n        //---------------------------Image and video--------------------------------//\r\n        upLoadImage(file) {\r\n            const formData = new FormData();\r\n            formData.append('image', file.file);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: this.uploadImgUrl,\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status_code) {\r\n                        case 1:\r\n                            var name = res.data.name;\r\n                            var url = res.data.url;\r\n                            this.willAddQuestion.imgList.push({\r\n                                name: name,\r\n                                url: url\r\n                            });\r\n                            console.log(this.willAddQuestion.imgList);\r\n                            break;\r\n                        case 2:\r\n                            // this.$message.error(\"上传文件格式错误！\");\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"操作失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        upLoadVideo(file) {\r\n            const formData = new FormData();\r\n            formData.append('video', file.file);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: this.uploadVideoUrl,\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status_code) {\r\n                        case 1:\r\n                            var name = res.data.name;\r\n                            var url = res.data.url;\r\n                            this.willAddQuestion.videoList.push({\r\n                                name: name,\r\n                                url: url\r\n                            });\r\n                            console.log(this.willAddQuestion.videoList);\r\n                            break;\r\n                        case 2:\r\n                            // this.$message.error(\"上传文件格式错误！\");\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"操作失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        beforeImageUpload(file) {\r\n            const isJPG = file.type === 'image/jpeg';\r\n            const isPNG = file.type === 'image/png';\r\n            const isLt5M = file.size / 1024 / 1024 < 10;\r\n\r\n            if (!isJPG && !isPNG) {\r\n                this.$message.error('上传头像图片只能是 JPG/PNG 格式!');\r\n            } else if (!isLt5M) {\r\n                this.$message.error('上传头像图片大小不能超过 5MB!');\r\n            }\r\n            return (isJPG || isPNG) && isLt5M;\r\n        },\r\n        beforeVideoUpload(file) {\r\n            const filename = file.name;\r\n            var suffix = '';\r\n            var isVideo = false;\r\n            const isLt2M = file.size / 1024 / 1024 < 30;\r\n            try {\r\n                var flieArr = filename.split('.');\r\n                suffix = flieArr[flieArr.length - 1];\r\n            } catch (err) {\r\n                suffix = '';\r\n            }\r\n            var videoList = ['mp4', 'mkv'];\r\n            var judge = videoList.some(function (item) {\r\n                return item === suffix;\r\n            });\r\n            if (judge) {\r\n                isVideo = true;\r\n            }\r\n            if (!isVideo) {\r\n                this.$message.error('上传视频文件只能是 MP4/MKV 格式!');\r\n            } else if (!isLt2M) {\r\n                this.$message.error('上传视频文件大小不能超过 10MB!');\r\n            }\r\n            return isLt2M && isVideo;\r\n        },\r\n        beforeRemove(file, fileList) {\r\n            console.log(file, fileList);\r\n            return this.$confirm(`确定移除 ${file.name}？`);\r\n        },\r\n        handleRemove(file, fileList) {\r\n            console.log(file, fileList);\r\n            this.$message(\"移除成功\")\r\n        },\r\n        //--------------------------------------------------------------------------//\r\n        recycleLimit() {\r\n            if (this.hasRecycleLimit === false) this.max_recycling = 10000;\r\n        },\r\n        autoSave() {\r\n            this.saveQnInfo('autosave', '4');\r\n        },\r\n        share() {\r\n            this.publish();\r\n        },\r\n        genCodeAgain() {\r\n            this.makeCodeAgain(\"4\");\r\n        },\r\n        formatTime(time) {\r\n            this.timeFrame = time;\r\n        },\r\n        addName() {\r\n            this.willAddQuestion.type = \"name\";\r\n            this.willAddQuestion.title = \"姓名\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addSex() {\r\n            this.willAddQuestion.type = \"sex\";\r\n            this.willAddQuestion.title = \"性别\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addStuID() {\r\n            this.willAddQuestion.type = \"stuId\";\r\n            this.willAddQuestion.title = \"学号\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addSchool() {\r\n            this.willAddQuestion.type = \"school\";\r\n            this.willAddQuestion.title = \"学校\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addPhone() {\r\n            this.willAddQuestion.type = \"phone\";\r\n            this.willAddQuestion.title = \"手机号\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addEmail() {\r\n            this.willAddQuestion.type = \"email\";\r\n            this.willAddQuestion.title = \"邮箱\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        finish() {\r\n            this.qsLinkDialogVisible = false;\r\n            this.$router.push('/index')// 跳转到问卷中心？\r\n        },\r\n        publishSuccess: function () {\r\n            this.qsLinkDialogVisible = true;\r\n        },\r\n        edit: function (index) {\r\n            index--;\r\n            this.willAddQuestion = {\r\n                question_id: this.questions[index].question_id,\r\n                id: this.questions[index].id,\r\n                type: this.questions[index].type,\r\n                title: this.questions[index].title,\r\n                must: this.questions[index].must,\r\n                description: this.questions[index].description,\r\n                options: JSON.parse(JSON.stringify(this.questions[index].options)),\r\n                row: this.questions[index].row,\r\n                score: this.questions[index].score,\r\n                is_shown: this.questions[index].is_shown,\r\n                last_question: this.questions[index].last_question,\r\n                last_option: this.questions[index].last_option,\r\n                imgList: JSON.parse(JSON.stringify(this.questions[index].imgList)),\r\n                videoList: JSON.parse(JSON.stringify(this.questions[index].videoList)),\r\n            };\r\n            this.editIndex = index;\r\n            this.selectDisAble = true;\r\n            this.qsEditDialogTitle = \"编辑题目\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        isExistEmptyOption: function () {\r\n            for (let i = 0; i < this.willAddQuestion.options.length; i++) {\r\n                if (this.willAddQuestion.options[i].title === '') return true;\r\n            }\r\n            return false;\r\n        },\r\n        isExistSameOption: function () {\r\n            for (let i = 0; i < this.willAddQuestion.options.length; i++) {\r\n                for (let j = 0; j < this.willAddQuestion.options.length; j++) {\r\n                    if (i !== j && this.willAddQuestion.options[i].title === this.willAddQuestion.options[j].title) return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        dialogConfirm() {\r\n            let index = this.editIndex;\r\n            if (this.qsEditDialogTitle === \"编辑题目\") {\r\n                if (this.willAddQuestion.title === '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '标题不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能重复!'\r\n                    });\r\n                }\r\n                else {\r\n                    this.questions[index].id = this.willAddQuestion.id;\r\n                    this.questions[index].row = this.willAddQuestion.row;\r\n                    this.questions[index].must = this.willAddQuestion.must;\r\n                    this.questions[index].description = this.willAddQuestion.description;\r\n                    this.questions[index].title = this.willAddQuestion.title;\r\n                    this.questions[index].options = this.willAddQuestion.options;\r\n                    this.questions[index].score = this.willAddQuestion.score;\r\n                    this.questions[index].is_shown = this.willAddQuestion.is_shown;\r\n                    this.questions[index].last_question = this.willAddQuestion.last_question;\r\n                    this.questions[index].last_option = this.willAddQuestion.last_option;\r\n                    this.questions[index].options = JSON.parse(JSON.stringify(this.willAddQuestion.options));\r\n                    this.questions[index].imgList = JSON.parse(JSON.stringify(this.willAddQuestion.imgList));\r\n                    this.questions[index].videoList = JSON.parse(JSON.stringify(this.willAddQuestion.videoList));\r\n                    // 大纲更新\r\n                    this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                    this.qsEditDialogTitle = \"\";\r\n                    this.qsEditDialogVisible = false;\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '修改成功!'\r\n                    });\r\n                    // 重置\r\n                    this.resetWillAdd();\r\n                    this.selectDisAble = false;\r\n                }\r\n            }\r\n            else {\r\n                if (this.willAddQuestion.title === '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '标题不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能重复!'\r\n                    });\r\n                }\r\n                else {\r\n                    this.qsEditDialogVisible = false;\r\n                    this.willAddQuestion.id = this.questions.length + 1;\r\n                    // 大纲更新\r\n                    this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                    this.questions.push(this.willAddQuestion);\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '添加成功!'\r\n                    });\r\n                    // 重置\r\n                    this.resetWillAdd();\r\n                }\r\n            }\r\n        },\r\n        resetWillAdd() {\r\n            this.willAddQuestion = {\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 1,// 选项id\r\n                        hasNumLimit: false,\r\n                        supply: 1,\r\n                        consume: 0,\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 5, // 最大评分\r\n                imgList: [],\r\n                videoList: []\r\n            }\r\n        },\r\n        dialogCancel: function () {\r\n            this.qsEditDialogTitle = \"新建题目\";\r\n            this.resetWillAdd();\r\n            this.qsEditDialogVisible = false;\r\n            this.selectDisAble = false;\r\n        },\r\n        cancel_pre: function () {\r\n            this.$confirm('已编辑的题目信息将不会保存,确认关闭？', '提示', {\r\n                confirmButtonText: '确认',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                this.dialogCancel();\r\n            }).catch(() => {\r\n            });\r\n        },\r\n        LogicDialogCancel: function () {\r\n            this.qsLogicDialogVisible = false;\r\n            this.resetLogic();\r\n        },\r\n        cancel_pre_logic: function () {\r\n            this.$confirm('已编辑的题目关联逻辑将不会保存,确认关闭？', '提示', {\r\n                confirmButtonText: '确认',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                this.LogicDialogCancel();\r\n            }).catch(() => {\r\n            });\r\n        },\r\n        logicConfirm: function (index) {\r\n            console.log(this.questions);\r\n            let questions = this.questions;\r\n            let willAddLogic = this.willAddLogic;\r\n            questions[index].last_question = willAddLogic.question_id;\r\n            questions[index].last_option = willAddLogic.option_id;\r\n            questions[index].is_shown = willAddLogic.question_id === 0;\r\n            if (this.willAddLogic.question_id !== this.logicQuestionState || this.willAddLogic.option_id !== this.logicOptionState) {\r\n                this.$message({\r\n                    type: 'success',\r\n                    message: '问题关联设置成功'\r\n                });\r\n            }\r\n            this.qsLogicDialogVisible = false;\r\n            this.resetLogic();\r\n        },\r\n        logic: function (index) {\r\n            this.logicIndex = index - 1;\r\n            this.willAddLogic.question_id = this.questions[index - 1].last_question;\r\n            if (this.questions[index - 1].last_option !== 0) { this.willAddLogic.option_id = this.questions[index - 1].last_option; }\r\n            else this.willAddLogic.option_id = 1;\r\n            console.log(this.questions);\r\n            this.qsLogicDialogVisible = true;\r\n            this.logicQuestionState = this.willAddLogic.question_id;\r\n            this.logicOptionState = this.willAddLogic.option_id;\r\n        },\r\n        resetLogic() {\r\n            this.willAddLogic = {\r\n                question_id: 0,\r\n                option_id: 1,\r\n            };\r\n            this.logicIndex = 0;\r\n        },\r\n        typeChange(value) {\r\n            this.willAddQuestion.type = value;\r\n        },\r\n        addOption() {\r\n            // 问题关联检查\r\n            if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\r\n                this.$message({\r\n                    type: 'warning',\r\n                    message: '此问题已被关联，无法新增选项，请删除关联信息后再试'\r\n                });\r\n                return;\r\n            }\r\n            this.willAddQuestion.options.push({\r\n                hasNumLimit: false,\r\n                title: '', // 选项标题\r\n                id: this.willAddQuestion.options.length + 1,\r\n                supply: 1,\r\n                consume: 0,\r\n            });\r\n        },\r\n        deleteOption(index) {\r\n            if (this.willAddQuestion.options.length === 1) {\r\n                this.$message({\r\n                    type: \"error\",\r\n                    message: \"至少需要设置一个选项！\"\r\n                })\r\n            }\r\n            else {\r\n                // 问题关联检查\r\n                if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\r\n                    this.$message({\r\n                        type: 'warning',\r\n                        message: '此问题已被关联，无法删除选项，请删除关联信息后再试'\r\n                    });\r\n                    return;\r\n                }\r\n                // id重排\r\n                for (let i = index + 1; i < this.willAddQuestion.options.length; i++) {\r\n                    this.willAddQuestion.options[i].id--;\r\n                }\r\n                this.willAddQuestion.options.splice(index, 1);\r\n            }\r\n        },\r\n        changeTitle: function (value) {\r\n            this.title = value;\r\n        },\r\n        changeDescription: function (value) {\r\n            this.description = value;\r\n        },\r\n        openSetting: function () {\r\n            this.settingDialogVisible = true;\r\n        },\r\n        settingSuccess: function () {\r\n            this.settingDialogVisible = false;\r\n            this.$message({\r\n                type: 'success',\r\n                message: '设置已生效'\r\n            });\r\n        },\r\n        publish() {\r\n            if (this.questions.length === 0) {\r\n                this.$message.error(\"题目为空，无法发布！\");\r\n                return;\r\n            }\r\n\r\n            this.$confirm('确认发布？', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'success'\r\n            }).then(() => {\r\n                let loadingIns = this.$loading({ fullscreen: true, text: '拼命加载中' });\r\n                this.publishSuccess();\r\n                var new_questions = JSON.parse(JSON.stringify(this.questions));\r\n                let url = '/sm/save/qn/deploy';\r\n                const userInfo = user.getters.getUser(user.state());\r\n                var param = {\r\n                    username: userInfo.user.username,\r\n                    title: this.title,\r\n                    finished_time: this.timeFrame,\r\n                    description: this.description,\r\n                    type: this.type,\r\n                    max_recycling: this.max_recycling,\r\n                    qn_id: this.$route.query.pid,\r\n                    questions: new_questions\r\n                };\r\n                var paramer = JSON.stringify(param, { questions: 'brackets' })\r\n                this.$axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: paramer,\r\n                })\r\n                    .then(res => {\r\n                        loadingIns.close();\r\n                        if (res.data.status_code === 1) {\r\n                            this.linkShare = this.GLOBAL.baseUrl + '/fill_form?mode=1&code=' + res.data.code;\r\n\r\n                            if (this.qrcode == null) {\r\n                                this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n                                    width: 200, //生成的二维码的宽度\r\n                                    height: 200, //生成的二维码的高度\r\n                                    colorDark: \"#000000\", // 生成的二维码的深色部分\r\n                                    colorLight: \"#ffffff\", //生成二维码的浅色部分\r\n                                    correctLevel: QRCode.CorrectLevel.H\r\n                                });\r\n                            }\r\n                            this.qrcode.clear();\r\n                            this.qrcode.makeCode(this.linkShare);\r\n                        }\r\n                        else if (res.data.status_code === 2) {\r\n                            this.$message.error(\"题目为空，无法发布！\");\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            }).catch(() => {\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: '取消发布'\r\n                });\r\n            });\r\n        },\r\n        saveinfo(tag) {\r\n            this.saveQnInfo(tag, \"4\");\r\n        },\r\n        save() {\r\n            this.saveinfo('save');\r\n        },\r\n        preview() {\r\n            this.saveinfo('preview');\r\n        },\r\n        up: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            if (index !== 0) {\r\n                // 非法移动\r\n                if (questions[index].last_question === index) {\r\n                    this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n                    return;\r\n                }\r\n                // 关联维护\r\n                let arr = this.sonGroup(index);\r\n                let willSubtract = [];\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        willSubtract.push(arr[j].id - 1);\r\n                    }\r\n                }\r\n                arr = this.sonGroup(index - 1);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        questions[arr[j].id - 1].last_question++;\r\n                    }\r\n                }\r\n                for (let i = 0; i < willSubtract.length; i++) {\r\n                    questions[willSubtract[i]].last_question--;\r\n                }\r\n                // 题序维护\r\n                questions[index].id--;\r\n                questions[index - 1].id++;\r\n                let temp = questions[index];\r\n                questions[index] = questions[index - 1];\r\n                questions[index - 1] = temp;\r\n                // 大纲维护\r\n                this.updateOutline(index, questions[index - 1].title);\r\n                this.updateOutline(index + 1, questions[index].title);\r\n            }\r\n        },\r\n        down: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            if (index !== questions.length - 1) {\r\n                // 非法移动\r\n                if (questions[index + 1].last_question === index + 1) {\r\n                    this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n                    return;\r\n                }\r\n                // 关联维护\r\n                let arr = this.sonGroup(index);\r\n                let willAdd = [];\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        willAdd.push(arr[j].id - 1);\r\n                    }\r\n                }\r\n                arr = this.sonGroup(index + 1);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        questions[arr[j].id - 1].last_question--;\r\n                    }\r\n                }\r\n                for (let i = 0; i < willAdd.length; i++) {\r\n                    questions[willAdd[i]].last_question++;\r\n                }\r\n                // 题序维护\r\n                questions[index].id++;\r\n                questions[index + 1].id--;\r\n                let temp = questions[index];\r\n                questions[index] = questions[index + 1];\r\n                questions[index + 1] = temp;\r\n                // 大纲维护\r\n                this.updateOutline(index + 1, questions[index].title);\r\n                this.updateOutline(index + 2, questions[index + 1].title);\r\n            }\r\n        },\r\n        del_pre: function (index) {\r\n            // 问题关联检查\r\n            if (this.sonGroup(index - 1).length !== 0) {\r\n                this.$confirm('该问题已被关联，删除此问题会删除所有相关关联信息', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.del_relation(index);\r\n                    this.del(index)\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '问题及关联信息已成功删除'\r\n                    });\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '取消删除题目及关联'\r\n                    });\r\n                });\r\n            } else {\r\n                this.$confirm('确认删除（不可恢复）？', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.del(index)\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '删除成功'\r\n                    });\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '取消删除'\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        del: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            let outline = this.outline;\r\n            // 维护关联关系\r\n            for (let i = index + 1; i < questions.length; i++) {\r\n                let arr = this.sonGroup(i);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        if (questions[arr[j].id - 1] !== index) {\r\n                            questions[arr[j].id - 1].last_question--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // 维护题序\r\n            for (let i = index + 1; i < questions.length; i++) {\r\n                questions[i].id--;\r\n            }\r\n            outline.splice(index, 1);\r\n            questions.splice(index, 1);\r\n            // 维护大纲\r\n            for (let num = index; num < outline.length; num++) {\r\n                this.updateOutline(num + 1, questions[num].title);\r\n            }\r\n        },\r\n        copy: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            // 大纲更新\r\n            this.updateOutline(this.outline.length + 1, questions[index].title);\r\n            // 问卷更新\r\n            let temp = this.deepClone(questions[index]);\r\n            temp.id = questions.length + 1;\r\n            temp.question_id = 0;\r\n            questions.push(temp);\r\n            this.$message.success(\"问题复制成功，已粘贴至问卷末尾\");\r\n        },\r\n        deepClone: function (initialObj) {\r\n            let obj = {};\r\n            try {\r\n                obj = JSON.parse(JSON.stringify(initialObj));\r\n                // eslint-disable-next-line no-empty\r\n            } finally { }\r\n            return obj;\r\n        },    // 深拷贝\r\n        updateOutline: function (id, label) {\r\n            if (label.length > 12) {\r\n                label = id + '. ' + label.substring(0, 11) + '...';\r\n            } else {\r\n                label = id + '. ' + label;\r\n            }\r\n            if (id <= this.questions.length) {\r\n                this.outline[id - 1].id = id;\r\n                this.outline[id - 1].label = label;\r\n            } else {\r\n                this.outline.push({\r\n                    id: id,\r\n                    label: label,\r\n                })\r\n            }\r\n        },\r\n        updateQuestions: function (start, end) {\r\n            let offset = end - start;\r\n            if (offset > 0) {\r\n                for (let i = 0; i < offset; i++) {\r\n                    this.down(start + i);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < offset * -1; i++) {\r\n                    this.up(start - i);\r\n                }\r\n            }\r\n        },  // good\r\n        toFillQn: function (value) {\r\n            this.$router.push({\r\n                name: 'FillQn',\r\n                query: {\r\n                    mode: value,\r\n                    title: this.title,\r\n                }\r\n            });\r\n        },\r\n        InitOutline() {\r\n            for (var i = 0; i < this.questions.length; i++) {\r\n                this.outline.push({\r\n                    id: this.questions[i].id,\r\n                    label: (i + 1) + \". \" + this.questions[i].title\r\n                })\r\n            }\r\n        },\r\n        copyToClip(message) {\r\n            var aux = document.createElement(\"input\");\r\n            aux.setAttribute(\"value\", this.linkShare);\r\n            document.body.appendChild(aux);\r\n            aux.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(aux);\r\n            if (message !== null) {\r\n                this.$message.success(\"复制成功\");\r\n            } else {\r\n                this.$message.error(\"复制失败\");\r\n            }\r\n        },\r\n        // 大纲拖拽处理函数(下3个)\r\n        handleDrop(draggingNode, dropNode, dropType) {\r\n            console.log('tree drop: ', draggingNode.key, dropNode.key, dropType);\r\n            if (this.isRightRelation(draggingNode.key, dropNode.key)) {\r\n                this.updateQuestions(draggingNode.key, dropNode.key);\r\n            } else {\r\n                this.outline.splice(0, this.outline.length);\r\n                this.InitOutline();\r\n                this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n            }\r\n        },\r\n        allowDrop(draggingNode, dropNode, type) {\r\n            if (draggingNode.key > dropNode.key) {\r\n                return type === 'prev';\r\n            } else {\r\n                return type === 'next';\r\n            }\r\n        },\r\n        isRightRelation: function (index1, index2) {\r\n            console.log(index1, index2);\r\n            index1--;\r\n            index2--;\r\n            let questions = this.questions;\r\n            if (index1 < index2) {\r\n                for (let i = index1 + 1; i <= index2; i++) {\r\n                    if (questions[i].last_question === index1 + 1) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            } else {\r\n                for (let i = index1 - 1; i >= index2; i--) {\r\n                    if (questions[index1].last_question === i + 1) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        },\r\n        idTitle: function (item) {\r\n            if (item.id === 0) {\r\n                return item.title;\r\n            } else {\r\n                return item.id + \". \" + item.title;\r\n            }\r\n        },\r\n        relatedQs: function (item) {\r\n            return \"关联问题：\" + this.questions[item.last_question - 1].id + \".\" + this.questions[item.last_question - 1].title + \"(\" + this.questions[item.last_question - 1].options[item.last_option - 1].title + \")\";\r\n        },\r\n        // 遍历得爸爸\r\n        fatherIndex: function (qs_id) {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].question_id === qs_id) {\r\n                    return i;\r\n                }\r\n            }\r\n        },\r\n        // 遍历得儿子\r\n        sonGroup: function (index) {\r\n            let arr = [];\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].last_question === this.questions[index].id) {\r\n                    arr.push(this.questions[i]);\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n        // 连带删除关联信息\r\n        del_relation: function (index) {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                // 保存加入后,下面需修改id为question_id\r\n                if (this.questions[i].last_question === this.questions[index - 1].id) {\r\n                    this.questions[i].last_option = 0;\r\n                    this.questions[i].last_question = 0;\r\n                    this.questions[i].is_shown = true;\r\n                }\r\n            }\r\n        },\r\n        // 关联信息存在性判断\r\n        isExistRelation: function () {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].last_question !== 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        // 监听：全局删除关联信息\r\n        closeGlobalLogic: function (state) {\r\n            if (!state && this.isExistRelation()) {\r\n                this.$confirm('检测到您已为题目添加关联，关闭设置将会删除所有关联信息，是否继续？', '提示', {\r\n                    confirmButtonText: '确认',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.deleteGlobalRelation();\r\n                    this.$message.info(\"关联信息已全部删除\");\r\n                }).catch(() => {\r\n                    this.isLogic = true;\r\n                    this.$message.info(\"取消操作\");\r\n                });\r\n            }\r\n        },\r\n        // 删除全局关联信息\r\n        deleteGlobalRelation: function () {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                this.questions[i].last_question = 0;\r\n                this.questions[i].last_option = 0;\r\n                this.questions[i].is_shown = true;\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n        questionsFilter: function () {\r\n            let questions = this.questions;\r\n            let arr = [{\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '不设置关联题目',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 0 // 选项id\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 5, // 最大评分\r\n            }];\r\n            for (let i = 0; i < this.logicIndex; i++) {\r\n                if (questions[i].type === \"radio\" || questions[i].type === \"checkbox\") {\r\n                    arr.push(questions[i]);\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n    },\r\n    created() {\r\n        //this.getQnDataSelf();\r\n    },\r\n    mounted() {\r\n        //this.timer = setInterval(this.autoSave, 60000);\r\n    },\r\n    beforeUnmount() {\r\n        //clearInterval(this.timer);\r\n    },\r\n    watch: {\r\n        //hasRecycleLimit:\"recycleLimit\",\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.form{\r\n    position: relative;\r\n}\r\n\r\n.qnBoard {\r\n    display: flex;\r\n    position: relative;\r\n    width: 190px;\r\n    max-height: 1000px;\r\n    left: 20px;\r\n    top: 80px;\r\n    background-color: white;\r\n}\r\n\r\n.qnMain {\r\n    display: flex;\r\n    position: absolute;\r\n    left: 50%;\r\n    width: 1300px;\r\n    height: 700px;\r\n    top: 80px;\r\n    background: #FFFFFF;\r\n}\r\n\r\n.qnBoard .demo-tabs>.el-tabs__content {\r\n    padding: px;\r\n    color: #4fef0f;\r\n    font-size: 32px;\r\n    font-weight: 600;\r\n}\r\n\r\n.qnBoard .demo-tabs .custom-tabs-label {\r\n    font-size: 20px;\r\n}\r\n\r\n.form .linkDialog {\r\n  text-align: left;\r\n}\r\n\r\n.form .edit {\r\n  margin-top: 0;\r\n  overflow: auto;\r\n  height: 550px;\r\n}\r\n\r\n.form .outline {\r\n  overflow: auto;\r\n  height: 550px;\r\n}\r\n\r\n.form .ques-type {\r\n  padding: 15px 0;\r\n  font-size: 16px;\r\n  border-bottom: dashed #e3e3e3 1px;\r\n}\r\n\r\n.form .type-icon {\r\n  color: #1687fd;\r\n  display: inline-block;\r\n}\r\n\r\n.form .type-icon:hover {\r\n  color: #409EFF;\r\n  cursor: pointer;\r\n}\r\n\r\n.form .el-tabs__nav-scroll {\r\n  text-align: center;\r\n  height: 60px;\r\n  margin: 0 60px;\r\n}\r\n\r\n.form .el-tabs__item {\r\n  font-weight: bold;\r\n  padding: 0 20px;\r\n  height: 60px;\r\n  box-sizing: border-box;\r\n  line-height: 60px;\r\n  display: inline-block;\r\n  list-style: none;\r\n  font-size: 16px;\r\n  color: black;\r\n  position: relative;\r\n}\r\n\r\n.form .el-tabs__header {\r\n  margin: 0;\r\n}\r\n\r\n.form .el-tree-node__content {\r\n  padding-left: 10px !important;\r\n  height: 40px;\r\n}\r\n\r\n.form .qnMain .ques .title {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  padding-top: 10px;\r\n  padding-bottom: 26px;\r\n}\r\n\r\n.form .qnMain .ques .description {\r\n  text-align: left;\r\n  font-size: 18px;\r\n  padding-bottom: 30px;\r\n  color: black;\r\n  line-height: 30px;\r\n}\r\n\r\n.form .qnMain .ques-block {\r\n  padding-bottom: 15px;\r\n  border-top: solid #e3e3e3 1px;\r\n}\r\n\r\n.form .qnMain .ques-block:hover {\r\n  background: #f5f5f5;\r\n  transition: .3s;\r\n}\r\n\r\n.form .qnMain .ques-block .must {\r\n  font-weight: normal;\r\n  color: crimson;\r\n}\r\n\r\n.form .qnMain .block-title {\r\n  text-align: left;\r\n  /*border: solid 1px black;*/\r\n  font-size: 16px;\r\n  padding: 20px 10px 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n.form .qnMain .block-description {\r\n  text-align: left;\r\n  /*border: solid 1px black;*/\r\n  font-size: 14px;\r\n  padding-top: 5px;\r\n  padding-bottom: 15px;\r\n  padding-left: 10px;\r\n  color: #969696;\r\n}\r\n\r\n.form .qnMain .block-choice {\r\n  text-align: left;\r\n  /*border: solid 1px black;*/\r\n  font-size: 16px;\r\n  padding: 5px 10px 10px;\r\n}\r\n\r\n.form .el-button-group>.el-button:first-child {\r\n  border-radius: 0 0 0 8px;\r\n}\r\n\r\n.form .el-button-group>.el-button:last-child {\r\n  border-radius: 0 0 8px 0;\r\n}\r\n\r\n.form .block-button .el-button {\r\n  background: #b9b9b9;\r\n  border: transparent;\r\n}\r\n\r\n.form .block-button .el-button:hover {\r\n  background: #989898;\r\n  border: transparent;\r\n}\r\n\r\n.form .bt {\r\n  color: white;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.form .block-choice .el-textarea__inner {\r\n  max-height: 100px;\r\n}\r\n\r\n.form .dialog {\r\n  text-align: left;\r\n  font-size: large;\r\n}\r\n\r\n.form .addOptionButton {\r\n  display: inline-block;\r\n  margin-left: 100px;\r\n}\r\n\r\n.form .deleteOptionButton {\r\n  margin-left: 20px;\r\n}\r\n\r\n.form .logic-description {\r\n  margin-top: -15px;\r\n  margin-bottom: 30px;\r\n  text-align: left;\r\n  padding-left: 6px;\r\n  font-size: 14px;\r\n  color: #aaaaaa;\r\n}\r\n\r\n.form .important {\r\n  color: crimson;\r\n}\r\n\r\n.form .logic-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  padding-left: 12px;\r\n  padding-bottom: 30px;\r\n}\r\n\r\n.form .logic-bt {\r\n  text-align: center;\r\n}\r\n\r\n.form .logic-form .el-input--suffix .el-input__inner {\r\n  width: 620px;\r\n}\r\n\r\n.form .sideTitle {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin: 10px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.form .easyChoose {\r\n  font-size: medium;\r\n  margin-top: 10px;\r\n}\r\n\r\n.form .chooseLabel {\r\n  margin-right: 10px;\r\n  margin-left: 5px;\r\n}\r\n\r\n.form .setting-item {\r\n  text-align: left;\r\n}\r\n\r\n.form .setting-bt {\r\n  margin-top: 28px;\r\n}\r\n\r\n.form .settingDialog .el-dialog__header {\r\n  text-align: left;\r\n}\r\n\r\n.form .settingDialog .item-title {\r\n  padding-right: 20px;\r\n}\r\n\r\n.form .logic-info {\r\n  color: #aaaaaa;\r\n  padding-top: 2px;\r\n  padding-left: 12px;\r\n  padding-bottom: 25px;\r\n}\r\n\r\n.form .block-relation {\r\n  text-align: right;\r\n  /*border: solid 1px black;*/\r\n  font-size: 14px;\r\n  padding-top: 8px;\r\n  padding-left: 10px;\r\n  color: #1687fd;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}