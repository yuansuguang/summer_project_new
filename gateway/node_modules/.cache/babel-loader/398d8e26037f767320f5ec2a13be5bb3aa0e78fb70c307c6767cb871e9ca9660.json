{"ast":null,"code":"import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport halton from './halton';\nimport cubemapUtil from 'claygl/src/util/cubemap';\nimport SSRGLSLCode from './SSR.glsl.js';\nShader.import(SSRGLSLCode);\nfunction SSRPass(opt) {\n  opt = opt || {};\n  this._ssrPass = new Pass({\n    fragment: Shader.source('ecgl.ssr.main'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blurPass1 = new Pass({\n    fragment: Shader.source('ecgl.ssr.blur'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blurPass2 = new Pass({\n    fragment: Shader.source('ecgl.ssr.blur'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blendPass = new Pass({\n    fragment: Shader.source('clay.compositor.blend')\n  });\n  this._blendPass.material.disableTexturesAll();\n  this._blendPass.material.enableTexture(['texture1', 'texture2']);\n  this._ssrPass.setUniform('gBufferTexture1', opt.normalTexture);\n  this._ssrPass.setUniform('gBufferTexture2', opt.depthTexture); // this._ssrPass.setUniform('gBufferTexture3', opt.albedoTexture);\n\n  this._blurPass1.setUniform('gBufferTexture1', opt.normalTexture);\n  this._blurPass1.setUniform('gBufferTexture2', opt.depthTexture);\n  this._blurPass2.setUniform('gBufferTexture1', opt.normalTexture);\n  this._blurPass2.setUniform('gBufferTexture2', opt.depthTexture);\n  this._blurPass2.material.define('fragment', 'VERTICAL');\n  this._blurPass2.material.define('fragment', 'BLEND');\n  this._ssrTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._texture2 = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._texture3 = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._prevTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._currentTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._frameBuffer = new FrameBuffer({\n    depthBuffer: false\n  });\n  this._normalDistribution = null;\n  this._totalSamples = 256;\n  this._samplePerFrame = 4;\n  this._ssrPass.material.define('fragment', 'SAMPLE_PER_FRAME', this._samplePerFrame);\n  this._ssrPass.material.define('fragment', 'TOTAL_SAMPLES', this._totalSamples);\n  this._downScale = 1;\n}\nSSRPass.prototype.setAmbientCubemap = function (specularCubemap, specularIntensity) {\n  this._ssrPass.material.set('specularCubemap', specularCubemap);\n  this._ssrPass.material.set('specularIntensity', specularIntensity);\n  var enableSpecularMap = specularCubemap && specularIntensity;\n  this._ssrPass.material[enableSpecularMap ? 'enableTexture' : 'disableTexture']('specularCubemap');\n};\nSSRPass.prototype.update = function (renderer, camera, sourceTexture, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var ssrTexture = this._ssrTexture;\n  var texture2 = this._texture2;\n  var texture3 = this._texture3;\n  ssrTexture.width = this._prevTexture.width = this._currentTexture.width = width / this._downScale;\n  ssrTexture.height = this._prevTexture.height = this._currentTexture.height = height / this._downScale;\n  texture2.width = texture3.width = width;\n  texture2.height = texture3.height = height;\n  var frameBuffer = this._frameBuffer;\n  var ssrPass = this._ssrPass;\n  var blurPass1 = this._blurPass1;\n  var blurPass2 = this._blurPass2;\n  var blendPass = this._blendPass;\n  var toViewSpace = new Matrix4();\n  var toWorldSpace = new Matrix4();\n  Matrix4.transpose(toViewSpace, camera.worldTransform);\n  Matrix4.transpose(toWorldSpace, camera.viewMatrix);\n  ssrPass.setUniform('sourceTexture', sourceTexture);\n  ssrPass.setUniform('projection', camera.projectionMatrix.array);\n  ssrPass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n  ssrPass.setUniform('toViewSpace', toViewSpace.array);\n  ssrPass.setUniform('toWorldSpace', toWorldSpace.array);\n  ssrPass.setUniform('nearZ', camera.near);\n  var percent = frame / this._totalSamples * this._samplePerFrame;\n  ssrPass.setUniform('jitterOffset', percent);\n  ssrPass.setUniform('sampleOffset', frame * this._samplePerFrame);\n  blurPass1.setUniform('textureSize', [ssrTexture.width, ssrTexture.height]);\n  blurPass2.setUniform('textureSize', [width, height]);\n  blurPass2.setUniform('sourceTexture', sourceTexture);\n  blurPass1.setUniform('projection', camera.projectionMatrix.array);\n  blurPass2.setUniform('projection', camera.projectionMatrix.array);\n  frameBuffer.attach(ssrTexture);\n  frameBuffer.bind(renderer);\n  ssrPass.render(renderer);\n  if (this._physicallyCorrect) {\n    frameBuffer.attach(this._currentTexture);\n    blendPass.setUniform('texture1', this._prevTexture);\n    blendPass.setUniform('texture2', ssrTexture);\n    blendPass.material.set({\n      'weight1': frame >= 1 ? 0.95 : 0,\n      'weight2': frame >= 1 ? 0.05 : 1 // weight1: frame >= 1 ? 1 : 0,\n      // weight2: 1\n    });\n    blendPass.render(renderer);\n  }\n  frameBuffer.attach(texture2);\n  blurPass1.setUniform('texture', this._physicallyCorrect ? this._currentTexture : ssrTexture);\n  blurPass1.render(renderer);\n  frameBuffer.attach(texture3);\n  blurPass2.setUniform('texture', texture2);\n  blurPass2.render(renderer);\n  frameBuffer.unbind(renderer);\n  if (this._physicallyCorrect) {\n    var tmp = this._prevTexture;\n    this._prevTexture = this._currentTexture;\n    this._currentTexture = tmp;\n  }\n};\nSSRPass.prototype.getTargetTexture = function () {\n  return this._texture3;\n};\nSSRPass.prototype.setParameter = function (name, val) {\n  if (name === 'maxIteration') {\n    this._ssrPass.material.define('fragment', 'MAX_ITERATION', val);\n  } else {\n    this._ssrPass.setUniform(name, val);\n  }\n};\nSSRPass.prototype.setPhysicallyCorrect = function (isPhysicallyCorrect) {\n  if (isPhysicallyCorrect) {\n    if (!this._normalDistribution) {\n      this._normalDistribution = cubemapUtil.generateNormalDistribution(64, this._totalSamples);\n    }\n    this._ssrPass.material.define('fragment', 'PHYSICALLY_CORRECT');\n    this._ssrPass.material.set('normalDistribution', this._normalDistribution);\n    this._ssrPass.material.set('normalDistributionSize', [64, this._totalSamples]);\n  } else {\n    this._ssrPass.material.undefine('fragment', 'PHYSICALLY_CORRECT');\n  }\n  this._physicallyCorrect = isPhysicallyCorrect;\n};\nSSRPass.prototype.setSSAOTexture = function (texture) {\n  var blendPass = this._blurPass2;\n  if (texture) {\n    blendPass.material.enableTexture('ssaoTex');\n    blendPass.material.set('ssaoTex', texture);\n  } else {\n    blendPass.material.disableTexture('ssaoTex');\n  }\n};\nSSRPass.prototype.isFinished = function (frame) {\n  if (this._physicallyCorrect) {\n    return frame > this._totalSamples / this._samplePerFrame;\n  } else {\n    return true;\n  }\n};\nSSRPass.prototype.dispose = function (renderer) {\n  this._ssrTexture.dispose(renderer);\n  this._texture2.dispose(renderer);\n  this._texture3.dispose(renderer);\n  this._prevTexture.dispose(renderer);\n  this._currentTexture.dispose(renderer);\n  this._frameBuffer.dispose(renderer);\n};\nexport default SSRPass;","map":{"version":3,"names":["Matrix4","Vector3","Texture2D","Texture","Pass","Shader","FrameBuffer","halton","cubemapUtil","SSRGLSLCode","import","SSRPass","opt","_ssrPass","fragment","source","clearColor","_blurPass1","_blurPass2","_blendPass","material","disableTexturesAll","enableTexture","setUniform","normalTexture","depthTexture","define","_ssrTexture","type","HALF_FLOAT","_texture2","_texture3","_prevTexture","_currentTexture","_frameBuffer","depthBuffer","_normalDistribution","_totalSamples","_samplePerFrame","_downScale","prototype","setAmbientCubemap","specularCubemap","specularIntensity","set","enableSpecularMap","update","renderer","camera","sourceTexture","frame","width","getWidth","height","getHeight","ssrTexture","texture2","texture3","frameBuffer","ssrPass","blurPass1","blurPass2","blendPass","toViewSpace","toWorldSpace","transpose","worldTransform","viewMatrix","projectionMatrix","array","invProjectionMatrix","near","percent","attach","bind","render","_physicallyCorrect","unbind","tmp","getTargetTexture","setParameter","name","val","setPhysicallyCorrect","isPhysicallyCorrect","generateNormalDistribution","undefine","setSSAOTexture","texture","disableTexture","isFinished","dispose"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/effect/SSRPass.js"],"sourcesContent":["import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport halton from './halton';\nimport cubemapUtil from 'claygl/src/util/cubemap';\nimport SSRGLSLCode from './SSR.glsl.js';\nShader.import(SSRGLSLCode);\n\nfunction SSRPass(opt) {\n  opt = opt || {};\n  this._ssrPass = new Pass({\n    fragment: Shader.source('ecgl.ssr.main'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blurPass1 = new Pass({\n    fragment: Shader.source('ecgl.ssr.blur'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blurPass2 = new Pass({\n    fragment: Shader.source('ecgl.ssr.blur'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blendPass = new Pass({\n    fragment: Shader.source('clay.compositor.blend')\n  });\n\n  this._blendPass.material.disableTexturesAll();\n\n  this._blendPass.material.enableTexture(['texture1', 'texture2']);\n\n  this._ssrPass.setUniform('gBufferTexture1', opt.normalTexture);\n\n  this._ssrPass.setUniform('gBufferTexture2', opt.depthTexture); // this._ssrPass.setUniform('gBufferTexture3', opt.albedoTexture);\n\n\n  this._blurPass1.setUniform('gBufferTexture1', opt.normalTexture);\n\n  this._blurPass1.setUniform('gBufferTexture2', opt.depthTexture);\n\n  this._blurPass2.setUniform('gBufferTexture1', opt.normalTexture);\n\n  this._blurPass2.setUniform('gBufferTexture2', opt.depthTexture);\n\n  this._blurPass2.material.define('fragment', 'VERTICAL');\n\n  this._blurPass2.material.define('fragment', 'BLEND');\n\n  this._ssrTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._texture2 = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._texture3 = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._prevTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._currentTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._frameBuffer = new FrameBuffer({\n    depthBuffer: false\n  });\n  this._normalDistribution = null;\n  this._totalSamples = 256;\n  this._samplePerFrame = 4;\n\n  this._ssrPass.material.define('fragment', 'SAMPLE_PER_FRAME', this._samplePerFrame);\n\n  this._ssrPass.material.define('fragment', 'TOTAL_SAMPLES', this._totalSamples);\n\n  this._downScale = 1;\n}\n\nSSRPass.prototype.setAmbientCubemap = function (specularCubemap, specularIntensity) {\n  this._ssrPass.material.set('specularCubemap', specularCubemap);\n\n  this._ssrPass.material.set('specularIntensity', specularIntensity);\n\n  var enableSpecularMap = specularCubemap && specularIntensity;\n\n  this._ssrPass.material[enableSpecularMap ? 'enableTexture' : 'disableTexture']('specularCubemap');\n};\n\nSSRPass.prototype.update = function (renderer, camera, sourceTexture, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var ssrTexture = this._ssrTexture;\n  var texture2 = this._texture2;\n  var texture3 = this._texture3;\n  ssrTexture.width = this._prevTexture.width = this._currentTexture.width = width / this._downScale;\n  ssrTexture.height = this._prevTexture.height = this._currentTexture.height = height / this._downScale;\n  texture2.width = texture3.width = width;\n  texture2.height = texture3.height = height;\n  var frameBuffer = this._frameBuffer;\n  var ssrPass = this._ssrPass;\n  var blurPass1 = this._blurPass1;\n  var blurPass2 = this._blurPass2;\n  var blendPass = this._blendPass;\n  var toViewSpace = new Matrix4();\n  var toWorldSpace = new Matrix4();\n  Matrix4.transpose(toViewSpace, camera.worldTransform);\n  Matrix4.transpose(toWorldSpace, camera.viewMatrix);\n  ssrPass.setUniform('sourceTexture', sourceTexture);\n  ssrPass.setUniform('projection', camera.projectionMatrix.array);\n  ssrPass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n  ssrPass.setUniform('toViewSpace', toViewSpace.array);\n  ssrPass.setUniform('toWorldSpace', toWorldSpace.array);\n  ssrPass.setUniform('nearZ', camera.near);\n  var percent = frame / this._totalSamples * this._samplePerFrame;\n  ssrPass.setUniform('jitterOffset', percent);\n  ssrPass.setUniform('sampleOffset', frame * this._samplePerFrame);\n  blurPass1.setUniform('textureSize', [ssrTexture.width, ssrTexture.height]);\n  blurPass2.setUniform('textureSize', [width, height]);\n  blurPass2.setUniform('sourceTexture', sourceTexture);\n  blurPass1.setUniform('projection', camera.projectionMatrix.array);\n  blurPass2.setUniform('projection', camera.projectionMatrix.array);\n  frameBuffer.attach(ssrTexture);\n  frameBuffer.bind(renderer);\n  ssrPass.render(renderer);\n\n  if (this._physicallyCorrect) {\n    frameBuffer.attach(this._currentTexture);\n    blendPass.setUniform('texture1', this._prevTexture);\n    blendPass.setUniform('texture2', ssrTexture);\n    blendPass.material.set({\n      'weight1': frame >= 1 ? 0.95 : 0,\n      'weight2': frame >= 1 ? 0.05 : 1 // weight1: frame >= 1 ? 1 : 0,\n      // weight2: 1\n\n    });\n    blendPass.render(renderer);\n  }\n\n  frameBuffer.attach(texture2);\n  blurPass1.setUniform('texture', this._physicallyCorrect ? this._currentTexture : ssrTexture);\n  blurPass1.render(renderer);\n  frameBuffer.attach(texture3);\n  blurPass2.setUniform('texture', texture2);\n  blurPass2.render(renderer);\n  frameBuffer.unbind(renderer);\n\n  if (this._physicallyCorrect) {\n    var tmp = this._prevTexture;\n    this._prevTexture = this._currentTexture;\n    this._currentTexture = tmp;\n  }\n};\n\nSSRPass.prototype.getTargetTexture = function () {\n  return this._texture3;\n};\n\nSSRPass.prototype.setParameter = function (name, val) {\n  if (name === 'maxIteration') {\n    this._ssrPass.material.define('fragment', 'MAX_ITERATION', val);\n  } else {\n    this._ssrPass.setUniform(name, val);\n  }\n};\n\nSSRPass.prototype.setPhysicallyCorrect = function (isPhysicallyCorrect) {\n  if (isPhysicallyCorrect) {\n    if (!this._normalDistribution) {\n      this._normalDistribution = cubemapUtil.generateNormalDistribution(64, this._totalSamples);\n    }\n\n    this._ssrPass.material.define('fragment', 'PHYSICALLY_CORRECT');\n\n    this._ssrPass.material.set('normalDistribution', this._normalDistribution);\n\n    this._ssrPass.material.set('normalDistributionSize', [64, this._totalSamples]);\n  } else {\n    this._ssrPass.material.undefine('fragment', 'PHYSICALLY_CORRECT');\n  }\n\n  this._physicallyCorrect = isPhysicallyCorrect;\n};\n\nSSRPass.prototype.setSSAOTexture = function (texture) {\n  var blendPass = this._blurPass2;\n\n  if (texture) {\n    blendPass.material.enableTexture('ssaoTex');\n    blendPass.material.set('ssaoTex', texture);\n  } else {\n    blendPass.material.disableTexture('ssaoTex');\n  }\n};\n\nSSRPass.prototype.isFinished = function (frame) {\n  if (this._physicallyCorrect) {\n    return frame > this._totalSamples / this._samplePerFrame;\n  } else {\n    return true;\n  }\n};\n\nSSRPass.prototype.dispose = function (renderer) {\n  this._ssrTexture.dispose(renderer);\n\n  this._texture2.dispose(renderer);\n\n  this._texture3.dispose(renderer);\n\n  this._prevTexture.dispose(renderer);\n\n  this._currentTexture.dispose(renderer);\n\n  this._frameBuffer.dispose(renderer);\n};\n\nexport default SSRPass;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}