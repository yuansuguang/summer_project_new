{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport Globe from './globe/Globe';\nimport * as echarts from 'echarts/lib/echarts';\nimport { getLayoutRect } from 'echarts/lib/util/layout';\nimport ViewGL from '../core/ViewGL';\nimport retrieve from '../util/retrieve';\nimport graphicGL from '../util/graphicGL';\nfunction getDisplacementData(img, displacementScale) {\n  var canvas = document.createElement('canvas');\n  var ctx = canvas.getContext('2d');\n  var width = img.width;\n  var height = img.height;\n  canvas.width = width;\n  canvas.height = height;\n  ctx.drawImage(img, 0, 0, width, height);\n  var rgbaArr = ctx.getImageData(0, 0, width, height).data;\n  var displacementArr = new Float32Array(rgbaArr.length / 4);\n  for (var i = 0; i < rgbaArr.length / 4; i++) {\n    var x = rgbaArr[i * 4];\n    displacementArr[i] = x / 255 * displacementScale;\n  }\n  return {\n    data: displacementArr,\n    width: width,\n    height: height\n  };\n}\nfunction resizeGlobe(globeModel, api) {\n  // Use left/top/width/height\n  var boxLayoutOption = globeModel.getBoxLayoutParams();\n  var viewport = getLayoutRect(boxLayoutOption, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }); // Flip Y\n\n  viewport.y = api.getHeight() - viewport.y - viewport.height;\n  this.viewGL.setViewport(viewport.x, viewport.y, viewport.width, viewport.height, api.getDevicePixelRatio());\n  this.radius = globeModel.get('globeRadius');\n  var outerRadius = globeModel.get('globeOuterRadius');\n  if (this.altitudeAxis) {\n    this.altitudeAxis.setExtent(0, outerRadius - this.radius);\n  }\n}\nfunction updateGlobe(ecModel, api) {\n  var altitudeDataExtent = [Infinity, -Infinity];\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem !== this) {\n      return;\n    } // Get altitude data extent.\n\n    var data = seriesModel.getData();\n    var altDims = seriesModel.coordDimToDataDim('alt');\n    var altDim = altDims && altDims[0];\n    if (altDim) {\n      // TODO altitiude is in coords of lines.\n      var dataExtent = data.getDataExtent(altDim, true);\n      altitudeDataExtent[0] = Math.min(altitudeDataExtent[0], dataExtent[0]);\n      altitudeDataExtent[1] = Math.max(altitudeDataExtent[1], dataExtent[1]);\n    }\n  }, this); // Create altitude axis\n\n  if (altitudeDataExtent && isFinite(altitudeDataExtent[1] - altitudeDataExtent[0])) {\n    var scale = echarts.helper.createScale(altitudeDataExtent, {\n      type: 'value',\n      // PENDING\n      min: 'dataMin',\n      max: 'dataMax'\n    });\n    this.altitudeAxis = new echarts.Axis('altitude', scale); // Resize again\n\n    this.resize(this.model, api);\n  }\n}\nvar globeCreator = {\n  dimensions: Globe.prototype.dimensions,\n  create: function (ecModel, api) {\n    var globeList = [];\n    ecModel.eachComponent('globe', function (globeModel) {\n      // FIXME\n      globeModel.__viewGL = globeModel.__viewGL || new ViewGL();\n      var globe = new Globe();\n      globe.viewGL = globeModel.__viewGL;\n      globeModel.coordinateSystem = globe;\n      globe.model = globeModel;\n      globeList.push(globe); // Inject resize\n\n      globe.resize = resizeGlobe;\n      globe.resize(globeModel, api);\n      globe.update = updateGlobe;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'globe') {\n        var globeModel = seriesModel.getReferringComponents('globe').models[0];\n        if (!globeModel) {\n          globeModel = ecModel.getComponent('globe');\n        }\n        if (!globeModel) {\n          throw new Error('globe \"' + retrieve.firstNotNull(seriesModel.get('globe3DIndex'), seriesModel.get('globe3DId'), 0) + '\" not found');\n        }\n        var coordSys = globeModel.coordinateSystem;\n        seriesModel.coordinateSystem = coordSys;\n      }\n    });\n    ecModel.eachComponent('globe', function (globeModel, idx) {\n      var globe = globeModel.coordinateSystem; // Update displacement data\n\n      var displacementTextureValue = globeModel.getDisplacementTexture();\n      var displacementScale = globeModel.getDisplacemenScale();\n      if (globeModel.isDisplacementChanged()) {\n        if (globeModel.hasDisplacement()) {\n          var immediateLoaded = true;\n          graphicGL.loadTexture(displacementTextureValue, api, function (texture) {\n            var img = texture.image;\n            var displacementData = getDisplacementData(img, displacementScale);\n            globeModel.setDisplacementData(displacementData.data, displacementData.width, displacementData.height);\n            if (!immediateLoaded) {\n              // Update layouts\n              api.dispatchAction({\n                type: 'globeUpdateDisplacment'\n              });\n            }\n          });\n          immediateLoaded = false;\n        } else {\n          globe.setDisplacementData(null, 0, 0);\n        }\n        globe.setDisplacementData(globeModel.displacementData, globeModel.displacementWidth, globeModel.displacementHeight);\n      }\n    });\n    return globeList;\n  }\n};\nexport default globeCreator;","map":{"version":3,"names":["Globe","echarts","getLayoutRect","ViewGL","retrieve","graphicGL","getDisplacementData","img","displacementScale","canvas","document","createElement","ctx","getContext","width","height","drawImage","rgbaArr","getImageData","data","displacementArr","Float32Array","length","i","x","resizeGlobe","globeModel","api","boxLayoutOption","getBoxLayoutParams","viewport","getWidth","getHeight","y","viewGL","setViewport","getDevicePixelRatio","radius","get","outerRadius","altitudeAxis","setExtent","updateGlobe","ecModel","altitudeDataExtent","Infinity","eachSeries","seriesModel","coordinateSystem","getData","altDims","coordDimToDataDim","altDim","dataExtent","getDataExtent","Math","min","max","isFinite","scale","helper","createScale","type","Axis","resize","model","globeCreator","dimensions","prototype","create","globeList","eachComponent","__viewGL","globe","push","update","getReferringComponents","models","getComponent","Error","firstNotNull","coordSys","idx","displacementTextureValue","getDisplacementTexture","getDisplacemenScale","isDisplacementChanged","hasDisplacement","immediateLoaded","loadTexture","texture","image","displacementData","setDisplacementData","dispatchAction","displacementWidth","displacementHeight"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/coord/globeCreator.js"],"sourcesContent":["import Globe from './globe/Globe';\nimport * as echarts from 'echarts/lib/echarts';\nimport { getLayoutRect } from 'echarts/lib/util/layout';\nimport ViewGL from '../core/ViewGL';\nimport retrieve from '../util/retrieve';\nimport graphicGL from '../util/graphicGL';\n\nfunction getDisplacementData(img, displacementScale) {\n  var canvas = document.createElement('canvas');\n  var ctx = canvas.getContext('2d');\n  var width = img.width;\n  var height = img.height;\n  canvas.width = width;\n  canvas.height = height;\n  ctx.drawImage(img, 0, 0, width, height);\n  var rgbaArr = ctx.getImageData(0, 0, width, height).data;\n  var displacementArr = new Float32Array(rgbaArr.length / 4);\n\n  for (var i = 0; i < rgbaArr.length / 4; i++) {\n    var x = rgbaArr[i * 4];\n    displacementArr[i] = x / 255 * displacementScale;\n  }\n\n  return {\n    data: displacementArr,\n    width: width,\n    height: height\n  };\n}\n\nfunction resizeGlobe(globeModel, api) {\n  // Use left/top/width/height\n  var boxLayoutOption = globeModel.getBoxLayoutParams();\n  var viewport = getLayoutRect(boxLayoutOption, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }); // Flip Y\n\n  viewport.y = api.getHeight() - viewport.y - viewport.height;\n  this.viewGL.setViewport(viewport.x, viewport.y, viewport.width, viewport.height, api.getDevicePixelRatio());\n  this.radius = globeModel.get('globeRadius');\n  var outerRadius = globeModel.get('globeOuterRadius');\n\n  if (this.altitudeAxis) {\n    this.altitudeAxis.setExtent(0, outerRadius - this.radius);\n  }\n}\n\nfunction updateGlobe(ecModel, api) {\n  var altitudeDataExtent = [Infinity, -Infinity];\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem !== this) {\n      return;\n    } // Get altitude data extent.\n\n\n    var data = seriesModel.getData();\n    var altDims = seriesModel.coordDimToDataDim('alt');\n    var altDim = altDims && altDims[0];\n\n    if (altDim) {\n      // TODO altitiude is in coords of lines.\n      var dataExtent = data.getDataExtent(altDim, true);\n      altitudeDataExtent[0] = Math.min(altitudeDataExtent[0], dataExtent[0]);\n      altitudeDataExtent[1] = Math.max(altitudeDataExtent[1], dataExtent[1]);\n    }\n  }, this); // Create altitude axis\n\n  if (altitudeDataExtent && isFinite(altitudeDataExtent[1] - altitudeDataExtent[0])) {\n    var scale = echarts.helper.createScale(altitudeDataExtent, {\n      type: 'value',\n      // PENDING\n      min: 'dataMin',\n      max: 'dataMax'\n    });\n    this.altitudeAxis = new echarts.Axis('altitude', scale); // Resize again\n\n    this.resize(this.model, api);\n  }\n}\n\nvar globeCreator = {\n  dimensions: Globe.prototype.dimensions,\n  create: function (ecModel, api) {\n    var globeList = [];\n    ecModel.eachComponent('globe', function (globeModel) {\n      // FIXME\n      globeModel.__viewGL = globeModel.__viewGL || new ViewGL();\n      var globe = new Globe();\n      globe.viewGL = globeModel.__viewGL;\n      globeModel.coordinateSystem = globe;\n      globe.model = globeModel;\n      globeList.push(globe); // Inject resize\n\n      globe.resize = resizeGlobe;\n      globe.resize(globeModel, api);\n      globe.update = updateGlobe;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'globe') {\n        var globeModel = seriesModel.getReferringComponents('globe').models[0];\n\n        if (!globeModel) {\n          globeModel = ecModel.getComponent('globe');\n        }\n\n        if (!globeModel) {\n          throw new Error('globe \"' + retrieve.firstNotNull(seriesModel.get('globe3DIndex'), seriesModel.get('globe3DId'), 0) + '\" not found');\n        }\n\n        var coordSys = globeModel.coordinateSystem;\n        seriesModel.coordinateSystem = coordSys;\n      }\n    });\n    ecModel.eachComponent('globe', function (globeModel, idx) {\n      var globe = globeModel.coordinateSystem; // Update displacement data\n\n      var displacementTextureValue = globeModel.getDisplacementTexture();\n      var displacementScale = globeModel.getDisplacemenScale();\n\n      if (globeModel.isDisplacementChanged()) {\n        if (globeModel.hasDisplacement()) {\n          var immediateLoaded = true;\n          graphicGL.loadTexture(displacementTextureValue, api, function (texture) {\n            var img = texture.image;\n            var displacementData = getDisplacementData(img, displacementScale);\n            globeModel.setDisplacementData(displacementData.data, displacementData.width, displacementData.height);\n\n            if (!immediateLoaded) {\n              // Update layouts\n              api.dispatchAction({\n                type: 'globeUpdateDisplacment'\n              });\n            }\n          });\n          immediateLoaded = false;\n        } else {\n          globe.setDisplacementData(null, 0, 0);\n        }\n\n        globe.setDisplacementData(globeModel.displacementData, globeModel.displacementWidth, globeModel.displacementHeight);\n      }\n    });\n    return globeList;\n  }\n};\nexport default globeCreator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}