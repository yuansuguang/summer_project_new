{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//import editHeader from \"../../../components/header/editHeader\";\nimport QRCode from \"qrcodejs2\";\nimport getDataApi from \"@/utils/getDataApi\";\nimport saveDataApi from \"@/utils/saveDataApi\";\nimport user from \"@/storage/user\";\nexport default {\n  mixins: [getDataApi, saveDataApi],\n  data() {\n    return {\n      logicQuestionState: 0,\n      // 用于判断用户是否更改关联问题设置\n      logicOptionState: 0,\n      // 用于判断用户是否更改关联选项设置\n\n      //uploadImgUrl: this.GLOBAL.backUrl + 'upload/image',\n      //uploadVideoUrl: this.GLOBAL.backUrl + 'upload/video',\n\n      duration: 120,\n      hasRecycleLimit: false,\n      timer: '',\n      value: '',\n      qrcode: null,\n      timeFrame: '',\n      linkShare: '',\n      editWrongMsg: \"\",\n      editWrongMsgVisible: false,\n      qsLinkDialogVisible: false,\n      qsLinkDialogTitle: \"发布成功！\",\n      settingDialogTitle: \"高级设置\",\n      // 高级设置弹框的标题\n      settingDialogVisible: false,\n      // 高级设置对话框可见性\n      publishDialogVisible: false,\n      closingDate: null,\n      // 高级设置中问卷回收的截止日期\n      isLogic: true,\n      // 问卷是否引入关联逻辑\n      scoringMode: true,\n      // 评分模式（高级设置中开启后可为题目设置得分）\n      isReleased: false,\n      // 是否发布\n      editIndex: 0,\n      logicIndex: 0,\n      // 当前添加题目逻辑的问题ID\n      selectDisAble: false,\n      hoverItem: 0,\n      activeName: 'first',\n      title: '',\n      description: '',\n      input3: '',\n      input2: '',\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      type: \"1\",\n      questions: [],\n      outline: [],\n      pid: this.$route.query.pid,\n      qsEditDialogVisible: false,\n      qsEditDialogTitle: \"新建题目\",\n      qsLogicDialogVisible: false,\n      qsLogicDialogTitle: \"关联逻辑设置\",\n      qsOutLineDialogVisible: false,\n      qsModelDialogVisible: false,\n      modelA: false,\n      modelB: false,\n      isRandom: false,\n      willAddQuestion: {\n        question_id: 0,\n        id: 0,\n        type: '',\n        title: '',\n        must: false,\n        // 是否必填\n        is_shown: true,\n        // 是否显示\n        last_question: 0,\n        // 前导问题\n        last_option: 0,\n        // 前导选项\n        description: '',\n        // 问题描述\n        options: [{\n          title: '',\n          // 选项标题\n          id: 1 // 选项id\n        }],\n        row: 1,\n        // 填空区域行数\n        score: 10,\n        // 最大评分\n        refer: '',\n        // 参考答案\n        point: 0,\n        // 分值\n        imgList: [],\n        videoList: []\n      },\n      willAddLogic: {\n        question_id: 0,\n        option_id: 1\n      },\n      allType: [{\n        value: 'radio',\n        label: '单选题'\n      }, {\n        value: 'checkbox',\n        label: '多选题'\n      }, {\n        value: 'text',\n        label: '填空题'\n      }, {\n        value: 'judge',\n        label: '判断题'\n      }, {\n        value: 'name',\n        label: '姓名'\n      }, {\n        value: 'stuId',\n        label: '学号'\n      }, {\n        value: 'class',\n        label: '班级'\n      }, {\n        value: 'school',\n        label: '学校'\n      }],\n      xiaoxueqi_questions: [{\n        id: 1,\n        type: 'radio',\n        title: '这是什么网站？',\n        description: '',\n        must: true,\n        options: [{\n          id: 1,\n          title: '问卷调查网站'\n        }, {\n          id: 2,\n          title: '音乐播放网站'\n        }],\n        row: 0,\n        score: 0\n      }, {\n        id: 2,\n        type: 'checkbox',\n        title: '本学期都使用了什么平台？',\n        description: '',\n        must: false,\n        options: [{\n          id: 1,\n          title: '雨课堂'\n        }, {\n          id: 2,\n          title: '华为云'\n        }, {\n          id: 3,\n          title: '软件学院云平台'\n        }, {\n          id: 4,\n          title: 'U+'\n        }],\n        row: 0,\n        score: 0\n      }, {\n        id: 3,\n        type: 'text',\n        title: '1+2=?',\n        description: '请考虑妥当后填写',\n        must: false,\n        options: [{\n          id: 0,\n          title: ''\n        }],\n        row: 1,\n        score: 0\n      }],\n      xiaoxueqi_outline: [{\n        id: 1,\n        label: '1. 这是一个什么网站？'\n      }, {\n        id: 2,\n        label: '2. 软工小学期助教都有谁？'\n      }, {\n        id: 3,\n        label: '3. 软工小学期累不累'\n      }, {\n        id: 4,\n        label: '4. 您对小学期的评价如何？'\n      }, {\n        id: 5,\n        label: '5. 给小学期打个分吧~'\n      }]\n    };\n  },\n  //components: {\n  //editHeader,\n  //},\n  methods: {\n    //---------------------------Image and video--------------------------------//\n    upLoadImage(file) {\n      const formData = new FormData();\n      formData.append('image', file.file);\n      this.$axios({\n        method: 'post',\n        url: '/image/api/upload_image',\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            var name = res.data.name;\n            var url = res.data.url;\n            this.willAddQuestion.imgList.push({\n              name: name,\n              url: url\n            });\n            console.log(this.willAddQuestion.imgList);\n            break;\n          case 2:\n            this.$message.error(\"上传文件格式错误！\");\n            break;\n          default:\n            this.$message.error(\"操作失败！\");\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    upLoadVideo(file) {\n      const formData = new FormData();\n      formData.append('video', file.file);\n      this.$ajax({});\n      this.$axios({\n        method: 'post',\n        url: this.uploadVideoUrl,\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            var name = res.data.name;\n            var url = res.data.url;\n            this.willAddQuestion.videoList.push({\n              name: name,\n              url: url\n            });\n            console.log(this.willAddQuestion.videoList);\n            break;\n          case 2:\n            // this.$message.error(\"上传文件格式错误！\");\n            break;\n          default:\n            this.$message.error(\"操作失败！\");\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    setAMoedel() {\n      // {\n      //         id: 1,\n      //         type: 'radio',\n      //         title: '这是一个什么网站？',\n      //         description: '请考虑妥当后填写',\n      //         must: true,\n      //         options: [{\n      //             id: 1,\n      //             title: '问卷系统',\n      //         }, {\n      //             id: 2,\n      //             title: '出版系统',\n      //         }],\n      //         row: 0,\n      //         score: 0,\n      //     },\n      if (this.modelA) {\n        this.$message({\n          type: 'error',\n          message: '该模板已添加！'\n        });\n        return;\n      }\n      this.modelA = true;\n      for (let i = 0; i < this.xiaoxueqi_questions.length; i++) {\n        this.willAddQuestion.id = this.xiaoxueqi_questions[i].id;\n        this.willAddQuestion.title = this.xiaoxueqi_questions[i].title;\n        this.willAddQuestion.description = this.xiaoxueqi_questions[i].description;\n        this.willAddQuestion.must = this.xiaoxueqi_questions[i].must;\n        this.willAddQuestion.type = this.xiaoxueqi_questions[i].type;\n        this.willAddQuestion.row = this.xiaoxueqi_questions[i].row;\n        this.willAddQuestion.score = this.xiaoxueqi_questions[i].score;\n        this.willAddQuestion.options = this.xiaoxueqi_questions[i].options;\n        this.dialogConfirm();\n      }\n    },\n    setBMoedel() {\n      // {\n      //         id: 1,\n      //         type: 'radio',\n      //         title: '这是一个什么网站？',\n      //         description: '请考虑妥当后填写',\n      //         must: true,\n      //         options: [{\n      //             id: 1,\n      //             title: '问卷系统',\n      //         }, {\n      //             id: 2,\n      //             title: '出版系统',\n      //         }],\n      //         row: 0,\n      //         score: 0,\n      //     },\n      if (this.modelB) {\n        this.$message({\n          type: 'error',\n          message: '该模板已添加！'\n        });\n        return;\n      }\n      this.modelB = true;\n      for (let i = 0; i < this.some_questions.length; i++) {\n        this.willAddQuestion.id = this.some_questions[i].id;\n        this.willAddQuestion.title = this.some_questions[i].title;\n        this.willAddQuestion.description = this.some_questions[i].description;\n        this.willAddQuestion.must = this.some_questions[i].must;\n        this.willAddQuestion.type = this.some_questions[i].type;\n        this.willAddQuestion.row = this.some_questions[i].row;\n        this.willAddQuestion.score = this.some_questions[i].score;\n        this.willAddQuestion.options = this.some_questions[i].options;\n        this.dialogConfirm();\n      }\n    },\n    beforeImageUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isPNG = file.type === 'image/png';\n      const isLt5M = file.size / 1024 / 1024 < 10;\n      if (!isJPG && !isPNG) {\n        this.$message.error('上传头像图片只能是 JPG/PNG 格式!');\n      } else if (!isLt5M) {\n        this.$message.error('上传头像图片大小不能超过 5MB!');\n      }\n      return (isJPG || isPNG) && isLt5M;\n    },\n    beforeVideoUpload(file) {\n      const filename = file.name;\n      var suffix = '';\n      var isVideo = false;\n      const isLt2M = file.size / 1024 / 1024 < 30;\n      try {\n        var flieArr = filename.split('.');\n        suffix = flieArr[flieArr.length - 1];\n      } catch (err) {\n        suffix = '';\n      }\n      var videoList = ['mp4', 'mkv'];\n      var judge = videoList.some(function (item) {\n        return item === suffix;\n      });\n      if (judge) {\n        isVideo = true;\n      }\n      if (!isVideo) {\n        this.$message.error('上传视频文件只能是 MP4/MKV 格式!');\n      } else if (!isLt2M) {\n        this.$message.error('上传视频文件大小不能超过 10MB!');\n      }\n      return isLt2M && isVideo;\n    },\n    beforeRemove(file, fileList) {\n      console.log(file, fileList);\n      return this.$confirm(`确定移除 ${file.name}？`);\n    },\n    handleRemove(file, fileList) {\n      console.log(file, fileList);\n      this.$message(\"移除成功\");\n    },\n    //--------------------------------------------------------------------------//\n    autoSave() {\n      this.saveQnInfo('autosave', '2');\n    },\n    download() {\n      // 获取base64的图片节点\n      var img = document.getElementById('qrcode_2').getElementsByTagName('img')[0];\n      // 构建画布\n      var canvas = document.createElement('canvas');\n      canvas.width = img.width;\n      canvas.height = img.height;\n      canvas.getContext('2d').drawImage(img, 0, 0);\n      // 构造url\n      var url = canvas.toDataURL('image/png');\n      console.log(url);\n      // 构造a标签并模拟点击\n      var downloadLink = document.createElement('a');\n      downloadLink.download = '二维码.png';\n      downloadLink.href = url;\n      downloadLink.click();\n      downloadLink.remove();\n    },\n    formatTime(time) {\n      this.timeFrame = time;\n    },\n    finish() {\n      this.qsLinkDialogVisible = false;\n      this.$router.push('/index'); // 跳转到问卷中心？\n    },\n    publishSuccess: function () {\n      this.qsLinkDialogVisible = true;\n    },\n    edit: function (index) {\n      index--;\n      this.willAddQuestion = {\n        question_id: this.questions[index].question_id,\n        id: this.questions[index].id,\n        type: this.questions[index].type,\n        title: this.questions[index].title,\n        must: this.questions[index].must,\n        description: this.questions[index].description,\n        options: JSON.parse(JSON.stringify(this.questions[index].options)),\n        row: this.questions[index].row,\n        score: this.questions[index].score,\n        refer: this.questions[index].refer,\n        point: this.questions[index].point,\n        is_shown: this.questions[index].is_shown,\n        last_question: this.questions[index].last_question,\n        last_option: this.questions[index].last_option,\n        imgList: JSON.parse(JSON.stringify(this.questions[index].imgList)),\n        videoList: JSON.parse(JSON.stringify(this.questions[index].videoList))\n      };\n      this.editIndex = index;\n      this.selectDisAble = true;\n      this.qsEditDialogTitle = \"编辑题目\";\n      this.qsEditDialogVisible = true;\n    },\n    isExistEmptyOption: function () {\n      for (let i = 0; i < this.willAddQuestion.options.length; i++) {\n        if (this.willAddQuestion.options[i].title === '') return true;\n      }\n      return false;\n    },\n    isExistSameOption: function () {\n      for (let i = 0; i < this.willAddQuestion.options.length; i++) {\n        for (let j = 0; j < this.willAddQuestion.options.length; j++) {\n          if (i !== j && this.willAddQuestion.options[i].title === this.willAddQuestion.options[j].title) return true;\n        }\n      }\n      return false;\n    },\n    dialogConfirm() {\n      let index = this.editIndex;\n      // this.qsEditDialogVisible = false;\n      if (this.qsEditDialogTitle === \"编辑题目\") {\n        this.questions[index].id = this.willAddQuestion.id;\n        this.questions[index].row = this.willAddQuestion.row;\n        this.questions[index].must = this.willAddQuestion.must;\n        this.questions[index].description = this.willAddQuestion.description;\n        this.questions[index].title = this.willAddQuestion.title;\n        this.questions[index].options = this.willAddQuestion.options;\n        this.questions[index].score = this.willAddQuestion.score;\n        this.qsEditDialogTitle = \"\";\n        this.qsEditDialogVisible = false;\n        this.questions[index].refer = this.willAddQuestion.refer;\n        this.questions[index].point = this.willAddQuestion.point;\n        // 大纲更新\n        this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\n        if (this.willAddQuestion.title === '') {\n          this.$message({\n            type: 'error',\n            message: '标题不能为空!'\n          });\n        } else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\n          this.$message({\n            type: 'error',\n            message: '选项名不能为空!'\n          });\n        } else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\n          this.$message({\n            type: 'error',\n            message: '选项名不能重复!'\n          });\n        } else {\n          this.questions[index].id = this.willAddQuestion.id;\n          this.questions[index].row = this.willAddQuestion.row;\n          this.questions[index].must = this.willAddQuestion.must;\n          this.questions[index].description = this.willAddQuestion.description;\n          this.questions[index].title = this.willAddQuestion.title;\n          this.questions[index].options = this.willAddQuestion.options;\n          this.questions[index].score = this.willAddQuestion.score;\n          this.questions[index].is_shown = this.willAddQuestion.is_shown;\n          this.questions[index].last_question = this.willAddQuestion.last_question;\n          this.questions[index].last_option = this.willAddQuestion.last_option;\n          this.questions[index].options = JSON.parse(JSON.stringify(this.willAddQuestion.options));\n          this.questions[index].imgList = JSON.parse(JSON.stringify(this.willAddQuestion.imgList));\n          this.questions[index].videoList = JSON.parse(JSON.stringify(this.willAddQuestion.videoList));\n          // 大纲更新\n          this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\n          this.qsEditDialogTitle = \"\";\n          this.qsEditDialogVisible = false;\n          this.$message({\n            type: 'success',\n            message: '修改成功!'\n          });\n          // 重置\n          this.resetWillAdd();\n          this.selectDisAble = false;\n        }\n        // 重置\n        this.willAddQuestion = {\n          id: 0,\n          type: '',\n          title: '',\n          must: false,\n          description: '',\n          options: [{\n            title: '',\n            //选项标题\n            id: 1 //选项id\n          }],\n          row: 1,\n          score: 10,\n          refer: '',\n          point: 0 // 分值\n        };\n        this.selectDisAble = false;\n      } else {\n        if (this.willAddQuestion.type === 'name') {\n          this.willAddQuestion.title = '姓名';\n          this.willAddQuestion.refer = '';\n        }\n        if (this.willAddQuestion.type === 'stuId') {\n          this.willAddQuestion.title = '学号';\n          this.willAddQuestion.refer = '';\n        }\n        if (this.willAddQuestion.type === 'class') {\n          this.willAddQuestion.title = '班级';\n          this.willAddQuestion.refer = '';\n        }\n        if (this.willAddQuestion.type === 'school') {\n          this.willAddQuestion.title = '学校';\n          this.willAddQuestion.refer = '';\n        }\n        if (this.willAddQuestion.title === '') {\n          this.$message({\n            type: 'error',\n            message: '标题不能为空!'\n          });\n        } else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\n          this.$message({\n            type: 'error',\n            message: '选项名不能为空!'\n          });\n        } else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\n          this.$message({\n            type: 'error',\n            message: '选项名不能重复!'\n          });\n        } else {\n          this.qsEditDialogVisible = false;\n          this.willAddQuestion.id = this.questions.length + 1;\n          // 大纲更新\n          this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\n          if (this.willAddQuestion.type === 'judge') {\n            this.willAddQuestion.options = [{\n              title: '对',\n              id: 1\n            }, {\n              title: '错',\n              id: 2\n            }];\n          }\n          this.questions.push(this.willAddQuestion);\n          this.$message({\n            type: 'success',\n            message: '添加成功!'\n          });\n          // 重置\n          this.resetWillAdd();\n        }\n      }\n    },\n    resetWillAdd() {\n      this.willAddQuestion = {\n        question_id: 0,\n        id: 0,\n        type: '',\n        title: '',\n        must: false,\n        // 是否必填\n        is_shown: true,\n        // 是否显示\n        last_question: 0,\n        // 前导问题\n        last_option: 0,\n        // 前导选项\n        description: '',\n        // 问题描述\n        options: [{\n          title: '',\n          // 选项标题\n          id: 1 // 选项id\n        }],\n        row: 1,\n        // 填空区域行数\n        score: 10,\n        // 最大评分\n        refer: '',\n        // 参考答案\n        point: 0,\n        // 分值\n        imgList: [],\n        videoList: []\n      };\n    },\n    dialogCancel: function () {\n      this.qsEditDialogTitle = \"新建题目\";\n      this.resetWillAdd();\n      this.qsEditDialogVisible = false;\n      this.selectDisAble = false;\n    },\n    cancel_pre: function () {\n      this.$confirm('已编辑的题目信息将不会保存,确认关闭？', '提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.dialogCancel();\n      }).catch(() => {});\n    },\n    LogicDialogCancel: function () {\n      this.qsLogicDialogVisible = false;\n      this.resetLogic();\n    },\n    cancel_pre_logic: function () {\n      this.$confirm('已编辑的题目关联逻辑将不会保存,确认关闭？', '提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.LogicDialogCancel();\n      }).catch(() => {});\n    },\n    logicConfirm: function (index) {\n      console.log(this.questions);\n      let questions = this.questions;\n      let willAddLogic = this.willAddLogic;\n      questions[index].last_question = willAddLogic.question_id;\n      questions[index].last_option = willAddLogic.option_id;\n      questions[index].is_shown = willAddLogic.question_id === 0;\n      if (this.willAddLogic.question_id !== this.logicQuestionState || this.willAddLogic.option_id !== this.logicOptionState) {\n        this.$message({\n          type: 'success',\n          message: '问题关联设置成功'\n        });\n      }\n      this.qsLogicDialogVisible = false;\n      this.resetLogic();\n    },\n    logic: function (index) {\n      this.logicIndex = index - 1;\n      this.willAddLogic.question_id = this.questions[index - 1].last_question;\n      if (this.questions[index - 1].last_option !== 0) {\n        this.willAddLogic.option_id = this.questions[index - 1].last_option;\n      } else this.willAddLogic.option_id = 1;\n      console.log(this.questions);\n      this.qsLogicDialogVisible = true;\n      this.logicQuestionState = this.willAddLogic.question_id;\n      this.logicOptionState = this.willAddLogic.option_id;\n    },\n    resetLogic() {\n      this.willAddLogic = {\n        question_id: 0,\n        option_id: 1\n      };\n      this.logicIndex = 0;\n    },\n    typeChange(value) {\n      this.willAddQuestion.type = value;\n    },\n    radioChange(value) {\n      this.willAddQuestion.refer = value;\n    },\n    judgeChange(value) {\n      this.willAddQuestion.refer = value;\n    },\n    addOption() {\n      // 问题关联检查\n      if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\n        this.$message({\n          type: 'warning',\n          message: '此问题已被关联，无法新增选项，请删除关联信息后再试'\n        });\n        return;\n      }\n      this.willAddQuestion.options.push({\n        title: '',\n        id: this.willAddQuestion.options.length + 1\n      });\n    },\n    deleteOption(index) {\n      if (this.willAddQuestion.options.length === 1) {\n        this.$message({\n          type: \"error\",\n          message: \"至少需要设置一个选项！\"\n        });\n      } else {\n        // 问题关联检查\n        if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\n          this.$message({\n            type: 'warning',\n            message: '此问题已被关联，无法删除选项，请删除关联信息后再试'\n          });\n          return;\n        }\n        // id重排\n        for (let i = index + 1; i < this.willAddQuestion.options.length; i++) {\n          this.willAddQuestion.options[i].id--;\n        }\n        this.willAddQuestion.options.splice(index, 1);\n      }\n    },\n    changeTitle: function (value) {\n      this.title = value;\n    },\n    changeDescription: function (value) {\n      this.description = value;\n    },\n    openSetting: function () {\n      this.settingDialogVisible = true;\n    },\n    settingSuccess: function () {\n      this.settingDialogVisible = false;\n      this.$message({\n        type: 'success',\n        message: '设置已生效'\n      });\n    },\n    genCodeAgain() {\n      const formData = new FormData();\n      formData.append(\"qn_id\", this.$route.query.pid);\n      this.$axios({\n        method: 'post',\n        url: '/qn/change/code',\n        data: formData\n      }).then(res => {\n        if (res.data.status_code === 1) {\n          this.linkShare = this.GLOBAL.baseUrl + \"/fill_test?mode=1&code=\" + res.data.code;\n          if (this.qrcode == null) {\n            this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\n              width: 200,\n              //生成的二维码的宽度\n              height: 200,\n              //生成的二维码的高度\n              colorDark: \"#000000\",\n              // 生成的二维码的深色部分\n              colorLight: \"#ffffff\",\n              //生成二维码的浅色部分\n              correctLevel: QRCode.CorrectLevel.H\n            });\n          }\n          this.qrcode.clear();\n          this.qrcode.makeCode(this.linkShare);\n        } else {\n          this.$message.error(\"请求失败！\");\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    share() {\n      this.publish();\n    },\n    publish() {\n      this.$confirm('确认发布？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'success'\n      }).then(() => {\n        var formData = new FormData();\n        formData.append(\"survey_id\", this.$route.params.qnid);\n        this.$axios({\n          method: 'post',\n          url: '/survey/api/share',\n          data: formData\n        }).then(res => {\n          switch (res.data.status_code) {\n            case 1:\n              this.linkShare = 'http://localhost:8080' + '/fillQnmytest/' + res.data.code;\n              console.log(res.data.code);\n              this.publishDialogVisible = true;\n              // if (this.qrcode == null) {\n              //     this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\n              //         width: 200, //生成的二维码的宽度\n              //         height: 200, //生成的二维码的高度\n              //         colorDark: \"#000000\", // 生成的二维码的深色部分\n              //         colorLight: \"#ffffff\", //生成二维码的浅色部分\n              //         correctLevel: QRCode.CorrectLevel.H\n              //     });\n              // }\n              // this.qrcode.clear();\n              // this.qrcode.makeCode(this.linkShare);\n              break;\n            case 2:\n              break;\n            case 3:\n              break;\n            case 4:\n              break;\n          }\n        });\n      }).catch(err => {\n        this.$message({\n          type: 'info',\n          message: '取消保存'\n        });\n        console.log(err);\n      });\n    },\n    savetoserver() {\n      if (this.questions.length === 0) {\n        this.$message.error(\"题目为空，无法发布！\");\n        return;\n      }\n      this.$confirm('确认保存？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'success'\n      }).then(() => {\n        // let loadingIns = this.$loading({ fullscreen: true, text: '拼命加载中' });\n        // this.publishSuccess();\n        var new_questions = JSON.parse(JSON.stringify(this.questions));\n        console.log(new_questions);\n        console.log(this.isRandom);\n        // let url = '/sm/save/qn/deploy';\n        console.log(\"checkpoint 0\");\n        for (var i = 0; i < new_questions.length; i++) {\n          console.log(\"checkpoint 0.5\");\n          if (new_questions[i].type == 'checkbox') {\n            console.log(\"checkpoint 0.7\");\n            console.log(new_questions[i].refer);\n            new_questions[i].refer = new_questions[i].refer.join('-<^-^>-');\n            console.log(new_questions[i].refer);\n          }\n        }\n        console.log(\"checkpoint 1\");\n        const userInfo = user.getters.getUser(user.state());\n        console.log(\"checkpoint 2\");\n        var param = {\n          username: userInfo.user.username,\n          title: this.title,\n          finished_time: this.timeFrame,\n          description: this.description,\n          type: '3',\n          duration: this.duration,\n          qn_id: this.$route.params.qnid,\n          is_random: this.isRandom,\n          questions: new_questions\n        };\n        var paramer = JSON.stringify(param, {\n          questions: 'brackets'\n        });\n        console.log(\"paramer success\");\n        this.$axios({\n          method: 'post',\n          url: '/surveymanage/api/savesurvey',\n          data: paramer\n        }).then(res => {\n          // loadingIns.close();\n          if (res.data.status_code == 1) {\n            this.$message.success(\"保存成功！\");\n            this.linkShare = this.GLOBAL.baseUrl + '/fill_test?mode=1&code=' + res.data.code;\n            this.publishDialogVisible = true;\n            // if (this.qrcode == null) {\n            //     this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\n            //         width: 200, //生成的二维码的宽度\n            //         height: 200, //生成的二维码的高度\n            //         colorDark: \"#000000\", // 生成的二维码的深色部分\n            //         colorLight: \"#ffffff\", //生成二维码的浅色部分\n            //         correctLevel: QRCode.CorrectLevel.H\n            //     });\n            // }\n            this.qrcode.clear();\n            this.qrcode.makeCode(this.linkShare);\n          } else {\n            this.$message.error(\"题目为空，无法发布！\");\n            console.log(res.data.status_code);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }).catch(err => {\n        this.$message({\n          type: 'info',\n          message: '取消发布'\n        });\n        console.log(err);\n      });\n    },\n    saveinfo(tag) {\n      this.saveQnInfo(tag, \"2\");\n    },\n    save() {\n      this.saveinfo('save');\n    },\n    preview() {\n      this.saveinfo('preview');\n    },\n    up: function (index) {\n      index--;\n      let questions = this.questions;\n      if (index !== 0) {\n        // 非法移动\n        if (questions[index].last_question === index) {\n          this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\n          return;\n        }\n        // 关联维护\n        let arr = this.sonGroup(index);\n        let willSubtract = [];\n        if (arr.length !== 0) {\n          for (let j = 0; j < arr.length; j++) {\n            willSubtract.push(arr[j].id - 1);\n          }\n        }\n        arr = this.sonGroup(index - 1);\n        if (arr.length !== 0) {\n          for (let j = 0; j < arr.length; j++) {\n            questions[arr[j].id - 1].last_question++;\n          }\n        }\n        for (let i = 0; i < willSubtract.length; i++) {\n          questions[willSubtract[i]].last_question--;\n        }\n        // 题序维护\n        questions[index].id--;\n        questions[index - 1].id++;\n        let temp = questions[index];\n        questions[index] = questions[index - 1];\n        questions[index - 1] = temp;\n        // 大纲维护\n        this.updateOutline(index, questions[index - 1].title);\n        this.updateOutline(index + 1, questions[index].title);\n      }\n    },\n    down: function (index) {\n      index--;\n      let questions = this.questions;\n      if (index !== questions.length - 1) {\n        // 非法移动\n        if (questions[index + 1].last_question === index + 1) {\n          this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\n          return;\n        }\n        // 关联维护\n        let arr = this.sonGroup(index);\n        let willAdd = [];\n        if (arr.length !== 0) {\n          for (let j = 0; j < arr.length; j++) {\n            willAdd.push(arr[j].id - 1);\n          }\n        }\n        arr = this.sonGroup(index + 1);\n        if (arr.length !== 0) {\n          for (let j = 0; j < arr.length; j++) {\n            questions[arr[j].id - 1].last_question--;\n          }\n        }\n        for (let i = 0; i < willAdd.length; i++) {\n          questions[willAdd[i]].last_question++;\n        }\n        // 题序维护\n        questions[index].id++;\n        questions[index + 1].id--;\n        let temp = questions[index];\n        questions[index] = questions[index + 1];\n        questions[index + 1] = temp;\n        // 大纲维护\n        this.updateOutline(index + 1, questions[index].title);\n        this.updateOutline(index + 2, questions[index + 1].title);\n      }\n    },\n    del_pre: function (index) {\n      // 问题关联检查\n      if (this.sonGroup(index - 1).length !== 0) {\n        this.$confirm('该问题已被关联，删除此问题会删除所有相关关联信息', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.del_relation(index);\n          this.del(index);\n          this.$message({\n            type: 'success',\n            message: '问题及关联信息已成功删除'\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消删除题目及关联'\n          });\n        });\n      } else {\n        this.$confirm('确认删除（不可恢复）？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.del(index);\n          this.$message({\n            type: 'success',\n            message: '删除成功'\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消删除'\n          });\n        });\n      }\n    },\n    del: function (index) {\n      index--;\n      let questions = this.questions;\n      let outline = this.outline;\n      // 维护关联关系\n      for (let i = index + 1; i < questions.length; i++) {\n        let arr = this.sonGroup(i);\n        if (arr.length !== 0) {\n          for (let j = 0; j < arr.length; j++) {\n            if (questions[arr[j].id - 1] !== index) {\n              questions[arr[j].id - 1].last_question--;\n            }\n          }\n        }\n      }\n      // 维护题序\n      for (let i = index + 1; i < questions.length; i++) {\n        questions[i].id--;\n      }\n      outline.splice(index, 1);\n      questions.splice(index, 1);\n      // 维护大纲\n      for (let num = index; num < outline.length; num++) {\n        this.updateOutline(num + 1, questions[num].title);\n      }\n    },\n    copy: function (index) {\n      index--;\n      let questions = this.questions;\n      // 大纲更新\n      this.updateOutline(this.outline.length + 1, questions[index].title);\n      // 问卷更新\n      let temp = this.deepClone(questions[index]);\n      temp.id = questions.length + 1;\n      temp.question_id = 0;\n      questions.push(temp);\n      this.$message.success(\"问题复制成功，已粘贴至问卷末尾\");\n    },\n    deepClone: function (initialObj) {\n      let obj = {};\n      try {\n        obj = JSON.parse(JSON.stringify(initialObj));\n        // eslint-disable-next-line no-empty\n      } finally {}\n      return obj;\n    },\n    // 深拷贝\n    updateOutline: function (id, label) {\n      if (label.length > 12) {\n        label = id + '. ' + label.substring(0, 11) + '...';\n      } else {\n        label = id + '. ' + label;\n      }\n      if (id <= this.questions.length) {\n        console.log(\"id:\");\n        console.log(id);\n        // this.outline[id - 1].id = id;\n        // this.outline[id - 1].label = label;\n      } else {\n        this.outline.push({\n          id: id,\n          label: label\n        });\n      }\n    },\n    updateQuestions: function (start, end) {\n      let offset = end - start;\n      if (offset > 0) {\n        for (let i = 0; i < offset; i++) {\n          this.down(start + i);\n        }\n      } else {\n        for (let i = 0; i < offset * -1; i++) {\n          this.up(start - i);\n        }\n      }\n    },\n    // good\n    toFillQn: function (value) {\n      this.$router.push({\n        name: 'FillQn',\n        query: {\n          mode: value,\n          title: this.title\n        }\n      });\n    },\n    InitOutline() {\n      for (var i = 0; i < this.questions.length; i++) {\n        this.outline.push({\n          id: this.questions[i].id,\n          label: i + 1 + \". \" + this.questions[i].title\n        });\n      }\n    },\n    copyToClip(message) {\n      var aux = document.createElement(\"input\");\n      aux.setAttribute(\"value\", this.linkShare);\n      document.body.appendChild(aux);\n      aux.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(aux);\n      if (message !== null) {\n        this.$message.success(\"复制成功\");\n      } else {\n        this.$message.error(\"复制失败\");\n      }\n    },\n    // 大纲拖拽处理函数(下3个)\n    handleDrop(draggingNode, dropNode, dropType) {\n      console.log('tree drop: ', draggingNode.key, dropNode.key, dropType);\n      if (this.isRightRelation(draggingNode.key, dropNode.key)) {\n        this.updateQuestions(draggingNode.key, dropNode.key);\n      } else {\n        this.outline.splice(0, this.outline.length);\n        this.InitOutline();\n        this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\n      }\n    },\n    allowDrop(draggingNode, dropNode, type) {\n      if (draggingNode.key > dropNode.key) {\n        return type === 'prev';\n      } else {\n        return type === 'next';\n      }\n    },\n    isRightRelation: function (index1, index2) {\n      console.log(index1, index2);\n      index1--;\n      index2--;\n      let questions = this.questions;\n      if (index1 < index2) {\n        for (let i = index1 + 1; i <= index2; i++) {\n          if (questions[i].last_question === index1 + 1) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        for (let i = index1 - 1; i >= index2; i--) {\n          if (questions[index1].last_question === i + 1) {\n            return false;\n          }\n        }\n        return true;\n      }\n    },\n    idTitle: function (item) {\n      if (item.id === 0) {\n        return item.title;\n      } else {\n        return item.id + \". \" + item.title;\n      }\n    },\n    // relatedQs: function (item) {\n    //     return \"关联问题：\" + this.questions[item.last_question - 1].id + \".\" + this.questions[item.last_question - 1].title + \"(\" + this.questions[item.last_question - 1].options[item.last_option - 1].title + \")\";\n    // },\n    // 遍历得爸爸\n    fatherIndex: function (qs_id) {\n      for (let i = 0; i < this.questions.length; i++) {\n        if (this.questions[i].question_id === qs_id) {\n          return i;\n        }\n      }\n    },\n    // 遍历得儿子\n    sonGroup: function (index) {\n      let arr = [];\n      for (let i = 0; i < this.questions.length; i++) {\n        if (this.questions[i].last_question === this.questions[index].id) {\n          arr.push(this.questions[i]);\n        }\n      }\n      return arr;\n    },\n    // 连带删除关联信息\n    del_relation: function (index) {\n      for (let i = 0; i < this.questions.length; i++) {\n        // 保存加入后,下面需修改id为question_id\n        if (this.questions[i].last_question === this.questions[index - 1].id) {\n          this.questions[i].last_option = 0;\n          this.questions[i].last_question = 0;\n          this.questions[i].is_shown = true;\n        }\n      }\n    },\n    // 关联信息存在性判断\n    isExistRelation: function () {\n      for (let i = 0; i < this.questions.length; i++) {\n        if (this.questions[i].last_question !== 0) {\n          return true;\n        }\n      }\n      return false;\n    },\n    // 监听：全局删除关联信息\n    closeGlobalLogic: function (state) {\n      if (!state && this.isExistRelation()) {\n        this.$confirm('检测到您已为题目添加关联，关闭设置将会删除所有关联信息，是否继续？', '提示', {\n          confirmButtonText: '确认',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.deleteGlobalRelation();\n          this.$message.info(\"关联信息已全部删除\");\n        }).catch(() => {\n          this.isLogic = true;\n          this.$message.info(\"取消操作\");\n        });\n      }\n    },\n    // 删除全局关联信息\n    deleteGlobalRelation: function () {\n      for (let i = 0; i < this.questions.length; i++) {\n        this.questions[i].last_question = 0;\n        this.questions[i].last_option = 0;\n        this.questions[i].is_shown = true;\n      }\n    },\n    fetchQuestions() {\n      // 假设从后端获取问题数据的过程\n      const formData = new FormData();\n      // formData.append(\"survey_keyword\", this.loginForm.user);\n      formData.append(\"survey_id\", this.$route.params.qnid);\n      this.$axios({\n        method: 'post',\n        url: '/question/api/listquestion',\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            this.questions = JSON.parse(res.data.data);\n            this.title = res.data.title;\n            this.description = res.data.description;\n            // for (var i = 0; i < this.questionnaires.length; i++) {\n            // if (this.questionnaires[i].questionType == '1')\n            //     this.questionnaires[i].questionType = '普通问卷'\n            // else if (this.questionnaires[i].questionType == '2')\n            //     this.questionnaires[i].questionType = '投票问卷'\n            // else if (this.questionnaires[i].questionType == '3')\n            //     this.questionnaires[i].questionType = '考试问卷'\n            // else\n            //     this.questionnaires[i].questionType = '报名问卷'\n            // }\n            console.log(this.questions);\n            console.log(\"success on fetching questions\");\n            break;\n          case 2:\n            console.log(\"error 2\");\n            break;\n          case 3:\n            console.log(\"error 3\");\n            break;\n          case 4:\n            console.log(\"error 4\");\n            break;\n          case 5:\n            console.log(\"error 5\");\n            break;\n          case -1:\n            console.log(\"error -1\");\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  computed: {\n    questionsFilter: function () {\n      let questions = this.questions;\n      let arr = [{\n        question_id: 0,\n        id: 0,\n        type: '',\n        title: '不设置关联题目',\n        must: false,\n        // 是否必填\n        is_shown: true,\n        // 是否显示\n        last_question: 0,\n        // 前导问题\n        last_option: 0,\n        // 前导选项\n        description: '',\n        // 问题描述\n        options: [{\n          title: '',\n          // 选项标题\n          id: 0 // 选项id\n        }],\n        row: 1,\n        // 填空区域行数\n        score: 5 // 最大评分\n      }];\n      for (let i = 0; i < this.logicIndex; i++) {\n        if (questions[i].type === \"radio\" || questions[i].type === \"checkbox\") {\n          arr.push(questions[i]);\n        }\n      }\n      return arr;\n    }\n  },\n  created() {\n    //this.getQnDataSelf();\n    this.fetchQuestions();\n  },\n  mounted() {\n    //this.timer = setInterval(this.autoSave, 60000);\n  }\n  //beforeDestroy() {\n  //clearInterval(this.timer);\n  //},\n};","map":{"version":3,"names":["QRCode","getDataApi","saveDataApi","user","mixins","data","logicQuestionState","logicOptionState","duration","hasRecycleLimit","timer","value","qrcode","timeFrame","linkShare","editWrongMsg","editWrongMsgVisible","qsLinkDialogVisible","qsLinkDialogTitle","settingDialogTitle","settingDialogVisible","publishDialogVisible","closingDate","isLogic","scoringMode","isReleased","editIndex","logicIndex","selectDisAble","hoverItem","activeName","title","description","input3","input2","defaultProps","children","label","type","questions","outline","pid","$route","query","qsEditDialogVisible","qsEditDialogTitle","qsLogicDialogVisible","qsLogicDialogTitle","qsOutLineDialogVisible","qsModelDialogVisible","modelA","modelB","isRandom","willAddQuestion","question_id","id","must","is_shown","last_question","last_option","options","row","score","refer","point","imgList","videoList","willAddLogic","option_id","allType","xiaoxueqi_questions","xiaoxueqi_outline","methods","upLoadImage","file","formData","FormData","append","$axios","method","url","then","res","status_code","name","push","console","log","$message","error","catch","err","upLoadVideo","$ajax","uploadVideoUrl","setAMoedel","message","i","length","dialogConfirm","setBMoedel","some_questions","beforeImageUpload","isJPG","isPNG","isLt5M","size","beforeVideoUpload","filename","suffix","isVideo","isLt2M","flieArr","split","judge","some","item","beforeRemove","fileList","$confirm","handleRemove","autoSave","saveQnInfo","download","img","document","getElementById","getElementsByTagName","canvas","createElement","width","height","getContext","drawImage","toDataURL","downloadLink","href","click","remove","formatTime","time","finish","$router","publishSuccess","edit","index","JSON","parse","stringify","isExistEmptyOption","isExistSameOption","j","updateOutline","resetWillAdd","dialogCancel","cancel_pre","confirmButtonText","cancelButtonText","LogicDialogCancel","resetLogic","cancel_pre_logic","logicConfirm","logic","typeChange","radioChange","judgeChange","addOption","sonGroup","deleteOption","splice","changeTitle","changeDescription","openSetting","settingSuccess","genCodeAgain","GLOBAL","baseUrl","code","colorDark","colorLight","correctLevel","CorrectLevel","H","clear","makeCode","share","publish","params","qnid","savetoserver","new_questions","join","userInfo","getters","getUser","state","param","username","finished_time","qn_id","is_random","paramer","success","saveinfo","tag","save","preview","up","arr","willSubtract","temp","down","willAdd","del_pre","del_relation","del","num","copy","deepClone","initialObj","obj","substring","updateQuestions","start","end","offset","toFillQn","mode","InitOutline","copyToClip","aux","setAttribute","body","appendChild","select","execCommand","removeChild","handleDrop","draggingNode","dropNode","dropType","key","isRightRelation","allowDrop","index1","index2","idTitle","fatherIndex","qs_id","isExistRelation","closeGlobalLogic","deleteGlobalRelation","info","fetchQuestions","computed","questionsFilter","created","mounted"],"sources":["E:\\mytest\\src\\views\\qn-createpane\\qn-modelPane\\qnEditTest.vue"],"sourcesContent":["<template>\r\n    <div class=\"form\">\r\n        <div class=\"qnBoard\" :style=\"{\r\n            boxShadow: `var(--el-box-shadow-light)`,\r\n        }\">\r\n            <!-- <el-tabs :tab-position=\"'left'\" style=\"height: 700px;\" type=\"border-card\" class=\"demo-tabs\" stretch=\"true\">\r\n            <el-tab-pane style=\"padding: 140px\">\r\n                <template #label>\r\n                    <span class=\"custom-tabs-label\">\r\n                        <el-icon>\r\n                            <Edit />\r\n                        </el-icon>\r\n                        <span>Edit</span>\r\n                    </span>\r\n                </template>\r\n\r\n</el-tab-pane>\r\n<el-tab-pane label=\"Config\">Config</el-tab-pane>\r\n<el-tab-pane label=\"Role\">Role</el-tab-pane>\r\n<el-tab-pane label=\"Task\">Task</el-tab-pane>\r\n</el-tabs> -->\r\n            <el-tabs type=\"card\" stretch=\"true\" class=\"qn-tabs\">\r\n                <el-tab-pane label=\"编辑问卷\">\r\n                    <el-menu class=\"el-menu-vertical-demo\" style=\"position: relative; width: 190px;\">\r\n                        <template #title>\r\n                            <el-icon>\r\n                                <Edit />\r\n                            </el-icon>\r\n                            <span>问卷题目</span>\r\n                        </template>\r\n                        <el-menu-item-group>\r\n                            <template #title><span>题目</span></template>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'radio'; qsEditDialogVisible = true\">单选题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'checkbox'; qsEditDialogVisible = true\">多选题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'text'; qsEditDialogVisible = true\">填空题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'mark'; qsEditDialogVisible = true\">评分题</el-menu-item>\r\n                        </el-menu-item-group>\r\n                        <!-- <el-menu-item-group title=\"预设题目\">\r\n                            <el-sub-menu>\r\n                                <template #title><span>个人信息</span></template>\r\n                                <el-menu-item @click=\"addName\">姓名</el-menu-item>\r\n                                <el-menu-item @click=\"addStuID\">学号</el-menu-item>\r\n                                <el-menu-item @click=\"addPhone\">电话号码</el-menu-item>\r\n                            </el-sub-menu>\r\n                        </el-menu-item-group> -->\r\n                        <el-menu-item-group title=\"预设模板\">\r\n                            <el-menu-item @click=\"this.qsModelDialogVisible = true\">模板库</el-menu-item>\r\n                        </el-menu-item-group>\r\n\r\n                    </el-menu>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"问卷相关\">\r\n                    <el-row>\r\n                        <span style=\"font-size: 14px\">&emsp;问卷标题：</span>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                    <div class=\"mt-4\" style=\"width: 180px; left: 5px; position: relative\">\r\n                        <el-input v-model=\"input3\" style=\"max-width: 600px\" placeholder=\"标题\" class=\"input-with-select\">\r\n\r\n                            <template #append>\r\n                                <el-button @click=\"changeTitle(input3)\">设置</el-button>\r\n                            </template>\r\n                        </el-input>\r\n                    </div>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <span style=\"font-size: 14px\">&emsp;问卷简介：</span>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                    <div class=\"mt-4\" style=\"width: 180px; left: 5px; position: relative\">\r\n                        <el-input v-model=\"input2\" style=\"max-width: 600px\" placeholder=\"简介\" class=\"input-with-select\">\r\n\r\n                            <template #append>\r\n                                <el-button @click=\"changeDescription(input2)\">设置</el-button>\r\n                            </template>\r\n                        </el-input>\r\n                    </div>\r\n                    <el-divider />\r\n                    <el-menu class=\"el-menu-vertical-demo\" style=\"position: relative; width: 190.5px;\">\r\n                        <!-- <el-menu-item @click=\"this.qsOutLineDialogVisible = true\">\r\n                            <el-icon>\r\n                                <Link />\r\n                            </el-icon>\r\n                            <template #title>问卷逻辑</template>\r\n                        </el-menu-item> -->\r\n                        <el-menu-item @click=\"this.settingDialogVisible = true\">\r\n                            <el-icon>\r\n                                <setting />\r\n                            </el-icon>\r\n                            <template #title>问卷设置</template>\r\n                        </el-menu-item>\r\n                    </el-menu>\r\n                    <el-divider border-style=\"dashed\" />\r\n                    <el-button-group>\r\n                        <el-button type=\"primary\" size=\"default\" @click=\"savetoserver()\">保存问卷</el-button>\r\n                        <el-button type=\"primary\" size=\"default\" @click=\"publish()\">发布问卷</el-button>\r\n                    </el-button-group>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n\r\n        </div>\r\n        <el-container>\r\n            <el-main class=\"qnMain\" :style=\"{\r\n                boxShadow: `var(--el-box-shadow-light)`,\r\n                borderRadius: `var(--el-border-radius-round)`,\r\n            }\">\r\n                <div class=\"ques\">\r\n\r\n                    <div class=\"title\">\r\n                        {{ title }}\r\n                    </div>\r\n                    <div class=\"description\"\r\n                        v-if=\"this.description !== '' && this.description !== null && this.description !== undefined\">\r\n                        &emsp;&emsp;{{ description }}\r\n                    </div>\r\n                    <div class=\"content\">\r\n                        <el-row class=\"ques-block\" v-for=\"item in questions\" :key=\"item.id\"\r\n                            @mouseover.enter=\"hoverItem = item.id\" :style=\"{\r\n\r\n                                borderRadius: `var(--el-border-radius-round)`,\r\n                            }\">\r\n\r\n                            <el-col :span=\"16\" class=\"block-content\">\r\n                                <div class=\"block-title\">\r\n                                    {{ item.id }}. {{ item.title }} <span class=\"must\" v-if=\"item.must\">(必填)</span>\r\n                                </div>\r\n\r\n                                <div class=\"block-info\" v-if=\"item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school'\r\n                                    || item.type === 'phone' || item.type === 'email'\">\r\n                                    <el-input placeholder=\"请输入内容\" style=\"margin-left: 10px\">\r\n                                    </el-input>\r\n                                </div>\r\n\r\n                                <div class=\"block-choice\" v-if=\"item.type === 'sex'\">\r\n                                    <div style=\"padding-bottom: 10px\"><el-radio value=\"0\">男</el-radio></div>\r\n                                    <div><el-radio value=\"0\">女</el-radio></div>\r\n                                </div>\r\n\r\n                                <div class=\"block-description\"\r\n                                    v-if=\"item.description !== '' && item.description !== null && item.description !== undefined\">\r\n                                    {{ item.description }}\r\n                                </div>\r\n\r\n                                <!--                  图片-->\r\n                                <el-row class=\"block-img\" v-for=\"(i, index) in item.imgList\" :key=\"i.index\">\r\n                                    <el-col :offset=\"2\" :span=\"10\" class=\"demo-image__preview\" v-if=\"index % 2 === 0\">\r\n                                        <el-image style=\"width: 200px; height: 200px\" :src=\"i.url\"\r\n                                            :preview-src-list=\"[i.url]\">\r\n                                        </el-image>\r\n                                    </el-col>\r\n                                    <el-col :span=\"10\" class=\"demo-image__preview\"\r\n                                        v-if=\"index % 2 === 0 && index + 1 <= item.imgList.length - 1\">\r\n                                        <el-image style=\"width: 200px; height: 200px\" :src=\"item.imgList[index + 1].url\"\r\n                                            :preview-src-list=\"[item.imgList[index + 1].url]\">\r\n                                        </el-image>\r\n                                    </el-col>\r\n                                </el-row>\r\n                                <span style=\"color: #9b9ea0;font-size: x-small\"\r\n                                    v-if=\"item.imgList.length !== 0\">（点击图片查看大图）</span>\r\n\r\n\r\n                                <!--                视频-->\r\n                                <el-row class=\"block-img\" v-for=\"i in item.videoList\" :key=\"i.index\">\r\n                                    <embed width=400 height=230 transparentatstart=true animationatstart=false\r\n                                        autostart=true autosize=false volume=100 displaysize=0 showdisplay=true\r\n                                        showstatusbar=true showcontrols=true showaudiocontrols=true showtracker=true\r\n                                        showpositioncontrols=true balance=true :src=\"i.url\">\r\n                                </el-row>\r\n\r\n\r\n                                <div class=\"block-choice\" v-for=\"ans in item.options\" :key=\"ans.id\">\r\n\r\n                                    <!--                  单选-->\r\n                                    <el-radio v-if=\"item.type === 'radio'\" value=\"0\">\r\n                                        {{ ans.title }}<span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\"\r\n                                            v-if=\"ans.hasNumLimit\">剩余{{\r\n                                                ans.supply - ans.consume }}&emsp;总计{{ ans.supply }}</span>\r\n                                    </el-radio>\r\n\r\n                                    <!--                  多选-->\r\n                                    <el-checkbox v-if=\"item.type === 'checkbox'\" value=\"0\">\r\n                                        {{ ans.title }}\r\n                                        <span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\"\r\n                                            v-if=\"ans.hasNumLimit\">剩余{{\r\n                                                ans.supply -\r\n                                                ans.consume }}&emsp;总计{{ ans.supply }}</span>\r\n                                    </el-checkbox>\r\n\r\n                                    <!--                  填空-->\r\n                                    <el-input v-if=\"item.type === 'text' && item.row > 1\" type=\"textarea\"\r\n                                        placeholder=\"请输入内容\" v-bind=\"ans.title\">\r\n                                    </el-input>\r\n                                    <el-input v-if=\"item.type === 'text' && item.row === 1\" placeholder=\"请输入内容\"\r\n                                        v-bind=\"ans.title\">\r\n                                    </el-input>\r\n                                </div>\r\n\r\n                                <div class=\"block-choice\" v-if=\"item.type === 'mark'\">\r\n                                    <!--                  评分-->\r\n                                    <el-rate value=\"0\" :max=\"item.score\"></el-rate>\r\n                                </div>\r\n\r\n                                <!--                 关联信息-->\r\n                                <div class=\"block-relation\" v-if=\"isLogic && item.last_question !== 0\">\r\n                                    <div>{{ 关联待更新 }}</div>\r\n                                </div>\r\n\r\n                                <div\r\n                                    v-if=\"item.type !== 'name' && item.type !== 'stuId' && item.type !== 'class' && item.type !== 'school'\">\r\n                                    <div class=\"block-point\"\r\n                                        v-if=\"scoringMode !== false && item.point !== null && item.point !== undefined\">\r\n                                        <div v-if=\"item.point === ''\">分值：0</div>\r\n                                        <div v-else>分值：{{ item.point }}</div>\r\n                                    </div>\r\n\r\n                                    <div class=\"block-refer\" v-if=\"item.refer !== null && item.refer !== undefined\">\r\n                                        <div v-if=\"item.refer === ''\">答案：无</div>\r\n                                        <div v-else>参考答案：{{ item.refer }}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </el-col>\r\n\r\n                            <el-col :span=\"8\" class=\"block-button\" style=\"text-align: right\"\r\n                                v-if=\"hoverItem === item.id\">\r\n                                <el-button-group>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"编辑\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"edit(item.id)\"><el-icon>\r\n                                                <EditPen />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" v-if=\"isLogic\" effect=\"light\" content=\"添加关联逻辑\"\r\n                                        placement=\"bottom\" open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"logic(item.id)\"><el-icon>\r\n                                                <Link />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"复制\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"copy(item.id)\"><el-icon>\r\n                                                <DocumentCopy />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"删除\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"del_pre(item.id)\"><el-icon>\r\n                                                <Delete />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"上移\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"up(item.id)\"><el-icon>\r\n                                                <ArrowUp />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"下移\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"down(item.id)\"><el-icon>\r\n                                                <ArrowDown />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                </el-button-group>\r\n                            </el-col>\r\n\r\n                        </el-row>\r\n                    </div>\r\n\r\n                </div>\r\n            </el-main>\r\n\r\n        </el-container>\r\n        <el-dialog :title=\"发布链接\" v-model=\"publishDialogVisible\" class=\"dialog\" style=\"min-width:400px; display: flex; align-items: center;\">\r\n            <el-row><span>发布链接：{{ linkShare }}</span></el-row>\r\n        </el-dialog>\r\n\r\n        <el-dialog :title=\"模板库\" v-model=\"qsModelDialogVisible\" class=\"dialog\" width=\"800px\">\r\n            <el-button type=\"priamry\" @click=\"setAMoedel()\" size=\"large\">答辩模板</el-button>\r\n            <el-button type=\"priamry\" @click=\"setBMoedel()\" size=\"large\">游戏评价模板</el-button>\r\n        </el-dialog>\r\n\r\n        <el-dialog :title=\"问卷逻辑\" v-model=\"qsOutLineDialogVisible\" class=\"dialog\" width=\"600px\">\r\n            <div class=\"outline\">\r\n                <el-tree :data=\"outline\" node-key=\"id\" :props=\"defaultProps\" @node-drop=\"handleDrop\" draggable\r\n                    :allow-drop=\"allowDrop\"></el-tree>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog :title=\"qsEditDialogTitle\" v-model=\"qsEditDialogVisible\" :before-close=\"cancel_pre\" class=\"dialog\"\r\n            width=\"600px\">\r\n            <el-form ref=\"form\" :model=\"willAddQuestion\" label-width=\"100px\">\r\n                <el-form-item label=\"题目类型\">\r\n                    <el-select :disabled=\"selectDisAble\" v-model=\"willAddQuestion.type\" placeholder=\"请选择题目类型\"\r\n                        @change=\"typeChange\">\r\n                        <el-option v-for=\"item in allType\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <div class=\"is-info\" v-if=\"willAddQuestion.type === 'name'\r\n                    || willAddQuestion.type === 'stuId'\r\n                    || willAddQuestion.type === 'class'\r\n                    || willAddQuestion.type === 'school'\r\n                    || willAddQuestion.type === 'phone'\r\n                    || willAddQuestion.type === 'email'\r\n                    || willAddQuestion.type === 'sex'\">\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'name'\">\r\n                        <el-input value=\"姓名\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'stuId'\">\r\n                        <el-input value=\"学号\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'school'\">\r\n                        <el-input value=\"学校\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'sex'\">\r\n                        <el-input value=\"性别\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'phone'\">\r\n                        <el-input value=\"手机号\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'email'\">\r\n                        <el-input value=\"邮箱\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"是否必填\">\r\n                        <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n                    </el-form-item>\r\n                </div>\r\n                <div v-else class=\"non-pre\">\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.title\" placeholder=\"请输入标题\" style=\"width: 600px\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"题目描述\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.description\" placeholder=\"请输入题目描述\"\r\n                            style=\"width: 600px\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"是否必填\">\r\n                        <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n                    </el-form-item>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'radio' || willAddQuestion.type === 'checkbox'\">\r\n                        <el-form-item :label=\"'选项' + (index + 1)\" v-for=\"(item, index) in willAddQuestion.options\"\r\n                            :key=\"index\">\r\n                            <el-row>\r\n                                <el-col :span=\"8\">\r\n                                    <el-input v-model=\"item.title\" placeholder=\"请输入选项名\"></el-input>\r\n                                </el-col>\r\n                                <el-col :span=\"16\">\r\n                                    <el-button-group>\r\n                                        <el-button type=\"danger\" plain class=\"deleteOptionButton\"\r\n                                            @click=\"deleteOption(index)\">删除选项</el-button>\r\n                                        <el-button type=\"success\" plain style=\"margin-right: 8px\"\r\n                                            v-if=\"!item.hasNumLimit\" @click=\"item.hasNumLimit = true\">添加库存限制</el-button>\r\n                                        <el-button type=\"info\" plain style=\"margin-right: 8px\" v-if=\"item.hasNumLimit\"\r\n                                            @click=\"item.hasNumLimit = false\">取消库存限制</el-button>\r\n                                        <el-input-number v-model=\"item.supply\"\r\n                                            v-if=\"item.hasNumLimit\"></el-input-number>\r\n                                    </el-button-group>\r\n                                </el-col>\r\n                            </el-row>\r\n\r\n                        </el-form-item>\r\n                        <el-row>\r\n                            <el-col :span=\"4\">\r\n                                <el-button type=\"primary\" plain class=\"addOptionButton\"\r\n                                    @click=\"addOption\">新增选项</el-button>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </template>\r\n                    <span>&emsp;</span>\r\n                    <template v-if=\"willAddQuestion.type === 'text'\">\r\n                        <el-form-item label=\"填空\">\r\n                            <el-input type=\"textarea\" class=\"my-input\" :rows=\"willAddQuestion.row\" resize=\"none\">\r\n                            </el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"行数\">\r\n                            <el-input-number v-model=\"willAddQuestion.row\" :min=\"1\" :max=\"10\"></el-input-number>\r\n                        </el-form-item>\r\n                    </template>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'mark'\">\r\n                        <el-form-item label=\"最大分数\">\r\n                            <el-input-number v-model=\"willAddQuestion.score\" :min=\"3\" :max=\"10\"></el-input-number>\r\n                        </el-form-item>\r\n                    </template>\r\n\r\n                    <!--          填空答案设置-->\r\n                    <el-form-item v-if=\"willAddQuestion.type === 'text'\" label=\"参考答案\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.refer\" placeholder=\"请输入参考答案\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <!--          多选答案设置-->\r\n                    <el-form-item v-if=\"willAddQuestion.type === 'checkbox'\" label=\"参考答案\" style=\"width: 100%;\">\r\n                        <el-select v-model=\"willAddQuestion.refer\" multiple placeholder=\"请选择\">\r\n                            <el-option v-for=\"item in willAddQuestion.options\" :key=\"item.id\" :value=\"item.title\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n\r\n                    <!--          单选答案设置-->\r\n                    <el-form-item v-if=\"willAddQuestion.type === 'radio'\" label=\"参考答案\" style=\"width: 100%;\">\r\n                        <el-select v-model=\"willAddQuestion.refer\" @change=\"radioChange\">\r\n                            <el-option v-for=\"item in willAddQuestion.options\" :key=\"item.id\" :value=\"item.title\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item v-if=\"scoringMode\" label=\"分值\" style=\"width: 100%;\">\r\n                        <el-input-number v-model=\"willAddQuestion.point\" :min=\"0\" :max=\"1000\"></el-input-number>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"上传图片\">\r\n                        <el-upload class=\"upload-img\" :action=uploadImgUrl multiple :http-request=\"upLoadImage\"\r\n                            :before-upload=\"beforeImageUpload\" :file-list=\"willAddQuestion.imgList\" :limit=\"6\">\r\n                            <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n                            <span class=\"el-upload__tip\">&emsp;只能上传jpg/png文件，且不超过5mb</span>\r\n                        </el-upload>\r\n                    </el-form-item>\r\n\r\n                    <!-- <el-form-item label=\"上传视频\">\r\n                        <el-upload class=\"upload-video\" :action=uploadVideoUrl :http-request=\"upLoadVideo\"\r\n                            :before-upload=\"beforeVideoUpload\" :file-list=\"willAddQuestion.videoList\" :limit=\"1\">\r\n                            <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n                            <span class=\"el-upload__tip\">&emsp;只能上传mp4/mkv文件，且不超过10mb</span>\r\n                        </el-upload>\r\n                    </el-form-item> -->\r\n                </div>\r\n            </el-form>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"primary\" @click=\"dialogConfirm\" size=\"default\">确定</el-button>\r\n                    &emsp;\r\n                    <el-button :span=\"6\" @click=\"cancel_pre\" size=\"default\">取消</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog v-model=\"qsLinkDialogVisible\" :title=\"qsLinkDialogTitle\" class=\"linkDialog\" :show-close=\"false\"\r\n            width=\"800px\">\r\n            <el-row>\r\n                <el-col span=\"8\" style=\"text-align: center\">\r\n                    <el-row>\r\n                        <div id=\"qrcode_2\" style=\"height:200px; width:200px; margin-left: 22px;\"></div>\r\n                    </el-row>\r\n                </el-col>\r\n                <el-col span=\"16\">\r\n                    <el-row>\r\n                        <h2>链接与二维码</h2>\r\n                    </el-row>\r\n                    <el-row style=\"margin-top:15px\">\r\n                        <el-col :span=\"16\" style=\"margin-right: 5px\">\r\n                            <el-input :placeholder=linkShare v-model=\"linkShare\" id=\"copyText\" :disabled=\"true\">\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-button type=\"info\" plain id=\"copyBtn\" @click=\"copyToClip\">复制链接</el-button></el-row>\r\n                    <el-row style=\"margin-top: 25px\">\r\n                        <el-button type=\"primary\" plain @click=\"downloadQrcode\">下载二维码</el-button>\r\n                        <el-button type=\"primary\" @click=\"genCodeAgain\" style=\"margin-left: 30px\">重新生成链接</el-button>\r\n                    </el-row>\r\n                </el-col>\r\n            </el-row>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"success\" style=\"width: 80px\" @click=\"finish\">完 成</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog v-model=\"editWrongMsgVisible\" class=\"linkDialog\" :show-close=\"false\" :close-on-click-modal=\"false\"\r\n            width=\"300px\">\r\n            <span>{{ editWrongMsg }}</span>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"danger\" style=\"width: 80px\"\r\n                        @click=\"editWrongMsgVisible = false\">知道了</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <!--    关联问题弹框-->\r\n        <el-dialog :title=\"qsLogicDialogTitle\" v-model=\"qsLogicDialogVisible\" :before-close=\"cancel_pre_logic\"\r\n            class=\"dialog\">\r\n            <el-form v-if=\"questions.length !== 0\" class=\"logic-form\" ref=\"form\" label-width=\"80px\">\r\n\r\n                <div class=\"logic-title\">\r\n                    当前题目：{{ questions[logicIndex].id }}. {{ questions[logicIndex].title }}\r\n                </div>\r\n\r\n                <el-form-item label=\"关联题目\">\r\n                    <el-select v-model=\"willAddLogic.question_id\" placeholder=\"请选择关联题目\">\r\n                        <el-option v-for=\"item in questionsFilter\" :key=\"item.id\" :label=\"idTitle(item)\"\r\n                            :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"关联选项\" v-if=\"willAddLogic.question_id !== 0\">\r\n                    <el-select v-model=\"willAddLogic.option_id\" placeholder=\"请选择关联选项\">\r\n                        <el-option v-for=\"item in questions[willAddLogic.question_id - 1].options\" :key=\"item.id\"\r\n                            :label=\"item.title\" :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <div class=\"logic-info\" v-if=\"willAddLogic.question_id !== 0\">\r\n                    <!--          保存加入后选项id记得减一-->\r\n                    当题目<span style=\"color: #1687fd\"> \"{{ idTitle(questions[willAddLogic.question_id - 1]) }}\"\r\n                    </span>选择选项<span style=\"color: #1687fd\"> \"{{ questions[willAddLogic.question_id -\r\n                        1].options[willAddLogic.option_id -\r\n                        1].title\r\n                        }}\"\r\n                    </span>时此题才会显示\r\n                </div>\r\n                <div class=\"logic-info\" v-if=\"questionsFilter.length === 1\">\r\n                    题目之前不存在单（多）选题，无法设置关联题目\r\n                </div>\r\n\r\n                <div class=\"logic-bt\">\r\n                    <el-button type=\"primary\" @click=\"logicConfirm(logicIndex)\">确定</el-button>\r\n                </div>\r\n\r\n            </el-form>\r\n        </el-dialog>\r\n        <el-dialog :title=\"settingDialogTitle\" v-model=\"settingDialogVisible\" class=\"settingDialog\" width=\"30%\">\r\n            <el-form>\r\n                <el-form-item class=\"timeBlock\" label=\"截止时间\">\r\n                    <el-date-picker style=\"margin-left: 100px\" v-model=\"timeFrame\" @change=\"formatTime\" type=\"datetime\"\r\n                        value-format=\"yyyy-MM-dd HH:mm\" placeholder=\"选择结束时间\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item label=\"是否限制考试时长（分钟）\" class=\"recycleBlock\">\r\n                    <el-row>\r\n                        <el-switch v-model=\"hasRecycleLimit\" active-color=\"#13ce66\" inactive-color=\"grey\"\r\n                            active-text=\"是\" inactive-text=\"否\">\r\n                        </el-switch>\r\n                        <el-input-number v-model=\"duration\" :min=\"1\" v-if=\"hasRecycleLimit\"\r\n                            style=\"margin-left: 120px;height: 40px;margin-top: 10px\">\r\n                        </el-input-number>\r\n                    </el-row>\r\n                    \r\n                </el-form-item>\r\n                <el-form-item label=\"是否问题乱序展示\">\r\n                    <el-row>\r\n                        <el-switch v-model=\"isRandom\" active-color=\"#13ce66\" inactive-color=\"grey\"\r\n                            active-text=\"是\" inactive-text=\"否\">\r\n                        </el-switch>\r\n                    </el-row>\r\n                </el-form-item>\r\n                <!-- <el-form-item label=\"题目关联逻辑开关\">\r\n                    <el-switch v-model=\"isLogic\" active-text=\"开\" inactive-text=\"关\" @change=\"closeGlobalLogic\">\r\n                    </el-switch>\r\n                </el-form-item>\r\n\r\n                <div class=\"logic-description\">\r\n                    题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】\r\n                </div>\r\n\r\n                <div class=\"logic-description important\" v-if=\"isLogic\">\r\n                    为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑\r\n                </div> -->\r\n            </el-form>\r\n\r\n            <div class=\"setting-bt\">\r\n                <el-button type=\"primary\" @click=\"settingSuccess\">完成</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n    <div style=\"bottom: 300px; left: 20px\">\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n//import editHeader from \"../../../components/header/editHeader\";\r\nimport QRCode from \"qrcodejs2\";\r\nimport getDataApi from \"@/utils/getDataApi\";\r\nimport saveDataApi from \"@/utils/saveDataApi\";\r\nimport user from \"@/storage/user\";\r\n\r\nexport default {\r\n    mixins: [getDataApi, saveDataApi],\r\n    data() {\r\n        return {\r\n            logicQuestionState: 0,  // 用于判断用户是否更改关联问题设置\r\n            logicOptionState: 0,    // 用于判断用户是否更改关联选项设置\r\n\r\n            //uploadImgUrl: this.GLOBAL.backUrl + 'upload/image',\r\n            //uploadVideoUrl: this.GLOBAL.backUrl + 'upload/video',\r\n\r\n            duration: 120,\r\n            hasRecycleLimit: false,\r\n            timer: '',\r\n            value: '',\r\n            qrcode: null,\r\n            timeFrame: '',\r\n            linkShare: '',\r\n            editWrongMsg: \"\",\r\n            editWrongMsgVisible: false,\r\n            qsLinkDialogVisible: false,\r\n            qsLinkDialogTitle: \"发布成功！\",\r\n            settingDialogTitle: \"高级设置\",   // 高级设置弹框的标题\r\n            settingDialogVisible: false,     // 高级设置对话框可见性\r\n            publishDialogVisible: false,\r\n            closingDate: null,   // 高级设置中问卷回收的截止日期\r\n            isLogic: true,      // 问卷是否引入关联逻辑\r\n            scoringMode: true,    // 评分模式（高级设置中开启后可为题目设置得分）\r\n            isReleased: false,   // 是否发布\r\n            editIndex: 0,\r\n            logicIndex: 0,          // 当前添加题目逻辑的问题ID\r\n            selectDisAble: false,\r\n            hoverItem: 0,\r\n            activeName: 'first',\r\n            title: '',\r\n            description: '',\r\n            input3: '',\r\n            input2: '',\r\n            defaultProps: {\r\n                children: 'children',\r\n                label: 'label'\r\n            },\r\n            type: \"1\",\r\n            questions: [],\r\n            outline: [],\r\n            pid: this.$route.query.pid,\r\n            qsEditDialogVisible: false,\r\n            qsEditDialogTitle: \"新建题目\",\r\n            qsLogicDialogVisible: false,\r\n            qsLogicDialogTitle: \"关联逻辑设置\",\r\n            qsOutLineDialogVisible: false,\r\n            qsModelDialogVisible: false,\r\n            modelA: false,\r\n            modelB: false,\r\n            isRandom: false,\r\n            willAddQuestion: {\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 1 // 选项id\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 10, // 最大评分\r\n                refer: '', // 参考答案\r\n                point: 0,  // 分值\r\n                imgList: [],\r\n                videoList: [],\r\n            },\r\n            willAddLogic: {\r\n                question_id: 0,\r\n                option_id: 1,\r\n            },\r\n            allType: [\r\n                {\r\n                    value: 'radio',\r\n                    label: '单选题',\r\n                },\r\n                {\r\n                    value: 'checkbox',\r\n                    label: '多选题',\r\n                },\r\n                {\r\n                    value: 'text',\r\n                    label: '填空题',\r\n                },\r\n                {\r\n                    value: 'judge',\r\n                    label: '判断题',\r\n                },\r\n                {\r\n                    value: 'name',\r\n                    label: '姓名'\r\n                },\r\n                {\r\n                    value: 'stuId',\r\n                    label: '学号'\r\n                },\r\n                {\r\n                    value: 'class',\r\n                    label: '班级'\r\n                },\r\n                {\r\n                    value: 'school',\r\n                    label: '学校'\r\n                },\r\n            ],\r\n\r\n            xiaoxueqi_questions: [\r\n                {\r\n                    id: 1,\r\n                    type: 'radio',\r\n                    title: '这是什么网站？',\r\n                    description: '',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '问卷调查网站',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '音乐播放网站',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    type: 'checkbox',\r\n                    title: '本学期都使用了什么平台？',\r\n                    description: '',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '雨课堂',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '华为云',\r\n                    }, {\r\n                        id: 3,\r\n                        title: '软件学院云平台',\r\n                    }, {\r\n                        id: 4,\r\n                        title: 'U+',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    type: 'text',\r\n                    title: '1+2=?',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 0,\r\n                        title: '',\r\n                    }],\r\n                    row: 1,\r\n                    score: 0,\r\n                },\r\n            ],\r\n            xiaoxueqi_outline: [\r\n                {\r\n                    id: 1,\r\n                    label: '1. 这是一个什么网站？',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    label: '2. 软工小学期助教都有谁？',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    label: '3. 软工小学期累不累',\r\n                },\r\n                {\r\n                    id: 4,\r\n                    label: '4. 您对小学期的评价如何？',\r\n                },\r\n                {\r\n                    id: 5,\r\n                    label: '5. 给小学期打个分吧~',\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    //components: {\r\n    //editHeader,\r\n    //},\r\n    methods: {\r\n        //---------------------------Image and video--------------------------------//\r\n        upLoadImage(file) {\r\n            const formData = new FormData();\r\n            formData.append('image', file.file);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/image/api/upload_image',\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status_code) {\r\n                        case 1:\r\n                            var name = res.data.name;\r\n                            var url = res.data.url;\r\n                            this.willAddQuestion.imgList.push({\r\n                                name: name,\r\n                                url: url\r\n                            });\r\n                            console.log(this.willAddQuestion.imgList);\r\n                            break;\r\n                        case 2:\r\n                            this.$message.error(\"上传文件格式错误！\");\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"操作失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        upLoadVideo(file) {\r\n            const formData = new FormData();\r\n            formData.append('video', file.file);\r\n            this.$ajax({\r\n\r\n            })\r\n            this.$axios({\r\n                method: 'post',\r\n                url: this.uploadVideoUrl,\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status_code) {\r\n                        case 1:\r\n                            var name = res.data.name;\r\n                            var url = res.data.url;\r\n                            this.willAddQuestion.videoList.push({\r\n                                name: name,\r\n                                url: url\r\n                            });\r\n                            console.log(this.willAddQuestion.videoList);\r\n                            break;\r\n                        case 2:\r\n                            // this.$message.error(\"上传文件格式错误！\");\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"操作失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        setAMoedel() {\r\n            // {\r\n            //         id: 1,\r\n            //         type: 'radio',\r\n            //         title: '这是一个什么网站？',\r\n            //         description: '请考虑妥当后填写',\r\n            //         must: true,\r\n            //         options: [{\r\n            //             id: 1,\r\n            //             title: '问卷系统',\r\n            //         }, {\r\n            //             id: 2,\r\n            //             title: '出版系统',\r\n            //         }],\r\n            //         row: 0,\r\n            //         score: 0,\r\n            //     },\r\n            if (this.modelA) {\r\n                this.$message({\r\n                    type: 'error',\r\n                    message: '该模板已添加！'\r\n                })\r\n                return;\r\n            }\r\n            this.modelA = true;\r\n            for (let i = 0; i < this.xiaoxueqi_questions.length; i++) {\r\n                this.willAddQuestion.id = this.xiaoxueqi_questions[i].id;\r\n                this.willAddQuestion.title = this.xiaoxueqi_questions[i].title;\r\n                this.willAddQuestion.description = this.xiaoxueqi_questions[i].description;\r\n                this.willAddQuestion.must = this.xiaoxueqi_questions[i].must;\r\n                this.willAddQuestion.type = this.xiaoxueqi_questions[i].type;\r\n                this.willAddQuestion.row = this.xiaoxueqi_questions[i].row;\r\n                this.willAddQuestion.score = this.xiaoxueqi_questions[i].score;\r\n                this.willAddQuestion.options = this.xiaoxueqi_questions[i].options;\r\n                this.dialogConfirm();\r\n            }\r\n        },\r\n        setBMoedel() {\r\n            // {\r\n            //         id: 1,\r\n            //         type: 'radio',\r\n            //         title: '这是一个什么网站？',\r\n            //         description: '请考虑妥当后填写',\r\n            //         must: true,\r\n            //         options: [{\r\n            //             id: 1,\r\n            //             title: '问卷系统',\r\n            //         }, {\r\n            //             id: 2,\r\n            //             title: '出版系统',\r\n            //         }],\r\n            //         row: 0,\r\n            //         score: 0,\r\n            //     },\r\n            if (this.modelB) {\r\n                this.$message({\r\n                    type: 'error',\r\n                    message: '该模板已添加！'\r\n                })\r\n                return;\r\n            }\r\n            this.modelB = true;\r\n            for (let i = 0; i < this.some_questions.length; i++) {\r\n                this.willAddQuestion.id = this.some_questions[i].id;\r\n                this.willAddQuestion.title = this.some_questions[i].title;\r\n                this.willAddQuestion.description = this.some_questions[i].description;\r\n                this.willAddQuestion.must = this.some_questions[i].must;\r\n                this.willAddQuestion.type = this.some_questions[i].type;\r\n                this.willAddQuestion.row = this.some_questions[i].row;\r\n                this.willAddQuestion.score = this.some_questions[i].score;\r\n                this.willAddQuestion.options = this.some_questions[i].options;\r\n                this.dialogConfirm();\r\n            }\r\n        },\r\n        beforeImageUpload(file) {\r\n            const isJPG = file.type === 'image/jpeg';\r\n            const isPNG = file.type === 'image/png';\r\n            const isLt5M = file.size / 1024 / 1024 < 10;\r\n\r\n            if (!isJPG && !isPNG) {\r\n                this.$message.error('上传头像图片只能是 JPG/PNG 格式!');\r\n            } else if (!isLt5M) {\r\n                this.$message.error('上传头像图片大小不能超过 5MB!');\r\n            }\r\n            return (isJPG || isPNG) && isLt5M;\r\n        },\r\n        beforeVideoUpload(file) {\r\n            const filename = file.name;\r\n            var suffix = '';\r\n            var isVideo = false;\r\n            const isLt2M = file.size / 1024 / 1024 < 30;\r\n            try {\r\n                var flieArr = filename.split('.');\r\n                suffix = flieArr[flieArr.length - 1];\r\n            } catch (err) {\r\n                suffix = '';\r\n            }\r\n            var videoList = ['mp4', 'mkv'];\r\n            var judge = videoList.some(function (item) {\r\n                return item === suffix;\r\n            });\r\n            if (judge) {\r\n                isVideo = true;\r\n            }\r\n            if (!isVideo) {\r\n                this.$message.error('上传视频文件只能是 MP4/MKV 格式!');\r\n            } else if (!isLt2M) {\r\n                this.$message.error('上传视频文件大小不能超过 10MB!');\r\n            }\r\n            return isLt2M && isVideo;\r\n        },\r\n        beforeRemove(file, fileList) {\r\n            console.log(file, fileList);\r\n            return this.$confirm(`确定移除 ${file.name}？`);\r\n        },\r\n        handleRemove(file, fileList) {\r\n            console.log(file, fileList);\r\n            this.$message(\"移除成功\")\r\n        },\r\n        //--------------------------------------------------------------------------//\r\n        autoSave() {\r\n            this.saveQnInfo('autosave', '2');\r\n        },\r\n        download() {\r\n            // 获取base64的图片节点\r\n            var img = document.getElementById('qrcode_2').getElementsByTagName('img')[0];\r\n            // 构建画布\r\n            var canvas = document.createElement('canvas');\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            canvas.getContext('2d').drawImage(img, 0, 0);\r\n            // 构造url\r\n            var url = canvas.toDataURL('image/png');\r\n            console.log(url);\r\n            // 构造a标签并模拟点击\r\n            var downloadLink = document.createElement('a');\r\n            downloadLink.download = '二维码.png';\r\n            downloadLink.href = url;\r\n            downloadLink.click();\r\n            downloadLink.remove();\r\n        },\r\n        formatTime(time) {\r\n            this.timeFrame = time;\r\n        },\r\n        finish() {\r\n            this.qsLinkDialogVisible = false;\r\n            this.$router.push('/index') // 跳转到问卷中心？\r\n        },\r\n        publishSuccess: function () {\r\n            this.qsLinkDialogVisible = true;\r\n        },\r\n        edit: function (index) {\r\n            index--;\r\n            this.willAddQuestion = {\r\n                question_id: this.questions[index].question_id,\r\n                id: this.questions[index].id,\r\n                type: this.questions[index].type,\r\n                title: this.questions[index].title,\r\n                must: this.questions[index].must,\r\n                description: this.questions[index].description,\r\n                options: JSON.parse(JSON.stringify(this.questions[index].options)),\r\n                row: this.questions[index].row,\r\n                score: this.questions[index].score,\r\n                refer: this.questions[index].refer,\r\n                point: this.questions[index].point,\r\n                is_shown: this.questions[index].is_shown,\r\n                last_question: this.questions[index].last_question,\r\n                last_option: this.questions[index].last_option,\r\n                imgList: JSON.parse(JSON.stringify(this.questions[index].imgList)),\r\n                videoList: JSON.parse(JSON.stringify(this.questions[index].videoList)),\r\n            };\r\n            this.editIndex = index;\r\n            this.selectDisAble = true;\r\n            this.qsEditDialogTitle = \"编辑题目\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        isExistEmptyOption: function () {\r\n            for (let i = 0; i < this.willAddQuestion.options.length; i++) {\r\n                if (this.willAddQuestion.options[i].title === '') return true;\r\n            }\r\n            return false;\r\n        },\r\n        isExistSameOption: function () {\r\n            for (let i = 0; i < this.willAddQuestion.options.length; i++) {\r\n                for (let j = 0; j < this.willAddQuestion.options.length; j++) {\r\n                    if (i !== j && this.willAddQuestion.options[i].title === this.willAddQuestion.options[j].title) return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        dialogConfirm() {\r\n            let index = this.editIndex;\r\n            // this.qsEditDialogVisible = false;\r\n            if (this.qsEditDialogTitle === \"编辑题目\") {\r\n                this.questions[index].id = this.willAddQuestion.id;\r\n                this.questions[index].row = this.willAddQuestion.row;\r\n                this.questions[index].must = this.willAddQuestion.must;\r\n                this.questions[index].description = this.willAddQuestion.description;\r\n                this.questions[index].title = this.willAddQuestion.title;\r\n                this.questions[index].options = this.willAddQuestion.options;\r\n                this.questions[index].score = this.willAddQuestion.score;\r\n                this.qsEditDialogTitle = \"\";\r\n                this.qsEditDialogVisible = false;\r\n                this.questions[index].refer = this.willAddQuestion.refer;\r\n                this.questions[index].point = this.willAddQuestion.point;\r\n                // 大纲更新\r\n                this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                if (this.willAddQuestion.title === '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '标题不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能重复!'\r\n                    });\r\n                }\r\n                else {\r\n                    this.questions[index].id = this.willAddQuestion.id;\r\n                    this.questions[index].row = this.willAddQuestion.row;\r\n                    this.questions[index].must = this.willAddQuestion.must;\r\n                    this.questions[index].description = this.willAddQuestion.description;\r\n                    this.questions[index].title = this.willAddQuestion.title;\r\n                    this.questions[index].options = this.willAddQuestion.options;\r\n                    this.questions[index].score = this.willAddQuestion.score;\r\n                    this.questions[index].is_shown = this.willAddQuestion.is_shown;\r\n                    this.questions[index].last_question = this.willAddQuestion.last_question;\r\n                    this.questions[index].last_option = this.willAddQuestion.last_option;\r\n                    this.questions[index].options = JSON.parse(JSON.stringify(this.willAddQuestion.options));\r\n                    this.questions[index].imgList = JSON.parse(JSON.stringify(this.willAddQuestion.imgList));\r\n                    this.questions[index].videoList = JSON.parse(JSON.stringify(this.willAddQuestion.videoList));\r\n                    // 大纲更新\r\n                    this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                    this.qsEditDialogTitle = \"\";\r\n                    this.qsEditDialogVisible = false;\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '修改成功!'\r\n                    });\r\n                    // 重置\r\n                    this.resetWillAdd();\r\n                    this.selectDisAble = false;\r\n                }\r\n                // 重置\r\n                this.willAddQuestion = {\r\n                    id: 0,\r\n                    type: '',\r\n                    title: '',\r\n                    must: false,\r\n                    description: '',\r\n                    options: [\r\n                        {\r\n                            title: '', //选项标题\r\n                            id: 1 //选项id\r\n                        }],\r\n                    row: 1,\r\n                    score: 10,\r\n                    refer: '',\r\n                    point: 0,  // 分值\r\n                };\r\n                this.selectDisAble = false;\r\n            }\r\n            else {\r\n                if (this.willAddQuestion.type === 'name') { this.willAddQuestion.title = '姓名'; this.willAddQuestion.refer = ''; }\r\n                if (this.willAddQuestion.type === 'stuId') { this.willAddQuestion.title = '学号'; this.willAddQuestion.refer = ''; }\r\n                if (this.willAddQuestion.type === 'class') { this.willAddQuestion.title = '班级'; this.willAddQuestion.refer = ''; }\r\n                if (this.willAddQuestion.type === 'school') { this.willAddQuestion.title = '学校'; this.willAddQuestion.refer = ''; }\r\n                if (this.willAddQuestion.title === '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '标题不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能重复!'\r\n                    });\r\n                }\r\n                else {\r\n                    this.qsEditDialogVisible = false;\r\n                    this.willAddQuestion.id = this.questions.length + 1;\r\n                    // 大纲更新\r\n                    this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                    if (this.willAddQuestion.type === 'judge') {\r\n                        this.willAddQuestion.options = [{ title: '对', id: 1 }, { title: '错', id: 2 }];\r\n                    }\r\n                    this.questions.push(this.willAddQuestion);\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '添加成功!'\r\n                    });\r\n                    // 重置\r\n                    this.resetWillAdd();\r\n                }\r\n            }\r\n        },\r\n        resetWillAdd() {\r\n            this.willAddQuestion = {\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 1 // 选项id\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 10, // 最大评分\r\n                refer: '', // 参考答案\r\n                point: 0,  // 分值\r\n                imgList: [],\r\n                videoList: []\r\n            }\r\n        },\r\n        dialogCancel: function () {\r\n            this.qsEditDialogTitle = \"新建题目\";\r\n            this.resetWillAdd();\r\n            this.qsEditDialogVisible = false;\r\n            this.selectDisAble = false;\r\n        },\r\n        cancel_pre: function () {\r\n            this.$confirm('已编辑的题目信息将不会保存,确认关闭？', '提示', {\r\n                confirmButtonText: '确认',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                this.dialogCancel();\r\n            }).catch(() => {\r\n            });\r\n        },\r\n        LogicDialogCancel: function () {\r\n            this.qsLogicDialogVisible = false;\r\n            this.resetLogic();\r\n        },\r\n        cancel_pre_logic: function () {\r\n            this.$confirm('已编辑的题目关联逻辑将不会保存,确认关闭？', '提示', {\r\n                confirmButtonText: '确认',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                this.LogicDialogCancel();\r\n            }).catch(() => {\r\n            });\r\n        },\r\n        logicConfirm: function (index) {\r\n            console.log(this.questions);\r\n            let questions = this.questions;\r\n            let willAddLogic = this.willAddLogic;\r\n            questions[index].last_question = willAddLogic.question_id;\r\n            questions[index].last_option = willAddLogic.option_id;\r\n            questions[index].is_shown = willAddLogic.question_id === 0;\r\n            if (this.willAddLogic.question_id !== this.logicQuestionState || this.willAddLogic.option_id !== this.logicOptionState) {\r\n                this.$message({\r\n                    type: 'success',\r\n                    message: '问题关联设置成功'\r\n                });\r\n            }\r\n            this.qsLogicDialogVisible = false;\r\n            this.resetLogic();\r\n        },\r\n        logic: function (index) {\r\n            this.logicIndex = index - 1;\r\n            this.willAddLogic.question_id = this.questions[index - 1].last_question;\r\n            if (this.questions[index - 1].last_option !== 0) { this.willAddLogic.option_id = this.questions[index - 1].last_option; }\r\n            else this.willAddLogic.option_id = 1;\r\n            console.log(this.questions);\r\n            this.qsLogicDialogVisible = true;\r\n            this.logicQuestionState = this.willAddLogic.question_id;\r\n            this.logicOptionState = this.willAddLogic.option_id;\r\n        },\r\n        resetLogic() {\r\n            this.willAddLogic = {\r\n                question_id: 0,\r\n                option_id: 1,\r\n            };\r\n            this.logicIndex = 0;\r\n        },\r\n        typeChange(value) {\r\n            this.willAddQuestion.type = value;\r\n        },\r\n        radioChange(value) {\r\n            this.willAddQuestion.refer = value;\r\n        },\r\n        judgeChange(value) {\r\n            this.willAddQuestion.refer = value;\r\n        },\r\n        addOption() {\r\n            // 问题关联检查\r\n            if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\r\n                this.$message({\r\n                    type: 'warning',\r\n                    message: '此问题已被关联，无法新增选项，请删除关联信息后再试'\r\n                });\r\n                return;\r\n            }\r\n            this.willAddQuestion.options.push({\r\n                title: '',\r\n                id: this.willAddQuestion.options.length + 1,\r\n            });\r\n        },\r\n        deleteOption(index) {\r\n            if (this.willAddQuestion.options.length === 1) {\r\n                this.$message({\r\n                    type: \"error\",\r\n                    message: \"至少需要设置一个选项！\"\r\n                })\r\n            }\r\n            else {\r\n                // 问题关联检查\r\n                if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\r\n                    this.$message({\r\n                        type: 'warning',\r\n                        message: '此问题已被关联，无法删除选项，请删除关联信息后再试'\r\n                    });\r\n                    return;\r\n                }\r\n                // id重排\r\n                for (let i = index + 1; i < this.willAddQuestion.options.length; i++) {\r\n                    this.willAddQuestion.options[i].id--;\r\n                }\r\n                this.willAddQuestion.options.splice(index, 1);\r\n            }\r\n        },\r\n        changeTitle: function (value) {\r\n            this.title = value;\r\n        },\r\n        changeDescription: function (value) {\r\n            this.description = value;\r\n        },\r\n        openSetting: function () {\r\n            this.settingDialogVisible = true;\r\n        },\r\n        settingSuccess: function () {\r\n            this.settingDialogVisible = false;\r\n            this.$message({\r\n                type: 'success',\r\n                message: '设置已生效'\r\n            });\r\n        },\r\n        genCodeAgain() {\r\n            const formData = new FormData();\r\n            formData.append(\"qn_id\", this.$route.query.pid);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/qn/change/code',\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    if (res.data.status_code === 1) {\r\n                        this.linkShare = this.GLOBAL.baseUrl + \"/fill_test?mode=1&code=\" + res.data.code;\r\n\r\n                        if (this.qrcode == null) {\r\n                            this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n                                width: 200, //生成的二维码的宽度\r\n                                height: 200, //生成的二维码的高度\r\n                                colorDark: \"#000000\", // 生成的二维码的深色部分\r\n                                colorLight: \"#ffffff\", //生成二维码的浅色部分\r\n                                correctLevel: QRCode.CorrectLevel.H\r\n                            });\r\n                        }\r\n                        this.qrcode.clear();\r\n                        this.qrcode.makeCode(this.linkShare);\r\n                    } else {\r\n                        this.$message.error(\"请求失败！\");\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        share() {\r\n            this.publish();\r\n        },\r\n        publish() {\r\n            this.$confirm('确认发布？', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'success'\r\n            }).then(() => {\r\n                var formData = new FormData();\r\n                formData.append(\"survey_id\", this.$route.params.qnid);\r\n                this.$axios({\r\n                    method: 'post',\r\n                    url: '/survey/api/share',\r\n                    data: formData,\r\n                }).then(res => {\r\n                    switch(res.data.status_code) {\r\n                        case 1:\r\n                            this.linkShare = 'http://localhost:8080' + '/fillQnmytest/' + res.data.code;\r\n                            console.log(res.data.code);\r\n                            this.publishDialogVisible = true;\r\n                            // if (this.qrcode == null) {\r\n                            //     this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n                            //         width: 200, //生成的二维码的宽度\r\n                            //         height: 200, //生成的二维码的高度\r\n                            //         colorDark: \"#000000\", // 生成的二维码的深色部分\r\n                            //         colorLight: \"#ffffff\", //生成二维码的浅色部分\r\n                            //         correctLevel: QRCode.CorrectLevel.H\r\n                            //     });\r\n                            // }\r\n                            // this.qrcode.clear();\r\n                            // this.qrcode.makeCode(this.linkShare);\r\n                            break;\r\n                        case 2:\r\n                            break;\r\n                        case 3:\r\n                            break;\r\n                        case 4:\r\n                            break;\r\n                    }\r\n                })\r\n            }).catch(err => {\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: '取消保存'\r\n                });\r\n                console.log(err);\r\n            });\r\n        },\r\n        savetoserver() {\r\n            if (this.questions.length === 0) {\r\n                this.$message.error(\"题目为空，无法发布！\");\r\n                return;\r\n            }\r\n\r\n            this.$confirm('确认保存？', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'success'\r\n            }).then(() => {\r\n                // let loadingIns = this.$loading({ fullscreen: true, text: '拼命加载中' });\r\n                // this.publishSuccess();\r\n                var new_questions = JSON.parse(JSON.stringify(this.questions));\r\n                console.log(new_questions);\r\n                console.log(this.isRandom);\r\n                // let url = '/sm/save/qn/deploy';\r\n                console.log(\"checkpoint 0\");\r\n                for (var i = 0; i < new_questions.length; i++) {\r\n                    console.log(\"checkpoint 0.5\");\r\n                    if (new_questions[i].type == 'checkbox') {\r\n                        console.log(\"checkpoint 0.7\");\r\n                        console.log(new_questions[i].refer);\r\n                        new_questions[i].refer = new_questions[i].refer.join('-<^-^>-');\r\n                        console.log(new_questions[i].refer);\r\n                    }\r\n                }\r\n                console.log(\"checkpoint 1\");\r\n                const userInfo = user.getters.getUser(user.state());\r\n                console.log(\"checkpoint 2\");\r\n                var param = {\r\n                    username: userInfo.user.username,\r\n                    title: this.title,\r\n                    finished_time: this.timeFrame,\r\n                    description: this.description,\r\n                    type: '3',\r\n                    duration: this.duration,\r\n                    qn_id: this.$route.params.qnid,\r\n                    is_random: this.isRandom,\r\n                    questions: new_questions\r\n                };\r\n                var paramer = JSON.stringify(param, { questions: 'brackets' });\r\n                console.log(\"paramer success\");\r\n                this.$axios({\r\n                    method: 'post',\r\n                    url: '/surveymanage/api/savesurvey',\r\n                    data: paramer,\r\n                })\r\n                    .then(res => {\r\n                        // loadingIns.close();\r\n                        if (res.data.status_code == 1) {\r\n                            this.$message.success(\"保存成功！\");\r\n                            this.linkShare = this.GLOBAL.baseUrl + '/fill_test?mode=1&code=' + res.data.code;\r\n                            this.publishDialogVisible = true;\r\n                            // if (this.qrcode == null) {\r\n                            //     this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n                            //         width: 200, //生成的二维码的宽度\r\n                            //         height: 200, //生成的二维码的高度\r\n                            //         colorDark: \"#000000\", // 生成的二维码的深色部分\r\n                            //         colorLight: \"#ffffff\", //生成二维码的浅色部分\r\n                            //         correctLevel: QRCode.CorrectLevel.H\r\n                            //     });\r\n                            // }\r\n                            this.qrcode.clear();\r\n                            this.qrcode.makeCode(this.linkShare);\r\n                        }\r\n                        else {\r\n                            this.$message.error(\"题目为空，无法发布！\");\r\n                            console.log(res.data.status_code);\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            }).catch(err => {\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: '取消发布'\r\n                });\r\n                console.log(err);\r\n            });\r\n        },\r\n        saveinfo(tag) {\r\n            this.saveQnInfo(tag, \"2\");\r\n        },\r\n        save() {\r\n            this.saveinfo('save');\r\n        },\r\n        preview() {\r\n            this.saveinfo('preview');\r\n        },\r\n        up: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            if (index !== 0) {\r\n                // 非法移动\r\n                if (questions[index].last_question === index) {\r\n                    this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n                    return;\r\n                }\r\n                // 关联维护\r\n                let arr = this.sonGroup(index);\r\n                let willSubtract = [];\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        willSubtract.push(arr[j].id - 1);\r\n                    }\r\n                }\r\n                arr = this.sonGroup(index - 1);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        questions[arr[j].id - 1].last_question++;\r\n                    }\r\n                }\r\n                for (let i = 0; i < willSubtract.length; i++) {\r\n                    questions[willSubtract[i]].last_question--;\r\n                }\r\n                // 题序维护\r\n                questions[index].id--;\r\n                questions[index - 1].id++;\r\n                let temp = questions[index];\r\n                questions[index] = questions[index - 1];\r\n                questions[index - 1] = temp;\r\n                // 大纲维护\r\n                this.updateOutline(index, questions[index - 1].title);\r\n                this.updateOutline(index + 1, questions[index].title);\r\n            }\r\n        },\r\n        down: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            if (index !== questions.length - 1) {\r\n                // 非法移动\r\n                if (questions[index + 1].last_question === index + 1) {\r\n                    this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n                    return;\r\n                }\r\n                // 关联维护\r\n                let arr = this.sonGroup(index);\r\n                let willAdd = [];\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        willAdd.push(arr[j].id - 1);\r\n                    }\r\n                }\r\n                arr = this.sonGroup(index + 1);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        questions[arr[j].id - 1].last_question--;\r\n                    }\r\n                }\r\n                for (let i = 0; i < willAdd.length; i++) {\r\n                    questions[willAdd[i]].last_question++;\r\n                }\r\n                // 题序维护\r\n                questions[index].id++;\r\n                questions[index + 1].id--;\r\n                let temp = questions[index];\r\n                questions[index] = questions[index + 1];\r\n                questions[index + 1] = temp;\r\n                // 大纲维护\r\n                this.updateOutline(index + 1, questions[index].title);\r\n                this.updateOutline(index + 2, questions[index + 1].title);\r\n            }\r\n        },\r\n        del_pre: function (index) {\r\n            // 问题关联检查\r\n            if (this.sonGroup(index - 1).length !== 0) {\r\n                this.$confirm('该问题已被关联，删除此问题会删除所有相关关联信息', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.del_relation(index);\r\n                    this.del(index)\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '问题及关联信息已成功删除'\r\n                    });\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '取消删除题目及关联'\r\n                    });\r\n                });\r\n            } else {\r\n                this.$confirm('确认删除（不可恢复）？', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.del(index)\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '删除成功'\r\n                    });\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '取消删除'\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        del: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            let outline = this.outline;\r\n            // 维护关联关系\r\n            for (let i = index + 1; i < questions.length; i++) {\r\n                let arr = this.sonGroup(i);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        if (questions[arr[j].id - 1] !== index) {\r\n                            questions[arr[j].id - 1].last_question--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // 维护题序\r\n            for (let i = index + 1; i < questions.length; i++) {\r\n                questions[i].id--;\r\n            }\r\n            outline.splice(index, 1);\r\n            questions.splice(index, 1);\r\n            // 维护大纲\r\n            for (let num = index; num < outline.length; num++) {\r\n                this.updateOutline(num + 1, questions[num].title);\r\n            }\r\n        },\r\n        copy: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            // 大纲更新\r\n            this.updateOutline(this.outline.length + 1, questions[index].title);\r\n            // 问卷更新\r\n            let temp = this.deepClone(questions[index]);\r\n            temp.id = questions.length + 1;\r\n            temp.question_id = 0;\r\n            questions.push(temp);\r\n            this.$message.success(\"问题复制成功，已粘贴至问卷末尾\");\r\n        },\r\n        deepClone: function (initialObj) {\r\n            let obj = {};\r\n            try {\r\n                obj = JSON.parse(JSON.stringify(initialObj));\r\n                // eslint-disable-next-line no-empty\r\n            } finally { }\r\n            return obj;\r\n        },    // 深拷贝\r\n        updateOutline: function (id, label) {\r\n            if (label.length > 12) {\r\n                label = id + '. ' + label.substring(0, 11) + '...';\r\n            } else {\r\n                label = id + '. ' + label;\r\n            }\r\n            if (id <= this.questions.length) {\r\n                console.log(\"id:\");\r\n                console.log(id);\r\n                // this.outline[id - 1].id = id;\r\n                // this.outline[id - 1].label = label;\r\n            } else {\r\n                this.outline.push({\r\n                    id: id,\r\n                    label: label,\r\n                })\r\n            }\r\n        },\r\n        updateQuestions: function (start, end) {\r\n            let offset = end - start;\r\n            if (offset > 0) {\r\n                for (let i = 0; i < offset; i++) {\r\n                    this.down(start + i);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < offset * -1; i++) {\r\n                    this.up(start - i);\r\n                }\r\n            }\r\n        },  // good\r\n        toFillQn: function (value) {\r\n            this.$router.push({\r\n                name: 'FillQn',\r\n                query: {\r\n                    mode: value,\r\n                    title: this.title,\r\n                }\r\n            });\r\n        },\r\n        InitOutline() {\r\n            for (var i = 0; i < this.questions.length; i++) {\r\n                this.outline.push({\r\n                    id: this.questions[i].id,\r\n                    label: (i + 1) + \". \" + this.questions[i].title\r\n                })\r\n            }\r\n        },\r\n        copyToClip(message) {\r\n            var aux = document.createElement(\"input\");\r\n            aux.setAttribute(\"value\", this.linkShare);\r\n            document.body.appendChild(aux);\r\n            aux.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(aux);\r\n            if (message !== null) {\r\n                this.$message.success(\"复制成功\");\r\n            } else {\r\n                this.$message.error(\"复制失败\");\r\n            }\r\n        },\r\n        // 大纲拖拽处理函数(下3个)\r\n        handleDrop(draggingNode, dropNode, dropType) {\r\n            console.log('tree drop: ', draggingNode.key, dropNode.key, dropType);\r\n            if (this.isRightRelation(draggingNode.key, dropNode.key)) {\r\n                this.updateQuestions(draggingNode.key, dropNode.key);\r\n            } else {\r\n                this.outline.splice(0, this.outline.length);\r\n                this.InitOutline();\r\n                this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n            }\r\n        },\r\n        allowDrop(draggingNode, dropNode, type) {\r\n            if (draggingNode.key > dropNode.key) {\r\n                return type === 'prev';\r\n            } else {\r\n                return type === 'next';\r\n            }\r\n        },\r\n        isRightRelation: function (index1, index2) {\r\n            console.log(index1, index2);\r\n            index1--;\r\n            index2--;\r\n            let questions = this.questions;\r\n            if (index1 < index2) {\r\n                for (let i = index1 + 1; i <= index2; i++) {\r\n                    if (questions[i].last_question === index1 + 1) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            } else {\r\n                for (let i = index1 - 1; i >= index2; i--) {\r\n                    if (questions[index1].last_question === i + 1) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        },\r\n        idTitle: function (item) {\r\n            if (item.id === 0) {\r\n                return item.title;\r\n            } else {\r\n                return item.id + \". \" + item.title;\r\n            }\r\n        },\r\n        // relatedQs: function (item) {\r\n        //     return \"关联问题：\" + this.questions[item.last_question - 1].id + \".\" + this.questions[item.last_question - 1].title + \"(\" + this.questions[item.last_question - 1].options[item.last_option - 1].title + \")\";\r\n        // },\r\n        // 遍历得爸爸\r\n        fatherIndex: function (qs_id) {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].question_id === qs_id) {\r\n                    return i;\r\n                }\r\n            }\r\n        },\r\n        // 遍历得儿子\r\n        sonGroup: function (index) {\r\n            let arr = [];\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].last_question === this.questions[index].id) {\r\n                    arr.push(this.questions[i]);\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n        // 连带删除关联信息\r\n        del_relation: function (index) {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                // 保存加入后,下面需修改id为question_id\r\n                if (this.questions[i].last_question === this.questions[index - 1].id) {\r\n                    this.questions[i].last_option = 0;\r\n                    this.questions[i].last_question = 0;\r\n                    this.questions[i].is_shown = true;\r\n                }\r\n            }\r\n        },\r\n        // 关联信息存在性判断\r\n        isExistRelation: function () {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].last_question !== 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        // 监听：全局删除关联信息\r\n        closeGlobalLogic: function (state) {\r\n            if (!state && this.isExistRelation()) {\r\n                this.$confirm('检测到您已为题目添加关联，关闭设置将会删除所有关联信息，是否继续？', '提示', {\r\n                    confirmButtonText: '确认',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.deleteGlobalRelation();\r\n                    this.$message.info(\"关联信息已全部删除\");\r\n                }).catch(() => {\r\n                    this.isLogic = true;\r\n                    this.$message.info(\"取消操作\");\r\n                });\r\n            }\r\n        },\r\n        // 删除全局关联信息\r\n        deleteGlobalRelation: function () {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                this.questions[i].last_question = 0;\r\n                this.questions[i].last_option = 0;\r\n                this.questions[i].is_shown = true;\r\n            }\r\n        },\r\n        fetchQuestions() {\r\n            // 假设从后端获取问题数据的过程\r\n            const formData = new FormData();\r\n            // formData.append(\"survey_keyword\", this.loginForm.user);\r\n            formData.append(\"survey_id\", this.$route.params.qnid);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/question/api/listquestion',\r\n                data: formData,\r\n            }).then(res => {\r\n                switch (res.data.status_code) {\r\n                    case 1:\r\n                        this.questions = JSON.parse(res.data.data);\r\n                        this.title = res.data.title;\r\n                        this.description = res.data.description;\r\n                        // for (var i = 0; i < this.questionnaires.length; i++) {\r\n                        // if (this.questionnaires[i].questionType == '1')\r\n                        //     this.questionnaires[i].questionType = '普通问卷'\r\n                        // else if (this.questionnaires[i].questionType == '2')\r\n                        //     this.questionnaires[i].questionType = '投票问卷'\r\n                        // else if (this.questionnaires[i].questionType == '3')\r\n                        //     this.questionnaires[i].questionType = '考试问卷'\r\n                        // else\r\n                        //     this.questionnaires[i].questionType = '报名问卷'\r\n                        // }\r\n                        console.log(this.questions);\r\n                        console.log(\"success on fetching questions\");\r\n                        break;\r\n                    case 2:\r\n                        console.log(\"error 2\");\r\n                        break;\r\n                    case 3:\r\n                        console.log(\"error 3\");\r\n                        break;\r\n                    case 4:\r\n                        console.log(\"error 4\");\r\n                        break;\r\n                    case 5:\r\n                        console.log(\"error 5\");\r\n                        break;\r\n                    case -1:\r\n                        console.log(\"error -1\");\r\n                        break;\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        },\r\n    },\r\n    computed: {\r\n        questionsFilter: function () {\r\n            let questions = this.questions;\r\n            let arr = [{\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '不设置关联题目',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 0 // 选项id\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 5, // 最大评分\r\n            }];\r\n            for (let i = 0; i < this.logicIndex; i++) {\r\n                if (questions[i].type === \"radio\" || questions[i].type === \"checkbox\") {\r\n                    arr.push(questions[i]);\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n    },\r\n    created() {\r\n        //this.getQnDataSelf();\r\n        this.fetchQuestions();\r\n    },\r\n    mounted() {\r\n        //this.timer = setInterval(this.autoSave, 60000);\r\n    },\r\n    //beforeDestroy() {\r\n    //clearInterval(this.timer);\r\n    //},\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form {\r\n    position: relative;\r\n}\r\n\r\n.qnBoard {\r\n    display: flex;\r\n    position: relative;\r\n    width: 190px;\r\n    max-height: 1000px;\r\n    left: 20px;\r\n    top: 80px;\r\n    background-color: white;\r\n}\r\n\r\n.qnMain {\r\n    display: flex;\r\n    position: absolute;\r\n    left: 15%;\r\n    width: 1300px;\r\n    height: 700px;\r\n    top: 80px;\r\n    background: #FFFFFF;\r\n}\r\n\r\n.qnBoard .demo-tabs>.el-tabs__content {\r\n    padding: px;\r\n    color: #4fef0f;\r\n    font-size: 32px;\r\n    font-weight: 600;\r\n}\r\n\r\n.qnBoard .demo-tabs .custom-tabs-label {\r\n    font-size: 20px;\r\n}\r\n\r\n.form .linkDialog {\r\n    text-align: left;\r\n}\r\n\r\n.form .edit {\r\n    margin-top: 0;\r\n    overflow: auto;\r\n    height: 550px;\r\n}\r\n\r\n.form .outline {\r\n    overflow: auto;\r\n    height: 550px;\r\n}\r\n\r\n.form .ques-type {\r\n    padding: 15px 0;\r\n    font-size: 16px;\r\n    border-bottom: dashed #e3e3e3 1px;\r\n}\r\n\r\n.form .type-icon {\r\n    color: #1687fd;\r\n    display: inline-block;\r\n}\r\n\r\n.form .type-icon:hover {\r\n    color: #409EFF;\r\n    cursor: pointer;\r\n}\r\n\r\n.form .el-tabs__nav-scroll {\r\n    text-align: center;\r\n    height: 60px;\r\n    margin: 0 60px;\r\n}\r\n\r\n.form .el-tabs__item {\r\n    font-weight: bold;\r\n    padding: 0 20px;\r\n    height: 60px;\r\n    box-sizing: border-box;\r\n    line-height: 60px;\r\n    display: inline-block;\r\n    list-style: none;\r\n    font-size: 16px;\r\n    color: black;\r\n    position: relative;\r\n}\r\n\r\n.form .el-tabs__header {\r\n    margin: 0;\r\n}\r\n\r\n.form .el-tree-node__content {\r\n    padding-left: 10px !important;\r\n    height: 40px;\r\n}\r\n\r\n.form .qnMain .ques {\r\n    width: 96%;\r\n    margin-left: 2%;\r\n    /* margin-top: 50px; */\r\n    margin-bottom: 2%;\r\n}\r\n\r\n.form .qnMain .ques .title {\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    padding-top: 10px;\r\n    padding-bottom: 26px;\r\n}\r\n\r\n.form .qnMain .ques .description {\r\n    text-align: left;\r\n    font-size: 18px;\r\n    padding-bottom: 30px;\r\n    color: black;\r\n    line-height: 30px;\r\n}\r\n\r\n.form .qnMain .ques-block {\r\n    margin-bottom: 10px;\r\n    padding-bottom: 10px;\r\n    border: solid #e3e3e3 1px;\r\n}\r\n\r\n.form .qnMain .ques-block:hover {\r\n    background: #f5f5f5;\r\n    transition: .3s;\r\n}\r\n\r\n.form .qnMain .ques-block .must {\r\n    font-weight: normal;\r\n    color: crimson;\r\n}\r\n\r\n.form .qnMain .block-title {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 20px 10px 10px;\r\n    font-weight: bold;\r\n}\r\n\r\n.form .qnMain .block-description {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 5px;\r\n    padding-bottom: 15px;\r\n    padding-left: 10px;\r\n    color: #969696;\r\n}\r\n\r\n.form .qnMain .block-choice {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 5px 10px 10px;\r\n}\r\n\r\n.form .el-button-group>.el-button:first-child {\r\n    border-radius: 0 0 0 8px;\r\n}\r\n\r\n.form .el-button-group>.el-button:last-child {\r\n    border-radius: 0 0 8px 0;\r\n}\r\n\r\n.form .block-button .el-button {\r\n    background: #b9b9b9;\r\n    border: transparent;\r\n    right: 15px;\r\n}\r\n\r\n.form .block-button .el-button:hover {\r\n    background: #989898;\r\n    border: transparent;\r\n}\r\n\r\n.form .bt {\r\n    color: white;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n}\r\n\r\n.form .block-choice .el-textarea__inner {\r\n    max-height: 100px;\r\n}\r\n\r\n.form .dialog {\r\n    text-align: left;\r\n    font-size: large;\r\n}\r\n\r\n.form .addOptionButton {\r\n    display: inline-block;\r\n    margin-left: 100px;\r\n}\r\n\r\n.form .deleteOptionButton {\r\n    margin-left: 20px;\r\n}\r\n\r\n.form .logic-description {\r\n    margin-top: -15px;\r\n    margin-bottom: 30px;\r\n    text-align: left;\r\n    padding-left: 6px;\r\n    font-size: 14px;\r\n    color: #aaaaaa;\r\n}\r\n\r\n.form .important {\r\n    color: crimson;\r\n}\r\n\r\n.form .logic-title {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    padding-left: 12px;\r\n    padding-bottom: 30px;\r\n}\r\n\r\n.form .logic-bt {\r\n    text-align: center;\r\n}\r\n\r\n.form .logic-form .el-input--suffix .el-input__inner {\r\n    width: 620px;\r\n}\r\n\r\n.form .sideTitle {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 10px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.form .easyChoose {\r\n    font-size: medium;\r\n    margin-top: 10px;\r\n}\r\n\r\n.form .chooseLabel {\r\n    margin-right: 10px;\r\n    margin-left: 5px;\r\n}\r\n\r\n.form .setting-item {\r\n    text-align: left;\r\n}\r\n\r\n.form .setting-bt {\r\n    margin-top: 28px;\r\n}\r\n\r\n.form .settingDialog .el-dialog__header {\r\n    text-align: left;\r\n}\r\n\r\n.form .settingDialog .item-title {\r\n    padding-right: 20px;\r\n}\r\n\r\n.form .logic-info {\r\n    color: #aaaaaa;\r\n    padding-top: 2px;\r\n    padding-left: 12px;\r\n    padding-bottom: 25px;\r\n}\r\n\r\n.form .block-relation {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #1687fd;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}