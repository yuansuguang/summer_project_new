{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nimport componentShadingMixin from '../../component/common/componentShadingMixin';\nimport formatUtil from '../../util/format';\nimport formatTooltip from '../common/formatTooltip';\nimport createList from '../common/createList';\nvar Bar3DSeries = echarts.SeriesModel.extend({\n  type: 'series.bar3D',\n  dependencies: ['globe'],\n  visualStyleAccessPathvisu: 'itemStyle',\n  getInitialData: function (option, ecModel) {\n    return createList(this);\n  },\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n    var text = formatUtil.getFormattedLabel(this, dataIndex, status, dataType, dimIndex);\n    if (text == null) {\n      text = this.getData().get('z', dataIndex);\n    }\n    return text;\n  },\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian3D',\n    globeIndex: 0,\n    grid3DIndex: 0,\n    zlevel: -10,\n    // bevelSize, 0 has no bevel\n    bevelSize: 0,\n    // higher is smoother\n    bevelSmoothness: 2,\n    // Bar width and depth\n    // barSize: [1, 1],\n    // On grid plane when coordinateSystem is cartesian3D\n    onGridPlane: 'xy',\n    // Shading of globe\n    shading: 'color',\n    minHeight: 0,\n    itemStyle: {\n      opacity: 1\n    },\n    label: {\n      show: false,\n      distance: 2,\n      textStyle: {\n        fontSize: 14,\n        color: '#000',\n        backgroundColor: 'rgba(255,255,255,0.7)',\n        padding: 3,\n        borderRadius: 3\n      }\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    },\n    animationDurationUpdate: 500\n  }\n});\necharts.util.merge(Bar3DSeries.prototype, componentShadingMixin);\nexport default Bar3DSeries;","map":{"version":3,"names":["echarts","componentShadingMixin","formatUtil","formatTooltip","createList","Bar3DSeries","SeriesModel","extend","type","dependencies","visualStyleAccessPathvisu","getInitialData","option","ecModel","getFormattedLabel","dataIndex","status","dataType","dimIndex","text","getData","get","defaultOption","coordinateSystem","globeIndex","grid3DIndex","zlevel","bevelSize","bevelSmoothness","onGridPlane","shading","minHeight","itemStyle","opacity","label","show","distance","textStyle","fontSize","color","backgroundColor","padding","borderRadius","emphasis","animationDurationUpdate","util","merge","prototype"],"sources":["E:/mytest/node_modules/echarts-gl/lib/chart/bar3D/Bar3DSeries.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport componentShadingMixin from '../../component/common/componentShadingMixin';\nimport formatUtil from '../../util/format';\nimport formatTooltip from '../common/formatTooltip';\nimport createList from '../common/createList';\nvar Bar3DSeries = echarts.SeriesModel.extend({\n  type: 'series.bar3D',\n  dependencies: ['globe'],\n  visualStyleAccessPathvisu: 'itemStyle',\n  getInitialData: function (option, ecModel) {\n    return createList(this);\n  },\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n    var text = formatUtil.getFormattedLabel(this, dataIndex, status, dataType, dimIndex);\n\n    if (text == null) {\n      text = this.getData().get('z', dataIndex);\n    }\n\n    return text;\n  },\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian3D',\n    globeIndex: 0,\n    grid3DIndex: 0,\n    zlevel: -10,\n    // bevelSize, 0 has no bevel\n    bevelSize: 0,\n    // higher is smoother\n    bevelSmoothness: 2,\n    // Bar width and depth\n    // barSize: [1, 1],\n    // On grid plane when coordinateSystem is cartesian3D\n    onGridPlane: 'xy',\n    // Shading of globe\n    shading: 'color',\n    minHeight: 0,\n    itemStyle: {\n      opacity: 1\n    },\n    label: {\n      show: false,\n      distance: 2,\n      textStyle: {\n        fontSize: 14,\n        color: '#000',\n        backgroundColor: 'rgba(255,255,255,0.7)',\n        padding: 3,\n        borderRadius: 3\n      }\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    },\n    animationDurationUpdate: 500\n  }\n});\necharts.util.merge(Bar3DSeries.prototype, componentShadingMixin);\nexport default Bar3DSeries;"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,qBAAqB;AAC9C,OAAOC,qBAAqB,MAAM,8CAA8C;AAChF,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,IAAIC,WAAW,GAAGL,OAAO,CAACM,WAAW,CAACC,MAAM,CAAC;EAC3CC,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE,CAAC,OAAO,CAAC;EACvBC,yBAAyB,EAAE,WAAW;EACtCC,cAAc,EAAE,SAAAA,CAAUC,MAAM,EAAEC,OAAO,EAAE;IACzC,OAAOT,UAAU,CAAC,IAAI,CAAC;EACzB,CAAC;EACDU,iBAAiB,EAAE,SAAAA,CAAUC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAClE,IAAIC,IAAI,GAAGjB,UAAU,CAACY,iBAAiB,CAAC,IAAI,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;IAEpF,IAAIC,IAAI,IAAI,IAAI,EAAE;MAChBA,IAAI,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC,CAACC,GAAG,CAAC,GAAG,EAAEN,SAAS,CAAC;IAC3C;IAEA,OAAOI,IAAI;EACb,CAAC;EACDhB,aAAa,EAAE,SAAAA,CAAUY,SAAS,EAAE;IAClC,OAAOZ,aAAa,CAAC,IAAI,EAAEY,SAAS,CAAC;EACvC,CAAC;EACDO,aAAa,EAAE;IACbC,gBAAgB,EAAE,aAAa;IAC/BC,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE,CAAC;IACdC,MAAM,EAAE,CAAC,EAAE;IACX;IACAC,SAAS,EAAE,CAAC;IACZ;IACAC,eAAe,EAAE,CAAC;IAClB;IACA;IACA;IACAC,WAAW,EAAE,IAAI;IACjB;IACAC,OAAO,EAAE,OAAO;IAChBC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;IACDC,KAAK,EAAE;MACLC,IAAI,EAAE,KAAK;MACXC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,MAAM;QACbC,eAAe,EAAE,uBAAuB;QACxCC,OAAO,EAAE,CAAC;QACVC,YAAY,EAAE;MAChB;IACF,CAAC;IACDC,QAAQ,EAAE;MACRT,KAAK,EAAE;QACLC,IAAI,EAAE;MACR;IACF,CAAC;IACDS,uBAAuB,EAAE;EAC3B;AACF,CAAC,CAAC;AACF5C,OAAO,CAAC6C,IAAI,CAACC,KAAK,CAACzC,WAAW,CAAC0C,SAAS,EAAE9C,qBAAqB,CAAC;AAChE,eAAeI,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}