{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport ViewGL from '../../core/ViewGL';\nimport PointsBuilder from '../common/PointsBuilder';\nimport GLViewHelper from '../common/GLViewHelper';\nexport default echarts.ChartView.extend({\n  type: 'scatterGL',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this.viewGL = new ViewGL('orthographic');\n    this.viewGL.add(this.groupGL);\n    this._pointsBuilderList = [];\n    this._currentStep = 0;\n    this._sizeScale = 1;\n    this._glViewHelper = new GLViewHelper(this.viewGL);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n    this._glViewHelper.reset(seriesModel, api);\n    if (!seriesModel.getData().count()) {\n      return;\n    }\n    var pointsBuilder = this._pointsBuilderList[0];\n    if (!pointsBuilder) {\n      pointsBuilder = this._pointsBuilderList[0] = new PointsBuilder(true, api);\n    }\n    this._pointsBuilderList.length = 1;\n    this.groupGL.add(pointsBuilder.rootNode);\n    this._removeTransformInPoints(seriesModel.getData().getLayout('points'));\n    pointsBuilder.update(seriesModel, ecModel, api);\n    this.viewGL.setPostEffect(seriesModel.getModel('postEffect'), api);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n    this._glViewHelper.reset(seriesModel, api);\n    this._currentStep = 0;\n    this.viewGL.setPostEffect(seriesModel.getModel('postEffect'), api);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    if (params.end <= params.start) {\n      return;\n    }\n    var pointsBuilder = this._pointsBuilderList[this._currentStep];\n    if (!pointsBuilder) {\n      pointsBuilder = new PointsBuilder(true, api);\n      this._pointsBuilderList[this._currentStep] = pointsBuilder;\n    }\n    this.groupGL.add(pointsBuilder.rootNode);\n    this._removeTransformInPoints(seriesModel.getData().getLayout('points'));\n    pointsBuilder.setSizeScale(this._sizeScale);\n    pointsBuilder.update(seriesModel, ecModel, api, params.start, params.end);\n    api.getZr().refresh();\n    this._currentStep++;\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    if (seriesModel.coordinateSystem.getRoamTransform) {\n      this._glViewHelper.updateTransform(seriesModel, api);\n      var zoom = this._glViewHelper.getZoom();\n      var sizeScale = Math.max((seriesModel.get('zoomScale') || 0) * (zoom - 1) + 1, 0);\n      this._sizeScale = sizeScale;\n      this._pointsBuilderList.forEach(function (pointsBuilder) {\n        pointsBuilder.setSizeScale(sizeScale);\n      });\n    }\n  },\n  _removeTransformInPoints: function (points) {\n    if (!points) {\n      return;\n    }\n    var pt = [];\n    for (var i = 0; i < points.length; i += 2) {\n      pt[0] = points[i];\n      pt[1] = points[i + 1];\n      this._glViewHelper.removeTransformInPoint(pt);\n      points[i] = pt[0];\n      points[i + 1] = pt[1];\n    }\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n    this._pointsBuilderList.forEach(function (pointsBuilder) {\n      pointsBuilder.dispose();\n    });\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  }\n});","map":{"version":3,"names":["echarts","graphicGL","ViewGL","PointsBuilder","GLViewHelper","ChartView","extend","type","__ecgl__","init","ecModel","api","groupGL","Node","viewGL","add","_pointsBuilderList","_currentStep","_sizeScale","_glViewHelper","render","seriesModel","removeAll","reset","getData","count","pointsBuilder","length","rootNode","_removeTransformInPoints","getLayout","update","setPostEffect","getModel","incrementalPrepareRender","incrementalRender","params","end","start","setSizeScale","getZr","refresh","updateTransform","coordinateSystem","getRoamTransform","zoom","getZoom","sizeScale","Math","max","get","forEach","points","pt","i","removeTransformInPoint","dispose","remove"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/chart/scatterGL/ScatterGLView.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport ViewGL from '../../core/ViewGL';\nimport PointsBuilder from '../common/PointsBuilder';\nimport GLViewHelper from '../common/GLViewHelper';\nexport default echarts.ChartView.extend({\n  type: 'scatterGL',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this.viewGL = new ViewGL('orthographic');\n    this.viewGL.add(this.groupGL);\n    this._pointsBuilderList = [];\n    this._currentStep = 0;\n    this._sizeScale = 1;\n    this._glViewHelper = new GLViewHelper(this.viewGL);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n\n    this._glViewHelper.reset(seriesModel, api);\n\n    if (!seriesModel.getData().count()) {\n      return;\n    }\n\n    var pointsBuilder = this._pointsBuilderList[0];\n\n    if (!pointsBuilder) {\n      pointsBuilder = this._pointsBuilderList[0] = new PointsBuilder(true, api);\n    }\n\n    this._pointsBuilderList.length = 1;\n    this.groupGL.add(pointsBuilder.rootNode);\n\n    this._removeTransformInPoints(seriesModel.getData().getLayout('points'));\n\n    pointsBuilder.update(seriesModel, ecModel, api);\n    this.viewGL.setPostEffect(seriesModel.getModel('postEffect'), api);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n\n    this._glViewHelper.reset(seriesModel, api);\n\n    this._currentStep = 0;\n    this.viewGL.setPostEffect(seriesModel.getModel('postEffect'), api);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    if (params.end <= params.start) {\n      return;\n    }\n\n    var pointsBuilder = this._pointsBuilderList[this._currentStep];\n\n    if (!pointsBuilder) {\n      pointsBuilder = new PointsBuilder(true, api);\n      this._pointsBuilderList[this._currentStep] = pointsBuilder;\n    }\n\n    this.groupGL.add(pointsBuilder.rootNode);\n\n    this._removeTransformInPoints(seriesModel.getData().getLayout('points'));\n\n    pointsBuilder.setSizeScale(this._sizeScale);\n    pointsBuilder.update(seriesModel, ecModel, api, params.start, params.end);\n    api.getZr().refresh();\n    this._currentStep++;\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    if (seriesModel.coordinateSystem.getRoamTransform) {\n      this._glViewHelper.updateTransform(seriesModel, api);\n\n      var zoom = this._glViewHelper.getZoom();\n\n      var sizeScale = Math.max((seriesModel.get('zoomScale') || 0) * (zoom - 1) + 1, 0);\n      this._sizeScale = sizeScale;\n\n      this._pointsBuilderList.forEach(function (pointsBuilder) {\n        pointsBuilder.setSizeScale(sizeScale);\n      });\n    }\n  },\n  _removeTransformInPoints: function (points) {\n    if (!points) {\n      return;\n    }\n\n    var pt = [];\n\n    for (var i = 0; i < points.length; i += 2) {\n      pt[0] = points[i];\n      pt[1] = points[i + 1];\n\n      this._glViewHelper.removeTransformInPoint(pt);\n\n      points[i] = pt[0];\n      points[i + 1] = pt[1];\n    }\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n\n    this._pointsBuilderList.forEach(function (pointsBuilder) {\n      pointsBuilder.dispose();\n    });\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}