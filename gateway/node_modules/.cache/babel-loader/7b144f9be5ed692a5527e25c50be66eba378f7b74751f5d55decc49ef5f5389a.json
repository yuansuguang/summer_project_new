{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n * @module echarts-gl/core/ViewGL\n * @author Yi Shen(http://github.com/pissang)\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport Scene from 'claygl/src/Scene';\nimport ShadowMapPass from 'claygl/src/prePass/ShadowMap';\nimport PerspectiveCamera from 'claygl/src/camera/Perspective';\nimport OrthographicCamera from 'claygl/src/camera/Orthographic';\nimport Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector2 from 'claygl/src/math/Vector2';\nimport notifier from 'claygl/src/core/mixin/notifier';\nimport EffectCompositor from '../effect/EffectCompositor';\nimport TemporalSuperSampling from '../effect/TemporalSuperSampling';\nimport halton from '../effect/halton';\n/**\n * @constructor\n * @alias module:echarts-gl/core/ViewGL\n * @param {string} [projection='perspective']\n */\n\nfunction ViewGL(projection) {\n  projection = projection || 'perspective';\n  /**\n   * @type {module:echarts-gl/core/LayerGL}\n   */\n\n  this.layer = null;\n  /**\n   * @type {clay.Scene}\n   */\n\n  this.scene = new Scene();\n  /**\n   * @type {clay.Node}\n   */\n\n  this.rootNode = this.scene;\n  this.viewport = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  this.setProjection(projection);\n  this._compositor = new EffectCompositor();\n  this._temporalSS = new TemporalSuperSampling();\n  this._shadowMapPass = new ShadowMapPass();\n  var pcfKernels = [];\n  var off = 0;\n  for (var i = 0; i < 30; i++) {\n    var pcfKernel = [];\n    for (var k = 0; k < 6; k++) {\n      pcfKernel.push(halton(off, 2) * 4.0 - 2.0);\n      pcfKernel.push(halton(off, 3) * 4.0 - 2.0);\n      off++;\n    }\n    pcfKernels.push(pcfKernel);\n  }\n  this._pcfKernels = pcfKernels;\n  this.scene.on('beforerender', function (renderer, scene, camera) {\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n  }, this);\n}\n/**\n * Set camera type of group\n * @param {string} cameraType 'perspective' | 'orthographic'\n */\n\nViewGL.prototype.setProjection = function (projection) {\n  var oldCamera = this.camera;\n  oldCamera && oldCamera.update();\n  if (projection === 'perspective') {\n    if (!(this.camera instanceof PerspectiveCamera)) {\n      this.camera = new PerspectiveCamera();\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } else {\n    if (!(this.camera instanceof OrthographicCamera)) {\n      this.camera = new OrthographicCamera();\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } // PENDING\n\n  this.camera.near = 0.1;\n  this.camera.far = 2000;\n};\n/**\n * Set viewport of group\n * @param {number} x Viewport left bottom x\n * @param {number} y Viewport left bottom y\n * @param {number} width Viewport height\n * @param {number} height Viewport height\n * @param {number} [dpr=1]\n */\n\nViewGL.prototype.setViewport = function (x, y, width, height, dpr) {\n  if (this.camera instanceof PerspectiveCamera) {\n    this.camera.aspect = width / height;\n  }\n  dpr = dpr || 1;\n  this.viewport.x = x;\n  this.viewport.y = y;\n  this.viewport.width = width;\n  this.viewport.height = height;\n  this.viewport.devicePixelRatio = dpr; // Source and output of compositor use high dpr texture.\n  // But the intermediate texture of bloom, dof effects use fixed 1.0 dpr\n\n  this._compositor.resize(width * dpr, height * dpr);\n  this._temporalSS.resize(width * dpr, height * dpr);\n};\n/**\n * If contain screen point x, y\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @return {boolean}\n */\n\nViewGL.prototype.containPoint = function (x, y) {\n  var viewport = this.viewport;\n  var height = this.layer.renderer.getHeight(); // Flip y;\n\n  y = height - y;\n  return x >= viewport.x && y >= viewport.y && x <= viewport.x + viewport.width && y <= viewport.y + viewport.height;\n};\n/**\n * Cast a ray\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @param {clay.math.Ray} out\n * @return {clay.math.Ray}\n */\n\nvar ndc = new Vector2();\nViewGL.prototype.castRay = function (x, y, out) {\n  var renderer = this.layer.renderer;\n  var oldViewport = renderer.viewport;\n  renderer.viewport = this.viewport;\n  renderer.screenToNDC(x, y, ndc);\n  this.camera.castRay(ndc, out);\n  renderer.viewport = oldViewport;\n  return out;\n};\n/**\n * Prepare and update scene before render\n */\n\nViewGL.prototype.prepareRender = function () {\n  this.scene.update();\n  this.camera.update();\n  this.scene.updateLights();\n  var renderList = this.scene.updateRenderList(this.camera);\n  this._needsSortProgressively = false; // If has any transparent mesh needs sort triangles progressively.\n\n  for (var i = 0; i < renderList.transparent.length; i++) {\n    var renderable = renderList.transparent[i];\n    var geometry = renderable.geometry;\n    if (geometry.needsSortVerticesProgressively && geometry.needsSortVerticesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n    if (geometry.needsSortTrianglesProgressively && geometry.needsSortTrianglesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n  }\n  this._frame = 0;\n  this._temporalSS.resetFrame(); // var lights = this.scene.getLights();\n  // for (var i = 0; i < lights.length; i++) {\n  //     if (lights[i].cubemap) {\n  //         if (this._compositor && this._compositor.isSSREnabled()) {\n  //             lights[i].invisible = true;\n  //         }\n  //         else {\n  //             lights[i].invisible = false;\n  //         }\n  //     }\n  // }\n};\nViewGL.prototype.render = function (renderer, accumulating) {\n  this._doRender(renderer, accumulating, this._frame);\n  this._frame++;\n};\nViewGL.prototype.needsAccumulate = function () {\n  return this.needsTemporalSS() || this._needsSortProgressively;\n};\nViewGL.prototype.needsTemporalSS = function () {\n  var enableTemporalSS = this._enableTemporalSS;\n  if (enableTemporalSS === 'auto') {\n    enableTemporalSS = this._enablePostEffect;\n  }\n  return enableTemporalSS;\n};\nViewGL.prototype.hasDOF = function () {\n  return this._enableDOF;\n};\nViewGL.prototype.isAccumulateFinished = function () {\n  return this.needsTemporalSS() ? this._temporalSS.isFinished() : this._frame > 30;\n};\nViewGL.prototype._doRender = function (renderer, accumulating, accumFrame) {\n  var scene = this.scene;\n  var camera = this.camera;\n  accumFrame = accumFrame || 0;\n  this._updateTransparent(renderer, scene, camera, accumFrame);\n  if (!accumulating) {\n    this._shadowMapPass.kernelPCF = this._pcfKernels[0]; // Not render shadowmap pass in accumulating frame.\n\n    this._shadowMapPass.render(renderer, scene, camera, true);\n  }\n  this._updateShadowPCFKernel(accumFrame); // Shadowmap will set clear color.\n\n  var bgColor = renderer.clearColor;\n  renderer.gl.clearColor(bgColor[0], bgColor[1], bgColor[2], bgColor[3]);\n  if (this._enablePostEffect) {\n    // normal render also needs to be jittered when have edge pass.\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n    this._compositor.updateNormal(renderer, scene, camera, this._temporalSS.getFrame());\n  } // Always update SSAO to make sure have correct ssaoMap status\n\n  this._updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n  if (this._enablePostEffect) {\n    var frameBuffer = this._compositor.getSourceFrameBuffer();\n    frameBuffer.bind(renderer);\n    renderer.gl.clear(renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT);\n    renderer.render(scene, camera, true, true);\n    frameBuffer.unbind(renderer);\n    if (this.needsTemporalSS() && accumulating) {\n      this._compositor.composite(renderer, scene, camera, this._temporalSS.getSourceFrameBuffer(), this._temporalSS.getFrame());\n      renderer.setViewport(this.viewport);\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n      this._compositor.composite(renderer, scene, camera, null, 0);\n    }\n  } else {\n    if (this.needsTemporalSS() && accumulating) {\n      var frameBuffer = this._temporalSS.getSourceFrameBuffer();\n      frameBuffer.bind(renderer);\n      renderer.saveClear();\n      renderer.clearBit = renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT;\n      renderer.render(scene, camera, true, true);\n      renderer.restoreClear();\n      frameBuffer.unbind(renderer);\n      renderer.setViewport(this.viewport);\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n      renderer.render(scene, camera, true, true);\n    }\n  } // this._shadowMapPass.renderDebug(renderer);\n  // this._compositor._normalPass.renderDebug(renderer);\n};\nViewGL.prototype._updateTransparent = function (renderer, scene, camera, frame) {\n  var v3 = new Vector3();\n  var invWorldTransform = new Matrix4();\n  var cameraWorldPosition = camera.getWorldPosition();\n  var transparentList = scene.getRenderList(camera).transparent; // Sort transparent object.\n\n  for (var i = 0; i < transparentList.length; i++) {\n    var renderable = transparentList[i];\n    var geometry = renderable.geometry;\n    Matrix4.invert(invWorldTransform, renderable.worldTransform);\n    Vector3.transformMat4(v3, cameraWorldPosition, invWorldTransform);\n    if (geometry.needsSortTriangles && geometry.needsSortTriangles()) {\n      geometry.doSortTriangles(v3, frame);\n    }\n    if (geometry.needsSortVertices && geometry.needsSortVertices()) {\n      geometry.doSortVertices(v3, frame);\n    }\n  }\n};\nViewGL.prototype._updateSSAO = function (renderer, scene, camera) {\n  var ifEnableSSAO = this._enableSSAO && this._enablePostEffect;\n  if (ifEnableSSAO) {\n    this._compositor.updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n  }\n  var renderList = scene.getRenderList(camera);\n  for (var i = 0; i < renderList.opaque.length; i++) {\n    var renderable = renderList.opaque[i]; // PENDING\n\n    if (renderable.renderNormal) {\n      renderable.material[ifEnableSSAO ? 'enableTexture' : 'disableTexture']('ssaoMap');\n    }\n    if (ifEnableSSAO) {\n      renderable.material.set('ssaoMap', this._compositor.getSSAOTexture());\n    }\n  }\n};\nViewGL.prototype._updateShadowPCFKernel = function (frame) {\n  var pcfKernel = this._pcfKernels[frame % this._pcfKernels.length];\n  var renderList = this.scene.getRenderList(this.camera);\n  var opaqueList = renderList.opaque;\n  for (var i = 0; i < opaqueList.length; i++) {\n    if (opaqueList[i].receiveShadow) {\n      opaqueList[i].material.set('pcfKernel', pcfKernel);\n      opaqueList[i].material.define('fragment', 'PCF_KERNEL_SIZE', pcfKernel.length / 2);\n    }\n  }\n};\nViewGL.prototype.dispose = function (renderer) {\n  this._compositor.dispose(renderer.gl);\n  this._temporalSS.dispose(renderer.gl);\n  this._shadowMapPass.dispose(renderer);\n};\n/**\n * @param {module:echarts/Model} Post effect model\n */\n\nViewGL.prototype.setPostEffect = function (postEffectModel, api) {\n  var compositor = this._compositor;\n  this._enablePostEffect = postEffectModel.get('enable');\n  var bloomModel = postEffectModel.getModel('bloom');\n  var edgeModel = postEffectModel.getModel('edge');\n  var dofModel = postEffectModel.getModel('DOF', postEffectModel.getModel('depthOfField'));\n  var ssaoModel = postEffectModel.getModel('SSAO', postEffectModel.getModel('screenSpaceAmbientOcclusion'));\n  var ssrModel = postEffectModel.getModel('SSR', postEffectModel.getModel('screenSpaceReflection'));\n  var fxaaModel = postEffectModel.getModel('FXAA');\n  var colorCorrModel = postEffectModel.getModel('colorCorrection');\n  bloomModel.get('enable') ? compositor.enableBloom() : compositor.disableBloom();\n  dofModel.get('enable') ? compositor.enableDOF() : compositor.disableDOF();\n  ssrModel.get('enable') ? compositor.enableSSR() : compositor.disableSSR();\n  colorCorrModel.get('enable') ? compositor.enableColorCorrection() : compositor.disableColorCorrection();\n  edgeModel.get('enable') ? compositor.enableEdge() : compositor.disableEdge();\n  fxaaModel.get('enable') ? compositor.enableFXAA() : compositor.disableFXAA();\n  this._enableDOF = dofModel.get('enable');\n  this._enableSSAO = ssaoModel.get('enable');\n  this._enableSSAO ? compositor.enableSSAO() : compositor.disableSSAO();\n  compositor.setBloomIntensity(bloomModel.get('intensity'));\n  compositor.setEdgeColor(edgeModel.get('color'));\n  compositor.setColorLookupTexture(colorCorrModel.get('lookupTexture'), api);\n  compositor.setExposure(colorCorrModel.get('exposure'));\n  ['radius', 'quality', 'intensity'].forEach(function (name) {\n    compositor.setSSAOParameter(name, ssaoModel.get(name));\n  });\n  ['quality', 'maxRoughness', 'physical'].forEach(function (name) {\n    compositor.setSSRParameter(name, ssrModel.get(name));\n  });\n  ['quality', 'focalDistance', 'focalRange', 'blurRadius', 'fstop'].forEach(function (name) {\n    compositor.setDOFParameter(name, dofModel.get(name));\n  });\n  ['brightness', 'contrast', 'saturation'].forEach(function (name) {\n    compositor.setColorCorrection(name, colorCorrModel.get(name));\n  });\n};\nViewGL.prototype.setDOFFocusOnPoint = function (depth) {\n  if (this._enablePostEffect) {\n    if (depth > this.camera.far || depth < this.camera.near) {\n      return;\n    }\n    this._compositor.setDOFParameter('focalDistance', depth);\n    return true;\n  }\n};\nViewGL.prototype.setTemporalSuperSampling = function (temporalSuperSamplingModel) {\n  this._enableTemporalSS = temporalSuperSamplingModel.get('enable');\n};\nViewGL.prototype.isLinearSpace = function () {\n  return this._enablePostEffect;\n};\nViewGL.prototype.setRootNode = function (rootNode) {\n  if (this.rootNode === rootNode) {\n    return;\n  }\n  var children = this.rootNode.children();\n  for (var i = 0; i < children.length; i++) {\n    rootNode.add(children[i]);\n  }\n  if (rootNode !== this.scene) {\n    this.scene.add(rootNode);\n  }\n  this.rootNode = rootNode;\n}; // Proxies\n\nViewGL.prototype.add = function (node3D) {\n  this.rootNode.add(node3D);\n};\nViewGL.prototype.remove = function (node3D) {\n  this.rootNode.remove(node3D);\n};\nViewGL.prototype.removeAll = function (node3D) {\n  this.rootNode.removeAll(node3D);\n};\nObject.assign(ViewGL.prototype, notifier);\nexport default ViewGL;","map":{"version":3,"names":["echarts","Scene","ShadowMapPass","PerspectiveCamera","OrthographicCamera","Matrix4","Vector3","Vector2","notifier","EffectCompositor","TemporalSuperSampling","halton","ViewGL","projection","layer","scene","rootNode","viewport","x","y","width","height","setProjection","_compositor","_temporalSS","_shadowMapPass","pcfKernels","off","i","pcfKernel","k","push","_pcfKernels","on","renderer","camera","needsTemporalSS","jitterProjection","prototype","oldCamera","update","setLocalTransform","localTransform","near","far","setViewport","dpr","aspect","devicePixelRatio","resize","containPoint","getHeight","ndc","castRay","out","oldViewport","screenToNDC","prepareRender","updateLights","renderList","updateRenderList","_needsSortProgressively","transparent","length","renderable","geometry","needsSortVerticesProgressively","needsSortTrianglesProgressively","_frame","resetFrame","render","accumulating","_doRender","needsAccumulate","enableTemporalSS","_enableTemporalSS","_enablePostEffect","hasDOF","_enableDOF","isAccumulateFinished","isFinished","accumFrame","_updateTransparent","kernelPCF","_updateShadowPCFKernel","bgColor","clearColor","gl","updateNormal","getFrame","_updateSSAO","frameBuffer","getSourceFrameBuffer","bind","clear","DEPTH_BUFFER_BIT","COLOR_BUFFER_BIT","unbind","composite","saveClear","clearBit","restoreClear","frame","v3","invWorldTransform","cameraWorldPosition","getWorldPosition","transparentList","getRenderList","invert","worldTransform","transformMat4","needsSortTriangles","doSortTriangles","needsSortVertices","doSortVertices","ifEnableSSAO","_enableSSAO","updateSSAO","opaque","renderNormal","material","set","getSSAOTexture","opaqueList","receiveShadow","define","dispose","setPostEffect","postEffectModel","api","compositor","get","bloomModel","getModel","edgeModel","dofModel","ssaoModel","ssrModel","fxaaModel","colorCorrModel","enableBloom","disableBloom","enableDOF","disableDOF","enableSSR","disableSSR","enableColorCorrection","disableColorCorrection","enableEdge","disableEdge","enableFXAA","disableFXAA","enableSSAO","disableSSAO","setBloomIntensity","setEdgeColor","setColorLookupTexture","setExposure","forEach","name","setSSAOParameter","setSSRParameter","setDOFParameter","setColorCorrection","setDOFFocusOnPoint","depth","setTemporalSuperSampling","temporalSuperSamplingModel","isLinearSpace","setRootNode","children","add","node3D","remove","removeAll","Object","assign"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/core/ViewGL.js"],"sourcesContent":["/*\n * @module echarts-gl/core/ViewGL\n * @author Yi Shen(http://github.com/pissang)\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport Scene from 'claygl/src/Scene';\nimport ShadowMapPass from 'claygl/src/prePass/ShadowMap';\nimport PerspectiveCamera from 'claygl/src/camera/Perspective';\nimport OrthographicCamera from 'claygl/src/camera/Orthographic';\nimport Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector2 from 'claygl/src/math/Vector2';\nimport notifier from 'claygl/src/core/mixin/notifier';\nimport EffectCompositor from '../effect/EffectCompositor';\nimport TemporalSuperSampling from '../effect/TemporalSuperSampling';\nimport halton from '../effect/halton';\n/**\n * @constructor\n * @alias module:echarts-gl/core/ViewGL\n * @param {string} [projection='perspective']\n */\n\nfunction ViewGL(projection) {\n  projection = projection || 'perspective';\n  /**\n   * @type {module:echarts-gl/core/LayerGL}\n   */\n\n  this.layer = null;\n  /**\n   * @type {clay.Scene}\n   */\n\n  this.scene = new Scene();\n  /**\n   * @type {clay.Node}\n   */\n\n  this.rootNode = this.scene;\n  this.viewport = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  this.setProjection(projection);\n  this._compositor = new EffectCompositor();\n  this._temporalSS = new TemporalSuperSampling();\n  this._shadowMapPass = new ShadowMapPass();\n  var pcfKernels = [];\n  var off = 0;\n\n  for (var i = 0; i < 30; i++) {\n    var pcfKernel = [];\n\n    for (var k = 0; k < 6; k++) {\n      pcfKernel.push(halton(off, 2) * 4.0 - 2.0);\n      pcfKernel.push(halton(off, 3) * 4.0 - 2.0);\n      off++;\n    }\n\n    pcfKernels.push(pcfKernel);\n  }\n\n  this._pcfKernels = pcfKernels;\n  this.scene.on('beforerender', function (renderer, scene, camera) {\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n  }, this);\n}\n/**\n * Set camera type of group\n * @param {string} cameraType 'perspective' | 'orthographic'\n */\n\n\nViewGL.prototype.setProjection = function (projection) {\n  var oldCamera = this.camera;\n  oldCamera && oldCamera.update();\n\n  if (projection === 'perspective') {\n    if (!(this.camera instanceof PerspectiveCamera)) {\n      this.camera = new PerspectiveCamera();\n\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } else {\n    if (!(this.camera instanceof OrthographicCamera)) {\n      this.camera = new OrthographicCamera();\n\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } // PENDING\n\n\n  this.camera.near = 0.1;\n  this.camera.far = 2000;\n};\n/**\n * Set viewport of group\n * @param {number} x Viewport left bottom x\n * @param {number} y Viewport left bottom y\n * @param {number} width Viewport height\n * @param {number} height Viewport height\n * @param {number} [dpr=1]\n */\n\n\nViewGL.prototype.setViewport = function (x, y, width, height, dpr) {\n  if (this.camera instanceof PerspectiveCamera) {\n    this.camera.aspect = width / height;\n  }\n\n  dpr = dpr || 1;\n  this.viewport.x = x;\n  this.viewport.y = y;\n  this.viewport.width = width;\n  this.viewport.height = height;\n  this.viewport.devicePixelRatio = dpr; // Source and output of compositor use high dpr texture.\n  // But the intermediate texture of bloom, dof effects use fixed 1.0 dpr\n\n  this._compositor.resize(width * dpr, height * dpr);\n\n  this._temporalSS.resize(width * dpr, height * dpr);\n};\n/**\n * If contain screen point x, y\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @return {boolean}\n */\n\n\nViewGL.prototype.containPoint = function (x, y) {\n  var viewport = this.viewport;\n  var height = this.layer.renderer.getHeight(); // Flip y;\n\n  y = height - y;\n  return x >= viewport.x && y >= viewport.y && x <= viewport.x + viewport.width && y <= viewport.y + viewport.height;\n};\n/**\n * Cast a ray\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @param {clay.math.Ray} out\n * @return {clay.math.Ray}\n */\n\n\nvar ndc = new Vector2();\n\nViewGL.prototype.castRay = function (x, y, out) {\n  var renderer = this.layer.renderer;\n  var oldViewport = renderer.viewport;\n  renderer.viewport = this.viewport;\n  renderer.screenToNDC(x, y, ndc);\n  this.camera.castRay(ndc, out);\n  renderer.viewport = oldViewport;\n  return out;\n};\n/**\n * Prepare and update scene before render\n */\n\n\nViewGL.prototype.prepareRender = function () {\n  this.scene.update();\n  this.camera.update();\n  this.scene.updateLights();\n  var renderList = this.scene.updateRenderList(this.camera);\n  this._needsSortProgressively = false; // If has any transparent mesh needs sort triangles progressively.\n\n  for (var i = 0; i < renderList.transparent.length; i++) {\n    var renderable = renderList.transparent[i];\n    var geometry = renderable.geometry;\n\n    if (geometry.needsSortVerticesProgressively && geometry.needsSortVerticesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n\n    if (geometry.needsSortTrianglesProgressively && geometry.needsSortTrianglesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n  }\n\n  this._frame = 0;\n\n  this._temporalSS.resetFrame(); // var lights = this.scene.getLights();\n  // for (var i = 0; i < lights.length; i++) {\n  //     if (lights[i].cubemap) {\n  //         if (this._compositor && this._compositor.isSSREnabled()) {\n  //             lights[i].invisible = true;\n  //         }\n  //         else {\n  //             lights[i].invisible = false;\n  //         }\n  //     }\n  // }\n\n};\n\nViewGL.prototype.render = function (renderer, accumulating) {\n  this._doRender(renderer, accumulating, this._frame);\n\n  this._frame++;\n};\n\nViewGL.prototype.needsAccumulate = function () {\n  return this.needsTemporalSS() || this._needsSortProgressively;\n};\n\nViewGL.prototype.needsTemporalSS = function () {\n  var enableTemporalSS = this._enableTemporalSS;\n\n  if (enableTemporalSS === 'auto') {\n    enableTemporalSS = this._enablePostEffect;\n  }\n\n  return enableTemporalSS;\n};\n\nViewGL.prototype.hasDOF = function () {\n  return this._enableDOF;\n};\n\nViewGL.prototype.isAccumulateFinished = function () {\n  return this.needsTemporalSS() ? this._temporalSS.isFinished() : this._frame > 30;\n};\n\nViewGL.prototype._doRender = function (renderer, accumulating, accumFrame) {\n  var scene = this.scene;\n  var camera = this.camera;\n  accumFrame = accumFrame || 0;\n\n  this._updateTransparent(renderer, scene, camera, accumFrame);\n\n  if (!accumulating) {\n    this._shadowMapPass.kernelPCF = this._pcfKernels[0]; // Not render shadowmap pass in accumulating frame.\n\n    this._shadowMapPass.render(renderer, scene, camera, true);\n  }\n\n  this._updateShadowPCFKernel(accumFrame); // Shadowmap will set clear color.\n\n\n  var bgColor = renderer.clearColor;\n  renderer.gl.clearColor(bgColor[0], bgColor[1], bgColor[2], bgColor[3]);\n\n  if (this._enablePostEffect) {\n    // normal render also needs to be jittered when have edge pass.\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n\n    this._compositor.updateNormal(renderer, scene, camera, this._temporalSS.getFrame());\n  } // Always update SSAO to make sure have correct ssaoMap status\n\n\n  this._updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n\n  if (this._enablePostEffect) {\n    var frameBuffer = this._compositor.getSourceFrameBuffer();\n\n    frameBuffer.bind(renderer);\n    renderer.gl.clear(renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT);\n    renderer.render(scene, camera, true, true);\n    frameBuffer.unbind(renderer);\n\n    if (this.needsTemporalSS() && accumulating) {\n      this._compositor.composite(renderer, scene, camera, this._temporalSS.getSourceFrameBuffer(), this._temporalSS.getFrame());\n\n      renderer.setViewport(this.viewport);\n\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n\n      this._compositor.composite(renderer, scene, camera, null, 0);\n    }\n  } else {\n    if (this.needsTemporalSS() && accumulating) {\n      var frameBuffer = this._temporalSS.getSourceFrameBuffer();\n\n      frameBuffer.bind(renderer);\n      renderer.saveClear();\n      renderer.clearBit = renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT;\n      renderer.render(scene, camera, true, true);\n      renderer.restoreClear();\n      frameBuffer.unbind(renderer);\n      renderer.setViewport(this.viewport);\n\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n      renderer.render(scene, camera, true, true);\n    }\n  } // this._shadowMapPass.renderDebug(renderer);\n  // this._compositor._normalPass.renderDebug(renderer);\n\n};\n\nViewGL.prototype._updateTransparent = function (renderer, scene, camera, frame) {\n  var v3 = new Vector3();\n  var invWorldTransform = new Matrix4();\n  var cameraWorldPosition = camera.getWorldPosition();\n  var transparentList = scene.getRenderList(camera).transparent; // Sort transparent object.\n\n  for (var i = 0; i < transparentList.length; i++) {\n    var renderable = transparentList[i];\n    var geometry = renderable.geometry;\n    Matrix4.invert(invWorldTransform, renderable.worldTransform);\n    Vector3.transformMat4(v3, cameraWorldPosition, invWorldTransform);\n\n    if (geometry.needsSortTriangles && geometry.needsSortTriangles()) {\n      geometry.doSortTriangles(v3, frame);\n    }\n\n    if (geometry.needsSortVertices && geometry.needsSortVertices()) {\n      geometry.doSortVertices(v3, frame);\n    }\n  }\n};\n\nViewGL.prototype._updateSSAO = function (renderer, scene, camera) {\n  var ifEnableSSAO = this._enableSSAO && this._enablePostEffect;\n\n  if (ifEnableSSAO) {\n    this._compositor.updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n  }\n\n  var renderList = scene.getRenderList(camera);\n\n  for (var i = 0; i < renderList.opaque.length; i++) {\n    var renderable = renderList.opaque[i]; // PENDING\n\n    if (renderable.renderNormal) {\n      renderable.material[ifEnableSSAO ? 'enableTexture' : 'disableTexture']('ssaoMap');\n    }\n\n    if (ifEnableSSAO) {\n      renderable.material.set('ssaoMap', this._compositor.getSSAOTexture());\n    }\n  }\n};\n\nViewGL.prototype._updateShadowPCFKernel = function (frame) {\n  var pcfKernel = this._pcfKernels[frame % this._pcfKernels.length];\n  var renderList = this.scene.getRenderList(this.camera);\n  var opaqueList = renderList.opaque;\n\n  for (var i = 0; i < opaqueList.length; i++) {\n    if (opaqueList[i].receiveShadow) {\n      opaqueList[i].material.set('pcfKernel', pcfKernel);\n      opaqueList[i].material.define('fragment', 'PCF_KERNEL_SIZE', pcfKernel.length / 2);\n    }\n  }\n};\n\nViewGL.prototype.dispose = function (renderer) {\n  this._compositor.dispose(renderer.gl);\n\n  this._temporalSS.dispose(renderer.gl);\n\n  this._shadowMapPass.dispose(renderer);\n};\n/**\n * @param {module:echarts/Model} Post effect model\n */\n\n\nViewGL.prototype.setPostEffect = function (postEffectModel, api) {\n  var compositor = this._compositor;\n  this._enablePostEffect = postEffectModel.get('enable');\n  var bloomModel = postEffectModel.getModel('bloom');\n  var edgeModel = postEffectModel.getModel('edge');\n  var dofModel = postEffectModel.getModel('DOF', postEffectModel.getModel('depthOfField'));\n  var ssaoModel = postEffectModel.getModel('SSAO', postEffectModel.getModel('screenSpaceAmbientOcclusion'));\n  var ssrModel = postEffectModel.getModel('SSR', postEffectModel.getModel('screenSpaceReflection'));\n  var fxaaModel = postEffectModel.getModel('FXAA');\n  var colorCorrModel = postEffectModel.getModel('colorCorrection');\n  bloomModel.get('enable') ? compositor.enableBloom() : compositor.disableBloom();\n  dofModel.get('enable') ? compositor.enableDOF() : compositor.disableDOF();\n  ssrModel.get('enable') ? compositor.enableSSR() : compositor.disableSSR();\n  colorCorrModel.get('enable') ? compositor.enableColorCorrection() : compositor.disableColorCorrection();\n  edgeModel.get('enable') ? compositor.enableEdge() : compositor.disableEdge();\n  fxaaModel.get('enable') ? compositor.enableFXAA() : compositor.disableFXAA();\n  this._enableDOF = dofModel.get('enable');\n  this._enableSSAO = ssaoModel.get('enable');\n  this._enableSSAO ? compositor.enableSSAO() : compositor.disableSSAO();\n  compositor.setBloomIntensity(bloomModel.get('intensity'));\n  compositor.setEdgeColor(edgeModel.get('color'));\n  compositor.setColorLookupTexture(colorCorrModel.get('lookupTexture'), api);\n  compositor.setExposure(colorCorrModel.get('exposure'));\n  ['radius', 'quality', 'intensity'].forEach(function (name) {\n    compositor.setSSAOParameter(name, ssaoModel.get(name));\n  });\n  ['quality', 'maxRoughness', 'physical'].forEach(function (name) {\n    compositor.setSSRParameter(name, ssrModel.get(name));\n  });\n  ['quality', 'focalDistance', 'focalRange', 'blurRadius', 'fstop'].forEach(function (name) {\n    compositor.setDOFParameter(name, dofModel.get(name));\n  });\n  ['brightness', 'contrast', 'saturation'].forEach(function (name) {\n    compositor.setColorCorrection(name, colorCorrModel.get(name));\n  });\n};\n\nViewGL.prototype.setDOFFocusOnPoint = function (depth) {\n  if (this._enablePostEffect) {\n    if (depth > this.camera.far || depth < this.camera.near) {\n      return;\n    }\n\n    this._compositor.setDOFParameter('focalDistance', depth);\n\n    return true;\n  }\n};\n\nViewGL.prototype.setTemporalSuperSampling = function (temporalSuperSamplingModel) {\n  this._enableTemporalSS = temporalSuperSamplingModel.get('enable');\n};\n\nViewGL.prototype.isLinearSpace = function () {\n  return this._enablePostEffect;\n};\n\nViewGL.prototype.setRootNode = function (rootNode) {\n  if (this.rootNode === rootNode) {\n    return;\n  }\n\n  var children = this.rootNode.children();\n\n  for (var i = 0; i < children.length; i++) {\n    rootNode.add(children[i]);\n  }\n\n  if (rootNode !== this.scene) {\n    this.scene.add(rootNode);\n  }\n\n  this.rootNode = rootNode;\n}; // Proxies\n\n\nViewGL.prototype.add = function (node3D) {\n  this.rootNode.add(node3D);\n};\n\nViewGL.prototype.remove = function (node3D) {\n  this.rootNode.remove(node3D);\n};\n\nViewGL.prototype.removeAll = function (node3D) {\n  this.rootNode.removeAll(node3D);\n};\n\nObject.assign(ViewGL.prototype, notifier);\nexport default ViewGL;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}