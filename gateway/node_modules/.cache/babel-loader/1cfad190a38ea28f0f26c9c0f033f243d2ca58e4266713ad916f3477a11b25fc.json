{"ast":null,"code":"import { reactive, ref } from 'vue';\nexport default {\n  data() {}\n};\nconst ruleFormRef = ref();\nconst validateUser = (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('The username cannot be NULL'));\n  } else {\n    callback();\n  }\n};\nconst validatePass = (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('Please input the password'));\n  } else {\n    if (ruleForm.checkPass !== '') {\n      if (!ruleFormRef.value) return;\n      ruleFormRef.value.validateField('checkPass');\n    }\n    callback();\n  }\n};\nconst validatePass2 = (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('Please input the password again'));\n  } else if (value !== ruleForm.pass) {\n    callback(new Error(\"Two inputs don't match!\"));\n  } else {\n    callback();\n  }\n};\nconst validatePhone = (rule, value, callback) => {\n  if (!value) {\n    return callback(new Error('Please input the phone number'));\n  }\n  setTimeout(() => {\n    if (!Number.isInteger(value)) {\n      callback(new Error('Please input digits'));\n    } else {\n      if (value < 10000000000) {\n        callback(new Error('Phone number must be 1XXXXXXXXXX'));\n      } else if (value >= 20000000000) {\n        callback(new Error('Phone number must be 1XXXXXXXXXX'));\n      } else {\n        callback();\n      }\n    }\n  }, 1000);\n};\nconst ruleForm = reactive({\n  user: '',\n  pass: '',\n  checkPass: '',\n  phone: ''\n});\nconst rules = reactive({\n  user: [{\n    validator: validateUser,\n    trigger: 'blur'\n  }],\n  pass: [{\n    validator: validatePass,\n    trigger: 'blur'\n  }],\n  checkPass: [{\n    validator: validatePass2,\n    trigger: 'blur'\n  }],\n  phone: [{\n    validator: validatePhone,\n    trigger: 'blur'\n  }]\n});\nconst submitForm = formEl => {\n  if (!formEl) return;\n  formEl.validate(valid => {\n    if (valid) {\n      console.log('submit!');\n    } else {\n      console.log('error submit!');\n    }\n  });\n};\nconst resetForm = formEl => {\n  if (!formEl) return;\n  formEl.resetFields();\n};","map":{"version":3,"names":["reactive","ref","data","ruleFormRef","validateUser","rule","value","callback","Error","validatePass","ruleForm","checkPass","validateField","validatePass2","pass","validatePhone","setTimeout","Number","isInteger","user","phone","rules","validator","trigger","submitForm","formEl","validate","valid","console","log","resetForm","resetFields"],"sources":["E:\\mytest\\src\\views\\accountpane\\registerPane.vue"],"sourcesContent":["<template>\r\n  <div class=\"register\"\r\n    style=\" display: flex; justify-content: center; align-items: center;  height: 100vh; background-color:azure;\">\r\n    <div class=\"mainReg\" style=\"width: 600px; max-height: 2000px; border-radius: 10px; background-color: white\" :style=\"{\r\n      boxShadow: `var(--el-box-shadow-dark)`\r\n    }\">\r\n      <el-container>\r\n        <el-header>\r\n          <h2>Register</h2>\r\n        </el-header>\r\n        <el-main style=\"display: flex; justify-content: center;\">\r\n          <el-form ref=\"ruleFormRef\" style=\"max-width: 1000px \" :model=\"ruleForm\" status-icon :rules=\"rules\"\r\n            size=\"default\" label-width=\"auto\" class=\"registerForm\">\r\n            <el-form-item label=\"Username\" prop=\"user\">\r\n              <el-input v-model=\"ruleForm.user\" type=\"username\" autocomplete=\"off\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"Password\" prop=\"pass\">\r\n              <el-input v-model=\"ruleForm.pass\" type=\"password\" autocomplete=\"off\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"Confirm\" prop=\"checkPass\">\r\n              <el-input v-model=\"ruleForm.checkPass\" type=\"password\" autocomplete=\"off\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"邮箱\" prop=\"phone\">\r\n              <el-input v-model.number=\"ruleForm.phone\" type=\"phone\" autocomplete=\"off\" />\r\n              <!-- v-model.number=\"ruleForm.phone\" -->\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"submitForm(ruleFormRef)\">\r\n                Submit\r\n              </el-button>\r\n              <el-button @click=\"resetForm(ruleFormRef)\">Reset</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-main>\r\n\r\n      </el-container>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref } from 'vue'\r\n\r\nexport default{\r\n  data(){\r\n    \r\n  }\r\n}\r\nconst ruleFormRef = ref()\r\n\r\nconst validateUser = (rule, value, callback) => {\r\n  if (value === '') {\r\n    callback(new Error('The username cannot be NULL'))\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\nconst validatePass = (rule, value, callback) => {\r\n  if (value === '') {\r\n    callback(new Error('Please input the password'))\r\n  } else {\r\n    if (ruleForm.checkPass !== '') {\r\n      if (!ruleFormRef.value) return\r\n      ruleFormRef.value.validateField('checkPass')\r\n    }\r\n    callback()\r\n  }\r\n}\r\n\r\nconst validatePass2 = (rule, value, callback) => {\r\n  if (value === '') {\r\n    callback(new Error('Please input the password again'))\r\n  } else if (value !== ruleForm.pass) {\r\n    callback(new Error(\"Two inputs don't match!\"))\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\n\r\nconst validatePhone = (rule, value, callback) => {\r\n  if (!value) {\r\n    return callback(new Error('Please input the phone number'))\r\n  }\r\n  setTimeout(() => {\r\n    if (!Number.isInteger(value)) {\r\n      callback(new Error('Please input digits'))\r\n    } else {\r\n      if (value < 10000000000) {\r\n        callback(new Error('Phone number must be 1XXXXXXXXXX'))\r\n      } else if (value >= 20000000000) {\r\n        callback(new Error('Phone number must be 1XXXXXXXXXX'))\r\n      }\r\n      else {\r\n        callback()\r\n      }\r\n    }\r\n  }, 1000)\r\n}\r\n\r\nconst ruleForm = reactive({\r\n  user: '',\r\n  pass: '',\r\n  checkPass: '',\r\n  phone: ''\r\n})\r\n\r\nconst rules = reactive({\r\n  user: [{ validator: validateUser, trigger: 'blur' }],\r\n  pass: [{ validator: validatePass, trigger: 'blur' }],\r\n  checkPass: [{ validator: validatePass2, trigger: 'blur' }],\r\n  phone: [{ validator: validatePhone, trigger: 'blur' }],\r\n})\r\n\r\nconst submitForm = (formEl) => {\r\n  if (!formEl) return\r\n  formEl.validate((valid) => {\r\n    if (valid) {\r\n      console.log('submit!')\r\n    } else {\r\n      console.log('error submit!')\r\n    }\r\n  })\r\n}\r\n\r\nconst resetForm = (formEl) => {\r\n  if (!formEl) return\r\n  formEl.resetFields()\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.register .mainReg {\r\n  border: 1px solid var(--el-border-color);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}