{"ast":null,"code":"export default {\n  defaultOption: {\n    viewControl: {\n      // perspective, orthographic.\n      // TODO Isometric\n      projection: 'perspective',\n      // If rotate on on init\n      autoRotate: false,\n      // cw or ccw\n      autoRotateDirection: 'cw',\n      // Degree per second\n      autoRotateSpeed: 10,\n      // Start rotating after still for a given time\n      // default is 3 seconds\n      autoRotateAfterStill: 3,\n      // Rotate, zoom damping.\n      damping: 0.8,\n      // Sensitivities for operations.\n      // Can be array to set x,y respectively\n      rotateSensitivity: 1,\n      zoomSensitivity: 1,\n      // Can be array to set x,y respectively\n      panSensitivity: 1,\n      // Which mouse button do rotate or pan\n      panMouseButton: 'middle',\n      rotateMouseButton: 'left',\n      // Distance to the target\n      // Only available when camera is perspective.\n      distance: 150,\n      // Min distance mouse can zoom in\n      minDistance: 40,\n      // Max distance mouse can zoom out\n      maxDistance: 400,\n      // Size of viewing volume.\n      // Only available when camera is orthographic\n      orthographicSize: 150,\n      maxOrthographicSize: 400,\n      minOrthographicSize: 20,\n      // Center view point\n      center: [0, 0, 0],\n      // Alpha angle for top-down rotation\n      // Positive to rotate to top.\n      alpha: 0,\n      // beta angle for left-right rotation\n      // Positive to rotate to right.\n      beta: 0,\n      minAlpha: -90,\n      maxAlpha: 90 // minBeta: -Infinity\n      // maxBeta: -Infinity\n    }\n  },\n  setView: function (opts) {\n    opts = opts || {};\n    this.option.viewControl = this.option.viewControl || {};\n    if (opts.alpha != null) {\n      this.option.viewControl.alpha = opts.alpha;\n    }\n    if (opts.beta != null) {\n      this.option.viewControl.beta = opts.beta;\n    }\n    if (opts.distance != null) {\n      this.option.viewControl.distance = opts.distance;\n    }\n    if (opts.center != null) {\n      this.option.viewControl.center = opts.center;\n    }\n  }\n};","map":{"version":3,"names":["defaultOption","viewControl","projection","autoRotate","autoRotateDirection","autoRotateSpeed","autoRotateAfterStill","damping","rotateSensitivity","zoomSensitivity","panSensitivity","panMouseButton","rotateMouseButton","distance","minDistance","maxDistance","orthographicSize","maxOrthographicSize","minOrthographicSize","center","alpha","beta","minAlpha","maxAlpha","setView","opts","option"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/component/common/componentViewControlMixin.js"],"sourcesContent":["export default {\n  defaultOption: {\n    viewControl: {\n      // perspective, orthographic.\n      // TODO Isometric\n      projection: 'perspective',\n      // If rotate on on init\n      autoRotate: false,\n      // cw or ccw\n      autoRotateDirection: 'cw',\n      // Degree per second\n      autoRotateSpeed: 10,\n      // Start rotating after still for a given time\n      // default is 3 seconds\n      autoRotateAfterStill: 3,\n      // Rotate, zoom damping.\n      damping: 0.8,\n      // Sensitivities for operations.\n      // Can be array to set x,y respectively\n      rotateSensitivity: 1,\n      zoomSensitivity: 1,\n      // Can be array to set x,y respectively\n      panSensitivity: 1,\n      // Which mouse button do rotate or pan\n      panMouseButton: 'middle',\n      rotateMouseButton: 'left',\n      // Distance to the target\n      // Only available when camera is perspective.\n      distance: 150,\n      // Min distance mouse can zoom in\n      minDistance: 40,\n      // Max distance mouse can zoom out\n      maxDistance: 400,\n      // Size of viewing volume.\n      // Only available when camera is orthographic\n      orthographicSize: 150,\n      maxOrthographicSize: 400,\n      minOrthographicSize: 20,\n      // Center view point\n      center: [0, 0, 0],\n      // Alpha angle for top-down rotation\n      // Positive to rotate to top.\n      alpha: 0,\n      // beta angle for left-right rotation\n      // Positive to rotate to right.\n      beta: 0,\n      minAlpha: -90,\n      maxAlpha: 90 // minBeta: -Infinity\n      // maxBeta: -Infinity\n\n    }\n  },\n  setView: function (opts) {\n    opts = opts || {};\n    this.option.viewControl = this.option.viewControl || {};\n\n    if (opts.alpha != null) {\n      this.option.viewControl.alpha = opts.alpha;\n    }\n\n    if (opts.beta != null) {\n      this.option.viewControl.beta = opts.beta;\n    }\n\n    if (opts.distance != null) {\n      this.option.viewControl.distance = opts.distance;\n    }\n\n    if (opts.center != null) {\n      this.option.viewControl.center = opts.center;\n    }\n  }\n};"],"mappings":"AAAA,eAAe;EACbA,aAAa,EAAE;IACbC,WAAW,EAAE;MACX;MACA;MACAC,UAAU,EAAE,aAAa;MACzB;MACAC,UAAU,EAAE,KAAK;MACjB;MACAC,mBAAmB,EAAE,IAAI;MACzB;MACAC,eAAe,EAAE,EAAE;MACnB;MACA;MACAC,oBAAoB,EAAE,CAAC;MACvB;MACAC,OAAO,EAAE,GAAG;MACZ;MACA;MACAC,iBAAiB,EAAE,CAAC;MACpBC,eAAe,EAAE,CAAC;MAClB;MACAC,cAAc,EAAE,CAAC;MACjB;MACAC,cAAc,EAAE,QAAQ;MACxBC,iBAAiB,EAAE,MAAM;MACzB;MACA;MACAC,QAAQ,EAAE,GAAG;MACb;MACAC,WAAW,EAAE,EAAE;MACf;MACAC,WAAW,EAAE,GAAG;MAChB;MACA;MACAC,gBAAgB,EAAE,GAAG;MACrBC,mBAAmB,EAAE,GAAG;MACxBC,mBAAmB,EAAE,EAAE;MACvB;MACAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACjB;MACA;MACAC,KAAK,EAAE,CAAC;MACR;MACA;MACAC,IAAI,EAAE,CAAC;MACPC,QAAQ,EAAE,CAAC,EAAE;MACbC,QAAQ,EAAE,EAAE,CAAC;MACb;IAEF;EACF,CAAC;EACDC,OAAO,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACvBA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACjB,IAAI,CAACC,MAAM,CAACzB,WAAW,GAAG,IAAI,CAACyB,MAAM,CAACzB,WAAW,IAAI,CAAC,CAAC;IAEvD,IAAIwB,IAAI,CAACL,KAAK,IAAI,IAAI,EAAE;MACtB,IAAI,CAACM,MAAM,CAACzB,WAAW,CAACmB,KAAK,GAAGK,IAAI,CAACL,KAAK;IAC5C;IAEA,IAAIK,IAAI,CAACJ,IAAI,IAAI,IAAI,EAAE;MACrB,IAAI,CAACK,MAAM,CAACzB,WAAW,CAACoB,IAAI,GAAGI,IAAI,CAACJ,IAAI;IAC1C;IAEA,IAAII,IAAI,CAACZ,QAAQ,IAAI,IAAI,EAAE;MACzB,IAAI,CAACa,MAAM,CAACzB,WAAW,CAACY,QAAQ,GAAGY,IAAI,CAACZ,QAAQ;IAClD;IAEA,IAAIY,IAAI,CAACN,MAAM,IAAI,IAAI,EAAE;MACvB,IAAI,CAACO,MAAM,CAACzB,WAAW,CAACkB,MAAM,GAAGM,IAAI,CAACN,MAAM;IAC9C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}