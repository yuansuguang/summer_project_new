{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { nextTick } from 'vue';\nimport * as echarts from 'echarts';\nimport 'echarts-gl';\nimport * as XLSX from 'xlsx';\nexport default {\n  data() {\n    return {\n      selectedPrimary: '',\n      selectedSecondary: '',\n      analysisResult: {},\n      surveyData: [[{\n        \"question_description\": \"你的年龄是？\",\n        \"answer\": \"18-25\"\n      }, {\n        \"question_description\": \"你的职业是？\",\n        \"answer\": \"学生\"\n      }, {\n        \"question_description\": \"你喜欢什么颜色？\",\n        \"answer\": \"蓝色\"\n      }], [{\n        \"question_description\": \"你的年龄是？\",\n        \"answer\": \"25-32\"\n      }, {\n        \"question_description\": \"你的职业是？\",\n        \"answer\": \"教师\"\n      }, {\n        \"question_description\": \"你喜欢什么颜色？\",\n        \"answer\": \"红色\"\n      }], [{\n        \"question_description\": \"你的年龄是？\",\n        \"answer\": \"10-18\"\n      }, {\n        \"question_description\": \"你的职业是？\",\n        \"answer\": \"学生\"\n      }, {\n        \"question_description\": \"你喜欢什么颜色？\",\n        \"answer\": \"白色\"\n      }], [{\n        \"question_description\": \"你的年龄是？\",\n        \"answer\": \"25-32\"\n      }, {\n        \"question_description\": \"你的职业是？\",\n        \"answer\": \"教师\"\n      }, {\n        \"question_description\": \"你喜欢什么颜色？\",\n        \"answer\": \"黑色\"\n      }], [{\n        \"question_description\": \"你的年龄是？\",\n        \"answer\": \"25-32\"\n      }, {\n        \"question_description\": \"你的职业是？\",\n        \"answer\": \"学生\"\n      }, {\n        \"question_description\": \"你喜欢什么颜色？\",\n        \"answer\": \"白色\"\n      }], [{\n        \"question_description\": \"你的年龄是？\",\n        \"answer\": \"25-32\"\n      }, {\n        \"question_description\": \"你的职业是？\",\n        \"answer\": \"学生\"\n      }, {\n        \"question_description\": \"你喜欢什么颜色？\",\n        \"answer\": \"粉色\"\n      }]\n      // 省略其他数据\n      ],\n      myChart: null\n    };\n  },\n  computed: {\n    questionsData() {\n      if (!this.surveyData.length || !this.surveyData[0].length) return [];\n      const questionSet = new Set();\n      this.surveyData.forEach(response => {\n        response.forEach(item => {\n          questionSet.add(item.question_description);\n        });\n      });\n      return Array.from(questionSet).map(question => ({\n        name: question,\n        displayName: question\n      }));\n    },\n    formattedTableData() {\n      let tableData = [];\n      if (Object.keys(this.analysisResult).length) {\n        Object.keys(this.analysisResult).forEach(primary => {\n          Object.keys(this.analysisResult[primary]).forEach(secondary => {\n            tableData.push({\n              primary: this.getDisplayName(primary),\n              secondary: this.getDisplayName(secondary),\n              count: this.analysisResult[primary][secondary]\n            });\n          });\n        });\n      }\n      return tableData;\n    }\n  },\n  methods: {\n    performAnalysis() {\n      const primaryQuestionDescription = this.selectedPrimary;\n      const secondaryQuestionDescription = this.selectedSecondary;\n      let analysisMap = new Map();\n      this.surveyData.forEach(response => {\n        const primaryResponse = response.find(item => item.question_description === primaryQuestionDescription).answer;\n        const secondaryResponse = response.find(item => item.question_description === secondaryQuestionDescription).answer;\n        if (!analysisMap.has(primaryResponse)) {\n          analysisMap.set(primaryResponse, {});\n        }\n        const secondaryCounts = analysisMap.get(primaryResponse);\n        secondaryCounts[secondaryResponse] = (secondaryCounts[secondaryResponse] || 0) + 1;\n      });\n      let result = {};\n      analysisMap.forEach((counts, primaryAnswer) => {\n        result[primaryAnswer] = counts;\n      });\n      this.analysisResult = result;\n\n      // Ensure the chart updates with the new analysis result\n      nextTick(() => {\n        if (Object.keys(this.analysisResult).length > 0) {\n          this.setChart();\n        }\n      });\n    },\n    getDisplayName(questionName) {\n      const question = this.questionsData.find(q => q.name === questionName);\n      return question ? question.displayName : questionName;\n    },\n    setChart() {\n      nextTick(() => {\n        const chartDom = document.getElementById('chart');\n        if (chartDom && this.analysisResult) {\n          this.myChart = echarts.init(chartDom);\n          const dimensions = {\n            x: '',\n            y: '',\n            z: ''\n          };\n          let data = [];\n          let xData = [];\n          let yData = [];\n          Object.keys(this.analysisResult).forEach(x => {\n            Object.keys(this.analysisResult[x]).forEach(y => {\n              data.push([x, y, this.analysisResult[x][y]]);\n              if (xData.indexOf(x) === -1) xData.push(x);\n              if (yData.indexOf(y) === -1) yData.push(y);\n            });\n          });\n          dimensions.x = this.selectedPrimary;\n          dimensions.y = this.selectedSecondary;\n          dimensions.z = '数量';\n          let option = {\n            tooltip: {},\n            visualMap: {\n              max: 20,\n              inRange: {\n                color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n              }\n            },\n            xAxis3D: {\n              type: 'category',\n              data: xData,\n              name: dimensions.x,\n              axisLabel: {\n                formatter: function (value) {\n                  return value;\n                }\n              }\n            },\n            yAxis3D: {\n              type: 'category',\n              data: yData,\n              name: dimensions.y\n            },\n            zAxis3D: {\n              type: 'value',\n              name: dimensions.z\n            },\n            grid3D: {\n              boxWidth: 200,\n              boxDepth: 80,\n              viewControl: {\n                // projection: 'orthographic'\n              },\n              light: {\n                main: {\n                  intensity: 1.2,\n                  shadow: true\n                },\n                ambient: {\n                  intensity: 0.3\n                }\n              }\n            },\n            series: [{\n              type: 'bar3D',\n              data: data.map(function (item) {\n                return {\n                  value: [item[0], item[1], item[2]]\n                };\n              }),\n              shading: 'lambert',\n              label: {\n                textStyle: {\n                  fontSize: 16,\n                  borderWidth: 1\n                }\n              },\n              emphasis: {\n                label: {\n                  textStyle: {\n                    fontSize: 20,\n                    color: '#900'\n                  }\n                },\n                itemStyle: {\n                  color: '#900'\n                }\n              }\n            }]\n          };\n          this.myChart.setOption(option);\n        }\n      });\n    },\n    exportToExcel() {\n      const wb = XLSX.utils.book_new();\n      const ws = XLSX.utils.json_to_sheet(this.formattedTableData);\n      XLSX.utils.book_append_sheet(wb, ws, 'AnalysisResult');\n      XLSX.writeFile(wb, 'analysis_result.xlsx');\n    },\n    exportChart() {\n      if (this.myChart) {\n        const img = new Image();\n        const url = this.myChart.getDataURL({\n          pixelRatio: 2,\n          backgroundColor: '#fff'\n        });\n        img.src = url;\n        // 创建下载链接并点击进行下载\n        const a = document.createElement('a');\n        a.download = 'chart.png';\n        a.href = url;\n        a.click();\n      }\n    },\n    fetchsubmission() {\n      var param = {\n        survey_id: this.$route.params.qnid\n      };\n      var paramer = JSON.stringify(param);\n      console.log(paramer);\n      this.$axios({\n        method: 'post',\n        url: '/submit/api/get_survey_submissions',\n        data: paramer\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            this.surveyData = res.data.submissions;\n            console.log(\"success on fetching survey data\");\n            break;\n          case 2:\n            console.log(\"error 2\");\n            break;\n          case 3:\n            console.log(\"error 3\");\n            break;\n          case 4:\n            console.log(\"error 4\");\n            break;\n          case 5:\n            console.log(\"error 5\");\n            console.log(res.data.message);\n            break;\n          case -1:\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  created() {\n    this.fetchsubmission();\n  },\n  mounted() {\n    if (this.questionsData.length > 0) {\n      this.selectedPrimary = this.questionsData[0].name;\n      this.selectedSecondary = this.questionsData.length > 1 ? this.questionsData[1].name : this.questionsData[0].name;\n    }\n  },\n  watch: {\n    analysisResult(newVal) {\n      if (newVal) {\n        this.setChart();\n      }\n    }\n  }\n};","map":{"version":3,"names":["nextTick","echarts","XLSX","data","selectedPrimary","selectedSecondary","analysisResult","surveyData","myChart","computed","questionsData","length","questionSet","Set","forEach","response","item","add","question_description","Array","from","map","question","name","displayName","formattedTableData","tableData","Object","keys","primary","secondary","push","getDisplayName","count","methods","performAnalysis","primaryQuestionDescription","secondaryQuestionDescription","analysisMap","Map","primaryResponse","find","answer","secondaryResponse","has","set","secondaryCounts","get","result","counts","primaryAnswer","setChart","questionName","q","chartDom","document","getElementById","init","dimensions","x","y","z","xData","yData","indexOf","option","tooltip","visualMap","max","inRange","color","xAxis3D","type","axisLabel","formatter","value","yAxis3D","zAxis3D","grid3D","boxWidth","boxDepth","viewControl","light","main","intensity","shadow","ambient","series","shading","label","textStyle","fontSize","borderWidth","emphasis","itemStyle","setOption","exportToExcel","wb","utils","book_new","ws","json_to_sheet","book_append_sheet","writeFile","exportChart","img","Image","url","getDataURL","pixelRatio","backgroundColor","src","a","createElement","download","href","click","fetchsubmission","param","survey_id","$route","params","qnid","paramer","JSON","stringify","console","log","$axios","method","then","res","status_code","submissions","message","catch","err","created","mounted","watch","newVal"],"sources":["E:\\mytest\\src\\views\\qn-data\\qnAnalysis.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <el-row type=\"flex\" justify=\"center\">\r\n        <el-col :span=\"12\">\r\n          <h1>问卷交叉分析</h1>\r\n          <el-form>\r\n            <el-form-item label=\"选择分析的第一个维度：\">\r\n              <el-select v-model=\"selectedPrimary\" placeholder=\"请选择\">\r\n                <el-option\r\n                  v-for=\"question in questionsData\"\r\n                  :key=\"question.name\"\r\n                  :label=\"question.displayName\"\r\n                  :value=\"question.name\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"选择分析的第二个维度：\">\r\n              <el-select v-model=\"selectedSecondary\" placeholder=\"请选择\">\r\n                <el-option\r\n                  v-for=\"question in questionsData\"\r\n                  :key=\"question.name\"\r\n                  :label=\"question.displayName\"\r\n                  :value=\"question.name\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"performAnalysis\">执行分析</el-button>\r\n              <el-button type=\"success\" @click=\"exportToExcel\">导出Excel</el-button>\r\n              <el-button type=\"warning  \" @click=\"exportChart\">导出立体图</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n          <div v-if=\"analysisResult && Object.keys(analysisResult).length\">\r\n            <h2>分析结果：</h2>\r\n            <el-card class=\"box-card\" v-for=\"(result, key) in analysisResult\" :key=\"key\">\r\n              <div>\r\n                <h3>{{ getDisplayName(key) }}:</h3>\r\n                <el-list v-for=\"(count, answer) in result\" :key=\"answer\">\r\n                  <el-list-item>{{ getDisplayName(answer) }}: {{ count }} 次<br></el-list-item>\r\n                </el-list>\r\n              </div>\r\n            </el-card>\r\n            <h2>交叉分析表格：</h2>\r\n            <el-table :data=\"formattedTableData\" style=\"width: 100%\" stripe>\r\n                <el-table-column prop=\"primary\" label=\"第一维度\"></el-table-column>\r\n                <el-table-column prop=\"secondary\" label=\"第二维度\"></el-table-column>\r\n                <el-table-column prop=\"count\" label=\"计数\"></el-table-column>\r\n            </el-table>\r\n            <div id=\"chart\" style=\"width: 800px;height:600px;\"></div>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\n  import {nextTick } from 'vue';\r\n  import * as echarts from 'echarts';\r\n  import 'echarts-gl';\r\n  import * as XLSX from 'xlsx';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        selectedPrimary: '',\r\n        selectedSecondary: '',\r\n        analysisResult: {},\r\n        surveyData: [\r\n          [\r\n            {\"question_description\": \"你的年龄是？\", \"answer\": \"18-25\"},\r\n            {\"question_description\": \"你的职业是？\", \"answer\": \"学生\"},\r\n            {\"question_description\": \"你喜欢什么颜色？\", \"answer\": \"蓝色\"}\r\n          ],\r\n          [\r\n            {\"question_description\": \"你的年龄是？\", \"answer\": \"25-32\"},\r\n            {\"question_description\": \"你的职业是？\", \"answer\": \"教师\"},\r\n            {\"question_description\": \"你喜欢什么颜色？\", \"answer\": \"红色\"}\r\n          ],\r\n          [\r\n            {\"question_description\": \"你的年龄是？\", \"answer\": \"10-18\"},\r\n            {\"question_description\": \"你的职业是？\", \"answer\": \"学生\"},\r\n            {\"question_description\": \"你喜欢什么颜色？\", \"answer\": \"白色\"}\r\n          ],\r\n          [\r\n            {\"question_description\": \"你的年龄是？\", \"answer\": \"25-32\"},\r\n            {\"question_description\": \"你的职业是？\", \"answer\": \"教师\"},\r\n            {\"question_description\": \"你喜欢什么颜色？\", \"answer\": \"黑色\"}\r\n          ],\r\n          [\r\n            {\"question_description\": \"你的年龄是？\", \"answer\": \"25-32\"},\r\n            {\"question_description\": \"你的职业是？\", \"answer\": \"学生\"},\r\n            {\"question_description\": \"你喜欢什么颜色？\", \"answer\": \"白色\"}\r\n          ],\r\n          [\r\n            {\"question_description\": \"你的年龄是？\", \"answer\": \"25-32\"},\r\n            {\"question_description\": \"你的职业是？\", \"answer\": \"学生\"},\r\n            {\"question_description\": \"你喜欢什么颜色？\", \"answer\": \"粉色\"}\r\n          ]\r\n          // 省略其他数据\r\n        ],\r\n        myChart: null\r\n      };\r\n    },\r\n    computed: {\r\n      questionsData() {\r\n        if (!this.surveyData.length || !this.surveyData[0].length) return [];\r\n        const questionSet = new Set();\r\n        this.surveyData.forEach(response => {\r\n          response.forEach(item => {\r\n            questionSet.add(item.question_description);\r\n          });\r\n        });\r\n        return Array.from(questionSet).map(question => ({ \r\n          name: question, \r\n          displayName: question \r\n        }));\r\n      },\r\n      formattedTableData() {\r\n        let tableData = [];\r\n        if (Object.keys(this.analysisResult).length) {\r\n            Object.keys(this.analysisResult).forEach(primary => {\r\n            Object.keys(this.analysisResult[primary]).forEach(secondary => {\r\n                tableData.push({\r\n                primary: this.getDisplayName(primary),\r\n                secondary: this.getDisplayName(secondary),\r\n                count: this.analysisResult[primary][secondary]\r\n                });\r\n            });\r\n            });\r\n        }\r\n        return tableData;\r\n      }\r\n    },\r\n    methods: {\r\n      performAnalysis() {\r\n        const primaryQuestionDescription = this.selectedPrimary;\r\n        const secondaryQuestionDescription = this.selectedSecondary;\r\n        let analysisMap = new Map();\r\n  \r\n        this.surveyData.forEach(response => {\r\n          const primaryResponse = response.find(item => item.question_description === primaryQuestionDescription).answer;\r\n          const secondaryResponse = response.find(item => item.question_description === secondaryQuestionDescription).answer;\r\n  \r\n          if (!analysisMap.has(primaryResponse)) {\r\n            analysisMap.set(primaryResponse, {});\r\n          }\r\n  \r\n          const secondaryCounts = analysisMap.get(primaryResponse);\r\n          secondaryCounts[secondaryResponse] = (secondaryCounts[secondaryResponse] || 0) + 1;\r\n        });\r\n  \r\n        let result = {};\r\n        analysisMap.forEach((counts, primaryAnswer) => {\r\n          result[primaryAnswer] = counts;\r\n        });\r\n  \r\n        this.analysisResult = result;\r\n  \r\n        // Ensure the chart updates with the new analysis result\r\n        nextTick(() => {\r\n          if (Object.keys(this.analysisResult).length > 0) {\r\n            this.setChart();\r\n          }\r\n        });\r\n      },\r\n      getDisplayName(questionName) {\r\n        const question = this.questionsData.find(q => q.name === questionName);\r\n        return question ? question.displayName : questionName;\r\n      },\r\n      setChart() {\r\n        nextTick(() => {\r\n          const chartDom = document.getElementById('chart');\r\n          if (chartDom && this.analysisResult) {\r\n            this.myChart = echarts.init(chartDom);\r\n            const dimensions = { x: '', y: '', z: '' };\r\n  \r\n            let data = [];\r\n            let xData = [];\r\n            let yData = [];\r\n            Object.keys(this.analysisResult).forEach(x => {\r\n              Object.keys(this.analysisResult[x]).forEach(y => {\r\n                data.push([x, y, this.analysisResult[x][y]]);\r\n                if (xData.indexOf(x) === -1) xData.push(x);\r\n                if (yData.indexOf(y) === -1) yData.push(y);\r\n              });\r\n            });\r\n  \r\n            dimensions.x = this.selectedPrimary;\r\n            dimensions.y = this.selectedSecondary;\r\n            dimensions.z = '数量';\r\n  \r\n            let option = {\r\n              tooltip: {},\r\n              visualMap: {\r\n                max: 20,\r\n                inRange: {\r\n                  color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\r\n                }\r\n              },\r\n              xAxis3D: {\r\n                type: 'category',\r\n                data: xData,\r\n                name: dimensions.x,\r\n                axisLabel: {\r\n                  formatter: function (value) {\r\n                    return value;\r\n                  }\r\n                }\r\n              },\r\n              yAxis3D: {\r\n                type: 'category',\r\n                data: yData,\r\n                name: dimensions.y\r\n              },\r\n              zAxis3D: {\r\n                type: 'value',\r\n                name: dimensions.z\r\n              },\r\n              grid3D: {\r\n                boxWidth: 200,\r\n                boxDepth: 80,\r\n                viewControl: {\r\n                  // projection: 'orthographic'\r\n                },\r\n                light: {\r\n                  main: {\r\n                    intensity: 1.2,\r\n                    shadow: true\r\n                  },\r\n                  ambient: {\r\n                    intensity: 0.3\r\n                  }\r\n                }\r\n              },\r\n              series: [{\r\n                type: 'bar3D',\r\n                data: data.map(function (item) {\r\n                  return {\r\n                    value: [item[0], item[1], item[2]],\r\n                  }\r\n                }),\r\n                shading: 'lambert',\r\n                label: {\r\n                  textStyle: {\r\n                    fontSize: 16,\r\n                    borderWidth: 1\r\n                  }\r\n                },\r\n                emphasis: {\r\n                  label: {\r\n                    textStyle: {\r\n                      fontSize: 20,\r\n                      color: '#900'\r\n                    }\r\n                  },\r\n                  itemStyle: {\r\n                    color: '#900'\r\n                  }\r\n                }\r\n              }]\r\n            };\r\n            this.myChart.setOption(option);\r\n          }\r\n        });\r\n      },\r\n      exportToExcel() {\r\n        const wb = XLSX.utils.book_new();\r\n        const ws = XLSX.utils.json_to_sheet(this.formattedTableData);\r\n        XLSX.utils.book_append_sheet(wb, ws, 'AnalysisResult');\r\n        XLSX.writeFile(wb, 'analysis_result.xlsx');\r\n      },\r\n      exportChart() {\r\n        if (this.myChart) {\r\n          const img = new Image();\r\n          const url = this.myChart.getDataURL({\r\n            pixelRatio: 2,\r\n            backgroundColor: '#fff'\r\n          });\r\n  \r\n          img.src = url;\r\n          // 创建下载链接并点击进行下载\r\n          const a = document.createElement('a');\r\n          a.download = 'chart.png';\r\n          a.href = url;\r\n          a.click();\r\n        }\r\n      },\r\n      fetchsubmission() {\r\n        var param = {\r\n                    survey_id: this.$route.params.qnid\r\n                };\r\n        var paramer = JSON.stringify(param);\r\n        console.log(paramer);\r\n                this.$axios({\r\n                    method: 'post',\r\n                    url: '/submit/api/get_survey_submissions',\r\n                    data: paramer,\r\n                })\r\n                    .then(res => {\r\n                      switch (res.data.status_code) {\r\n                case 1:\r\n                    this.surveyData = res.data.submissions;\r\n                    console.log(\"success on fetching survey data\");\r\n                    break;\r\n                case 2:\r\n                    console.log(\"error 2\");\r\n                    break;\r\n                case 3:\r\n                    console.log(\"error 3\");\r\n                    break;\r\n                case 4:\r\n                    console.log(\"error 4\");\r\n                    break;\r\n                case 5:\r\n                    console.log(\"error 5\");\r\n                    console.log(res.data.message);\r\n                    break;\r\n                case -1:\r\n                    break;\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchsubmission();\r\n    },\r\n    mounted() {\r\n      if (this.questionsData.length > 0) {\r\n        this.selectedPrimary = this.questionsData[0].name;\r\n        this.selectedSecondary = this.questionsData.length > 1 ? this.questionsData[1].name : this.questionsData[0].name;\r\n      }\r\n    },\r\n    watch: {\r\n      analysisResult(newVal) {\r\n        if (newVal) {\r\n          this.setChart();\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  \r\n  <style>\r\n  .box-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .el-col {\r\n    padding-top: 100px; /* Adjust this value as necessary */\r\n  }\r\n\r\n  /* 图表区域样式 */\r\n  #chart {\r\n    margin-top: 20px;\r\n    padding: 15px;\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n  }\r\n\r\n  /* 按钮区域样式 */\r\n  .chart-buttons {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  </style>"],"mappings":";;;;;;;;AAwDE,SAAQA,QAAO,QAAS,KAAK;AAC7B,OAAO,KAAKC,OAAM,MAAO,SAAS;AAClC,OAAO,YAAY;AACnB,OAAO,KAAKC,IAAG,MAAO,MAAM;AAE5B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,EAAE;MACnBC,iBAAiB,EAAE,EAAE;MACrBC,cAAc,EAAE,CAAC,CAAC;MAClBC,UAAU,EAAE,CACV,CACE;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAO,CAAC,EACrD;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAI,CAAC,EAClD;QAAC,sBAAsB,EAAE,UAAU;QAAE,QAAQ,EAAE;MAAI,EACpD,EACD,CACE;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAO,CAAC,EACrD;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAI,CAAC,EAClD;QAAC,sBAAsB,EAAE,UAAU;QAAE,QAAQ,EAAE;MAAI,EACpD,EACD,CACE;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAO,CAAC,EACrD;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAI,CAAC,EAClD;QAAC,sBAAsB,EAAE,UAAU;QAAE,QAAQ,EAAE;MAAI,EACpD,EACD,CACE;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAO,CAAC,EACrD;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAI,CAAC,EAClD;QAAC,sBAAsB,EAAE,UAAU;QAAE,QAAQ,EAAE;MAAI,EACpD,EACD,CACE;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAO,CAAC,EACrD;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAI,CAAC,EAClD;QAAC,sBAAsB,EAAE,UAAU;QAAE,QAAQ,EAAE;MAAI,EACpD,EACD,CACE;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAO,CAAC,EACrD;QAAC,sBAAsB,EAAE,QAAQ;QAAE,QAAQ,EAAE;MAAI,CAAC,EAClD;QAAC,sBAAsB,EAAE,UAAU;QAAE,QAAQ,EAAE;MAAI;MAErD;MAAA,CACD;MACDC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACH,UAAU,CAACI,MAAK,IAAK,CAAC,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAC,CAACI,MAAM,EAAE,OAAO,EAAE;MACpE,MAAMC,WAAU,GAAI,IAAIC,GAAG,CAAC,CAAC;MAC7B,IAAI,CAACN,UAAU,CAACO,OAAO,CAACC,QAAO,IAAK;QAClCA,QAAQ,CAACD,OAAO,CAACE,IAAG,IAAK;UACvBJ,WAAW,CAACK,GAAG,CAACD,IAAI,CAACE,oBAAoB,CAAC;QAC5C,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAOC,KAAK,CAACC,IAAI,CAACR,WAAW,CAAC,CAACS,GAAG,CAACC,QAAO,KAAM;QAC9CC,IAAI,EAAED,QAAQ;QACdE,WAAW,EAAEF;MACf,CAAC,CAAC,CAAC;IACL,CAAC;IACDG,kBAAkBA,CAAA,EAAG;MACnB,IAAIC,SAAQ,GAAI,EAAE;MAClB,IAAIC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACtB,cAAc,CAAC,CAACK,MAAM,EAAE;QACzCgB,MAAM,CAACC,IAAI,CAAC,IAAI,CAACtB,cAAc,CAAC,CAACQ,OAAO,CAACe,OAAM,IAAK;UACpDF,MAAM,CAACC,IAAI,CAAC,IAAI,CAACtB,cAAc,CAACuB,OAAO,CAAC,CAAC,CAACf,OAAO,CAACgB,SAAQ,IAAK;YAC3DJ,SAAS,CAACK,IAAI,CAAC;cACfF,OAAO,EAAE,IAAI,CAACG,cAAc,CAACH,OAAO,CAAC;cACrCC,SAAS,EAAE,IAAI,CAACE,cAAc,CAACF,SAAS,CAAC;cACzCG,KAAK,EAAE,IAAI,CAAC3B,cAAc,CAACuB,OAAO,CAAC,CAACC,SAAS;YAC7C,CAAC,CAAC;UACN,CAAC,CAAC;QACF,CAAC,CAAC;MACN;MACA,OAAOJ,SAAS;IAClB;EACF,CAAC;EACDQ,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MAChB,MAAMC,0BAAyB,GAAI,IAAI,CAAChC,eAAe;MACvD,MAAMiC,4BAA2B,GAAI,IAAI,CAAChC,iBAAiB;MAC3D,IAAIiC,WAAU,GAAI,IAAIC,GAAG,CAAC,CAAC;MAE3B,IAAI,CAAChC,UAAU,CAACO,OAAO,CAACC,QAAO,IAAK;QAClC,MAAMyB,eAAc,GAAIzB,QAAQ,CAAC0B,IAAI,CAACzB,IAAG,IAAKA,IAAI,CAACE,oBAAmB,KAAMkB,0BAA0B,CAAC,CAACM,MAAM;QAC9G,MAAMC,iBAAgB,GAAI5B,QAAQ,CAAC0B,IAAI,CAACzB,IAAG,IAAKA,IAAI,CAACE,oBAAmB,KAAMmB,4BAA4B,CAAC,CAACK,MAAM;QAElH,IAAI,CAACJ,WAAW,CAACM,GAAG,CAACJ,eAAe,CAAC,EAAE;UACrCF,WAAW,CAACO,GAAG,CAACL,eAAe,EAAE,CAAC,CAAC,CAAC;QACtC;QAEA,MAAMM,eAAc,GAAIR,WAAW,CAACS,GAAG,CAACP,eAAe,CAAC;QACxDM,eAAe,CAACH,iBAAiB,IAAI,CAACG,eAAe,CAACH,iBAAiB,KAAK,CAAC,IAAI,CAAC;MACpF,CAAC,CAAC;MAEF,IAAIK,MAAK,GAAI,CAAC,CAAC;MACfV,WAAW,CAACxB,OAAO,CAAC,CAACmC,MAAM,EAAEC,aAAa,KAAK;QAC7CF,MAAM,CAACE,aAAa,IAAID,MAAM;MAChC,CAAC,CAAC;MAEF,IAAI,CAAC3C,cAAa,GAAI0C,MAAM;;MAE5B;MACAhD,QAAQ,CAAC,MAAM;QACb,IAAI2B,MAAM,CAACC,IAAI,CAAC,IAAI,CAACtB,cAAc,CAAC,CAACK,MAAK,GAAI,CAAC,EAAE;UAC/C,IAAI,CAACwC,QAAQ,CAAC,CAAC;QACjB;MACF,CAAC,CAAC;IACJ,CAAC;IACDnB,cAAcA,CAACoB,YAAY,EAAE;MAC3B,MAAM9B,QAAO,GAAI,IAAI,CAACZ,aAAa,CAAC+B,IAAI,CAACY,CAAA,IAAKA,CAAC,CAAC9B,IAAG,KAAM6B,YAAY,CAAC;MACtE,OAAO9B,QAAO,GAAIA,QAAQ,CAACE,WAAU,GAAI4B,YAAY;IACvD,CAAC;IACDD,QAAQA,CAAA,EAAG;MACTnD,QAAQ,CAAC,MAAM;QACb,MAAMsD,QAAO,GAAIC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;QACjD,IAAIF,QAAO,IAAK,IAAI,CAAChD,cAAc,EAAE;UACnC,IAAI,CAACE,OAAM,GAAIP,OAAO,CAACwD,IAAI,CAACH,QAAQ,CAAC;UACrC,MAAMI,UAAS,GAAI;YAAEC,CAAC,EAAE,EAAE;YAAEC,CAAC,EAAE,EAAE;YAAEC,CAAC,EAAE;UAAG,CAAC;UAE1C,IAAI1D,IAAG,GAAI,EAAE;UACb,IAAI2D,KAAI,GAAI,EAAE;UACd,IAAIC,KAAI,GAAI,EAAE;UACdpC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACtB,cAAc,CAAC,CAACQ,OAAO,CAAC6C,CAAA,IAAK;YAC5ChC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACtB,cAAc,CAACqD,CAAC,CAAC,CAAC,CAAC7C,OAAO,CAAC8C,CAAA,IAAK;cAC/CzD,IAAI,CAAC4B,IAAI,CAAC,CAAC4B,CAAC,EAAEC,CAAC,EAAE,IAAI,CAACtD,cAAc,CAACqD,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC,CAAC;cAC5C,IAAIE,KAAK,CAACE,OAAO,CAACL,CAAC,MAAM,CAAC,CAAC,EAAEG,KAAK,CAAC/B,IAAI,CAAC4B,CAAC,CAAC;cAC1C,IAAII,KAAK,CAACC,OAAO,CAACJ,CAAC,MAAM,CAAC,CAAC,EAAEG,KAAK,CAAChC,IAAI,CAAC6B,CAAC,CAAC;YAC5C,CAAC,CAAC;UACJ,CAAC,CAAC;UAEFF,UAAU,CAACC,CAAA,GAAI,IAAI,CAACvD,eAAe;UACnCsD,UAAU,CAACE,CAAA,GAAI,IAAI,CAACvD,iBAAiB;UACrCqD,UAAU,CAACG,CAAA,GAAI,IAAI;UAEnB,IAAII,MAAK,GAAI;YACXC,OAAO,EAAE,CAAC,CAAC;YACXC,SAAS,EAAE;cACTC,GAAG,EAAE,EAAE;cACPC,OAAO,EAAE;gBACPC,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;cACjI;YACF,CAAC;YACDC,OAAO,EAAE;cACPC,IAAI,EAAE,UAAU;cAChBrE,IAAI,EAAE2D,KAAK;cACXvC,IAAI,EAAEmC,UAAU,CAACC,CAAC;cAClBc,SAAS,EAAE;gBACTC,SAAS,EAAE,SAAAA,CAAUC,KAAK,EAAE;kBAC1B,OAAOA,KAAK;gBACd;cACF;YACF,CAAC;YACDC,OAAO,EAAE;cACPJ,IAAI,EAAE,UAAU;cAChBrE,IAAI,EAAE4D,KAAK;cACXxC,IAAI,EAAEmC,UAAU,CAACE;YACnB,CAAC;YACDiB,OAAO,EAAE;cACPL,IAAI,EAAE,OAAO;cACbjD,IAAI,EAAEmC,UAAU,CAACG;YACnB,CAAC;YACDiB,MAAM,EAAE;cACNC,QAAQ,EAAE,GAAG;cACbC,QAAQ,EAAE,EAAE;cACZC,WAAW,EAAE;gBACX;cAAA,CACD;cACDC,KAAK,EAAE;gBACLC,IAAI,EAAE;kBACJC,SAAS,EAAE,GAAG;kBACdC,MAAM,EAAE;gBACV,CAAC;gBACDC,OAAO,EAAE;kBACPF,SAAS,EAAE;gBACb;cACF;YACF,CAAC;YACDG,MAAM,EAAE,CAAC;cACPf,IAAI,EAAE,OAAO;cACbrE,IAAI,EAAEA,IAAI,CAACkB,GAAG,CAAC,UAAUL,IAAI,EAAE;gBAC7B,OAAO;kBACL2D,KAAK,EAAE,CAAC3D,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC;gBACnC;cACF,CAAC,CAAC;cACFwE,OAAO,EAAE,SAAS;cAClBC,KAAK,EAAE;gBACLC,SAAS,EAAE;kBACTC,QAAQ,EAAE,EAAE;kBACZC,WAAW,EAAE;gBACf;cACF,CAAC;cACDC,QAAQ,EAAE;gBACRJ,KAAK,EAAE;kBACLC,SAAS,EAAE;oBACTC,QAAQ,EAAE,EAAE;oBACZrB,KAAK,EAAE;kBACT;gBACF,CAAC;gBACDwB,SAAS,EAAE;kBACTxB,KAAK,EAAE;gBACT;cACF;YACF,CAAC;UACH,CAAC;UACD,IAAI,CAAC9D,OAAO,CAACuF,SAAS,CAAC9B,MAAM,CAAC;QAChC;MACF,CAAC,CAAC;IACJ,CAAC;IACD+B,aAAaA,CAAA,EAAG;MACd,MAAMC,EAAC,GAAI/F,IAAI,CAACgG,KAAK,CAACC,QAAQ,CAAC,CAAC;MAChC,MAAMC,EAAC,GAAIlG,IAAI,CAACgG,KAAK,CAACG,aAAa,CAAC,IAAI,CAAC5E,kBAAkB,CAAC;MAC5DvB,IAAI,CAACgG,KAAK,CAACI,iBAAiB,CAACL,EAAE,EAAEG,EAAE,EAAE,gBAAgB,CAAC;MACtDlG,IAAI,CAACqG,SAAS,CAACN,EAAE,EAAE,sBAAsB,CAAC;IAC5C,CAAC;IACDO,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAAChG,OAAO,EAAE;QAChB,MAAMiG,GAAE,GAAI,IAAIC,KAAK,CAAC,CAAC;QACvB,MAAMC,GAAE,GAAI,IAAI,CAACnG,OAAO,CAACoG,UAAU,CAAC;UAClCC,UAAU,EAAE,CAAC;UACbC,eAAe,EAAE;QACnB,CAAC,CAAC;QAEFL,GAAG,CAACM,GAAE,GAAIJ,GAAG;QACb;QACA,MAAMK,CAAA,GAAIzD,QAAQ,CAAC0D,aAAa,CAAC,GAAG,CAAC;QACrCD,CAAC,CAACE,QAAO,GAAI,WAAW;QACxBF,CAAC,CAACG,IAAG,GAAIR,GAAG;QACZK,CAAC,CAACI,KAAK,CAAC,CAAC;MACX;IACF,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,IAAIC,KAAI,GAAI;QACAC,SAAS,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC;MAClC,CAAC;MACT,IAAIC,OAAM,GAAIC,IAAI,CAACC,SAAS,CAACP,KAAK,CAAC;MACnCQ,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;MACZ,IAAI,CAACK,MAAM,CAAC;QACRC,MAAM,EAAE,MAAM;QACdtB,GAAG,EAAE,oCAAoC;QACzCxG,IAAI,EAAEwH;MACV,CAAC,EACIO,IAAI,CAACC,GAAE,IAAK;QACX,QAAQA,GAAG,CAAChI,IAAI,CAACiI,WAAW;UAClC,KAAK,CAAC;YACF,IAAI,CAAC7H,UAAS,GAAI4H,GAAG,CAAChI,IAAI,CAACkI,WAAW;YACtCP,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;YAC9C;UACJ,KAAK,CAAC;YACFD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;YACtB;UACJ,KAAK,CAAC;YACFD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;YACtB;UACJ,KAAK,CAAC;YACFD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;YACtB;UACJ,KAAK,CAAC;YACFD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;YACtBD,OAAO,CAACC,GAAG,CAACI,GAAG,CAAChI,IAAI,CAACmI,OAAO,CAAC;YAC7B;UACJ,KAAK,CAAC,CAAC;YACH;QACJ;MACJ,CAAC,CAAC,CAACC,KAAK,CAACC,GAAE,IAAK;QACZV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;MACpB,CAAC,CAAC;IACR;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpB,eAAe,CAAC,CAAC;EACxB,CAAC;EACDqB,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAAChI,aAAa,CAACC,MAAK,GAAI,CAAC,EAAE;MACjC,IAAI,CAACP,eAAc,GAAI,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC,CAACa,IAAI;MACjD,IAAI,CAAClB,iBAAgB,GAAI,IAAI,CAACK,aAAa,CAACC,MAAK,GAAI,IAAI,IAAI,CAACD,aAAa,CAAC,CAAC,CAAC,CAACa,IAAG,GAAI,IAAI,CAACb,aAAa,CAAC,CAAC,CAAC,CAACa,IAAI;IAClH;EACF,CAAC;EACDoH,KAAK,EAAE;IACLrI,cAAcA,CAACsI,MAAM,EAAE;MACrB,IAAIA,MAAM,EAAE;QACV,IAAI,CAACzF,QAAQ,CAAC,CAAC;MACjB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}