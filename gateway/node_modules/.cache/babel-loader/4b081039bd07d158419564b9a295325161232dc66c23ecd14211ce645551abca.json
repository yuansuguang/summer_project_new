{"ast":null,"code":"import { onMounted, reactive, watch, ref, onBeforeUnmount, shallowRef } from 'vue';\n\n// 渲染数\n\nexport default {\n  __name: 'qnExport',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    mychart1.value.setOption(renderLineOptions());\n\n    // 定义属性\n    const mychart1 = ref(null);\n    const optionBar = ref(null);\n\n    // 坐标轴及其属性定义\n    const renderLineOptions = () => {\n      return {\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '8%',\n          containLabel: true\n        },\n        xAxis: {\n          data: data.chartName,\n          // x轴的标题（定义的变量），可以是直接的数组[\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\n          axisLabel1: {\n            show: true,\n            textStyle: {\n              fontSize: 15 // 字体大小\n            }\n          },\n          axisLabel2: {\n            show: true,\n            rotate: 30 // 设置x轴标签旋转角度\n          }\n        },\n        yAxis: {\n          name: '工时/h',\n          nameTextStyle: {\n            nameLocation: 'start'\n          },\n          axisLabel: {\n            show: true,\n            fontSize: 16\n          },\n          axisLine: {\n            show: true,\n            // 是否显示Y轴线\n            lineStyle: {\n              width: 1,\n              // 线的大小\n              type: 'solid' // Y轴线的类型\n            }\n          }\n        },\n        series: [{\n          // 渲染的数据，可以使用 [5, 20, 36, 10, 10, 20]，也可以是定义的变量（记得赋值）\n          data: data.chartRows,\n          type: 'bar',\n          barWidth: '20%',\n          itemStyle: {\n            // 通常情况下：\n            color: function (params) {\n              // 每根柱子的颜色\n              return data.colorList[params.dataIndex];\n            },\n            offset: 6 // 偏移量\n          },\n          label: {\n            show: true,\n            position: 'top',\n            fontSize: 14,\n            formatter: params => {\n              const reData = (params.data || 0).toString().replace(/(\\d)(?=(?:\\d{3}) + $)/g, '$1,');\n              return reData;\n            }\n          }\n        }]\n      };\n    };\n    const __returned__ = {\n      mychart1,\n      optionBar,\n      renderLineOptions,\n      onMounted,\n      reactive,\n      watch,\n      ref,\n      onBeforeUnmount,\n      shallowRef\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","reactive","watch","ref","onBeforeUnmount","shallowRef","mychart1","value","setOption","renderLineOptions","optionBar","grid","left","right","bottom","containLabel","xAxis","data","chartName","axisLabel1","show","textStyle","fontSize","axisLabel2","rotate","yAxis","name","nameTextStyle","nameLocation","axisLabel","axisLine","lineStyle","width","type","series","chartRows","barWidth","itemStyle","color","params","colorList","dataIndex","offset","label","position","formatter","reData","toString","replace"],"sources":["E:/mytest/src/views/qn-data/qnExport.vue"],"sourcesContent":["<template>\r\n    <v-chart ref=\"mychart1\" class=\"chart\" :option=\"optionBar\"></v-chart>\r\n</template>\r\n \r\n<script setup>\r\n    import { onMounted, reactive, watch, ref, onBeforeUnmount, shallowRef } from 'vue'\r\n \r\n    // 渲染数\r\n    mychart1.value.setOption(renderLineOptions())\r\n \r\n    // 定义属性\r\n    const mychart1 = ref(null)\r\n    const optionBar = ref(null)\r\n \r\n    // 坐标轴及其属性定义\r\n    const renderLineOptions = () => {\r\n        return {\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '8%',\r\n                containLabel: true\r\n            },\r\n            xAxis: {\r\n                data: data.chartName, // x轴的标题（定义的变量），可以是直接的数组[\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n                axisLabel1: {\r\n                    show: true,\r\n                    textStyle: {\r\n                        fontSize: 15// 字体大小\r\n                    }\r\n                },\r\n                axisLabel2: {\r\n                    show: true,\r\n                rotate: 30    // 设置x轴标签旋转角度\r\n                }\r\n            },\r\n            yAxis: {\r\n                name: '工时/h',\r\n                nameTextStyle: {\r\n                    nameLocation: 'start'\r\n                },\r\n                axisLabel: {\r\n                    show: true,\r\n                    fontSize: 16\r\n                },\r\n                axisLine: {\r\n                    show: true, // 是否显示Y轴线\r\n                    lineStyle: {\r\n                        width: 1, // 线的大小\r\n                        type: 'solid' // Y轴线的类型\r\n                    }\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    // 渲染的数据，可以使用 [5, 20, 36, 10, 10, 20]，也可以是定义的变量（记得赋值）\r\n                    data: data.chartRows, \r\n                    type: 'bar',\r\n                    barWidth: '20%',\r\n                    itemStyle: {\r\n                        // 通常情况下：\r\n                        color: function (params) {\r\n                            // 每根柱子的颜色\r\n                            return data.colorList[params.dataIndex]\r\n                        },\r\n                        offset: 6 // 偏移量\r\n                    },\r\n                    label: {\r\n                        show: true,\r\n                        position: 'top',\r\n                        fontSize: 14,\r\n                        formatter: (params) => {\r\n                            const reData = (params.data || 0).toString().replace(/(\\d)(?=(?:\\d{3}) + $)/g, '$1,')\r\n                            return reData\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n \r\n</script>"],"mappings":"AAKI,SAASA,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,GAAG,EAAEC,eAAe,EAAEC,UAAU,QAAQ,KAAK;;AAElF;;;;;;;;IACAC,QAAQ,CAACC,KAAK,CAACC,SAAS,CAACC,iBAAiB,CAAC,CAAC,CAAC;;IAE7C;IACA,MAAMH,QAAQ,GAAGH,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMO,SAAS,GAAGP,GAAG,CAAC,IAAI,CAAC;;IAE3B;IACA,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;MAC5B,OAAO;QACHE,IAAI,EAAE;UACFC,IAAI,EAAE,IAAI;UACVC,KAAK,EAAE,IAAI;UACXC,MAAM,EAAE,IAAI;UACZC,YAAY,EAAE;QAClB,CAAC;QACDC,KAAK,EAAE;UACHC,IAAI,EAAEA,IAAI,CAACC,SAAS;UAAE;UACtBC,UAAU,EAAE;YACRC,IAAI,EAAE,IAAI;YACVC,SAAS,EAAE;cACPC,QAAQ,EAAE,EAAE;YAChB;UACJ,CAAC;UACDC,UAAU,EAAE;YACRH,IAAI,EAAE,IAAI;YACdI,MAAM,EAAE,EAAE,CAAI;UACd;QACJ,CAAC;QACDC,KAAK,EAAE;UACHC,IAAI,EAAE,MAAM;UACZC,aAAa,EAAE;YACXC,YAAY,EAAE;UAClB,CAAC;UACDC,SAAS,EAAE;YACPT,IAAI,EAAE,IAAI;YACVE,QAAQ,EAAE;UACd,CAAC;UACDQ,QAAQ,EAAE;YACNV,IAAI,EAAE,IAAI;YAAE;YACZW,SAAS,EAAE;cACPC,KAAK,EAAE,CAAC;cAAE;cACVC,IAAI,EAAE,OAAO,CAAC;YAClB;UACJ;QACJ,CAAC;QACDC,MAAM,EAAE,CACJ;UACI;UACAjB,IAAI,EAAEA,IAAI,CAACkB,SAAS;UACpBF,IAAI,EAAE,KAAK;UACXG,QAAQ,EAAE,KAAK;UACfC,SAAS,EAAE;YACP;YACAC,KAAK,EAAE,SAAAA,CAAUC,MAAM,EAAE;cACrB;cACA,OAAOtB,IAAI,CAACuB,SAAS,CAACD,MAAM,CAACE,SAAS,CAAC;YAC3C,CAAC;YACDC,MAAM,EAAE,CAAC,CAAC;UACd,CAAC;UACDC,KAAK,EAAE;YACHvB,IAAI,EAAE,IAAI;YACVwB,QAAQ,EAAE,KAAK;YACftB,QAAQ,EAAE,EAAE;YACZuB,SAAS,EAAGN,MAAM,IAAK;cACnB,MAAMO,MAAM,GAAG,CAACP,MAAM,CAACtB,IAAI,IAAI,CAAC,EAAE8B,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,wBAAwB,EAAE,KAAK,CAAC;cACrF,OAAOF,MAAM;YACjB;UACJ;QACJ,CAAC;MAET,CAAC;IACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}