{"ast":null,"code":"export default {\n  data() {\n    return {\n      form: {\n        username: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    login() {\n      // 在这里执行登录操作，可以发送请求到后端验证用户身份，可以留到后端实现的时候再弄\n      // 此处为示例，仅在控制台输出用户名和密码\n      const self = this;\n      const formData = new FormData();\n      formData.append(\"username\", self.username);\n      formData.append(\"password\", self.password);\n      self.$axios({\n        method: 'post',\n        url: '/user/api/login/',\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            this.$store.dispatch('saveUserInfo', {\n              user: {\n                'username': this.form.username,\n                'confirmed': true\n              }\n            });\n            this.$message.success('登录成功！');\n            break;\n          case 2:\n            this.$message.success('already logged in');\n            break;\n          case 3:\n            this.$message.success('username not found');\n            break;\n          case 4:\n            this.$message.success('unverified account');\n            break;\n          case 5:\n            this.$message.success('wrong password');\n            break;\n          case -1:\n            this.$message.success('sys error');\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      console.log('用户名：', this.username);\n      console.log('密码：', this.password);\n      // 登录成功后可以进行页面跳转或其他操作\n    }\n  }\n};","map":{"version":3,"names":["data","form","username","password","methods","login","self","formData","FormData","append","$axios","method","url","then","res","status_code","$store","dispatch","user","$message","success","catch","err","console","log"],"sources":["E:\\mytest\\src\\views\\accountpane\\loginPane.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <h2>问卷星球登录</h2>\r\n      <form @submit.prevent=\"login\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">用户名：</label>\r\n          <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">密码：</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n        </div>\r\n        <button type=\"submit\">登录</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n\r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {\r\n          username: '',\r\n          password: '',\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      login() {\r\n        // 在这里执行登录操作，可以发送请求到后端验证用户身份，可以留到后端实现的时候再弄\r\n        // 此处为示例，仅在控制台输出用户名和密码\r\n        const self = this;\r\n        const formData = new FormData();\r\n        formData.append(\"username\", self.username);\r\n        formData.append(\"password\", self.password);\r\n\r\n        self.$axios({\r\n          method: 'post',\r\n          url: '/user/api/login/',\r\n          data: formData,\r\n        }).then(res => {\r\n          switch (res.data.status_code) {\r\n            case 1:\r\n              this.$store.dispatch('saveUserInfo', {user: {\r\n                  'username': this.form.username,\r\n                  'confirmed': true,\r\n                }});\r\n              this.$message.success('登录成功！');\r\n              break;\r\n            case 2:\r\n              this.$message.success('already logged in');\r\n              break;\r\n            case 3:\r\n              this.$message.success('username not found');\r\n              break;\r\n            case 4:\r\n              this.$message.success('unverified account');\r\n              break;\r\n            case 5:\r\n              this.$message.success('wrong password');\r\n              break;\r\n            case -1:\r\n              this.$message.success('sys error');\r\n              break;\r\n          }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n          })\r\n        console.log('用户名：', this.username);\r\n        console.log('密码：', this.password);\r\n        // 登录成功后可以进行页面跳转或其他操作\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n  }\r\n  \r\n  input[type=\"text\"],\r\n  input[type=\"password\"] {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 3px;\r\n  }\r\n  \r\n  button {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAmBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACN;MACA;MACA,MAAMC,IAAG,GAAI,IAAI;MACjB,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,IAAI,CAACJ,QAAQ,CAAC;MAC1CK,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,IAAI,CAACH,QAAQ,CAAC;MAE1CG,IAAI,CAACI,MAAM,CAAC;QACVC,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,kBAAkB;QACvBZ,IAAI,EAAEO;MACR,CAAC,CAAC,CAACM,IAAI,CAACC,GAAE,IAAK;QACb,QAAQA,GAAG,CAACd,IAAI,CAACe,WAAW;UAC1B,KAAK,CAAC;YACJ,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,cAAc,EAAE;cAACC,IAAI,EAAE;gBACxC,UAAU,EAAE,IAAI,CAACjB,IAAI,CAACC,QAAQ;gBAC9B,WAAW,EAAE;cACf;YAAC,CAAC,CAAC;YACL,IAAI,CAACiB,QAAQ,CAACC,OAAO,CAAC,OAAO,CAAC;YAC9B;UACF,KAAK,CAAC;YACJ,IAAI,CAACD,QAAQ,CAACC,OAAO,CAAC,mBAAmB,CAAC;YAC1C;UACF,KAAK,CAAC;YACJ,IAAI,CAACD,QAAQ,CAACC,OAAO,CAAC,oBAAoB,CAAC;YAC3C;UACF,KAAK,CAAC;YACJ,IAAI,CAACD,QAAQ,CAACC,OAAO,CAAC,oBAAoB,CAAC;YAC3C;UACF,KAAK,CAAC;YACJ,IAAI,CAACD,QAAQ,CAACC,OAAO,CAAC,gBAAgB,CAAC;YACvC;UACF,KAAK,CAAC,CAAC;YACL,IAAI,CAACD,QAAQ,CAACC,OAAO,CAAC,WAAW,CAAC;YAClC;QACJ;MACF,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC;MACHC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACtB,QAAQ,CAAC;MAClCqB,OAAO,CAACC,GAAG,CAAC,KAAK,EAAE,IAAI,CAACrB,QAAQ,CAAC;MACjC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}