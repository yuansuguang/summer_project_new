{"ast":null,"code":"function get(options) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('get', options.url);\n  // With response type set browser can get and put binary data\n  // https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Sending_and_Receiving_Binary_Data\n  // Default is text, and it can be set\n  // arraybuffer, blob, document, json, text\n  xhr.responseType = options.responseType || 'text';\n  if (options.onprogress) {\n    //https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest\n    xhr.onprogress = function (e) {\n      if (e.lengthComputable) {\n        var percent = e.loaded / e.total;\n        options.onprogress(percent, e.loaded, e.total);\n      } else {\n        options.onprogress(null);\n      }\n    };\n  }\n  xhr.onload = function (e) {\n    if (xhr.status >= 400) {\n      options.onerror && options.onerror();\n    } else {\n      options.onload && options.onload(xhr.response);\n    }\n  };\n  if (options.onerror) {\n    xhr.onerror = options.onerror;\n  }\n  xhr.send(null);\n}\nexport default {\n  get: get\n};","map":{"version":3,"names":["get","options","xhr","XMLHttpRequest","open","url","responseType","onprogress","e","lengthComputable","percent","loaded","total","onload","status","onerror","response","send"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/claygl/src/core/request.js"],"sourcesContent":["function get(options) {\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open('get', options.url);\n    // With response type set browser can get and put binary data\n    // https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Sending_and_Receiving_Binary_Data\n    // Default is text, and it can be set\n    // arraybuffer, blob, document, json, text\n    xhr.responseType = options.responseType || 'text';\n\n    if (options.onprogress) {\n        //https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest\n        xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n                var percent = e.loaded / e.total;\n                options.onprogress(percent, e.loaded, e.total);\n            }\n            else {\n                options.onprogress(null);\n            }\n        };\n    }\n    xhr.onload = function(e) {\n        if (xhr.status >= 400) {\n            options.onerror && options.onerror();\n        }\n        else {\n            options.onload && options.onload(xhr.response);\n        }\n    };\n    if (options.onerror) {\n        xhr.onerror = options.onerror;\n    }\n    xhr.send(null);\n}\n\nexport default {\n    get: get\n};\n"],"mappings":"AAAA,SAASA,GAAGA,CAACC,OAAO,EAAE;EAElB,IAAIC,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;EAE9BD,GAAG,CAACE,IAAI,CAAC,KAAK,EAAEH,OAAO,CAACI,GAAG,CAAC;EAC5B;EACA;EACA;EACA;EACAH,GAAG,CAACI,YAAY,GAAGL,OAAO,CAACK,YAAY,IAAI,MAAM;EAEjD,IAAIL,OAAO,CAACM,UAAU,EAAE;IACpB;IACAL,GAAG,CAACK,UAAU,GAAG,UAASC,CAAC,EAAE;MACzB,IAAIA,CAAC,CAACC,gBAAgB,EAAE;QACpB,IAAIC,OAAO,GAAGF,CAAC,CAACG,MAAM,GAAGH,CAAC,CAACI,KAAK;QAChCX,OAAO,CAACM,UAAU,CAACG,OAAO,EAAEF,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACI,KAAK,CAAC;MAClD,CAAC,MACI;QACDX,OAAO,CAACM,UAAU,CAAC,IAAI,CAAC;MAC5B;IACJ,CAAC;EACL;EACAL,GAAG,CAACW,MAAM,GAAG,UAASL,CAAC,EAAE;IACrB,IAAIN,GAAG,CAACY,MAAM,IAAI,GAAG,EAAE;MACnBb,OAAO,CAACc,OAAO,IAAId,OAAO,CAACc,OAAO,CAAC,CAAC;IACxC,CAAC,MACI;MACDd,OAAO,CAACY,MAAM,IAAIZ,OAAO,CAACY,MAAM,CAACX,GAAG,CAACc,QAAQ,CAAC;IAClD;EACJ,CAAC;EACD,IAAIf,OAAO,CAACc,OAAO,EAAE;IACjBb,GAAG,CAACa,OAAO,GAAGd,OAAO,CAACc,OAAO;EACjC;EACAb,GAAG,CAACe,IAAI,CAAC,IAAI,CAAC;AAClB;AAEA,eAAe;EACXjB,GAAG,EAAEA;AACT,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}