{"ast":null,"code":"/**\n * Base class for all textures like compressed texture, texture2d, texturecube\n * TODO mapping\n */\nimport Base from './core/Base';\nimport glenum from './core/glenum';\nimport Cache from './core/Cache';\n\n/**\n * @constructor\n * @alias clay.Texture\n * @extends clay.core.Base\n */\nvar Texture = Base.extend( /** @lends clay.Texture# */{\n  /**\n   * Texture width, readonly when the texture source is image\n   * @type {number}\n   */\n  width: 512,\n  /**\n   * Texture height, readonly when the texture source is image\n   * @type {number}\n   */\n  height: 512,\n  /**\n   * Texel data type.\n   * Possible values:\n   *  + {@link clay.Texture.UNSIGNED_BYTE}\n   *  + {@link clay.Texture.HALF_FLOAT}\n   *  + {@link clay.Texture.FLOAT}\n   *  + {@link clay.Texture.UNSIGNED_INT_24_8_WEBGL}\n   *  + {@link clay.Texture.UNSIGNED_INT}\n   * @type {number}\n   */\n  type: glenum.UNSIGNED_BYTE,\n  /**\n   * Format of texel data\n   * Possible values:\n   *  + {@link clay.Texture.RGBA}\n   *  + {@link clay.Texture.DEPTH_COMPONENT}\n   *  + {@link clay.Texture.DEPTH_STENCIL}\n   * @type {number}\n   */\n  format: glenum.RGBA,\n  /**\n   * Texture wrap. Default to be REPEAT.\n   * Possible values:\n   *  + {@link clay.Texture.CLAMP_TO_EDGE}\n   *  + {@link clay.Texture.REPEAT}\n   *  + {@link clay.Texture.MIRRORED_REPEAT}\n   * @type {number}\n   */\n  wrapS: glenum.REPEAT,\n  /**\n   * Texture wrap. Default to be REPEAT.\n   * Possible values:\n   *  + {@link clay.Texture.CLAMP_TO_EDGE}\n   *  + {@link clay.Texture.REPEAT}\n   *  + {@link clay.Texture.MIRRORED_REPEAT}\n   * @type {number}\n   */\n  wrapT: glenum.REPEAT,\n  /**\n   * Possible values:\n   *  + {@link clay.Texture.NEAREST}\n   *  + {@link clay.Texture.LINEAR}\n   *  + {@link clay.Texture.NEAREST_MIPMAP_NEAREST}\n   *  + {@link clay.Texture.LINEAR_MIPMAP_NEAREST}\n   *  + {@link clay.Texture.NEAREST_MIPMAP_LINEAR}\n   *  + {@link clay.Texture.LINEAR_MIPMAP_LINEAR}\n   * @type {number}\n   */\n  minFilter: glenum.LINEAR_MIPMAP_LINEAR,\n  /**\n   * Possible values:\n   *  + {@link clay.Texture.NEAREST}\n   *  + {@link clay.Texture.LINEAR}\n   * @type {number}\n   */\n  magFilter: glenum.LINEAR,\n  /**\n   * If enable mimap.\n   * @type {boolean}\n   */\n  useMipmap: true,\n  /**\n   * Anisotropic filtering, enabled if value is larger than 1\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EXT_texture_filter_anisotropic\n   * @type {number}\n   */\n  anisotropic: 1,\n  // pixelStorei parameters, not available when texture is used as render target\n  // http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml\n  /**\n   * If flip in y axis for given image source\n   * @type {boolean}\n   * @default true\n   */\n  flipY: true,\n  /**\n   * A flag to indicate if texture source is sRGB\n   */\n  sRGB: true,\n  /**\n   * @type {number}\n   * @default 4\n   */\n  unpackAlignment: 4,\n  /**\n   * @type {boolean}\n   * @default false\n   */\n  premultiplyAlpha: false,\n  /**\n   * Dynamic option for texture like video\n   * @type {boolean}\n   */\n  dynamic: false,\n  NPOT: false,\n  // PENDING\n  // Init it here to avoid deoptimization when it's assigned in application dynamically\n  __used: 0\n}, function () {\n  this._cache = new Cache();\n}, /** @lends clay.Texture.prototype */\n{\n  getWebGLTexture: function (renderer) {\n    var _gl = renderer.gl;\n    var cache = this._cache;\n    cache.use(renderer.__uid__);\n    if (cache.miss('webgl_texture')) {\n      // In a new gl context, create new texture and set dirty true\n      cache.put('webgl_texture', _gl.createTexture());\n    }\n    if (this.dynamic) {\n      this.update(renderer);\n    } else if (cache.isDirty()) {\n      this.update(renderer);\n      cache.fresh();\n    }\n    return cache.get('webgl_texture');\n  },\n  bind: function () {},\n  unbind: function () {},\n  /**\n   * Mark texture is dirty and update in the next frame\n   */\n  dirty: function () {\n    if (this._cache) {\n      this._cache.dirtyAll();\n    }\n  },\n  update: function (renderer) {},\n  // Update the common parameters of texture\n  updateCommon: function (renderer) {\n    var _gl = renderer.gl;\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n\n    // Use of none-power of two texture\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences\n    if (this.format === glenum.DEPTH_COMPONENT) {\n      this.useMipmap = false;\n    }\n    var sRGBExt = renderer.getGLExtension('EXT_sRGB');\n    // Fallback\n    if (this.format === Texture.SRGB && !sRGBExt) {\n      this.format = Texture.RGB;\n    }\n    if (this.format === Texture.SRGB_ALPHA && !sRGBExt) {\n      this.format = Texture.RGBA;\n    }\n    this.NPOT = !this.isPowerOfTwo();\n  },\n  getAvailableWrapS: function () {\n    if (this.NPOT) {\n      return glenum.CLAMP_TO_EDGE;\n    }\n    return this.wrapS;\n  },\n  getAvailableWrapT: function () {\n    if (this.NPOT) {\n      return glenum.CLAMP_TO_EDGE;\n    }\n    return this.wrapT;\n  },\n  getAvailableMinFilter: function () {\n    var minFilter = this.minFilter;\n    if (this.NPOT || !this.useMipmap) {\n      if (minFilter === glenum.NEAREST_MIPMAP_NEAREST || minFilter === glenum.NEAREST_MIPMAP_LINEAR) {\n        return glenum.NEAREST;\n      } else if (minFilter === glenum.LINEAR_MIPMAP_LINEAR || minFilter === glenum.LINEAR_MIPMAP_NEAREST) {\n        return glenum.LINEAR;\n      } else {\n        return minFilter;\n      }\n    } else {\n      return minFilter;\n    }\n  },\n  getAvailableMagFilter: function () {\n    return this.magFilter;\n  },\n  nextHighestPowerOfTwo: function (x) {\n    --x;\n    for (var i = 1; i < 32; i <<= 1) {\n      x = x | x >> i;\n    }\n    return x + 1;\n  },\n  /**\n   * @param  {clay.Renderer} renderer\n   */\n  dispose: function (renderer) {\n    var cache = this._cache;\n    cache.use(renderer.__uid__);\n    var webglTexture = cache.get('webgl_texture');\n    if (webglTexture) {\n      renderer.gl.deleteTexture(webglTexture);\n    }\n    cache.deleteContext(renderer.__uid__);\n  },\n  /**\n   * Test if image of texture is valid and loaded.\n   * @return {boolean}\n   */\n  isRenderable: function () {},\n  /**\n   * Test if texture size is power of two\n   * @return {boolean}\n   */\n  isPowerOfTwo: function () {}\n});\nObject.defineProperty(Texture.prototype, 'width', {\n  get: function () {\n    return this._width;\n  },\n  set: function (value) {\n    this._width = value;\n  }\n});\nObject.defineProperty(Texture.prototype, 'height', {\n  get: function () {\n    return this._height;\n  },\n  set: function (value) {\n    this._height = value;\n  }\n});\n\n/* DataType */\n\n/**\n * @type {number}\n */\nTexture.BYTE = glenum.BYTE;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_BYTE = glenum.UNSIGNED_BYTE;\n/**\n * @type {number}\n */\nTexture.SHORT = glenum.SHORT;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_SHORT = glenum.UNSIGNED_SHORT;\n/**\n * @type {number}\n */\nTexture.INT = glenum.INT;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_INT = glenum.UNSIGNED_INT;\n/**\n * @type {number}\n */\nTexture.FLOAT = glenum.FLOAT;\n/**\n * @type {number}\n */\nTexture.HALF_FLOAT = 0x8D61;\n\n/**\n * UNSIGNED_INT_24_8_WEBGL for WEBGL_depth_texture extension\n * @type {number}\n */\nTexture.UNSIGNED_INT_24_8_WEBGL = 34042;\n\n/* PixelFormat */\n/**\n * @type {number}\n */\nTexture.DEPTH_COMPONENT = glenum.DEPTH_COMPONENT;\n/**\n * @type {number}\n */\nTexture.DEPTH_STENCIL = glenum.DEPTH_STENCIL;\n/**\n * @type {number}\n */\nTexture.ALPHA = glenum.ALPHA;\n/**\n * @type {number}\n */\nTexture.RGB = glenum.RGB;\n/**\n * @type {number}\n */\nTexture.RGBA = glenum.RGBA;\n/**\n * @type {number}\n */\nTexture.LUMINANCE = glenum.LUMINANCE;\n/**\n * @type {number}\n */\nTexture.LUMINANCE_ALPHA = glenum.LUMINANCE_ALPHA;\n\n/**\n * @see https://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\n * @type {number}\n */\nTexture.SRGB = 0x8C40;\n/**\n * @see https://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\n * @type {number}\n */\nTexture.SRGB_ALPHA = 0x8C42;\n\n/* Compressed Texture */\nTexture.COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\nTexture.COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\nTexture.COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\nTexture.COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n\n/* TextureMagFilter */\n/**\n * @type {number}\n */\nTexture.NEAREST = glenum.NEAREST;\n/**\n * @type {number}\n */\nTexture.LINEAR = glenum.LINEAR;\n\n/* TextureMinFilter */\n/**\n * @type {number}\n */\nTexture.NEAREST_MIPMAP_NEAREST = glenum.NEAREST_MIPMAP_NEAREST;\n/**\n * @type {number}\n */\nTexture.LINEAR_MIPMAP_NEAREST = glenum.LINEAR_MIPMAP_NEAREST;\n/**\n * @type {number}\n */\nTexture.NEAREST_MIPMAP_LINEAR = glenum.NEAREST_MIPMAP_LINEAR;\n/**\n * @type {number}\n */\nTexture.LINEAR_MIPMAP_LINEAR = glenum.LINEAR_MIPMAP_LINEAR;\n\n/* TextureWrapMode */\n/**\n * @type {number}\n */\nTexture.REPEAT = glenum.REPEAT;\n/**\n * @type {number}\n */\nTexture.CLAMP_TO_EDGE = glenum.CLAMP_TO_EDGE;\n/**\n * @type {number}\n */\nTexture.MIRRORED_REPEAT = glenum.MIRRORED_REPEAT;\nexport default Texture;","map":{"version":3,"names":["Base","glenum","Cache","Texture","extend","width","height","type","UNSIGNED_BYTE","format","RGBA","wrapS","REPEAT","wrapT","minFilter","LINEAR_MIPMAP_LINEAR","magFilter","LINEAR","useMipmap","anisotropic","flipY","sRGB","unpackAlignment","premultiplyAlpha","dynamic","NPOT","__used","_cache","getWebGLTexture","renderer","_gl","gl","cache","use","__uid__","miss","put","createTexture","update","isDirty","fresh","get","bind","unbind","dirty","dirtyAll","updateCommon","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","DEPTH_COMPONENT","sRGBExt","getGLExtension","SRGB","RGB","SRGB_ALPHA","isPowerOfTwo","getAvailableWrapS","CLAMP_TO_EDGE","getAvailableWrapT","getAvailableMinFilter","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","getAvailableMagFilter","nextHighestPowerOfTwo","x","i","dispose","webglTexture","deleteTexture","deleteContext","isRenderable","Object","defineProperty","prototype","_width","set","value","_height","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT","UNSIGNED_INT_24_8_WEBGL","DEPTH_STENCIL","ALPHA","LUMINANCE","LUMINANCE_ALPHA","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","MIRRORED_REPEAT"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/claygl/src/Texture.js"],"sourcesContent":["/**\n * Base class for all textures like compressed texture, texture2d, texturecube\n * TODO mapping\n */\nimport Base from './core/Base';\nimport glenum from './core/glenum';\nimport Cache from './core/Cache';\n\n/**\n * @constructor\n * @alias clay.Texture\n * @extends clay.core.Base\n */\nvar Texture = Base.extend( /** @lends clay.Texture# */ {\n    /**\n     * Texture width, readonly when the texture source is image\n     * @type {number}\n     */\n    width: 512,\n    /**\n     * Texture height, readonly when the texture source is image\n     * @type {number}\n     */\n    height: 512,\n    /**\n     * Texel data type.\n     * Possible values:\n     *  + {@link clay.Texture.UNSIGNED_BYTE}\n     *  + {@link clay.Texture.HALF_FLOAT}\n     *  + {@link clay.Texture.FLOAT}\n     *  + {@link clay.Texture.UNSIGNED_INT_24_8_WEBGL}\n     *  + {@link clay.Texture.UNSIGNED_INT}\n     * @type {number}\n     */\n    type: glenum.UNSIGNED_BYTE,\n    /**\n     * Format of texel data\n     * Possible values:\n     *  + {@link clay.Texture.RGBA}\n     *  + {@link clay.Texture.DEPTH_COMPONENT}\n     *  + {@link clay.Texture.DEPTH_STENCIL}\n     * @type {number}\n     */\n    format: glenum.RGBA,\n    /**\n     * Texture wrap. Default to be REPEAT.\n     * Possible values:\n     *  + {@link clay.Texture.CLAMP_TO_EDGE}\n     *  + {@link clay.Texture.REPEAT}\n     *  + {@link clay.Texture.MIRRORED_REPEAT}\n     * @type {number}\n     */\n    wrapS: glenum.REPEAT,\n    /**\n     * Texture wrap. Default to be REPEAT.\n     * Possible values:\n     *  + {@link clay.Texture.CLAMP_TO_EDGE}\n     *  + {@link clay.Texture.REPEAT}\n     *  + {@link clay.Texture.MIRRORED_REPEAT}\n     * @type {number}\n     */\n    wrapT: glenum.REPEAT,\n    /**\n     * Possible values:\n     *  + {@link clay.Texture.NEAREST}\n     *  + {@link clay.Texture.LINEAR}\n     *  + {@link clay.Texture.NEAREST_MIPMAP_NEAREST}\n     *  + {@link clay.Texture.LINEAR_MIPMAP_NEAREST}\n     *  + {@link clay.Texture.NEAREST_MIPMAP_LINEAR}\n     *  + {@link clay.Texture.LINEAR_MIPMAP_LINEAR}\n     * @type {number}\n     */\n    minFilter: glenum.LINEAR_MIPMAP_LINEAR,\n    /**\n     * Possible values:\n     *  + {@link clay.Texture.NEAREST}\n     *  + {@link clay.Texture.LINEAR}\n     * @type {number}\n     */\n    magFilter: glenum.LINEAR,\n    /**\n     * If enable mimap.\n     * @type {boolean}\n     */\n    useMipmap: true,\n\n    /**\n     * Anisotropic filtering, enabled if value is larger than 1\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EXT_texture_filter_anisotropic\n     * @type {number}\n     */\n    anisotropic: 1,\n    // pixelStorei parameters, not available when texture is used as render target\n    // http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml\n    /**\n     * If flip in y axis for given image source\n     * @type {boolean}\n     * @default true\n     */\n    flipY: true,\n\n    /**\n     * A flag to indicate if texture source is sRGB\n     */\n    sRGB: true,\n    /**\n     * @type {number}\n     * @default 4\n     */\n    unpackAlignment: 4,\n    /**\n     * @type {boolean}\n     * @default false\n     */\n    premultiplyAlpha: false,\n\n    /**\n     * Dynamic option for texture like video\n     * @type {boolean}\n     */\n    dynamic: false,\n\n    NPOT: false,\n\n    // PENDING\n    // Init it here to avoid deoptimization when it's assigned in application dynamically\n    __used: 0\n\n}, function () {\n    this._cache = new Cache();\n},\n/** @lends clay.Texture.prototype */\n{\n\n    getWebGLTexture: function (renderer) {\n        var _gl = renderer.gl;\n        var cache = this._cache;\n        cache.use(renderer.__uid__);\n\n        if (cache.miss('webgl_texture')) {\n            // In a new gl context, create new texture and set dirty true\n            cache.put('webgl_texture', _gl.createTexture());\n        }\n        if (this.dynamic) {\n            this.update(renderer);\n        }\n        else if (cache.isDirty()) {\n            this.update(renderer);\n            cache.fresh();\n        }\n\n        return cache.get('webgl_texture');\n    },\n\n    bind: function () {},\n    unbind: function () {},\n\n    /**\n     * Mark texture is dirty and update in the next frame\n     */\n    dirty: function () {\n        if (this._cache) {\n            this._cache.dirtyAll();\n        }\n    },\n\n    update: function (renderer) {},\n\n    // Update the common parameters of texture\n    updateCommon: function (renderer) {\n        var _gl = renderer.gl;\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n        _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n        _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n\n        // Use of none-power of two texture\n        // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences\n        if (this.format === glenum.DEPTH_COMPONENT) {\n            this.useMipmap = false;\n        }\n\n        var sRGBExt = renderer.getGLExtension('EXT_sRGB');\n        // Fallback\n        if (this.format === Texture.SRGB && !sRGBExt) {\n            this.format = Texture.RGB;\n        }\n        if (this.format === Texture.SRGB_ALPHA && !sRGBExt) {\n            this.format = Texture.RGBA;\n        }\n\n        this.NPOT = !this.isPowerOfTwo();\n    },\n\n    getAvailableWrapS: function () {\n        if (this.NPOT) {\n            return glenum.CLAMP_TO_EDGE;\n        }\n        return this.wrapS;\n    },\n    getAvailableWrapT: function () {\n        if (this.NPOT) {\n            return glenum.CLAMP_TO_EDGE;\n        }\n        return this.wrapT;\n    },\n    getAvailableMinFilter: function () {\n        var minFilter = this.minFilter;\n        if (this.NPOT || !this.useMipmap) {\n            if (minFilter === glenum.NEAREST_MIPMAP_NEAREST ||\n                minFilter === glenum.NEAREST_MIPMAP_LINEAR\n            ) {\n                return glenum.NEAREST;\n            }\n            else if (minFilter === glenum.LINEAR_MIPMAP_LINEAR ||\n                minFilter === glenum.LINEAR_MIPMAP_NEAREST\n            ) {\n                return glenum.LINEAR;\n            }\n            else {\n                return minFilter;\n            }\n        }\n        else {\n            return minFilter;\n        }\n    },\n    getAvailableMagFilter: function () {\n        return this.magFilter;\n    },\n\n    nextHighestPowerOfTwo: function (x) {\n        --x;\n        for (var i = 1; i < 32; i <<= 1) {\n            x = x | x >> i;\n        }\n        return x + 1;\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n\n        var cache = this._cache;\n\n        cache.use(renderer.__uid__);\n\n        var webglTexture = cache.get('webgl_texture');\n        if (webglTexture){\n            renderer.gl.deleteTexture(webglTexture);\n        }\n        cache.deleteContext(renderer.__uid__);\n\n    },\n    /**\n     * Test if image of texture is valid and loaded.\n     * @return {boolean}\n     */\n    isRenderable: function () {},\n\n    /**\n     * Test if texture size is power of two\n     * @return {boolean}\n     */\n    isPowerOfTwo: function () {}\n});\n\nObject.defineProperty(Texture.prototype, 'width', {\n    get: function () {\n        return this._width;\n    },\n    set: function (value) {\n        this._width = value;\n    }\n});\nObject.defineProperty(Texture.prototype, 'height', {\n    get: function () {\n        return this._height;\n    },\n    set: function (value) {\n        this._height = value;\n    }\n});\n\n/* DataType */\n\n/**\n * @type {number}\n */\nTexture.BYTE = glenum.BYTE;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_BYTE = glenum.UNSIGNED_BYTE;\n/**\n * @type {number}\n */\nTexture.SHORT = glenum.SHORT;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_SHORT = glenum.UNSIGNED_SHORT;\n/**\n * @type {number}\n */\nTexture.INT = glenum.INT;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_INT = glenum.UNSIGNED_INT;\n/**\n * @type {number}\n */\nTexture.FLOAT = glenum.FLOAT;\n/**\n * @type {number}\n */\nTexture.HALF_FLOAT = 0x8D61;\n\n/**\n * UNSIGNED_INT_24_8_WEBGL for WEBGL_depth_texture extension\n * @type {number}\n */\nTexture.UNSIGNED_INT_24_8_WEBGL = 34042;\n\n/* PixelFormat */\n/**\n * @type {number}\n */\nTexture.DEPTH_COMPONENT = glenum.DEPTH_COMPONENT;\n/**\n * @type {number}\n */\nTexture.DEPTH_STENCIL = glenum.DEPTH_STENCIL;\n/**\n * @type {number}\n */\nTexture.ALPHA = glenum.ALPHA;\n/**\n * @type {number}\n */\nTexture.RGB = glenum.RGB;\n/**\n * @type {number}\n */\nTexture.RGBA = glenum.RGBA;\n/**\n * @type {number}\n */\nTexture.LUMINANCE = glenum.LUMINANCE;\n/**\n * @type {number}\n */\nTexture.LUMINANCE_ALPHA = glenum.LUMINANCE_ALPHA;\n\n/**\n * @see https://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\n * @type {number}\n */\nTexture.SRGB = 0x8C40;\n/**\n * @see https://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\n * @type {number}\n */\nTexture.SRGB_ALPHA = 0x8C42;\n\n/* Compressed Texture */\nTexture.COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\nTexture.COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\nTexture.COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\nTexture.COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n\n/* TextureMagFilter */\n/**\n * @type {number}\n */\nTexture.NEAREST = glenum.NEAREST;\n/**\n * @type {number}\n */\nTexture.LINEAR = glenum.LINEAR;\n\n/* TextureMinFilter */\n/**\n * @type {number}\n */\nTexture.NEAREST_MIPMAP_NEAREST = glenum.NEAREST_MIPMAP_NEAREST;\n/**\n * @type {number}\n */\nTexture.LINEAR_MIPMAP_NEAREST = glenum.LINEAR_MIPMAP_NEAREST;\n/**\n * @type {number}\n */\nTexture.NEAREST_MIPMAP_LINEAR = glenum.NEAREST_MIPMAP_LINEAR;\n/**\n * @type {number}\n */\nTexture.LINEAR_MIPMAP_LINEAR = glenum.LINEAR_MIPMAP_LINEAR;\n\n/* TextureWrapMode */\n/**\n * @type {number}\n */\nTexture.REPEAT = glenum.REPEAT;\n/**\n * @type {number}\n */\nTexture.CLAMP_TO_EDGE = glenum.CLAMP_TO_EDGE;\n/**\n * @type {number}\n */\nTexture.MIRRORED_REPEAT = glenum.MIRRORED_REPEAT;\n\n\nexport default Texture;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}