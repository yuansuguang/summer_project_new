{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import QnInstance from './qnInstance.vue';\n\nexport default {\n  data() {\n    return {\n      showSortOptions: false,\n      showTypeOptions: false,\n      ascendingChecked: false,\n      descendingChecked: false,\n      showRealeaseOptions: false,\n      realeaseChecked: false,\n      notRealeaseChecked: false,\n      isVote: false,\n      isApplication: false,\n      isTest: false,\n      questionnaires: [],\n      itemsPerPage: 4,\n      currentPage: 1\n    };\n  },\n  computed: {\n    paginatedQuestionnaires() {\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n      return this.questionnaires.slice(startIndex, startIndex + this.itemsPerPage);\n    },\n    totalPages() {\n      return Math.ceil(this.questionnaires.length / this.itemsPerPage);\n    }\n    // publishedImagePath() {\n    //   return this.isPublished\n    //     ? require('../../assets/images/Published.png')\n    //     : require('../../assets/images/Unpublished.png');\n    // }\n  },\n  created() {\n    // 假设从后端获取问卷实例数据的方法为 fetchQuestionnaires()\n    this.fetchQuestionnaires();\n  },\n  methods: {\n    search() {\n      //这里是添加搜索方法的\n      console.log(\"Searching...\");\n    },\n    updateSort1() {\n      if (this.ascendingChecked) {\n        this.ascendingChecked = false;\n      } else {\n        this.ascendingChecked = true;\n        if (this.descendingChecked) {\n          this.descendingChecked = false;\n        }\n      }\n      if (this.ascendingChecked) {\n        this.sortQuestionnairesAscending();\n      } else if (this.descendingChecked) {\n        this.sortQuestionnairesDescending();\n      } else {\n        this.restoreDefaultSort();\n      }\n    },\n    updateSort2() {\n      if (this.descendingChecked) {\n        this.descendingChecked = false;\n      } else {\n        this.descendingChecked = true;\n        if (this.ascendingChecked) {\n          this.ascendingChecked = false;\n        }\n      }\n      if (this.ascendingChecked) {\n        this.sortQuestionnairesAscending();\n      } else if (this.descendingChecked) {\n        this.sortQuestionnairesDescending();\n      } else {\n        this.restoreDefaultSort();\n      }\n    },\n    updateRealease() {\n      if (this.realeaseChecked) {\n        this.realeaseChecked = false;\n      } else {\n        this.notRealeaseChecked = true;\n        if (this.notRealeaseChecked) {\n          this.notRealeaseChecked = false;\n        }\n      }\n    },\n    updateTypetoVote() {\n      if (this.isVote) {\n        this.isVote = false;\n      } else {\n        this.isVote = true;\n      }\n    },\n    updateTypetoApplication() {\n      if (this.isApplication) {\n        this.isApplication = false;\n      } else {\n        this.isApplication = true;\n      }\n    },\n    updateTypetoTest() {\n      if (this.isTest) {\n        this.isTest = false;\n      } else {\n        this.isTest = true;\n      }\n    },\n    fetchQuestionnaires() {\n      // 假设从后端获取问卷实例数据的过程\n      const formData = new FormData();\n      // formData.append(\"survey_keyword\", this.loginForm.user);\n      if (this.notRealeaseChecked == true) formData.append(\"is_released\", 1);else if (this.notRealeaseChecked == false) formData.append(\"is_released\", 2);else formData.append(\"is_released\", 0);\n      console.log(\"formdata structed\");\n      this.$axios({\n        method: 'post',\n        url: '/survey/api/list',\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            this.questionnaires = JSON.parse(res.data.data);\n            for (var i = 0; i < this.questionnaires.length; i++) {\n              if (this.questionnaires[i].questionType == '1') this.questionnaires[i].questionType = '普通问卷';else if (this.questionnaires[i].questionType == '2') this.questionnaires[i].questionType = '投票问卷';else if (this.questionnaires[i].questionType == '3') this.questionnaires[i].questionType = '考试问卷';else this.questionnaires[i].questionType = '报名问卷';\n            }\n            console.log(\"success on fetching questionnaires\");\n            break;\n          case 2:\n            console.log(\"error 2\");\n            break;\n          case 3:\n            console.log(\"error 3\");\n            break;\n          case 4:\n            console.log(\"error 4\");\n            break;\n          case 5:\n            console.log(\"error 5\");\n            break;\n          case -1:\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      // const questionnaireDataFromBackend = [\n      //   {\n      //     questionnaireName: '问卷1',\n      //     questionnaireId: '123',\n      //     isPublished: true,\n      //     answersCount: 50,\n      //     creationDate: '2024-05-20',\n      //     isFavorited: true,\n      //     isPaused: true,\n      //     isEditing: false,\n      //   },\n      //   {\n      //     questionnaireName: '问卷2',\n      //     questionnaireId: '456',\n      //     isPublished: false,\n      //     answersCount: 30,\n      //     creationDate: '2024-05-21',\n      //     isFavorited: false,\n      //     isPaused: false,\n      //     isEditing: false,\n      //   },\n      //   {\n      //     questionnaireName: '问卷3',\n      //     questionnaireId: '789',\n      //     isPublished: false,\n      //     answersCount: 50,\n      //     creationDate: '2024-05-22',\n      //     isFavorited: true,\n      //     isPaused: false,\n      //     isEditing: false,\n      //   },\n      //   {\n      //     questionnaireName: '问卷4',\n      //     questionnaireId: '789',\n      //     isPublished: false,\n      //     answersCount: 50,\n      //     creationDate: '2024-05-23',\n      //     isFavorited: true,\n      //     isPaused: false,\n      //     isEditing: false,\n      //   },\n      //   {\n      //     questionnaireName: '问卷5',\n      //     questionnaireId: '789',\n      //     isPublished: false,\n      //     answersCount: 50,\n      //     creationDate: '2024-05-24',\n      //     isFavorited: true,\n      //     isPaused: false,\n      //     isEditing: false,\n      //   },\n      //   {\n      //     questionnaireName: '问卷6',\n      //     questionnaireId: '789',\n      //     isPublished: false,\n      //     answersCount: 50,\n      //     creationDate: '2024-05-25',\n      //     isFavorited: true,\n      //     isPaused: true,\n      //     isEditing: false,\n      //   },\n      // ];\n      // 将（模拟后端）获取的数据赋值给组件的数据属性\n    },\n    sortQuestionnairesAscending() {\n      this.questionnaires.sort((a, b) => {\n        return new Date(a.creationDate) - new Date(b.creationDate);\n      });\n    },\n    sortQuestionnairesDescending() {\n      this.questionnaires.sort((a, b) => {\n        return new Date(b.creationDate) - new Date(a.creationDate);\n      });\n    },\n    restoreDefaultSort() {\n      this.questionnaires.sort((a, b) => {\n        return new Date(a.creationDate) - new Date(b.creationDate);\n      });\n    },\n    previousPage() {\n      console.log(this.currentPage);\n      if (this.currentPage > 1) {\n        this.currentPage -= 1;\n        console.log(this.currentPage);\n      }\n      console.log(this.currentPage);\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage += 1;\n        console.log(this.currentPage);\n      }\n      console.log(this.currentPage);\n    },\n    filterQuestionnaires() {\n      // 根据已发布和未发布状态过滤问卷列表\n      // 例如：\n      // if (this.realeaseChecked) {\n      //   this.filteredQuestionnaires = this.questionnaires.filter(questionnaire => questionnaire.published);\n      // } else if (this.notRealeaseChecked) {\n      //   this.filteredQuestionnaires = this.questionnaires.filter(questionnaire => !questionnaire.published);\n      // } else {\n      //   this.filteredQuestionnaires = this.questionnaires;\n      // }\n    },\n    publishedImagePath(isPublished) {\n      return isPublished ? require('../../assets/images/Published.png') : require('../../assets/images/Unpublished.png');\n    },\n    edit() {\n      // 编辑操作\n      this.$router.push('/questionaireCreate'); //跳转到编辑问卷界面，待更改\n    },\n    preview() {\n      // 预览操作\n      window.open(\"\", \"_self\");\n    },\n    share() {\n      // 分享操作\n    },\n    statistics() {\n      // 统计操作\n    },\n    clear() {\n      // 清空操作\n    },\n    exportData() {\n      // 导出操作\n    },\n    pause(questionnaire) {\n      // 暂停操作\n      questionnaire.isPaused = !questionnaire.isPaused;\n    },\n    copy() {\n      // 复制操作\n    },\n    favorite(questionnaire) {\n      // 收藏操作\n      questionnaire.isFavorited = !questionnaire.isFavorited;\n    },\n    remove() {\n      //删除操作\n    },\n    createSurvey() {\n      this.$router.push('/questionaireCreate');\n    },\n    recycleBin() {\n      this.$router.push('/questionaireRecycle');\n    },\n    collectedQuestionnaire() {\n      this.$router.push('/myform');\n    }\n  }\n};","map":{"version":3,"names":["data","showSortOptions","showTypeOptions","ascendingChecked","descendingChecked","showRealeaseOptions","realeaseChecked","notRealeaseChecked","isVote","isApplication","isTest","questionnaires","itemsPerPage","currentPage","computed","paginatedQuestionnaires","startIndex","slice","totalPages","Math","ceil","length","created","fetchQuestionnaires","methods","search","console","log","updateSort1","sortQuestionnairesAscending","sortQuestionnairesDescending","restoreDefaultSort","updateSort2","updateRealease","updateTypetoVote","updateTypetoApplication","updateTypetoTest","formData","FormData","append","$axios","method","url","then","res","status_code","JSON","parse","i","questionType","catch","err","sort","a","b","Date","creationDate","previousPage","nextPage","filterQuestionnaires","publishedImagePath","isPublished","require","edit","$router","push","preview","window","open","share","statistics","clear","exportData","pause","questionnaire","isPaused","copy","favorite","isFavorited","remove","createSurvey","recycleBin","collectedQuestionnaire"],"sources":["E:\\mytest\\src\\views\\qn-manage\\qnManage.vue"],"sourcesContent":["<template>\r\n  <div id=\"manage\">\r\n    <!-- Sidebar -->\r\n    <div id=\"sidebar\">\r\n      <button class=\"button\" id=\"create-survey\" @click=\"createSurvey\">+ 创建问卷</button>\r\n      <button class=\"button\">全部问卷</button>\r\n      <button class=\"button\" id=\"collected-questionnaire\" @click=\"collectedQuestionnaire\">星标问卷</button>\r\n      <button class=\"button\" id=\"recycle-bin\" @click=\"recycleBin\">回收站</button>\r\n      <button class=\"button\">文件夹</button>\r\n      <div id=\"description\">\r\n        <div id=\"description-text\">绑定微信后，可在手机同步编辑、管理问卷，实时掌握数据动态。</div>\r\n        <button class=\"button\" id=\"bind-wechat\">绑定微信</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Content -->\r\n    <div id=\"content\">\r\n      <div class=\"toolbar\">\r\n        <div id=\"survey-title\">问卷列表</div>\r\n        <div class=\"sort-container\" @mouseenter=\"showSortOptions = true\" @mouseleave=\"showSortOptions = false\">\r\n          <button>时间排序</button>\r\n          <div v-if=\"showSortOptions\" class=\"sort-options\">\r\n            <label>\r\n              <input type=\"checkbox\" v-model=\"ascendingChecked\" @click=\"updateSort1\"> 时间正序\r\n            </label>\r\n            <label>\r\n              <input type=\"checkbox\" v-model=\"descendingChecked\" @click=\"updateSort2\"> 时间倒序\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mytype-container\" @mouseenter=\"showTypeOptions = true\" @mouseleave=\"showTypeOptions = false\">\r\n          <button>问卷类型</button>\r\n          <div v-if=\"showTypeOptions\" class=\"type-options\">\r\n            <label>\r\n              <input type=\"checkbox\" v-model=\"isVote\" @click=\"updateTypetoVote\"> 投票型\r\n            </label>\r\n            <label>\r\n              <input type=\"checkbox\" v-model=\"isApplication\" @click=\"updateTypetoApplication\"> 报名型\r\n            </label>\r\n            <label>\r\n              <input type=\"checkbox\" v-model=\"isTest\" @click=\"updateTypetoTest\"> 考试型\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"realease-container\" @mouseenter=\"showRealeaseOptions = true\"\r\n          @mouseleave=\"showRealeaseOptions = false\">\r\n          <button>状态</button>\r\n          <div v-if=\"showRealeaseOptions\" class=\"realease-options\">\r\n            <label>\r\n              <input type=\"checkbox\" v-model=\"realeaseChecked\" @click=\"updateRealease\"> 已发布\r\n            </label>\r\n            <label>\r\n              <input type=\"checkbox\" v-model=\"notRealeaseChecked\" @click=\"updateRealease\"> 未发布\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"search-box\">\r\n          <input type=\"text\" placeholder=\"请输入问卷名进行搜索\">\r\n          <button @click=\"search\">搜索</button>\r\n        </div>\r\n      </div>\r\n      <div v-for=\"(questionnaire, index) in paginatedQuestionnaires\" :key=\"index\" class=\"questionnaire\">\r\n        <!-- 第一行 -->\r\n        <div class=\"questionnaire-info\">\r\n          <div class=\"info-left\">\r\n            <span>{{ questionnaire.questionnaireName }}</span>\r\n          </div>\r\n          <span>id: {{ questionnaire.questionnaireId }}&emsp;</span>\r\n          <span>类型：{{ questionnaire.questionType }}&emsp;</span>\r\n          <!-- <span>{{ isPublished ? '已发布' : '未发布' }}</span> -->\r\n          <span :class=\"{ 'icon-published': questionnaire.isPublished, 'icon-unpublished': !questionnaire.isPublished }\"\r\n            :style=\"{ color: questionnaire.isPublished ? 'green' : 'red' }\">\r\n            <img :src=\"publishedImagePath(questionnaire.isPublished)\" alt=\"release status\" class=\"icon\">\r\n            {{ questionnaire.isPublished ? '已发布' : '未发布' }}&emsp;\r\n          </span>\r\n          <!-- <span>答卷: {{ answersCount }}</span> -->\r\n          <span>答卷: <span :style=\"{ color: questionnaire.answersCount > 0 ? 'blue' : '' }\">{{ questionnaire.answersCount\r\n              }}</span>&emsp;</span>\r\n          <span>创建时间：{{ questionnaire.creationDate }}&emsp;</span>\r\n        </div>\r\n        <!-- 分隔线 -->\r\n        <div class=\"separator\"></div>\r\n        <!-- 第二行按钮 -->\r\n        <div class=\"questionnaire-actions\">\r\n          <div class=\"button-container\">\r\n            <div class=\"leftPart\">\r\n              <button @click=\"edit\" class=\"leftButton\">\r\n                <img src=\"../../../src/assets/images/Edit.png\" alt=\"edit-icon\" class=\"icon\">\r\n                编辑\r\n              </button>\r\n\r\n              <button @click=\"preview\" class=\"leftButton\">\r\n                <img src=\"../../../src/assets/images/Preview.png\" alt=\"preview-icon\" class=\"icon\">\r\n                预览\r\n              </button>\r\n\r\n              <button @click=\"share\" class=\"leftButton\">\r\n                <img src=\"../../../src/assets/images/Share.png\" alt=\"share-icon\" class=\"icon\">\r\n                分享\r\n              </button>\r\n\r\n              <button @click=\"statistics\" class=\"leftButton\">\r\n                <img src=\"../../../src/assets/images/Stats.png\" alt=\"statistics-icon\" class=\"icon\">\r\n                统计\r\n              </button>\r\n\r\n              <button @click=\"clear\" class=\"leftButton\">\r\n                <img src=\"../../../src/assets/images/ClearAll.png\" alt=\"clear-icon\" class=\"icon\">\r\n                清空\r\n              </button>\r\n\r\n              <button @click=\"exportData\" class=\"leftButton\">\r\n                <img src=\"../../../src/assets/images/ExportData.png\" alt=\"exportData-icon\" class=\"icon\">\r\n                导出\r\n              </button>\r\n            </div>\r\n\r\n            <button @click=\"pause(questionnaire)\" class=\"rightButton\">\r\n              <img\r\n                :src=\"questionnaire.isPaused ? require('../../../src/assets/images/Start.png') : require('../../../src/assets/images/PauseRed.png')\"\r\n                alt=\"pause-icon\" class=\"icon\">\r\n              <span :class=\"{ 'text-red': !questionnaire.isPaused, 'text-black': questionnaire.isPaused }\">{{\r\n                questionnaire.isPaused ? '继续' : '暂停' }}</span>\r\n            </button>\r\n\r\n            <button @click=\"copy\" class=\"rightButton\">\r\n              <img src=\"../../../src/assets/images/Copy.png\" alt=\"copy-icon\" class=\"icon\">\r\n              复制\r\n            </button>\r\n\r\n            <button @click=\"favorite(questionnaire)\" class=\"rightButton\">\r\n              <img\r\n                :src=\"questionnaire.isFavorited ? require('../../../src/assets/images/Like.png') : require('../../../src/assets/images/LightLike.png')\"\r\n                alt=\"favorite-icon\" class=\"icon\">\r\n              {{ questionnaire.isFavorited ? '已收藏' : '收藏' }}\r\n            </button>\r\n\r\n            <button @click=\"remove\" class=\"rightButton\">\r\n              <img src=\"../../../src/assets/images/Delete.png\" alt=\"remove-icon\" class=\"icon\">\r\n              删除\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"survey-page\">\r\n        <qnInstance v-for=\"(questionnaire, index) in paginatedQuestionnaires\" :key=\"index\" :is=\"qnInstance\"\r\n          :questionnaireName=\"questionnaire.questionnaireName\" :questionnaireId=\"questionnaire.questionnaireId\"\r\n          :isPublished=\"questionnaire.isPublished\" :answersCount=\"questionnaire.answersCount\"\r\n          :creationDate=\"questionnaire.creationDate\" />\r\n\r\n        <div class=\"pagination\" v-if=\"totalPages > 1\">\r\n          <button @click=\"previousPage\" :disabled=\"currentPage === 1\">上一页</button>\r\n          <span>&emsp;第 {{ currentPage }} 页 / 共 {{ totalPages }} 页&emsp;</span>\r\n          <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">下一页</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\n// import QnInstance from './qnInstance.vue';\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      showSortOptions: false,\r\n      showTypeOptions: false,\r\n      ascendingChecked: false,\r\n      descendingChecked: false,\r\n      showRealeaseOptions: false,\r\n      realeaseChecked: false,\r\n      notRealeaseChecked: false,\r\n      isVote: false,\r\n      isApplication: false,\r\n      isTest: false,\r\n      questionnaires: [],\r\n      itemsPerPage: 4,\r\n      currentPage: 1,\r\n    };\r\n  },\r\n  computed: {\r\n    paginatedQuestionnaires() {\r\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n      return this.questionnaires.slice(startIndex, startIndex + this.itemsPerPage);\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.questionnaires.length / this.itemsPerPage);\r\n    },\r\n    // publishedImagePath() {\r\n    //   return this.isPublished\r\n    //     ? require('../../assets/images/Published.png')\r\n    //     : require('../../assets/images/Unpublished.png');\r\n    // }\r\n  },\r\n  created() {\r\n    // 假设从后端获取问卷实例数据的方法为 fetchQuestionnaires()\r\n    this.fetchQuestionnaires();\r\n  },\r\n\r\n  methods: {\r\n    search() {\r\n      //这里是添加搜索方法的\r\n      console.log(\"Searching...\");\r\n    },\r\n    updateSort1() {\r\n      if (this.ascendingChecked) {\r\n        this.ascendingChecked = false;\r\n      }\r\n      else {\r\n        this.ascendingChecked = true;\r\n        if (this.descendingChecked) {\r\n          this.descendingChecked = false;\r\n        }\r\n      }\r\n      if (this.ascendingChecked) {\r\n        this.sortQuestionnairesAscending();\r\n      }\r\n      else if (this.descendingChecked) {\r\n        this.sortQuestionnairesDescending();\r\n      }\r\n      else {\r\n        this.restoreDefaultSort();\r\n      }\r\n    },\r\n    updateSort2() {\r\n      if (this.descendingChecked) {\r\n        this.descendingChecked = false;\r\n      }\r\n      else {\r\n        this.descendingChecked = true;\r\n        if (this.ascendingChecked) {\r\n          this.ascendingChecked = false;\r\n        }\r\n      }\r\n      if (this.ascendingChecked) {\r\n        this.sortQuestionnairesAscending();\r\n      }\r\n      else if (this.descendingChecked) {\r\n        this.sortQuestionnairesDescending();\r\n      }\r\n      else {\r\n        this.restoreDefaultSort();\r\n      }\r\n    },\r\n    updateRealease() {\r\n      if (this.realeaseChecked) {\r\n        this.realeaseChecked = false;\r\n      }\r\n      else {\r\n        this.notRealeaseChecked = true;\r\n        if (this.notRealeaseChecked) {\r\n          this.notRealeaseChecked = false;\r\n        }\r\n      }\r\n    },\r\n    updateTypetoVote() {\r\n      if (this.isVote) {\r\n        this.isVote = false;\r\n      }\r\n      else {\r\n        this.isVote = true;\r\n      }\r\n    },\r\n    updateTypetoApplication() {\r\n      if (this.isApplication) {\r\n        this.isApplication = false;\r\n      }\r\n      else {\r\n        this.isApplication = true;\r\n      }\r\n    },\r\n    updateTypetoTest() {\r\n      if (this.isTest) {\r\n        this.isTest = false;\r\n      }\r\n      else {\r\n        this.isTest = true;\r\n      }\r\n    },\r\n    fetchQuestionnaires() {\r\n      // 假设从后端获取问卷实例数据的过程\r\n      const formData = new FormData();\r\n      // formData.append(\"survey_keyword\", this.loginForm.user);\r\n      if (this.notRealeaseChecked == true)\r\n        formData.append(\"is_released\", 1);\r\n      else if (this.notRealeaseChecked == false)\r\n        formData.append(\"is_released\", 2);\r\n      else\r\n        formData.append(\"is_released\", 0);\r\n      console.log(\"formdata structed\");\r\n      this.$axios({\r\n        method: 'post',\r\n        url: '/survey/api/list',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            this.questionnaires = JSON.parse(res.data.data);\r\n            for (var i = 0; i < this.questionnaires.length; i++) {\r\n              if (this.questionnaires[i].questionType == '1')\r\n                this.questionnaires[i].questionType = '普通问卷'\r\n              else if (this.questionnaires[i].questionType == '2')\r\n                this.questionnaires[i].questionType = '投票问卷'\r\n              else if (this.questionnaires[i].questionType == '3')\r\n                this.questionnaires[i].questionType = '考试问卷'\r\n              else\r\n                this.questionnaires[i].questionType = '报名问卷'\r\n            }\r\n            console.log(\"success on fetching questionnaires\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case 4:\r\n            console.log(\"error 4\");\r\n            break;\r\n          case 5:\r\n            console.log(\"error 5\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      // const questionnaireDataFromBackend = [\r\n      //   {\r\n      //     questionnaireName: '问卷1',\r\n      //     questionnaireId: '123',\r\n      //     isPublished: true,\r\n      //     answersCount: 50,\r\n      //     creationDate: '2024-05-20',\r\n      //     isFavorited: true,\r\n      //     isPaused: true,\r\n      //     isEditing: false,\r\n      //   },\r\n      //   {\r\n      //     questionnaireName: '问卷2',\r\n      //     questionnaireId: '456',\r\n      //     isPublished: false,\r\n      //     answersCount: 30,\r\n      //     creationDate: '2024-05-21',\r\n      //     isFavorited: false,\r\n      //     isPaused: false,\r\n      //     isEditing: false,\r\n      //   },\r\n      //   {\r\n      //     questionnaireName: '问卷3',\r\n      //     questionnaireId: '789',\r\n      //     isPublished: false,\r\n      //     answersCount: 50,\r\n      //     creationDate: '2024-05-22',\r\n      //     isFavorited: true,\r\n      //     isPaused: false,\r\n      //     isEditing: false,\r\n      //   },\r\n      //   {\r\n      //     questionnaireName: '问卷4',\r\n      //     questionnaireId: '789',\r\n      //     isPublished: false,\r\n      //     answersCount: 50,\r\n      //     creationDate: '2024-05-23',\r\n      //     isFavorited: true,\r\n      //     isPaused: false,\r\n      //     isEditing: false,\r\n      //   },\r\n      //   {\r\n      //     questionnaireName: '问卷5',\r\n      //     questionnaireId: '789',\r\n      //     isPublished: false,\r\n      //     answersCount: 50,\r\n      //     creationDate: '2024-05-24',\r\n      //     isFavorited: true,\r\n      //     isPaused: false,\r\n      //     isEditing: false,\r\n      //   },\r\n      //   {\r\n      //     questionnaireName: '问卷6',\r\n      //     questionnaireId: '789',\r\n      //     isPublished: false,\r\n      //     answersCount: 50,\r\n      //     creationDate: '2024-05-25',\r\n      //     isFavorited: true,\r\n      //     isPaused: true,\r\n      //     isEditing: false,\r\n      //   },\r\n      // ];\r\n      // 将（模拟后端）获取的数据赋值给组件的数据属性\r\n\r\n    },\r\n    sortQuestionnairesAscending() {\r\n      this.questionnaires.sort((a, b) => {\r\n        return new Date(a.creationDate) - new Date(b.creationDate);\r\n      });\r\n    },\r\n\r\n    sortQuestionnairesDescending() {\r\n      this.questionnaires.sort((a, b) => {\r\n        return new Date(b.creationDate) - new Date(a.creationDate);\r\n      });\r\n    },\r\n\r\n    restoreDefaultSort() {\r\n      this.questionnaires.sort((a, b) => {\r\n        return new Date(a.creationDate) - new Date(b.creationDate);\r\n      });\r\n    },\r\n    previousPage() {\r\n      console.log(this.currentPage);\r\n      if (this.currentPage > 1) {\r\n        this.currentPage -= 1;\r\n        console.log(this.currentPage);\r\n      }\r\n      console.log(this.currentPage);\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage += 1;\r\n        console.log(this.currentPage);\r\n      }\r\n      console.log(this.currentPage);\r\n    },\r\n\r\n    filterQuestionnaires() {\r\n      // 根据已发布和未发布状态过滤问卷列表\r\n      // 例如：\r\n      // if (this.realeaseChecked) {\r\n      //   this.filteredQuestionnaires = this.questionnaires.filter(questionnaire => questionnaire.published);\r\n      // } else if (this.notRealeaseChecked) {\r\n      //   this.filteredQuestionnaires = this.questionnaires.filter(questionnaire => !questionnaire.published);\r\n      // } else {\r\n      //   this.filteredQuestionnaires = this.questionnaires;\r\n      // }\r\n    },\r\n\r\n    publishedImagePath(isPublished) {\r\n      return isPublished\r\n        ? require('../../assets/images/Published.png')\r\n        : require('../../assets/images/Unpublished.png');\r\n    },\r\n\r\n    edit() {\r\n      // 编辑操作\r\n      this.$router.push('/questionaireCreate');//跳转到编辑问卷界面，待更改\r\n    },\r\n    preview() {\r\n      // 预览操作\r\n      window.open(\"\", \"_self\");\r\n    },\r\n    share() {\r\n      // 分享操作\r\n    },\r\n    statistics() {\r\n      // 统计操作\r\n    },\r\n    clear() {\r\n      // 清空操作\r\n    },\r\n    exportData() {\r\n      // 导出操作\r\n    },\r\n    pause(questionnaire) {\r\n      // 暂停操作\r\n      questionnaire.isPaused = !questionnaire.isPaused;\r\n    },\r\n    copy() {\r\n      // 复制操作\r\n    },\r\n    favorite(questionnaire) {\r\n      // 收藏操作\r\n      questionnaire.isFavorited = !questionnaire.isFavorited;\r\n    },\r\n    remove() {\r\n      //删除操作\r\n    },\r\n\r\n    createSurvey() {\r\n      this.$router.push('/questionaireCreate');\r\n    },\r\n    recycleBin() {\r\n      this.$router.push('/questionaireRecycle');\r\n    },\r\n    collectedQuestionnaire() {\r\n      this.$router.push('/myform');\r\n    },\r\n  },\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n#manage {\r\n  display: flex;\r\n}\r\n\r\n.qnentry {\r\n  display: flex;\r\n}\r\n\r\n.Instance {\r\n  margin-top: 20px;\r\n}\r\n\r\n#sidebar {\r\n  width: 20%;\r\n  height: 750px;\r\n  background-color: #757070a0;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  margin-top: 110px;\r\n  position:\r\n    fixed;\r\n}\r\n\r\n.button {\r\n  display: block;\r\n  width: 100%;\r\n  text-align: center;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n\r\n.button:hover {\r\n  border: 1px solid #000;\r\n}\r\n\r\n#create-survey {\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  font-weight: bold;\r\n}\r\n\r\n#bind-wechat {\r\n  background-color: #28a745;\r\n  color: #fff;\r\n  font-weight: bold;\r\n}\r\n\r\n#description {\r\n  margin-top: 250px;\r\n  background-color: white;\r\n  padding: 20px;\r\n}\r\n\r\n#description-text {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* .toolbar {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color:rgb(241,241,241);\r\n} */\r\n\r\n.toolbar {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgb(241, 241, 241);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 350px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding-top: 10px;\r\n  padding-bottom: 30px;\r\n  margin-top: 15px;\r\n  z-index: 5;\r\n  /* 确保其在其他内容上面 */\r\n}\r\n\r\n.sort-container {\r\n  margin-left: 580px;\r\n  margin-right: -500px;\r\n  margin-top: 100px;\r\n  position: relative;\r\n}\r\n\r\n.mytype-container {\r\n  margin-left: 550px;\r\n  margin-right: -500px;\r\n  margin-top: 100px;\r\n  position: relative;\r\n}\r\n\r\n.realease-container,\r\n#search-box {\r\n  margin-left: 550px;\r\n  margin-right: -600px;\r\n  margin-top: 100px;\r\n  position: relative;\r\n}\r\n\r\n.sort-container button {\r\n  border: transparent;\r\n}\r\n\r\n.mytype-container button {\r\n  border: transparent;\r\n}\r\n\r\n.realease-container button {\r\n  border: transparent;\r\n}\r\n\r\n#search {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n#search input[type=\"text\"] {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px 0 0 5px;\r\n}\r\n\r\n#search button {\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 0 5px 5px 0;\r\n  cursor: pointer;\r\n}\r\n\r\n#content {\r\n  width: 80%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n#survey-title {\r\n  font-size: 30px;\r\n  text-align: left;\r\n  font-weight: bold;\r\n  margin-left: 70px;\r\n  margin-right: -100px;\r\n  margin-top: 100px;\r\n  position: fixed;\r\n  /* margin-bottom: 20px; */\r\n}\r\n\r\n#search-box button {\r\n  height: 36px;\r\n  margin-left: 420px;\r\n  margin-top: -20px;\r\n  background-color: rgb(0, 167, 250);\r\n  color: white;\r\n  font-weight: bolder;\r\n  position: fixed;\r\n  border-radius: 5px;\r\n}\r\n\r\n#search-box input[type=\"text\"] {\r\n  padding: 10px;\r\n  width: 300px;\r\n  margin-left: 100px;\r\n  margin-top: -20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  position: fixed;\r\n}\r\n\r\n.sort-options {\r\n  position: absolute;\r\n  font-size: 15px;\r\n  width: 100px;\r\n  display: block;\r\n  top: 100%;\r\n  background-color: #a09595;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.type-options {\r\n  position: absolute;\r\n  font-size: 15px;\r\n  width: 70px;\r\n  display: block;\r\n  top: 100%;\r\n  background-color: #a09595;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.realease-options {\r\n  position: absolute;\r\n  font-size: 15px;\r\n  width: 70px;\r\n  display: block;\r\n  top: 100%;\r\n  background-color: #a09595;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.survey-list-container {\r\n  max-height: 500px;\r\n  /* 设置容器的最大高度 */\r\n  overflow-y: auto;\r\n  /* 添加垂直滚动条 */\r\n}\r\n\r\n.pagination {\r\n  margin-left: 50%;\r\n  margin-bottom: 130px;\r\n  position: relative;\r\n  top: 120px;\r\n}\r\n\r\n.questionnaire {\r\n  background-color: #ffffff;\r\n  padding: 40px;\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  margin-left: 28%;\r\n  margin-right: -320px;\r\n  border-radius: 5px;\r\n  /* 添加边框圆角 */\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);\r\n  /* 添加阴影 */\r\n  transition: box-shadow 0.3s ease;\r\n  /* 添加过渡效果 */\r\n  position: relative;\r\n  top: 120px;\r\n}\r\n\r\n.separator {\r\n  height: 1px;\r\n  background-color: #d3d3d3;\r\n  margin: 25px 0;\r\n}\r\n\r\n.questionnaire-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n  align-items: center;\r\n  /* 确保内部元素垂直居中 */\r\n  font-size: small;\r\n}\r\n\r\n.info-left {\r\n  margin-right: 500px;\r\n  font-size: x-large;\r\n  font-weight: 600;\r\n}\r\n\r\n.questionnaire-actions button {\r\n  margin-right: 15px;\r\n  background-color: transparent;\r\n  border: 0px;\r\n  border-radius: 3px;\r\n  padding: 15px 20px;\r\n  transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;\r\n  cursor: pointer;\r\n  /* 鼠标悬停时变为手形图标 */\r\n}\r\n\r\n.questionnaire-actions button:hover {\r\n  /*background-color: #cecfd0; /* 当鼠标悬停时改变按钮的背景色 */\r\n  color: rgb(15, 107, 255);\r\n  /* 当鼠标悬停时改变按钮的文字颜色 */\r\n}\r\n\r\n.icon {\r\n  width: 15px;\r\n  height: 15px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n}\r\n\r\n.leftPart {\r\n  margin-right: 8%;\r\n}\r\n\r\n.leftButton {\r\n  font-size: 15px;\r\n}\r\n\r\n.rightButton {\r\n  font-size: 15px;\r\n}\r\n\r\n.text-black {\r\n  color: black;\r\n  font-size: 15px;\r\n}\r\n\r\n.text-red {\r\n  color: red;\r\n  font-size: 15px;\r\n}\r\n\r\n.text-red:hover {\r\n  color: rgb(15, 107, 255);\r\n  /* 当鼠标悬停时改变按钮的文字颜色 */\r\n}\r\n\r\n.text-black:hover {\r\n  color: rgb(15, 107, 255);\r\n  /* 当鼠标悬停时改变按钮的文字颜色 */\r\n}\r\n</style>"],"mappings":"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,CAACC,GAAG,CAAC,SAAS,CAAC;YACtB;UACF,KAAK,CAAC;YACJD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;YACtB;UACF,KAAK,CAAC;YACJD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;YACtB;UACF,KAAK,CAAC;YACJD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;YACtB;UACF,KAAK,CAAC,CAAC;YACL;QACJ;MACF,CAAC,CAAC,CAACuB,KAAK,CAACC,GAAE,IAAK;QACdzB,OAAO,CAACC,GAAG,CAACwB,GAAG,CAAC;MAClB,CAAC,CAAC;MACF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAEF,CAAC;IACDtB,2BAA2BA,CAAA,EAAG;MAC5B,IAAI,CAAClB,cAAc,CAACyC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACjC,OAAO,IAAIC,IAAI,CAACF,CAAC,CAACG,YAAY,IAAI,IAAID,IAAI,CAACD,CAAC,CAACE,YAAY,CAAC;MAC5D,CAAC,CAAC;IACJ,CAAC;IAED1B,4BAA4BA,CAAA,EAAG;MAC7B,IAAI,CAACnB,cAAc,CAACyC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACjC,OAAO,IAAIC,IAAI,CAACD,CAAC,CAACE,YAAY,IAAI,IAAID,IAAI,CAACF,CAAC,CAACG,YAAY,CAAC;MAC5D,CAAC,CAAC;IACJ,CAAC;IAEDzB,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACpB,cAAc,CAACyC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACjC,OAAO,IAAIC,IAAI,CAACF,CAAC,CAACG,YAAY,IAAI,IAAID,IAAI,CAACD,CAAC,CAACE,YAAY,CAAC;MAC5D,CAAC,CAAC;IACJ,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb/B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,WAAW,CAAC;MAC7B,IAAI,IAAI,CAACA,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAU,IAAK,CAAC;QACrBa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,WAAW,CAAC;MAC/B;MACAa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,WAAW,CAAC;IAC/B,CAAC;IACD6C,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAC7C,WAAU,GAAI,IAAI,CAACK,UAAU,EAAE;QACtC,IAAI,CAACL,WAAU,IAAK,CAAC;QACrBa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,WAAW,CAAC;MAC/B;MACAa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,WAAW,CAAC;IAC/B,CAAC;IAED8C,oBAAoBA,CAAA,EAAG;MACrB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD;IAEDC,kBAAkBA,CAACC,WAAW,EAAE;MAC9B,OAAOA,WAAU,GACbC,OAAO,CAAC,mCAAmC,IAC3CA,OAAO,CAAC,qCAAqC,CAAC;IACpD,CAAC;IAEDC,IAAIA,CAAA,EAAG;MACL;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC3C,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR;MACAC,MAAM,CAACC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC;IAC1B,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN;IAAA,CACD;IACDC,UAAUA,CAAA,EAAG;MACX;IAAA,CACD;IACDC,KAAKA,CAAA,EAAG;MACN;IAAA,CACD;IACDC,UAAUA,CAAA,EAAG;MACX;IAAA,CACD;IACDC,KAAKA,CAACC,aAAa,EAAE;MACnB;MACAA,aAAa,CAACC,QAAO,GAAI,CAACD,aAAa,CAACC,QAAQ;IAClD,CAAC;IACDC,IAAIA,CAAA,EAAG;MACL;IAAA,CACD;IACDC,QAAQA,CAACH,aAAa,EAAE;MACtB;MACAA,aAAa,CAACI,WAAU,GAAI,CAACJ,aAAa,CAACI,WAAW;IACxD,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP;IAAA,CACD;IAEDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAAChB,OAAO,CAACC,IAAI,CAAC,qBAAqB,CAAC;IAC1C,CAAC;IACDgB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACjB,OAAO,CAACC,IAAI,CAAC,sBAAsB,CAAC;IAC3C,CAAC;IACDiB,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAAClB,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;IAC9B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}