{"ast":null,"code":"var guid = 0;\nvar ArrayProto = Array.prototype;\nvar nativeForEach = ArrayProto.forEach;\n\n/**\n * Util functions\n * @namespace clay.core.util\n */\nvar util = {\n  /**\n   * Generate GUID\n   * @return {number}\n   * @memberOf clay.core.util\n   */\n  genGUID: function () {\n    return ++guid;\n  },\n  /**\n   * Relative path to absolute path\n   * @param  {string} path\n   * @param  {string} basePath\n   * @return {string}\n   * @memberOf clay.core.util\n   */\n  relative2absolute: function (path, basePath) {\n    if (!basePath || path.match(/^\\//)) {\n      return path;\n    }\n    var pathParts = path.split('/');\n    var basePathParts = basePath.split('/');\n    var item = pathParts[0];\n    while (item === '.' || item === '..') {\n      if (item === '..') {\n        basePathParts.pop();\n      }\n      pathParts.shift();\n      item = pathParts[0];\n    }\n    return basePathParts.join('/') + '/' + pathParts.join('/');\n  },\n  /**\n   * Extend target with source\n   * @param  {Object} target\n   * @param  {Object} source\n   * @return {Object}\n   * @memberOf clay.core.util\n   */\n  extend: function (target, source) {\n    if (source) {\n      for (var name in source) {\n        if (source.hasOwnProperty(name)) {\n          target[name] = source[name];\n        }\n      }\n    }\n    return target;\n  },\n  /**\n   * Extend properties to target if not exist.\n   * @param  {Object} target\n   * @param  {Object} source\n   * @return {Object}\n   * @memberOf clay.core.util\n   */\n  defaults: function (target, source) {\n    if (source) {\n      for (var propName in source) {\n        if (target[propName] === undefined) {\n          target[propName] = source[propName];\n        }\n      }\n    }\n    return target;\n  },\n  /**\n   * Extend properties with a given property list to avoid for..in.. iteration.\n   * @param  {Object} target\n   * @param  {Object} source\n   * @param  {Array.<string>} propList\n   * @return {Object}\n   * @memberOf clay.core.util\n   */\n  extendWithPropList: function (target, source, propList) {\n    if (source) {\n      for (var i = 0; i < propList.length; i++) {\n        var propName = propList[i];\n        target[propName] = source[propName];\n      }\n    }\n    return target;\n  },\n  /**\n   * Extend properties to target if not exist. With a given property list avoid for..in.. iteration.\n   * @param  {Object} target\n   * @param  {Object} source\n   * @param  {Array.<string>} propList\n   * @return {Object}\n   * @memberOf clay.core.util\n   */\n  defaultsWithPropList: function (target, source, propList) {\n    if (source) {\n      for (var i = 0; i < propList.length; i++) {\n        var propName = propList[i];\n        if (target[propName] == null) {\n          target[propName] = source[propName];\n        }\n      }\n    }\n    return target;\n  },\n  /**\n   * @param  {Object|Array} obj\n   * @param  {Function} iterator\n   * @param  {Object} [context]\n   * @memberOf clay.core.util\n   */\n  each: function (obj, iterator, context) {\n    if (!(obj && iterator)) {\n      return;\n    }\n    if (obj.forEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, len = obj.length; i < len; i++) {\n        iterator.call(context, obj[i], i, obj);\n      }\n    } else {\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          iterator.call(context, obj[key], key, obj);\n        }\n      }\n    }\n  },\n  /**\n   * Is object\n   * @param  {}  obj\n   * @return {boolean}\n   * @memberOf clay.core.util\n   */\n  isObject: function (obj) {\n    return obj === Object(obj);\n  },\n  /**\n   * Is array ?\n   * @param  {}  obj\n   * @return {boolean}\n   * @memberOf clay.core.util\n   */\n  isArray: function (obj) {\n    return Array.isArray(obj);\n  },\n  /**\n   * Is array like, which have a length property\n   * @param  {}  obj\n   * @return {boolean}\n   * @memberOf clay.core.util\n   */\n  isArrayLike: function (obj) {\n    if (!obj) {\n      return false;\n    } else {\n      return obj.length === +obj.length;\n    }\n  },\n  /**\n   * @param  {} obj\n   * @return {}\n   * @memberOf clay.core.util\n   */\n  clone: function (obj) {\n    if (!util.isObject(obj)) {\n      return obj;\n    } else if (util.isArray(obj)) {\n      return obj.slice();\n    } else if (util.isArrayLike(obj)) {\n      // is typed array\n      var ret = new obj.constructor(obj.length);\n      for (var i = 0; i < obj.length; i++) {\n        ret[i] = obj[i];\n      }\n      return ret;\n    } else {\n      return util.extend({}, obj);\n    }\n  }\n};\nexport default util;","map":{"version":3,"names":["guid","ArrayProto","Array","prototype","nativeForEach","forEach","util","genGUID","relative2absolute","path","basePath","match","pathParts","split","basePathParts","item","pop","shift","join","extend","target","source","name","hasOwnProperty","defaults","propName","undefined","extendWithPropList","propList","i","length","defaultsWithPropList","each","obj","iterator","context","len","call","key","isObject","Object","isArray","isArrayLike","clone","slice","ret","constructor"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/claygl/src/core/util.js"],"sourcesContent":["var guid = 0;\n\nvar ArrayProto = Array.prototype;\nvar nativeForEach = ArrayProto.forEach;\n\n/**\n * Util functions\n * @namespace clay.core.util\n */\nvar util = {\n\n    /**\n     * Generate GUID\n     * @return {number}\n     * @memberOf clay.core.util\n     */\n    genGUID: function () {\n        return ++guid;\n    },\n    /**\n     * Relative path to absolute path\n     * @param  {string} path\n     * @param  {string} basePath\n     * @return {string}\n     * @memberOf clay.core.util\n     */\n    relative2absolute: function (path, basePath) {\n        if (!basePath || path.match(/^\\//)) {\n            return path;\n        }\n        var pathParts = path.split('/');\n        var basePathParts = basePath.split('/');\n\n        var item = pathParts[0];\n        while(item === '.' || item === '..') {\n            if (item === '..') {\n                basePathParts.pop();\n            }\n            pathParts.shift();\n            item = pathParts[0];\n        }\n        return basePathParts.join('/') + '/' + pathParts.join('/');\n    },\n\n    /**\n     * Extend target with source\n     * @param  {Object} target\n     * @param  {Object} source\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    extend: function (target, source) {\n        if (source) {\n            for (var name in source) {\n                if (source.hasOwnProperty(name)) {\n                    target[name] = source[name];\n                }\n            }\n        }\n        return target;\n    },\n\n    /**\n     * Extend properties to target if not exist.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    defaults: function (target, source) {\n        if (source) {\n            for (var propName in source) {\n                if (target[propName] === undefined) {\n                    target[propName] = source[propName];\n                }\n            }\n        }\n        return target;\n    },\n    /**\n     * Extend properties with a given property list to avoid for..in.. iteration.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @param  {Array.<string>} propList\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    extendWithPropList: function (target, source, propList) {\n        if (source) {\n            for (var i = 0; i < propList.length; i++) {\n                var propName = propList[i];\n                target[propName] = source[propName];\n            }\n        }\n        return target;\n    },\n    /**\n     * Extend properties to target if not exist. With a given property list avoid for..in.. iteration.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @param  {Array.<string>} propList\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    defaultsWithPropList: function (target, source, propList) {\n        if (source) {\n            for (var i = 0; i < propList.length; i++) {\n                var propName = propList[i];\n                if (target[propName] == null) {\n                    target[propName] = source[propName];\n                }\n            }\n        }\n        return target;\n    },\n    /**\n     * @param  {Object|Array} obj\n     * @param  {Function} iterator\n     * @param  {Object} [context]\n     * @memberOf clay.core.util\n     */\n    each: function (obj, iterator, context) {\n        if (!(obj && iterator)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(iterator, context);\n        }\n        else if (obj.length === + obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                iterator.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    iterator.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    },\n\n    /**\n     * Is object\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isObject: function (obj) {\n        return obj === Object(obj);\n    },\n\n    /**\n     * Is array ?\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isArray: function (obj) {\n        return Array.isArray(obj);\n    },\n\n    /**\n     * Is array like, which have a length property\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isArrayLike: function (obj) {\n        if (!obj) {\n            return false;\n        }\n        else {\n            return obj.length === + obj.length;\n        }\n    },\n\n    /**\n     * @param  {} obj\n     * @return {}\n     * @memberOf clay.core.util\n     */\n    clone: function (obj) {\n        if (!util.isObject(obj)) {\n            return obj;\n        }\n        else if (util.isArray(obj)) {\n            return obj.slice();\n        }\n        else if (util.isArrayLike(obj)) { // is typed array\n            var ret = new obj.constructor(obj.length);\n            for (var i = 0; i < obj.length; i++) {\n                ret[i] = obj[i];\n            }\n            return ret;\n        }\n        else {\n            return util.extend({}, obj);\n        }\n    }\n};\n\nexport default util;\n"],"mappings":"AAAA,IAAIA,IAAI,GAAG,CAAC;AAEZ,IAAIC,UAAU,GAAGC,KAAK,CAACC,SAAS;AAChC,IAAIC,aAAa,GAAGH,UAAU,CAACI,OAAO;;AAEtC;AACA;AACA;AACA;AACA,IAAIC,IAAI,GAAG;EAEP;AACJ;AACA;AACA;AACA;EACIC,OAAO,EAAE,SAAAA,CAAA,EAAY;IACjB,OAAO,EAAEP,IAAI;EACjB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIQ,iBAAiB,EAAE,SAAAA,CAAUC,IAAI,EAAEC,QAAQ,EAAE;IACzC,IAAI,CAACA,QAAQ,IAAID,IAAI,CAACE,KAAK,CAAC,KAAK,CAAC,EAAE;MAChC,OAAOF,IAAI;IACf;IACA,IAAIG,SAAS,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC;IAC/B,IAAIC,aAAa,GAAGJ,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC;IAEvC,IAAIE,IAAI,GAAGH,SAAS,CAAC,CAAC,CAAC;IACvB,OAAMG,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjC,IAAIA,IAAI,KAAK,IAAI,EAAE;QACfD,aAAa,CAACE,GAAG,CAAC,CAAC;MACvB;MACAJ,SAAS,CAACK,KAAK,CAAC,CAAC;MACjBF,IAAI,GAAGH,SAAS,CAAC,CAAC,CAAC;IACvB;IACA,OAAOE,aAAa,CAACI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAGN,SAAS,CAACM,IAAI,CAAC,GAAG,CAAC;EAC9D,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,MAAM,EAAE,SAAAA,CAAUC,MAAM,EAAEC,MAAM,EAAE;IAC9B,IAAIA,MAAM,EAAE;MACR,KAAK,IAAIC,IAAI,IAAID,MAAM,EAAE;QACrB,IAAIA,MAAM,CAACE,cAAc,CAACD,IAAI,CAAC,EAAE;UAC7BF,MAAM,CAACE,IAAI,CAAC,GAAGD,MAAM,CAACC,IAAI,CAAC;QAC/B;MACJ;IACJ;IACA,OAAOF,MAAM;EACjB,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;EACII,QAAQ,EAAE,SAAAA,CAAUJ,MAAM,EAAEC,MAAM,EAAE;IAChC,IAAIA,MAAM,EAAE;MACR,KAAK,IAAII,QAAQ,IAAIJ,MAAM,EAAE;QACzB,IAAID,MAAM,CAACK,QAAQ,CAAC,KAAKC,SAAS,EAAE;UAChCN,MAAM,CAACK,QAAQ,CAAC,GAAGJ,MAAM,CAACI,QAAQ,CAAC;QACvC;MACJ;IACJ;IACA,OAAOL,MAAM;EACjB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIO,kBAAkB,EAAE,SAAAA,CAAUP,MAAM,EAAEC,MAAM,EAAEO,QAAQ,EAAE;IACpD,IAAIP,MAAM,EAAE;MACR,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,IAAIJ,QAAQ,GAAGG,QAAQ,CAACC,CAAC,CAAC;QAC1BT,MAAM,CAACK,QAAQ,CAAC,GAAGJ,MAAM,CAACI,QAAQ,CAAC;MACvC;IACJ;IACA,OAAOL,MAAM;EACjB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIW,oBAAoB,EAAE,SAAAA,CAAUX,MAAM,EAAEC,MAAM,EAAEO,QAAQ,EAAE;IACtD,IAAIP,MAAM,EAAE;MACR,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,IAAIJ,QAAQ,GAAGG,QAAQ,CAACC,CAAC,CAAC;QAC1B,IAAIT,MAAM,CAACK,QAAQ,CAAC,IAAI,IAAI,EAAE;UAC1BL,MAAM,CAACK,QAAQ,CAAC,GAAGJ,MAAM,CAACI,QAAQ,CAAC;QACvC;MACJ;IACJ;IACA,OAAOL,MAAM;EACjB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIY,IAAI,EAAE,SAAAA,CAAUC,GAAG,EAAEC,QAAQ,EAAEC,OAAO,EAAE;IACpC,IAAI,EAAEF,GAAG,IAAIC,QAAQ,CAAC,EAAE;MACpB;IACJ;IACA,IAAID,GAAG,CAAC5B,OAAO,IAAI4B,GAAG,CAAC5B,OAAO,KAAKD,aAAa,EAAE;MAC9C6B,GAAG,CAAC5B,OAAO,CAAC6B,QAAQ,EAAEC,OAAO,CAAC;IAClC,CAAC,MACI,IAAIF,GAAG,CAACH,MAAM,KAAK,CAAEG,GAAG,CAACH,MAAM,EAAE;MAClC,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEO,GAAG,GAAGH,GAAG,CAACH,MAAM,EAAED,CAAC,GAAGO,GAAG,EAAEP,CAAC,EAAE,EAAE;QAC5CK,QAAQ,CAACG,IAAI,CAACF,OAAO,EAAEF,GAAG,CAACJ,CAAC,CAAC,EAAEA,CAAC,EAAEI,GAAG,CAAC;MAC1C;IACJ,CAAC,MACI;MACD,KAAK,IAAIK,GAAG,IAAIL,GAAG,EAAE;QACjB,IAAIA,GAAG,CAACV,cAAc,CAACe,GAAG,CAAC,EAAE;UACzBJ,QAAQ,CAACG,IAAI,CAACF,OAAO,EAAEF,GAAG,CAACK,GAAG,CAAC,EAAEA,GAAG,EAAEL,GAAG,CAAC;QAC9C;MACJ;IACJ;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIM,QAAQ,EAAE,SAAAA,CAAUN,GAAG,EAAE;IACrB,OAAOA,GAAG,KAAKO,MAAM,CAACP,GAAG,CAAC;EAC9B,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIQ,OAAO,EAAE,SAAAA,CAAUR,GAAG,EAAE;IACpB,OAAO/B,KAAK,CAACuC,OAAO,CAACR,GAAG,CAAC;EAC7B,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIS,WAAW,EAAE,SAAAA,CAAUT,GAAG,EAAE;IACxB,IAAI,CAACA,GAAG,EAAE;MACN,OAAO,KAAK;IAChB,CAAC,MACI;MACD,OAAOA,GAAG,CAACH,MAAM,KAAK,CAAEG,GAAG,CAACH,MAAM;IACtC;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIa,KAAK,EAAE,SAAAA,CAAUV,GAAG,EAAE;IAClB,IAAI,CAAC3B,IAAI,CAACiC,QAAQ,CAACN,GAAG,CAAC,EAAE;MACrB,OAAOA,GAAG;IACd,CAAC,MACI,IAAI3B,IAAI,CAACmC,OAAO,CAACR,GAAG,CAAC,EAAE;MACxB,OAAOA,GAAG,CAACW,KAAK,CAAC,CAAC;IACtB,CAAC,MACI,IAAItC,IAAI,CAACoC,WAAW,CAACT,GAAG,CAAC,EAAE;MAAE;MAC9B,IAAIY,GAAG,GAAG,IAAIZ,GAAG,CAACa,WAAW,CAACb,GAAG,CAACH,MAAM,CAAC;MACzC,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,GAAG,CAACH,MAAM,EAAED,CAAC,EAAE,EAAE;QACjCgB,GAAG,CAAChB,CAAC,CAAC,GAAGI,GAAG,CAACJ,CAAC,CAAC;MACnB;MACA,OAAOgB,GAAG;IACd,CAAC,MACI;MACD,OAAOvC,IAAI,CAACa,MAAM,CAAC,CAAC,CAAC,EAAEc,GAAG,CAAC;IAC/B;EACJ;AACJ,CAAC;AAED,eAAe3B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}