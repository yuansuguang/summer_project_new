{"ast":null,"code":"import Light from '../Light';\nimport Vector3 from '../math/Vector3';\n\n/**\n * @constructor clay.light.Spot\n * @extends clay.Light\n */\nvar SpotLight = Light.extend( /**@lends clay.light.Spot */{\n  /**\n   * @type {number}\n   */\n  range: 20,\n  /**\n   * @type {number}\n   */\n  umbraAngle: 30,\n  /**\n   * @type {number}\n   */\n  penumbraAngle: 45,\n  /**\n   * @type {number}\n   */\n  falloffFactor: 2.0,\n  /**\n   * @type {number}\n   */\n  shadowBias: 0.001,\n  /**\n   * @type {number}\n   */\n  shadowSlopeScale: 2.0\n}, {\n  type: 'SPOT_LIGHT',\n  uniformTemplates: {\n    spotLightPosition: {\n      type: '3f',\n      value: function (instance) {\n        return instance.getWorldPosition().array;\n      }\n    },\n    spotLightRange: {\n      type: '1f',\n      value: function (instance) {\n        return instance.range;\n      }\n    },\n    spotLightUmbraAngleCosine: {\n      type: '1f',\n      value: function (instance) {\n        return Math.cos(instance.umbraAngle * Math.PI / 180);\n      }\n    },\n    spotLightPenumbraAngleCosine: {\n      type: '1f',\n      value: function (instance) {\n        return Math.cos(instance.penumbraAngle * Math.PI / 180);\n      }\n    },\n    spotLightFalloffFactor: {\n      type: '1f',\n      value: function (instance) {\n        return instance.falloffFactor;\n      }\n    },\n    spotLightDirection: {\n      type: '3f',\n      value: function (instance) {\n        instance.__dir = instance.__dir || new Vector3();\n        // Direction is target to eye\n        return instance.__dir.copy(instance.worldTransform.z).negate().array;\n      }\n    },\n    spotLightColor: {\n      type: '3f',\n      value: function (instance) {\n        var color = instance.color;\n        var intensity = instance.intensity;\n        return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n      }\n    }\n  },\n  /**\n   * @return {clay.light.Spot}\n   * @memberOf clay.light.Spot.prototype\n   */\n  clone: function () {\n    var light = Light.prototype.clone.call(this);\n    light.range = this.range;\n    light.umbraAngle = this.umbraAngle;\n    light.penumbraAngle = this.penumbraAngle;\n    light.falloffFactor = this.falloffFactor;\n    light.shadowBias = this.shadowBias;\n    light.shadowSlopeScale = this.shadowSlopeScale;\n    return light;\n  }\n});\nexport default SpotLight;","map":{"version":3,"names":["Light","Vector3","SpotLight","extend","range","umbraAngle","penumbraAngle","falloffFactor","shadowBias","shadowSlopeScale","type","uniformTemplates","spotLightPosition","value","instance","getWorldPosition","array","spotLightRange","spotLightUmbraAngleCosine","Math","cos","PI","spotLightPenumbraAngleCosine","spotLightFalloffFactor","spotLightDirection","__dir","copy","worldTransform","z","negate","spotLightColor","color","intensity","clone","light","prototype","call"],"sources":["E:/mytest/node_modules/claygl/src/light/Spot.js"],"sourcesContent":["import Light from '../Light';\nimport Vector3 from '../math/Vector3';\n\n/**\n * @constructor clay.light.Spot\n * @extends clay.Light\n */\nvar SpotLight = Light.extend(/**@lends clay.light.Spot */ {\n    /**\n     * @type {number}\n     */\n    range: 20,\n    /**\n     * @type {number}\n     */\n    umbraAngle: 30,\n    /**\n     * @type {number}\n     */\n    penumbraAngle: 45,\n    /**\n     * @type {number}\n     */\n    falloffFactor: 2.0,\n    /**\n     * @type {number}\n     */\n    shadowBias: 0.001,\n    /**\n     * @type {number}\n     */\n    shadowSlopeScale: 2.0\n}, {\n\n    type: 'SPOT_LIGHT',\n\n    uniformTemplates: {\n        spotLightPosition: {\n            type: '3f',\n            value: function (instance) {\n                return instance.getWorldPosition().array;\n            }\n        },\n        spotLightRange: {\n            type: '1f',\n            value: function (instance) {\n                return instance.range;\n            }\n        },\n        spotLightUmbraAngleCosine: {\n            type: '1f',\n            value: function (instance) {\n                return Math.cos(instance.umbraAngle * Math.PI / 180);\n            }\n        },\n        spotLightPenumbraAngleCosine: {\n            type: '1f',\n            value: function (instance) {\n                return Math.cos(instance.penumbraAngle * Math.PI / 180);\n            }\n        },\n        spotLightFalloffFactor: {\n            type: '1f',\n            value: function (instance) {\n                return instance.falloffFactor;\n            }\n        },\n        spotLightDirection: {\n            type: '3f',\n            value: function (instance) {\n                instance.__dir = instance.__dir || new Vector3();\n                // Direction is target to eye\n                return instance.__dir.copy(instance.worldTransform.z).negate().array;\n            }\n        },\n        spotLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        }\n    },\n    /**\n     * @return {clay.light.Spot}\n     * @memberOf clay.light.Spot.prototype\n     */\n    clone: function () {\n        var light = Light.prototype.clone.call(this);\n        light.range = this.range;\n        light.umbraAngle = this.umbraAngle;\n        light.penumbraAngle = this.penumbraAngle;\n        light.falloffFactor = this.falloffFactor;\n        light.shadowBias = this.shadowBias;\n        light.shadowSlopeScale = this.shadowSlopeScale;\n        return light;\n    }\n});\n\nexport default SpotLight;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}