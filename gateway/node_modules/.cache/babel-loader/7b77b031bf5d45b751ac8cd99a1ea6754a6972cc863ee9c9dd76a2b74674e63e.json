{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-34021c93\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"history-management\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"white-board\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"您还没有填写过的问卷\", -1 /* HOISTED */));\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = {\n  key: 1,\n  class: \"white-board\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.goBack,\n    style: {\n      \"margin-bottom\": \"1%\"\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"返回\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), !$data.favoriteQuestionnaires.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [..._hoisted_4])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_table, {\n    data: $data.favoriteQuestionnaires,\n    stripe: \"\",\n    style: {\n      \"width\": \"50%\",\n      \"margin-left\": \"25%\"\n    },\n    \"max-height\": \"700\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"questionnaireName\",\n      label: \"问卷名\",\n      width: \"200px\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"creationDate\",\n      label: \"上次填写时间\",\n      width: \"200px\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"500px\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_button, {\n        size: \"small\",\n        type: \"success\",\n        onClick: $event => $options.continueWrite(row)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"继续填写\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        size: \"small\",\n        type: \"danger\",\n        onClick: $event => $options.removeFromFavorites(row)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"删除记录\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])]))]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_1","_createVNode","_component_el_button","type","onClick","$options","goBack","style","default","_withCtx","_createTextVNode","_","$data","favoriteQuestionnaires","length","_hoisted_2","_hoisted_4","_hoisted_5","_component_el_table","data","stripe","_component_el_table_column","prop","label","width","row","size","$event","continueWrite","removeFromFavorites"],"sources":["E:\\mytest\\src\\views\\qn-manage\\qnHistory.vue"],"sourcesContent":["<template>\r\n  <div class=\"history-management\">\r\n    <el-button type=\"primary\" @click=\"goBack\" style=\"margin-bottom: 1%;\">返回</el-button>\r\n    \r\n    <div v-if=\"!favoriteQuestionnaires.length\" class=\"white-board\">\r\n      <h3>您还没有填写过的问卷</h3>\r\n    </div>\r\n    \r\n    <div v-else class=\"white-board\">\r\n      <el-table :data=\"favoriteQuestionnaires\" stripe style=\"width: 50%; margin-left: 25%;\" max-height=\"700\">\r\n        <el-table-column prop=\"questionnaireName\" label=\"问卷名\" width=\"200px\"></el-table-column>\r\n        <el-table-column prop=\"creationDate\" label=\"上次填写时间\" width=\"200px\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"500px\">\r\n          <template #default=\"{ row }\">\r\n            <el-button size=\"small\" type=\"success\" @click=\"continueWrite(row)\">继续填写</el-button>\r\n            <el-button size=\"small\" type=\"danger\" @click=\"removeFromFavorites(row)\">删除记录</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        favoriteQuestionnaires: [\r\n        {\r\n            questionnaireName: '问卷1',\r\n            questionnaireId: '123',\r\n            submitId:1,\r\n            isPublished: true,\r\n            questionType: '普通问卷',\r\n            answersCount: 50,\r\n            creationDate: '2024-05-20',\r\n            isSubmitted: true,\r\n            isPaused: true,\r\n            isEditing: false,\r\n            code: '',\r\n          },\r\n          {\r\n            questionnaireName: '问卷2',\r\n            questionnaireId: '456',\r\n            submitId:2,\r\n            isPublished: false,\r\n            questionType: '考试问卷',\r\n            answersCount: 30,\r\n            creationDate: '2024-05-21',\r\n            isSubmitted: false,\r\n            isPaused: false,\r\n            isEditing: false,\r\n            code: '',\r\n          },\r\n          {\r\n            questionnaireName: '问卷3',\r\n            questionnaireId: '789',\r\n            isPublished: false,\r\n            submitId:3,\r\n            questionType: '投票问卷',\r\n            answersCount: 50,\r\n            creationDate: '2024-05-22',\r\n            isSubmitted: true,\r\n            isPaused: false,\r\n            isEditing: false,\r\n            code: '',\r\n          },\r\n          {\r\n            questionnaireName: '问卷4',\r\n            questionnaireId: '789',\r\n            isPublished: false,\r\n            submitId:4,\r\n            questionType: '报名问卷',\r\n            answersCount: 50,\r\n            creationDate: '2024-05-23',\r\n            isSubmitted: true,\r\n            isPaused: false,\r\n            isEditing: false,\r\n            code: '',\r\n          },\r\n          {\r\n            questionnaireName: '问卷5',\r\n            questionnaireId: '789',\r\n            isPublished: false,\r\n            submitId:5,\r\n            questionType: '其他问卷',\r\n            answersCount: 50,\r\n            creationDate: '2024-05-24',\r\n            isSubmitted: true,\r\n            isPaused: false,\r\n            isEditing: false,\r\n            code: '',\r\n          },\r\n          {\r\n            questionnaireName: '问卷6',\r\n            questionnaireId: '789',\r\n            id:6,\r\n            isPublished: false,\r\n            questionType: '其他问卷',\r\n            answersCount: 50,\r\n            creationDate: '2024-05-25',\r\n            isSubmitted: true,\r\n            isPaused: true,\r\n            isEditing: false,\r\n            code: '',\r\n          },\r\n        ]\r\n      };\r\n    },\r\n    methods: {\r\n      goBack(){\r\n        this.$router.push('/questionairemanage');\r\n      },\r\n      viewData(questionnaire){\r\n        console.log(questionnaire.questionType);\r\n      },\r\n      clearData(questionnaire) {\r\n        // 清空问卷数据操作\r\n        // questionnaire.answersCount = 0;\r\n        const formData = new FormData();\r\n        formData.append('survey_id', questionnaire.questionnaireId);\r\n        this.$axios({\r\n        method: 'post',\r\n        url: '/submit/api/clear_survey',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            console.log(\"success on cleaning questionnaire\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      this.fetchFavorite();\r\n      },\r\n      removeFromFavorites(questionnaire) {\r\n        // 取消收藏操作\r\n        const formData = new FormData();\r\n        formData.append('submit_id', questionnaire.submitId);\r\n      this.$axios({\r\n        method: 'post',\r\n        url: '/submit/api/delete_submission',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            console.log(\"success on deleting submission\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      this.fetchFavorite();\r\n      },\r\n      continueWrite(questionnaire) {\r\n        if (questionnaire.type == '3') {\r\n          this.$router.push({ name: 'fillQnmytest', params: { code: questionnaire.code } });\r\n        }\r\n        else if (questionnaire.type == '2') {\r\n          this.$router.push({ name: 'fillQnmyvote', params: { code: questionnaire.code } });\r\n        }\r\n        else {\r\n          this.$router.push({ name: 'fillQn', params: { code: questionnaire.code } });\r\n        }\r\n      },\r\n      fetchHistory() {\r\n        this.$axios({\r\n        method: 'get',\r\n        url: '/submit/api/get_user_submissions',\r\n          }).then(res => {\r\n            switch (res.data.status_code) {\r\n              case 1:\r\n                this.favoriteQuestionnaires = JSON.parse(res.data.data);\r\n                console.log(this.favoriteQuestionnaires);\r\n                console.log(\"success on fetching history\");\r\n                break;\r\n              case 2:\r\n                console.log(\"error 2\");\r\n                break;\r\n              case 3:\r\n                console.log(\"error 3\");\r\n                break;\r\n              case -1:\r\n                break;\r\n            }\r\n          }).catch(err => {\r\n            console.log(err);\r\n          });\r\n      },\r\n      fetchFavorite() {\r\n        const formData = new FormData();\r\n      // formData.append(\"survey_keyword\", this.loginForm.user);\r\n      // if (this.notRealeaseChecked == true)\r\n      //   formData.append(\"is_released\", 1);\r\n      // else if (this.notRealeaseChecked == false)\r\n      //   formData.append(\"is_released\", 2);\r\n      // else\r\n      formData.append(\"is_collected\", 1);\r\n      formData.append(\"is_released\", 0);\r\n      this.$axios({\r\n        method: 'post',\r\n        url: '/survey/api/list',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            this.favoriteQuestionnaires = JSON.parse(res.data.data);\r\n            console.log(this.favoriteQuestionnaires);\r\n            // for (var i = 0; i < this.questionnaires.length; i++) {\r\n            //   this.questionnaires[i].previewVisible = false;\r\n            //   if (this.questionnaires[i].questionType == '1')\r\n            //     this.questionnaires[i].questionType = '普通问卷'\r\n            //   else if (this.questionnaires[i].questionType == '2')\r\n            //     this.questionnaires[i].questionType = '投票问卷'\r\n            //   else if (this.questionnaires[i].questionType == '3')\r\n            //     this.questionnaires[i].questionType = '考试问卷'\r\n            //   else\r\n            //     this.questionnaires[i].questionType = '报名问卷'\r\n            // }\r\n            console.log(\"success on fetching questionnaires\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case 4:\r\n            console.log(\"error 4\");\r\n            break;\r\n          case 5:\r\n            console.log(\"error 5\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      },\r\n    },\r\n    created() {\r\n    // 假设从后端获取问卷实例数据的方法为 fetchQuestionnaires()\r\n    this.fetchHistory();\r\n  },\r\n  };\r\n  </script>\r\n\r\n  <style scoped>\r\n  .history-management {\r\n    padding-top: 6%;\r\n  }\r\n  </style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAoB;;EADjCC,GAAA;EAI+CD,KAAK,EAAC;;gEAC/CE,mBAAA,CAAmB,YAAf,YAAU;oBAAdC,UAAmB,C;;EALzBF,GAAA;EAQgBD,KAAK,EAAC;;;;;;uBAPpBI,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,YAAA,CAAmFC,oBAAA;IAAxEC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAEC,QAAA,CAAAC,MAAM;IAAEC,KAA0B,EAA1B;MAAA;IAAA;;IAF9CC,OAAA,EAAAC,QAAA,CAEyE,MAAE,CAF3EC,gBAAA,CAEyE,IAAE,E;IAF3EC,CAAA;mCAIgBC,KAAA,CAAAC,sBAAsB,CAACC,MAAM,I,cAAzCf,mBAAA,CAEM,OAFNgB,UAEM,EANV,IAAAC,UAAA,O,cAQIjB,mBAAA,CAWM,OAXNkB,UAWM,GAVJhB,YAAA,CASWiB,mBAAA;IATAC,IAAI,EAAEP,KAAA,CAAAC,sBAAsB;IAAEO,MAAM,EAAN,EAAM;IAACb,KAAqC,EAArC;MAAA;MAAA;IAAA,CAAqC;IAAC,YAAU,EAAC;;IATvGC,OAAA,EAAAC,QAAA,CAUQ,MAAsF,CAAtFR,YAAA,CAAsFoB,0BAAA;MAArEC,IAAI,EAAC,mBAAmB;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC;QAC5DvB,YAAA,CAAoFoB,0BAAA;MAAnEC,IAAI,EAAC,cAAc;MAACC,KAAK,EAAC,QAAQ;MAACC,KAAK,EAAC;QAC1DvB,YAAA,CAKkBoB,0BAAA;MALDE,KAAK,EAAC,IAAI;MAACC,KAAK,EAAC;;MACrBhB,OAAO,EAAAC,QAAA,CAChB,CAAmF;QAD/DgB;MAAG,OACvBxB,YAAA,CAAmFC,oBAAA;QAAxEwB,IAAI,EAAC,OAAO;QAACvB,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAAuB,MAAA,IAAEtB,QAAA,CAAAuB,aAAa,CAACH,GAAG;;QAd5EjB,OAAA,EAAAC,QAAA,CAc+E,MAAI,CAdnFC,gBAAA,CAc+E,MAAI,E;QAdnFC,CAAA;wDAeYV,YAAA,CAAwFC,oBAAA;QAA7EwB,IAAI,EAAC,OAAO;QAACvB,IAAI,EAAC,QAAQ;QAAEC,OAAK,EAAAuB,MAAA,IAAEtB,QAAA,CAAAwB,mBAAmB,CAACJ,GAAG;;QAfjFjB,OAAA,EAAAC,QAAA,CAeoF,MAAI,CAfxFC,gBAAA,CAeoF,MAAI,E;QAfxFC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}