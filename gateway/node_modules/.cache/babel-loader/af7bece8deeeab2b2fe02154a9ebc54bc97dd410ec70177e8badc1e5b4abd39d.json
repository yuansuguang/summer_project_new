{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * Provide orbit control for 3D objects\n *\n * @module echarts-gl/util/OrbitControl\n * @author Yi Shen(http://github.com/pissang)\n */\n// TODO Remove magic numbers on sensitivity\nimport Base from 'claygl/src/core/Base';\nimport Vector2 from 'claygl/src/math/Vector2';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Quaternion from 'claygl/src/math/Quaternion';\nimport retrieve from './retrieve';\nvar firstNotNull = retrieve.firstNotNull;\nvar MOUSE_BUTTON_KEY_MAP = {\n  left: 0,\n  middle: 1,\n  right: 2\n};\nfunction convertToArray(val) {\n  if (!(val instanceof Array)) {\n    val = [val, val];\n  }\n  return val;\n}\n/**\n * @alias module:echarts-x/util/OrbitControl\n */\n\nvar OrbitControl = Base.extend(function () {\n  return {\n    /**\n     * @type {module:zrender~ZRender}\n     */\n    zr: null,\n    /**\n     * @type {module:echarts-gl/core/ViewGL}\n     */\n    viewGL: null,\n    /**\n     * @type {clay.math.Vector3}\n     */\n    _center: new Vector3(),\n    /**\n     * Minimum distance to the center\n     * Only available when camera is perspective.\n     * @type {number}\n     * @default 0.5\n     */\n    minDistance: 0.5,\n    /**\n     * Maximum distance to the center\n     * Only available when camera is perspective.\n     * @type {number}\n     * @default 2\n     */\n    maxDistance: 1.5,\n    /**\n     * Only available when camera is orthographic\n     */\n    maxOrthographicSize: 300,\n    /**\n     * Only available when camera is orthographic\n     */\n    minOrthographicSize: 30,\n    /**\n     * Minimum alpha rotation\n     */\n    minAlpha: -90,\n    /**\n     * Maximum alpha rotation\n     */\n    maxAlpha: 90,\n    /**\n     * Minimum beta rotation\n     */\n    minBeta: -Infinity,\n    /**\n     * Maximum beta rotation\n     */\n    maxBeta: Infinity,\n    /**\n     * Start auto rotating after still for the given time\n     */\n    autoRotateAfterStill: 0,\n    /**\n     * Direction of autoRotate. cw or ccw when looking top down.\n     */\n    autoRotateDirection: 'cw',\n    /**\n     * Degree per second\n     */\n    autoRotateSpeed: 60,\n    /**\n     * @param {number}\n     */\n    damping: 0.8,\n    /**\n     * @param {number}\n     */\n    rotateSensitivity: 1,\n    /**\n     * @param {number}\n     */\n    zoomSensitivity: 1,\n    /**\n     * @param {number}\n     */\n    panSensitivity: 1,\n    panMouseButton: 'middle',\n    rotateMouseButton: 'left',\n    /**\n     * Pan or rotate\n     * @private\n     * @type {String}\n     */\n    _mode: 'rotate',\n    /**\n     * @private\n     * @type {clay.Camera}\n     */\n    _camera: null,\n    _needsUpdate: false,\n    _rotating: false,\n    // Rotation around yAxis in radian\n    _phi: 0,\n    // Rotation around xAxis in radian\n    _theta: 0,\n    _mouseX: 0,\n    _mouseY: 0,\n    _rotateVelocity: new Vector2(),\n    _panVelocity: new Vector2(),\n    _distance: 500,\n    _zoomSpeed: 0,\n    _stillTimeout: 0,\n    _animators: []\n  };\n}, function () {\n  // Each OrbitControl has it's own handler\n  ['_mouseDownHandler', '_mouseWheelHandler', '_mouseMoveHandler', '_mouseUpHandler', '_pinchHandler', '_contextMenuHandler', '_update'].forEach(function (hdlName) {\n    this[hdlName] = this[hdlName].bind(this);\n  }, this);\n}, {\n  /**\n   * Initialize.\n   * Mouse event binding\n   */\n  init: function () {\n    var zr = this.zr;\n    if (zr) {\n      zr.on('mousedown', this._mouseDownHandler);\n      zr.on('globalout', this._mouseUpHandler);\n      zr.on('mousewheel', this._mouseWheelHandler);\n      zr.on('pinch', this._pinchHandler);\n      zr.animation.on('frame', this._update);\n      zr.dom.addEventListener('contextmenu', this._contextMenuHandler);\n    }\n  },\n  /**\n   * Dispose.\n   * Mouse event unbinding\n   */\n  dispose: function () {\n    var zr = this.zr;\n    if (zr) {\n      zr.off('mousedown', this._mouseDownHandler);\n      zr.off('mousemove', this._mouseMoveHandler);\n      zr.off('mouseup', this._mouseUpHandler);\n      zr.off('mousewheel', this._mouseWheelHandler);\n      zr.off('pinch', this._pinchHandler);\n      zr.off('globalout', this._mouseUpHandler);\n      zr.dom.removeEventListener('contextmenu', this._contextMenuHandler);\n      zr.animation.off('frame', this._update);\n    }\n    this.stopAllAnimation();\n  },\n  /**\n   * Get distance\n   * @return {number}\n   */\n  getDistance: function () {\n    return this._distance;\n  },\n  /**\n   * Set distance\n   * @param {number} distance\n   */\n  setDistance: function (distance) {\n    this._distance = distance;\n    this._needsUpdate = true;\n  },\n  /**\n   * Get size of orthographic viewing volume\n   * @return {number}\n   */\n  getOrthographicSize: function () {\n    return this._orthoSize;\n  },\n  /**\n   * Set size of orthographic viewing volume\n   * @param {number} size\n   */\n  setOrthographicSize: function (size) {\n    this._orthoSize = size;\n    this._needsUpdate = true;\n  },\n  /**\n   * Get alpha rotation\n   * Alpha angle for top-down rotation. Positive to rotate to top.\n   *\n   * Which means camera rotation around x axis.\n   */\n  getAlpha: function () {\n    return this._theta / Math.PI * 180;\n  },\n  /**\n   * Get beta rotation\n   * Beta angle for left-right rotation. Positive to rotate to right.\n   *\n   * Which means camera rotation around y axis.\n   */\n  getBeta: function () {\n    return -this._phi / Math.PI * 180;\n  },\n  /**\n   * Get control center\n   * @return {Array.<number>}\n   */\n  getCenter: function () {\n    return this._center.toArray();\n  },\n  /**\n   * Set alpha rotation angle\n   * @param {number} alpha\n   */\n  setAlpha: function (alpha) {\n    alpha = Math.max(Math.min(this.maxAlpha, alpha), this.minAlpha);\n    this._theta = alpha / 180 * Math.PI;\n    this._needsUpdate = true;\n  },\n  /**\n   * Set beta rotation angle\n   * @param {number} beta\n   */\n  setBeta: function (beta) {\n    beta = Math.max(Math.min(this.maxBeta, beta), this.minBeta);\n    this._phi = -beta / 180 * Math.PI;\n    this._needsUpdate = true;\n  },\n  /**\n   * Set control center\n   * @param {Array.<number>} center\n   */\n  setCenter: function (centerArr) {\n    this._center.setArray(centerArr);\n  },\n  /**\n   * @param {module:echarts-gl/core/ViewGL} viewGL\n   */\n  setViewGL: function (viewGL) {\n    this.viewGL = viewGL;\n  },\n  /**\n   * @return {clay.Camera}\n   */\n  getCamera: function () {\n    return this.viewGL.camera;\n  },\n  setFromViewControlModel: function (viewControlModel, extraOpts) {\n    extraOpts = extraOpts || {};\n    var baseDistance = extraOpts.baseDistance || 0;\n    var baseOrthoSize = extraOpts.baseOrthoSize || 1;\n    var projection = viewControlModel.get('projection');\n    if (projection !== 'perspective' && projection !== 'orthographic' && projection !== 'isometric') {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Unkown projection type %s, use perspective projection instead.', projection);\n      }\n      projection = 'perspective';\n    }\n    this._projection = projection;\n    this.viewGL.setProjection(projection);\n    var targetDistance = viewControlModel.get('distance') + baseDistance;\n    var targetOrthographicSize = viewControlModel.get('orthographicSize') + baseOrthoSize;\n    [['damping', 0.8], ['autoRotate', false], ['autoRotateAfterStill', 3], ['autoRotateDirection', 'cw'], ['autoRotateSpeed', 10], ['minDistance', 30], ['maxDistance', 400], ['minOrthographicSize', 30], ['maxOrthographicSize', 300], ['minAlpha', -90], ['maxAlpha', 90], ['minBeta', -Infinity], ['maxBeta', Infinity], ['rotateSensitivity', 1], ['zoomSensitivity', 1], ['panSensitivity', 1], ['panMouseButton', 'left'], ['rotateMouseButton', 'middle']].forEach(function (prop) {\n      this[prop[0]] = firstNotNull(viewControlModel.get(prop[0]), prop[1]);\n    }, this);\n    this.minDistance += baseDistance;\n    this.maxDistance += baseDistance;\n    this.minOrthographicSize += baseOrthoSize, this.maxOrthographicSize += baseOrthoSize;\n    var ecModel = viewControlModel.ecModel;\n    var animationOpts = {};\n    ['animation', 'animationDurationUpdate', 'animationEasingUpdate'].forEach(function (key) {\n      animationOpts[key] = firstNotNull(viewControlModel.get(key), ecModel && ecModel.get(key));\n    });\n    var alpha = firstNotNull(extraOpts.alpha, viewControlModel.get('alpha')) || 0;\n    var beta = firstNotNull(extraOpts.beta, viewControlModel.get('beta')) || 0;\n    var center = firstNotNull(extraOpts.center, viewControlModel.get('center')) || [0, 0, 0];\n    if (animationOpts.animation && animationOpts.animationDurationUpdate > 0 && this._notFirst) {\n      this.animateTo({\n        alpha: alpha,\n        beta: beta,\n        center: center,\n        distance: targetDistance,\n        orthographicSize: targetOrthographicSize,\n        easing: animationOpts.animationEasingUpdate,\n        duration: animationOpts.animationDurationUpdate\n      });\n    } else {\n      this.setDistance(targetDistance);\n      this.setAlpha(alpha);\n      this.setBeta(beta);\n      this.setCenter(center);\n      this.setOrthographicSize(targetOrthographicSize);\n    }\n    this._notFirst = true;\n    this._validateProperties();\n  },\n  _validateProperties: function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (MOUSE_BUTTON_KEY_MAP[this.panMouseButton] == null) {\n        console.error('Unkown panMouseButton %s. It should be left|middle|right', this.panMouseButton);\n      }\n      if (MOUSE_BUTTON_KEY_MAP[this.rotateMouseButton] == null) {\n        console.error('Unkown rotateMouseButton %s. It should be left|middle|right', this.rotateMouseButton);\n      }\n      if (this.autoRotateDirection !== 'cw' && this.autoRotateDirection !== 'ccw') {\n        console.error('Unkown autoRotateDirection %s. It should be cw|ccw', this.autoRotateDirection);\n      }\n    }\n  },\n  /**\n   * @param {Object} opts\n   * @param {number} opts.distance\n   * @param {number} opts.alpha\n   * @param {number} opts.beta\n   * @param {number} opts.orthographicSize\n   * @param {number} [opts.duration=1000]\n   * @param {number} [opts.easing='linear']\n   */\n  animateTo: function (opts) {\n    var zr = this.zr;\n    var self = this;\n    var obj = {};\n    var target = {};\n    if (opts.distance != null) {\n      obj.distance = this.getDistance();\n      target.distance = opts.distance;\n    }\n    if (opts.orthographicSize != null) {\n      obj.orthographicSize = this.getOrthographicSize();\n      target.orthographicSize = opts.orthographicSize;\n    }\n    if (opts.alpha != null) {\n      obj.alpha = this.getAlpha();\n      target.alpha = opts.alpha;\n    }\n    if (opts.beta != null) {\n      obj.beta = this.getBeta();\n      target.beta = opts.beta;\n    }\n    if (opts.center != null) {\n      obj.center = this.getCenter();\n      target.center = opts.center;\n    }\n    return this._addAnimator(zr.animation.animate(obj).when(opts.duration || 1000, target).during(function () {\n      if (obj.alpha != null) {\n        self.setAlpha(obj.alpha);\n      }\n      if (obj.beta != null) {\n        self.setBeta(obj.beta);\n      }\n      if (obj.distance != null) {\n        self.setDistance(obj.distance);\n      }\n      if (obj.center != null) {\n        self.setCenter(obj.center);\n      }\n      if (obj.orthographicSize != null) {\n        self.setOrthographicSize(obj.orthographicSize);\n      }\n      self._needsUpdate = true;\n    })).start(opts.easing || 'linear');\n  },\n  /**\n   * Stop all animation\n   */\n  stopAllAnimation: function () {\n    for (var i = 0; i < this._animators.length; i++) {\n      this._animators[i].stop();\n    }\n    this._animators.length = 0;\n  },\n  update: function () {\n    this._needsUpdate = true;\n    this._update(20);\n  },\n  _isAnimating: function () {\n    return this._animators.length > 0;\n  },\n  /**\n   * Call update each frame\n   * @param  {number} deltaTime Frame time\n   */\n  _update: function (deltaTime) {\n    if (this._rotating) {\n      var radian = (this.autoRotateDirection === 'cw' ? 1 : -1) * this.autoRotateSpeed / 180 * Math.PI;\n      this._phi -= radian * deltaTime / 1000;\n      this._needsUpdate = true;\n    } else if (this._rotateVelocity.len() > 0) {\n      this._needsUpdate = true;\n    }\n    if (Math.abs(this._zoomSpeed) > 0.1 || this._panVelocity.len() > 0) {\n      this._needsUpdate = true;\n    }\n    if (!this._needsUpdate) {\n      return;\n    }\n    deltaTime = Math.min(deltaTime, 50);\n    this._updateDistanceOrSize(deltaTime);\n    this._updatePan(deltaTime);\n    this._updateRotate(deltaTime);\n    this._updateTransform();\n    this.getCamera().update();\n    this.zr && this.zr.refresh();\n    this.trigger('update');\n    this._needsUpdate = false;\n  },\n  _updateRotate: function (deltaTime) {\n    var velocity = this._rotateVelocity;\n    this._phi = velocity.y * deltaTime / 20 + this._phi;\n    this._theta = velocity.x * deltaTime / 20 + this._theta;\n    this.setAlpha(this.getAlpha());\n    this.setBeta(this.getBeta());\n    this._vectorDamping(velocity, Math.pow(this.damping, deltaTime / 16));\n  },\n  _updateDistanceOrSize: function (deltaTime) {\n    if (this._projection === 'perspective') {\n      this._setDistance(this._distance + this._zoomSpeed * deltaTime / 20);\n    } else {\n      this._setOrthoSize(this._orthoSize + this._zoomSpeed * deltaTime / 20);\n    }\n    this._zoomSpeed *= Math.pow(this.damping, deltaTime / 16);\n  },\n  _setDistance: function (distance) {\n    this._distance = Math.max(Math.min(distance, this.maxDistance), this.minDistance);\n  },\n  _setOrthoSize: function (size) {\n    this._orthoSize = Math.max(Math.min(size, this.maxOrthographicSize), this.minOrthographicSize);\n    var camera = this.getCamera();\n    var cameraHeight = this._orthoSize;\n    var cameraWidth = cameraHeight / this.viewGL.viewport.height * this.viewGL.viewport.width;\n    camera.left = -cameraWidth / 2;\n    camera.right = cameraWidth / 2;\n    camera.top = cameraHeight / 2;\n    camera.bottom = -cameraHeight / 2;\n  },\n  _updatePan: function (deltaTime) {\n    var velocity = this._panVelocity;\n    var len = this._distance;\n    var target = this.getCamera();\n    var yAxis = target.worldTransform.y;\n    var xAxis = target.worldTransform.x; // PENDING\n\n    this._center.scaleAndAdd(xAxis, -velocity.x * len / 200).scaleAndAdd(yAxis, -velocity.y * len / 200);\n    this._vectorDamping(velocity, 0);\n  },\n  _updateTransform: function () {\n    var camera = this.getCamera();\n    var dir = new Vector3();\n    var theta = this._theta + Math.PI / 2;\n    var phi = this._phi + Math.PI / 2;\n    var r = Math.sin(theta);\n    dir.x = r * Math.cos(phi);\n    dir.y = -Math.cos(theta);\n    dir.z = r * Math.sin(phi);\n    camera.position.copy(this._center).scaleAndAdd(dir, this._distance);\n    camera.rotation.identity() // First around y, then around x\n    .rotateY(-this._phi).rotateX(-this._theta);\n  },\n  _startCountingStill: function () {\n    clearTimeout(this._stillTimeout);\n    var time = this.autoRotateAfterStill;\n    var self = this;\n    if (!isNaN(time) && time > 0) {\n      this._stillTimeout = setTimeout(function () {\n        self._rotating = true;\n      }, time * 1000);\n    }\n  },\n  _vectorDamping: function (v, damping) {\n    var speed = v.len();\n    speed = speed * damping;\n    if (speed < 1e-4) {\n      speed = 0;\n    }\n    v.normalize().scale(speed);\n  },\n  _decomposeTransform: function () {\n    if (!this.getCamera()) {\n      return;\n    }\n    this.getCamera().updateWorldTransform();\n    var forward = this.getCamera().worldTransform.z;\n    var alpha = Math.asin(forward.y);\n    var beta = Math.atan2(forward.x, forward.z);\n    this._theta = alpha;\n    this._phi = -beta;\n    this.setBeta(this.getBeta());\n    this.setAlpha(this.getAlpha()); // Is perspective\n\n    if (this.getCamera().aspect) {\n      this._setDistance(this.getCamera().position.dist(this._center));\n    } else {\n      this._setOrthoSize(this.getCamera().top - this.getCamera().bottom);\n    }\n  },\n  _mouseDownHandler: function (e) {\n    if (e.target) {\n      // If mouseon some zrender element.\n      return;\n    }\n    if (this._isAnimating()) {\n      return;\n    }\n    var x = e.offsetX;\n    var y = e.offsetY;\n    if (this.viewGL && !this.viewGL.containPoint(x, y)) {\n      return;\n    }\n    this.zr.on('mousemove', this._mouseMoveHandler);\n    this.zr.on('mouseup', this._mouseUpHandler);\n    if (e.event.targetTouches) {\n      if (e.event.targetTouches.length === 1) {\n        this._mode = 'rotate';\n      }\n    } else {\n      if (e.event.button === MOUSE_BUTTON_KEY_MAP[this.rotateMouseButton]) {\n        this._mode = 'rotate';\n      } else if (e.event.button === MOUSE_BUTTON_KEY_MAP[this.panMouseButton]) {\n        this._mode = 'pan';\n      } else {\n        this._mode = '';\n      }\n    } // Reset rotate velocity\n\n    this._rotateVelocity.set(0, 0);\n    this._rotating = false;\n    if (this.autoRotate) {\n      this._startCountingStill();\n    }\n    this._mouseX = e.offsetX;\n    this._mouseY = e.offsetY;\n  },\n  _mouseMoveHandler: function (e) {\n    if (e.target && e.target.__isGLToZRProxy) {\n      return;\n    }\n    if (this._isAnimating()) {\n      return;\n    }\n    var panSensitivity = convertToArray(this.panSensitivity);\n    var rotateSensitivity = convertToArray(this.rotateSensitivity);\n    if (this._mode === 'rotate') {\n      this._rotateVelocity.y = (e.offsetX - this._mouseX) / this.zr.getHeight() * 2 * rotateSensitivity[0];\n      this._rotateVelocity.x = (e.offsetY - this._mouseY) / this.zr.getWidth() * 2 * rotateSensitivity[1];\n    } else if (this._mode === 'pan') {\n      this._panVelocity.x = (e.offsetX - this._mouseX) / this.zr.getWidth() * panSensitivity[0] * 400;\n      this._panVelocity.y = (-e.offsetY + this._mouseY) / this.zr.getHeight() * panSensitivity[1] * 400;\n    }\n    this._mouseX = e.offsetX;\n    this._mouseY = e.offsetY;\n    e.event.preventDefault();\n  },\n  _mouseWheelHandler: function (e) {\n    if (this._isAnimating()) {\n      return;\n    }\n    var delta = e.event.wheelDelta // Webkit\n    || -e.event.detail; // Firefox\n\n    this._zoomHandler(e, delta);\n  },\n  _pinchHandler: function (e) {\n    if (this._isAnimating()) {\n      return;\n    }\n    this._zoomHandler(e, e.pinchScale > 1 ? 1 : -1); // Not rotate when pinch\n\n    this._mode = '';\n  },\n  _zoomHandler: function (e, delta) {\n    if (delta === 0) {\n      return;\n    }\n    var x = e.offsetX;\n    var y = e.offsetY;\n    if (this.viewGL && !this.viewGL.containPoint(x, y)) {\n      return;\n    }\n    var speed;\n    if (this._projection === 'perspective') {\n      speed = Math.max(Math.max(Math.min(this._distance - this.minDistance, this.maxDistance - this._distance)) / 20, 0.5);\n    } else {\n      speed = Math.max(Math.max(Math.min(this._orthoSize - this.minOrthographicSize, this.maxOrthographicSize - this._orthoSize)) / 20, 0.5);\n    }\n    this._zoomSpeed = (delta > 0 ? -1 : 1) * speed * this.zoomSensitivity;\n    this._rotating = false;\n    if (this.autoRotate && this._mode === 'rotate') {\n      this._startCountingStill();\n    }\n    e.event.preventDefault();\n  },\n  _mouseUpHandler: function () {\n    this.zr.off('mousemove', this._mouseMoveHandler);\n    this.zr.off('mouseup', this._mouseUpHandler);\n  },\n  _isRightMouseButtonUsed: function () {\n    return this.rotateMouseButton === 'right' || this.panMouseButton === 'right';\n  },\n  _contextMenuHandler: function (e) {\n    if (this._isRightMouseButtonUsed()) {\n      e.preventDefault();\n    }\n  },\n  _addAnimator: function (animator) {\n    var animators = this._animators;\n    animators.push(animator);\n    animator.done(function () {\n      var idx = animators.indexOf(animator);\n      if (idx >= 0) {\n        animators.splice(idx, 1);\n      }\n    });\n    return animator;\n  }\n});\n/**\n * If auto rotate the target\n * @type {boolean}\n * @default false\n */\n\nObject.defineProperty(OrbitControl.prototype, 'autoRotate', {\n  get: function (val) {\n    return this._autoRotate;\n  },\n  set: function (val) {\n    this._autoRotate = val;\n    this._rotating = val;\n  }\n});\nexport default OrbitControl;","map":{"version":3,"names":["Base","Vector2","Vector3","Quaternion","retrieve","firstNotNull","MOUSE_BUTTON_KEY_MAP","left","middle","right","convertToArray","val","Array","OrbitControl","extend","zr","viewGL","_center","minDistance","maxDistance","maxOrthographicSize","minOrthographicSize","minAlpha","maxAlpha","minBeta","Infinity","maxBeta","autoRotateAfterStill","autoRotateDirection","autoRotateSpeed","damping","rotateSensitivity","zoomSensitivity","panSensitivity","panMouseButton","rotateMouseButton","_mode","_camera","_needsUpdate","_rotating","_phi","_theta","_mouseX","_mouseY","_rotateVelocity","_panVelocity","_distance","_zoomSpeed","_stillTimeout","_animators","forEach","hdlName","bind","init","on","_mouseDownHandler","_mouseUpHandler","_mouseWheelHandler","_pinchHandler","animation","_update","dom","addEventListener","_contextMenuHandler","dispose","off","_mouseMoveHandler","removeEventListener","stopAllAnimation","getDistance","setDistance","distance","getOrthographicSize","_orthoSize","setOrthographicSize","size","getAlpha","Math","PI","getBeta","getCenter","toArray","setAlpha","alpha","max","min","setBeta","beta","setCenter","centerArr","setArray","setViewGL","getCamera","camera","setFromViewControlModel","viewControlModel","extraOpts","baseDistance","baseOrthoSize","projection","get","process","env","NODE_ENV","console","error","_projection","setProjection","targetDistance","targetOrthographicSize","prop","ecModel","animationOpts","key","center","animationDurationUpdate","_notFirst","animateTo","orthographicSize","easing","animationEasingUpdate","duration","_validateProperties","opts","self","obj","target","_addAnimator","animate","when","during","start","i","length","stop","update","_isAnimating","deltaTime","radian","len","abs","_updateDistanceOrSize","_updatePan","_updateRotate","_updateTransform","refresh","trigger","velocity","y","x","_vectorDamping","pow","_setDistance","_setOrthoSize","cameraHeight","cameraWidth","viewport","height","width","top","bottom","yAxis","worldTransform","xAxis","scaleAndAdd","dir","theta","phi","r","sin","cos","z","position","copy","rotation","identity","rotateY","rotateX","_startCountingStill","clearTimeout","time","isNaN","setTimeout","v","speed","normalize","scale","_decomposeTransform","updateWorldTransform","forward","asin","atan2","aspect","dist","e","offsetX","offsetY","containPoint","event","targetTouches","button","set","autoRotate","__isGLToZRProxy","getHeight","getWidth","preventDefault","delta","wheelDelta","detail","_zoomHandler","pinchScale","_isRightMouseButtonUsed","animator","animators","push","done","idx","indexOf","splice","Object","defineProperty","prototype","_autoRotate"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/util/OrbitControl.js"],"sourcesContent":["/**\n * Provide orbit control for 3D objects\n *\n * @module echarts-gl/util/OrbitControl\n * @author Yi Shen(http://github.com/pissang)\n */\n// TODO Remove magic numbers on sensitivity\nimport Base from 'claygl/src/core/Base';\nimport Vector2 from 'claygl/src/math/Vector2';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Quaternion from 'claygl/src/math/Quaternion';\nimport retrieve from './retrieve';\nvar firstNotNull = retrieve.firstNotNull;\nvar MOUSE_BUTTON_KEY_MAP = {\n  left: 0,\n  middle: 1,\n  right: 2\n};\n\nfunction convertToArray(val) {\n  if (!(val instanceof Array)) {\n    val = [val, val];\n  }\n\n  return val;\n}\n/**\n * @alias module:echarts-x/util/OrbitControl\n */\n\n\nvar OrbitControl = Base.extend(function () {\n  return {\n    /**\n     * @type {module:zrender~ZRender}\n     */\n    zr: null,\n\n    /**\n     * @type {module:echarts-gl/core/ViewGL}\n     */\n    viewGL: null,\n\n    /**\n     * @type {clay.math.Vector3}\n     */\n    _center: new Vector3(),\n\n    /**\n     * Minimum distance to the center\n     * Only available when camera is perspective.\n     * @type {number}\n     * @default 0.5\n     */\n    minDistance: 0.5,\n\n    /**\n     * Maximum distance to the center\n     * Only available when camera is perspective.\n     * @type {number}\n     * @default 2\n     */\n    maxDistance: 1.5,\n\n    /**\n     * Only available when camera is orthographic\n     */\n    maxOrthographicSize: 300,\n\n    /**\n     * Only available when camera is orthographic\n     */\n    minOrthographicSize: 30,\n\n    /**\n     * Minimum alpha rotation\n     */\n    minAlpha: -90,\n\n    /**\n     * Maximum alpha rotation\n     */\n    maxAlpha: 90,\n\n    /**\n     * Minimum beta rotation\n     */\n    minBeta: -Infinity,\n\n    /**\n     * Maximum beta rotation\n     */\n    maxBeta: Infinity,\n\n    /**\n     * Start auto rotating after still for the given time\n     */\n    autoRotateAfterStill: 0,\n\n    /**\n     * Direction of autoRotate. cw or ccw when looking top down.\n     */\n    autoRotateDirection: 'cw',\n\n    /**\n     * Degree per second\n     */\n    autoRotateSpeed: 60,\n\n    /**\n     * @param {number}\n     */\n    damping: 0.8,\n\n    /**\n     * @param {number}\n     */\n    rotateSensitivity: 1,\n\n    /**\n     * @param {number}\n     */\n    zoomSensitivity: 1,\n\n    /**\n     * @param {number}\n     */\n    panSensitivity: 1,\n    panMouseButton: 'middle',\n    rotateMouseButton: 'left',\n\n    /**\n     * Pan or rotate\n     * @private\n     * @type {String}\n     */\n    _mode: 'rotate',\n\n    /**\n     * @private\n     * @type {clay.Camera}\n     */\n    _camera: null,\n    _needsUpdate: false,\n    _rotating: false,\n    // Rotation around yAxis in radian\n    _phi: 0,\n    // Rotation around xAxis in radian\n    _theta: 0,\n    _mouseX: 0,\n    _mouseY: 0,\n    _rotateVelocity: new Vector2(),\n    _panVelocity: new Vector2(),\n    _distance: 500,\n    _zoomSpeed: 0,\n    _stillTimeout: 0,\n    _animators: []\n  };\n}, function () {\n  // Each OrbitControl has it's own handler\n  ['_mouseDownHandler', '_mouseWheelHandler', '_mouseMoveHandler', '_mouseUpHandler', '_pinchHandler', '_contextMenuHandler', '_update'].forEach(function (hdlName) {\n    this[hdlName] = this[hdlName].bind(this);\n  }, this);\n}, {\n  /**\n   * Initialize.\n   * Mouse event binding\n   */\n  init: function () {\n    var zr = this.zr;\n\n    if (zr) {\n      zr.on('mousedown', this._mouseDownHandler);\n      zr.on('globalout', this._mouseUpHandler);\n      zr.on('mousewheel', this._mouseWheelHandler);\n      zr.on('pinch', this._pinchHandler);\n      zr.animation.on('frame', this._update);\n      zr.dom.addEventListener('contextmenu', this._contextMenuHandler);\n    }\n  },\n\n  /**\n   * Dispose.\n   * Mouse event unbinding\n   */\n  dispose: function () {\n    var zr = this.zr;\n\n    if (zr) {\n      zr.off('mousedown', this._mouseDownHandler);\n      zr.off('mousemove', this._mouseMoveHandler);\n      zr.off('mouseup', this._mouseUpHandler);\n      zr.off('mousewheel', this._mouseWheelHandler);\n      zr.off('pinch', this._pinchHandler);\n      zr.off('globalout', this._mouseUpHandler);\n      zr.dom.removeEventListener('contextmenu', this._contextMenuHandler);\n      zr.animation.off('frame', this._update);\n    }\n\n    this.stopAllAnimation();\n  },\n\n  /**\n   * Get distance\n   * @return {number}\n   */\n  getDistance: function () {\n    return this._distance;\n  },\n\n  /**\n   * Set distance\n   * @param {number} distance\n   */\n  setDistance: function (distance) {\n    this._distance = distance;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Get size of orthographic viewing volume\n   * @return {number}\n   */\n  getOrthographicSize: function () {\n    return this._orthoSize;\n  },\n\n  /**\n   * Set size of orthographic viewing volume\n   * @param {number} size\n   */\n  setOrthographicSize: function (size) {\n    this._orthoSize = size;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Get alpha rotation\n   * Alpha angle for top-down rotation. Positive to rotate to top.\n   *\n   * Which means camera rotation around x axis.\n   */\n  getAlpha: function () {\n    return this._theta / Math.PI * 180;\n  },\n\n  /**\n   * Get beta rotation\n   * Beta angle for left-right rotation. Positive to rotate to right.\n   *\n   * Which means camera rotation around y axis.\n   */\n  getBeta: function () {\n    return -this._phi / Math.PI * 180;\n  },\n\n  /**\n   * Get control center\n   * @return {Array.<number>}\n   */\n  getCenter: function () {\n    return this._center.toArray();\n  },\n\n  /**\n   * Set alpha rotation angle\n   * @param {number} alpha\n   */\n  setAlpha: function (alpha) {\n    alpha = Math.max(Math.min(this.maxAlpha, alpha), this.minAlpha);\n    this._theta = alpha / 180 * Math.PI;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Set beta rotation angle\n   * @param {number} beta\n   */\n  setBeta: function (beta) {\n    beta = Math.max(Math.min(this.maxBeta, beta), this.minBeta);\n    this._phi = -beta / 180 * Math.PI;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Set control center\n   * @param {Array.<number>} center\n   */\n  setCenter: function (centerArr) {\n    this._center.setArray(centerArr);\n  },\n\n  /**\n   * @param {module:echarts-gl/core/ViewGL} viewGL\n   */\n  setViewGL: function (viewGL) {\n    this.viewGL = viewGL;\n  },\n\n  /**\n   * @return {clay.Camera}\n   */\n  getCamera: function () {\n    return this.viewGL.camera;\n  },\n  setFromViewControlModel: function (viewControlModel, extraOpts) {\n    extraOpts = extraOpts || {};\n    var baseDistance = extraOpts.baseDistance || 0;\n    var baseOrthoSize = extraOpts.baseOrthoSize || 1;\n    var projection = viewControlModel.get('projection');\n\n    if (projection !== 'perspective' && projection !== 'orthographic' && projection !== 'isometric') {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Unkown projection type %s, use perspective projection instead.', projection);\n      }\n\n      projection = 'perspective';\n    }\n\n    this._projection = projection;\n    this.viewGL.setProjection(projection);\n    var targetDistance = viewControlModel.get('distance') + baseDistance;\n    var targetOrthographicSize = viewControlModel.get('orthographicSize') + baseOrthoSize;\n    [['damping', 0.8], ['autoRotate', false], ['autoRotateAfterStill', 3], ['autoRotateDirection', 'cw'], ['autoRotateSpeed', 10], ['minDistance', 30], ['maxDistance', 400], ['minOrthographicSize', 30], ['maxOrthographicSize', 300], ['minAlpha', -90], ['maxAlpha', 90], ['minBeta', -Infinity], ['maxBeta', Infinity], ['rotateSensitivity', 1], ['zoomSensitivity', 1], ['panSensitivity', 1], ['panMouseButton', 'left'], ['rotateMouseButton', 'middle']].forEach(function (prop) {\n      this[prop[0]] = firstNotNull(viewControlModel.get(prop[0]), prop[1]);\n    }, this);\n    this.minDistance += baseDistance;\n    this.maxDistance += baseDistance;\n    this.minOrthographicSize += baseOrthoSize, this.maxOrthographicSize += baseOrthoSize;\n    var ecModel = viewControlModel.ecModel;\n    var animationOpts = {};\n    ['animation', 'animationDurationUpdate', 'animationEasingUpdate'].forEach(function (key) {\n      animationOpts[key] = firstNotNull(viewControlModel.get(key), ecModel && ecModel.get(key));\n    });\n    var alpha = firstNotNull(extraOpts.alpha, viewControlModel.get('alpha')) || 0;\n    var beta = firstNotNull(extraOpts.beta, viewControlModel.get('beta')) || 0;\n    var center = firstNotNull(extraOpts.center, viewControlModel.get('center')) || [0, 0, 0];\n\n    if (animationOpts.animation && animationOpts.animationDurationUpdate > 0 && this._notFirst) {\n      this.animateTo({\n        alpha: alpha,\n        beta: beta,\n        center: center,\n        distance: targetDistance,\n        orthographicSize: targetOrthographicSize,\n        easing: animationOpts.animationEasingUpdate,\n        duration: animationOpts.animationDurationUpdate\n      });\n    } else {\n      this.setDistance(targetDistance);\n      this.setAlpha(alpha);\n      this.setBeta(beta);\n      this.setCenter(center);\n      this.setOrthographicSize(targetOrthographicSize);\n    }\n\n    this._notFirst = true;\n\n    this._validateProperties();\n  },\n  _validateProperties: function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (MOUSE_BUTTON_KEY_MAP[this.panMouseButton] == null) {\n        console.error('Unkown panMouseButton %s. It should be left|middle|right', this.panMouseButton);\n      }\n\n      if (MOUSE_BUTTON_KEY_MAP[this.rotateMouseButton] == null) {\n        console.error('Unkown rotateMouseButton %s. It should be left|middle|right', this.rotateMouseButton);\n      }\n\n      if (this.autoRotateDirection !== 'cw' && this.autoRotateDirection !== 'ccw') {\n        console.error('Unkown autoRotateDirection %s. It should be cw|ccw', this.autoRotateDirection);\n      }\n    }\n  },\n\n  /**\n   * @param {Object} opts\n   * @param {number} opts.distance\n   * @param {number} opts.alpha\n   * @param {number} opts.beta\n   * @param {number} opts.orthographicSize\n   * @param {number} [opts.duration=1000]\n   * @param {number} [opts.easing='linear']\n   */\n  animateTo: function (opts) {\n    var zr = this.zr;\n    var self = this;\n    var obj = {};\n    var target = {};\n\n    if (opts.distance != null) {\n      obj.distance = this.getDistance();\n      target.distance = opts.distance;\n    }\n\n    if (opts.orthographicSize != null) {\n      obj.orthographicSize = this.getOrthographicSize();\n      target.orthographicSize = opts.orthographicSize;\n    }\n\n    if (opts.alpha != null) {\n      obj.alpha = this.getAlpha();\n      target.alpha = opts.alpha;\n    }\n\n    if (opts.beta != null) {\n      obj.beta = this.getBeta();\n      target.beta = opts.beta;\n    }\n\n    if (opts.center != null) {\n      obj.center = this.getCenter();\n      target.center = opts.center;\n    }\n\n    return this._addAnimator(zr.animation.animate(obj).when(opts.duration || 1000, target).during(function () {\n      if (obj.alpha != null) {\n        self.setAlpha(obj.alpha);\n      }\n\n      if (obj.beta != null) {\n        self.setBeta(obj.beta);\n      }\n\n      if (obj.distance != null) {\n        self.setDistance(obj.distance);\n      }\n\n      if (obj.center != null) {\n        self.setCenter(obj.center);\n      }\n\n      if (obj.orthographicSize != null) {\n        self.setOrthographicSize(obj.orthographicSize);\n      }\n\n      self._needsUpdate = true;\n    })).start(opts.easing || 'linear');\n  },\n\n  /**\n   * Stop all animation\n   */\n  stopAllAnimation: function () {\n    for (var i = 0; i < this._animators.length; i++) {\n      this._animators[i].stop();\n    }\n\n    this._animators.length = 0;\n  },\n  update: function () {\n    this._needsUpdate = true;\n\n    this._update(20);\n  },\n  _isAnimating: function () {\n    return this._animators.length > 0;\n  },\n\n  /**\n   * Call update each frame\n   * @param  {number} deltaTime Frame time\n   */\n  _update: function (deltaTime) {\n    if (this._rotating) {\n      var radian = (this.autoRotateDirection === 'cw' ? 1 : -1) * this.autoRotateSpeed / 180 * Math.PI;\n      this._phi -= radian * deltaTime / 1000;\n      this._needsUpdate = true;\n    } else if (this._rotateVelocity.len() > 0) {\n      this._needsUpdate = true;\n    }\n\n    if (Math.abs(this._zoomSpeed) > 0.1 || this._panVelocity.len() > 0) {\n      this._needsUpdate = true;\n    }\n\n    if (!this._needsUpdate) {\n      return;\n    }\n\n    deltaTime = Math.min(deltaTime, 50);\n\n    this._updateDistanceOrSize(deltaTime);\n\n    this._updatePan(deltaTime);\n\n    this._updateRotate(deltaTime);\n\n    this._updateTransform();\n\n    this.getCamera().update();\n    this.zr && this.zr.refresh();\n    this.trigger('update');\n    this._needsUpdate = false;\n  },\n  _updateRotate: function (deltaTime) {\n    var velocity = this._rotateVelocity;\n    this._phi = velocity.y * deltaTime / 20 + this._phi;\n    this._theta = velocity.x * deltaTime / 20 + this._theta;\n    this.setAlpha(this.getAlpha());\n    this.setBeta(this.getBeta());\n\n    this._vectorDamping(velocity, Math.pow(this.damping, deltaTime / 16));\n  },\n  _updateDistanceOrSize: function (deltaTime) {\n    if (this._projection === 'perspective') {\n      this._setDistance(this._distance + this._zoomSpeed * deltaTime / 20);\n    } else {\n      this._setOrthoSize(this._orthoSize + this._zoomSpeed * deltaTime / 20);\n    }\n\n    this._zoomSpeed *= Math.pow(this.damping, deltaTime / 16);\n  },\n  _setDistance: function (distance) {\n    this._distance = Math.max(Math.min(distance, this.maxDistance), this.minDistance);\n  },\n  _setOrthoSize: function (size) {\n    this._orthoSize = Math.max(Math.min(size, this.maxOrthographicSize), this.minOrthographicSize);\n    var camera = this.getCamera();\n    var cameraHeight = this._orthoSize;\n    var cameraWidth = cameraHeight / this.viewGL.viewport.height * this.viewGL.viewport.width;\n    camera.left = -cameraWidth / 2;\n    camera.right = cameraWidth / 2;\n    camera.top = cameraHeight / 2;\n    camera.bottom = -cameraHeight / 2;\n  },\n  _updatePan: function (deltaTime) {\n    var velocity = this._panVelocity;\n    var len = this._distance;\n    var target = this.getCamera();\n    var yAxis = target.worldTransform.y;\n    var xAxis = target.worldTransform.x; // PENDING\n\n    this._center.scaleAndAdd(xAxis, -velocity.x * len / 200).scaleAndAdd(yAxis, -velocity.y * len / 200);\n\n    this._vectorDamping(velocity, 0);\n  },\n  _updateTransform: function () {\n    var camera = this.getCamera();\n    var dir = new Vector3();\n    var theta = this._theta + Math.PI / 2;\n    var phi = this._phi + Math.PI / 2;\n    var r = Math.sin(theta);\n    dir.x = r * Math.cos(phi);\n    dir.y = -Math.cos(theta);\n    dir.z = r * Math.sin(phi);\n    camera.position.copy(this._center).scaleAndAdd(dir, this._distance);\n    camera.rotation.identity() // First around y, then around x\n    .rotateY(-this._phi).rotateX(-this._theta);\n  },\n  _startCountingStill: function () {\n    clearTimeout(this._stillTimeout);\n    var time = this.autoRotateAfterStill;\n    var self = this;\n\n    if (!isNaN(time) && time > 0) {\n      this._stillTimeout = setTimeout(function () {\n        self._rotating = true;\n      }, time * 1000);\n    }\n  },\n  _vectorDamping: function (v, damping) {\n    var speed = v.len();\n    speed = speed * damping;\n\n    if (speed < 1e-4) {\n      speed = 0;\n    }\n\n    v.normalize().scale(speed);\n  },\n  _decomposeTransform: function () {\n    if (!this.getCamera()) {\n      return;\n    }\n\n    this.getCamera().updateWorldTransform();\n    var forward = this.getCamera().worldTransform.z;\n    var alpha = Math.asin(forward.y);\n    var beta = Math.atan2(forward.x, forward.z);\n    this._theta = alpha;\n    this._phi = -beta;\n    this.setBeta(this.getBeta());\n    this.setAlpha(this.getAlpha()); // Is perspective\n\n    if (this.getCamera().aspect) {\n      this._setDistance(this.getCamera().position.dist(this._center));\n    } else {\n      this._setOrthoSize(this.getCamera().top - this.getCamera().bottom);\n    }\n  },\n  _mouseDownHandler: function (e) {\n    if (e.target) {\n      // If mouseon some zrender element.\n      return;\n    }\n\n    if (this._isAnimating()) {\n      return;\n    }\n\n    var x = e.offsetX;\n    var y = e.offsetY;\n\n    if (this.viewGL && !this.viewGL.containPoint(x, y)) {\n      return;\n    }\n\n    this.zr.on('mousemove', this._mouseMoveHandler);\n    this.zr.on('mouseup', this._mouseUpHandler);\n\n    if (e.event.targetTouches) {\n      if (e.event.targetTouches.length === 1) {\n        this._mode = 'rotate';\n      }\n    } else {\n      if (e.event.button === MOUSE_BUTTON_KEY_MAP[this.rotateMouseButton]) {\n        this._mode = 'rotate';\n      } else if (e.event.button === MOUSE_BUTTON_KEY_MAP[this.panMouseButton]) {\n        this._mode = 'pan';\n      } else {\n        this._mode = '';\n      }\n    } // Reset rotate velocity\n\n\n    this._rotateVelocity.set(0, 0);\n\n    this._rotating = false;\n\n    if (this.autoRotate) {\n      this._startCountingStill();\n    }\n\n    this._mouseX = e.offsetX;\n    this._mouseY = e.offsetY;\n  },\n  _mouseMoveHandler: function (e) {\n    if (e.target && e.target.__isGLToZRProxy) {\n      return;\n    }\n\n    if (this._isAnimating()) {\n      return;\n    }\n\n    var panSensitivity = convertToArray(this.panSensitivity);\n    var rotateSensitivity = convertToArray(this.rotateSensitivity);\n\n    if (this._mode === 'rotate') {\n      this._rotateVelocity.y = (e.offsetX - this._mouseX) / this.zr.getHeight() * 2 * rotateSensitivity[0];\n      this._rotateVelocity.x = (e.offsetY - this._mouseY) / this.zr.getWidth() * 2 * rotateSensitivity[1];\n    } else if (this._mode === 'pan') {\n      this._panVelocity.x = (e.offsetX - this._mouseX) / this.zr.getWidth() * panSensitivity[0] * 400;\n      this._panVelocity.y = (-e.offsetY + this._mouseY) / this.zr.getHeight() * panSensitivity[1] * 400;\n    }\n\n    this._mouseX = e.offsetX;\n    this._mouseY = e.offsetY;\n    e.event.preventDefault();\n  },\n  _mouseWheelHandler: function (e) {\n    if (this._isAnimating()) {\n      return;\n    }\n\n    var delta = e.event.wheelDelta // Webkit\n    || -e.event.detail; // Firefox\n\n    this._zoomHandler(e, delta);\n  },\n  _pinchHandler: function (e) {\n    if (this._isAnimating()) {\n      return;\n    }\n\n    this._zoomHandler(e, e.pinchScale > 1 ? 1 : -1); // Not rotate when pinch\n\n\n    this._mode = '';\n  },\n  _zoomHandler: function (e, delta) {\n    if (delta === 0) {\n      return;\n    }\n\n    var x = e.offsetX;\n    var y = e.offsetY;\n\n    if (this.viewGL && !this.viewGL.containPoint(x, y)) {\n      return;\n    }\n\n    var speed;\n\n    if (this._projection === 'perspective') {\n      speed = Math.max(Math.max(Math.min(this._distance - this.minDistance, this.maxDistance - this._distance)) / 20, 0.5);\n    } else {\n      speed = Math.max(Math.max(Math.min(this._orthoSize - this.minOrthographicSize, this.maxOrthographicSize - this._orthoSize)) / 20, 0.5);\n    }\n\n    this._zoomSpeed = (delta > 0 ? -1 : 1) * speed * this.zoomSensitivity;\n    this._rotating = false;\n\n    if (this.autoRotate && this._mode === 'rotate') {\n      this._startCountingStill();\n    }\n\n    e.event.preventDefault();\n  },\n  _mouseUpHandler: function () {\n    this.zr.off('mousemove', this._mouseMoveHandler);\n    this.zr.off('mouseup', this._mouseUpHandler);\n  },\n  _isRightMouseButtonUsed: function () {\n    return this.rotateMouseButton === 'right' || this.panMouseButton === 'right';\n  },\n  _contextMenuHandler: function (e) {\n    if (this._isRightMouseButtonUsed()) {\n      e.preventDefault();\n    }\n  },\n  _addAnimator: function (animator) {\n    var animators = this._animators;\n    animators.push(animator);\n    animator.done(function () {\n      var idx = animators.indexOf(animator);\n\n      if (idx >= 0) {\n        animators.splice(idx, 1);\n      }\n    });\n    return animator;\n  }\n});\n/**\n * If auto rotate the target\n * @type {boolean}\n * @default false\n */\n\nObject.defineProperty(OrbitControl.prototype, 'autoRotate', {\n  get: function (val) {\n    return this._autoRotate;\n  },\n  set: function (val) {\n    this._autoRotate = val;\n    this._rotating = val;\n  }\n});\nexport default OrbitControl;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}