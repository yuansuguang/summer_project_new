{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport user from \"@/storage/user\";\nexport default {\n  name: \"FinishTest\",\n  props: {\n    quesStorage: []\n  },\n  data() {\n    return {\n      rootUrl: this.GLOBAL.baseUrl,\n      hoverColor: {\n        \"--hcolor\": \"red\"\n      },\n      questions: [],\n      answers: [],\n      totalScore: null,\n      actualScore: null\n      // questions: [\n      //   {\n      //     id: 1,\n      //     type: 'name',\n      //     title: '姓名',\n      //     must: true, // 是否必填\n      //     description: '', // 问题描述\n      //     options: [\n      //       {\n      //         title: '', // 选项标题\n      //         id: 0 // 选项id\n      //       },\n      //     ],\n      //     row: 1, // 填空区域行数\n      //     refer: '', // 参考答案\n      //     point: 0,  // 分值\n      //   },\n      //   {\n      //     id: 2,\n      //     type: 'stuId',\n      //     title: '学号',\n      //     must: true, // 是否必填\n      //     description: '', // 问题描述\n      //     options: [\n      //       {\n      //         title: '', // 选项标题\n      //         id: 0 // 选项id\n      //       },\n      //     ],\n      //     row: 1, // 填空区域行数\n      //     refer: '', // 参考答案\n      //     point: 0,  // 分值\n      //   },\n      //   {\n      //     id: 3,\n      //     type: 'class',\n      //     title: '班级',\n      //     must: true, // 是否必填\n      //     description: '', // 问题描述\n      //     options: [\n      //       {\n      //         title: '', // 选项标题\n      //         id: 0 // 选项id\n      //       },\n      //     ],\n      //     row: 1, // 填空区域行数\n      //     refer: '', // 参考答案\n      //     point: 0,  // 分值\n      //   },\n      //   {\n      //     id: 4,\n      //     type: 'school',\n      //     title: '学校',\n      //     must: true, // 是否必填\n      //     description: '', // 问题描述\n      //     options: [\n      //       {\n      //         title: '', // 选项标题\n      //         id: 0 // 选项id\n      //       },\n      //     ],\n      //     row: 1, // 填空区域行数\n      //     refer: '', // 参考答案\n      //     point: 0,  // 分值\n      //   },\n      //   {\n      //     id: 5,\n      //     type: 'radio',\n      //     title: '这是一个什么问卷？',\n      //     must: true, // 是否必填\n      //     description: '请谨慎做答', // 问题描述\n      //     options: [\n      //       {\n      //         title: '考试问卷', // 选项标题\n      //         id: 1 // 选项id\n      //       },\n      //       {\n      //         title: '调查问卷', // 选项标题\n      //         id: 2 // 选项id\n      //       },\n      //     ],\n      //     row: 0, // 填空区域行数\n      //     refer: '考试问卷', // 参考答案\n      //     point: 10,  // 分值\n      //   },\n      //   {\n      //     id: 6,\n      //     type: 'checkbox',\n      //     title: '软工助教都有谁？',\n      //     must: false, // 是否必填\n      //     description: '', // 问题描述\n      //     options: [\n      //       {\n      //         title: 'ZYH', // 选项标题\n      //         id: 1 // 选项id\n      //       },\n      //       {\n      //         title: 'LKW', // 选项标题\n      //         id: 2 // 选项id\n      //       },\n      //       {\n      //         title: 'MHY', // 选项标题\n      //         id: 3 // 选项id\n      //       },\n      //       {\n      //         title: 'HZH', // 选项标题\n      //         id: 4 // 选项id\n      //       },\n      //     ],\n      //     row: 0, // 填空区域行数\n      //     refer: '[\"LKW\", \"MHY\"]', // 参考答案\n      //     point: 20,  // 分值\n      //   },\n      //   {\n      //     id: 7,\n      //     type: 'text',\n      //     title: '小学期累不累？',\n      //     must: false, // 是否必填\n      //     description: '请谨慎考虑做答', // 问题描述\n      //     options: [\n      //       {\n      //         title: '', // 选项标题\n      //         id: 0 // 选项id\n      //       },\n      //     ],\n      //     row: 5, // 填空区域行数\n      //     refer: '', // 参考答案\n      //     point: 30,  // 分值\n      //   },\n      //   {\n      //     id: 8,\n      //     type: 'judge',\n      //     title: '从来没有加过班',\n      //     must: true, // 是否必填\n      //     description: '请谨慎考虑做答', // 问题描述\n      //     options: [\n      //       {\n      //         title: '对', // 选项标题\n      //         id: 1 // 选项id\n      //       },\n      //       {\n      //         title: '错', // 选项标题\n      //         id: 2 // 选项id\n      //       },\n      //     ],\n      //     row: 0, // 填空区域行数\n      //     refer: '对', // 参考答案\n      //     point: 50,  // 分值\n      //   },\n      // ],\n      // answers: [\n      //   {\n      //     question_id: '1',\n      //     type: 'name',\n      //     ans: 'Zuo_zuo',\n      //     ansList: [],\n      //     correct: null,\n      //   },\n      //   {\n      //     question_id: '2',\n      //     type: 'stuId',\n      //     ans: '19373260',\n      //     ansList: [],\n      //     correct: null,\n      //   },\n      //   {\n      //     question_id: '3',\n      //     type: 'class',\n      //     ans: '192111',\n      //     ansList: [],\n      //     correct: null,\n      //   },\n      //   {\n      //     question_id: '4',\n      //     type: 'school',\n      //     ans: '北航',\n      //     ansList: [],\n      //     correct: null,\n      //   },\n      //   {\n      //     question_id: '5',\n      //     type: 'radio',\n      //     ans: '调查问卷',\n      //     ansList: [],\n      //     correct: null,\n      //   },\n      //   {\n      //     question_id: '6',\n      //     type: 'checkbox',\n      //     ans: null,\n      //     ansList: [\"LKW\", \"MHY\"],\n      //     correct: null,\n      //   },\n      //   {\n      //     question_id: '7',\n      //     type: 'text',\n      //     ans: '累死啦',\n      //     ansList: [],\n      //     correct: null,\n      //   },\n      //   {\n      //     question_id: '8',\n      //     type: 'judge',\n      //     ans: '对',\n      //     ansList: [],\n      //     correct: null,\n      //   },\n      // ],\n    };\n  },\n  methods: {\n    isInfo: function (item) {\n      return item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school';\n    },\n    isRight: function (item) {\n      return this.answers[item.id - 1].correct;\n    },\n    judge() {\n      // 判卷\n      let questions = this.questions;\n      let answers = this.answers;\n      let total = 0;\n      let score = 0;\n      for (let i = 0; i < questions.length; i++) {\n        // 略过信息和主观题\n        if (this.isInfo(questions[i])) {\n          continue;\n        }\n        // 统计\n        if (questions[i].type === 'radio' || questions[i].type === 'judge') {\n          if (questions[i].refer === answers[i].ans) {\n            answers[i].correct = true;\n            score += questions[i].point;\n          }\n          total += questions[i].point;\n        }\n        if (questions[i].type === 'checkbox') {\n          // 预处理\n          let reference = questions[i].refer;\n          // let reference = questions[i].refer.substring(1, questions[i].refer.length-1).replace(/\"/g, \"\").split(', ');\n          if (reference.sort().toString() === answers[i].ansList.sort().toString()) {\n            answers[i].correct = true;\n            score += questions[i].point;\n          }\n          total += questions[i].point;\n        } else if (questions[i].type === 'text') {\n          if (questions[i].refer === answers[i].ans) {\n            answers[i].correct = true;\n            score += questions[i].point;\n          }\n          total += questions[i].point;\n        }\n      }\n      this.actualScore = score;\n      this.totalScore = total;\n    }\n  },\n  created() {\n    var data = [];\n    this.questions = this.quesStorage;\n    const userInfo = user.getters.getUser(user.state());\n    const formData = new FormData();\n    formData.append(\"code\", this.$route.query.code);\n    formData.append(\"username\", userInfo.user.username);\n    this.$axios({\n      method: 'post',\n      url: '/sm/get/submit_answers/code',\n      data: formData\n    }).then(res => {\n      if (res.data.status_code === 1) {\n        data = res.data.answers;\n        this.questions = res.data.questions;\n        for (var m = 0; m < this.questions.length; m++) {\n          if (this.questions[m].type === 'checkbox') {\n            this.questions[m].refer = this.questions[m].refer.split('-<^-^>-');\n          }\n        }\n        this.answers = [];\n        //建立答案框架\n        for (var i = 0; i < this.questions.length; i++) {\n          this.answers.push({\n            question_id: this.questions[i].question_id,\n            type: this.questions[i].type,\n            ans: null,\n            ansList: [],\n            answer: ''\n          });\n        }\n        for (var j = 0; j < this.answers.length; j++) {\n          for (var k = 0; k < data.length; k++) {\n            if (this.answers[j].question_id === data[k].question_id) {\n              switch (this.answers[j].type) {\n                case 'checkbox':\n                  this.answers[j].ansList = data[k].answer.split('-<^-^>-');\n                  break;\n                case 'mark':\n                  this.answers[j].ans = parseInt(data[k].answer);\n                  this.answers[j].answer = data[k].answer;\n                  break;\n                case 'radio':\n                  this.answers[j].ans = data[k].answer;\n                  this.answers[j].answer = data[k].answer;\n                  break;\n                default:\n                  this.answers[j].ans = data[k].answer;\n                  this.answers[j].answer = data[k].answer;\n                  break;\n              }\n            }\n          }\n        }\n        this.judge();\n      } else {\n        this.$message.error(\"请求失败！\");\n      }\n    });\n  }\n};","map":{"version":3,"names":["user","name","props","quesStorage","data","rootUrl","GLOBAL","baseUrl","hoverColor","questions","answers","totalScore","actualScore","methods","isInfo","item","type","isRight","id","correct","judge","total","score","i","length","refer","ans","point","reference","sort","toString","ansList","created","userInfo","getters","getUser","state","formData","FormData","append","$route","query","code","username","$axios","method","url","then","res","status_code","m","split","push","question_id","answer","j","k","parseInt","$message","error"],"sources":["E:\\mytest\\src\\views\\qn-fillpane\\FinishTest.vue"],"sourcesContent":["<template>\r\n    <div class=\"qn-result\">\r\n      <div class=\"paper\">\r\n        <div style=\"padding-top: 50px; padding-bottom: 6px\" >\r\n          <span><h1>恭喜你完成测试！您的分数是</h1></span>\r\n          <span style=\"color: red;\"><h1>{{ actualScore }}/{{ totalScore }}</h1>\r\n          </span>\r\n        </div>\r\n  \r\n        <div class=\"note\">\r\n          您的总分 / 满分\r\n        </div>\r\n  \r\n        <el-divider></el-divider>\r\n  \r\n        <div class=\"title\">\r\n          <h2>评阅结果与参考答案</h2>\r\n        </div>\r\n  \r\n        <div class=\"main\">\r\n          <div v-bind:class=\"{ 'ques-block-info' : isInfo(item) ,'ques-block-right': isRight(item), 'ques-block-wrong': !isRight(item) }\" v-for=\"item in questions\" :key=\"item.id\">\r\n  \r\n            <div class=\"q-title\">\r\n              {{ item.id }}. {{ item.title }}\r\n              <span class=\"must\" v-if=\"item.must\">(必填)</span>\r\n              <span class=\"point\" v-if=\"!isInfo(item)\">\r\n                &ensp;[分值 : {{ item.point }}]\r\n              </span>\r\n            </div>\r\n  \r\n            <div\r\n                class=\"q-description\"\r\n                v-if=\"item.description!=='' && item.description!==null && item.description!==undefined\"\r\n            >\r\n              {{ item.description }}\r\n            </div>\r\n  \r\n            <!--     姓名/学号/班级/学校-->\r\n            <div class=\"q-opt\" v-if=\"isInfo(item)\">\r\n              <el-input\r\n                  placeholder=\"请输入内容\"\r\n                  v-model=\"answers[item.id-1].ans\"\r\n                  :disabled=\"true\">\r\n              </el-input>\r\n            </div>\r\n  \r\n            <!--              判断/单选-->\r\n            <div v-if=\"item.type==='radio' || item.type === 'judge'\">\r\n              <div class=\"q-opt\" v-for=\"opt in item.options\" :key=\"opt.id\">\r\n                <el-radio v-model=\"answers[item.id-1].ans\" :label=\"opt.title\" :disabled=\"true\">\r\n                  {{ opt.title }}\r\n                </el-radio>\r\n              </div>\r\n            </div>\r\n  \r\n            <!--                  多选-->\r\n            <el-checkbox-group class=\"q-opt\" v-if=\"item.type==='checkbox'\" v-model=\"answers[item.id-1].ansList\">\r\n              <el-checkbox v-for=\"opt in item.options\" :key=\"opt.id\" :label=\"opt.title\" :disabled=\"true\">\r\n                {{ opt.title }}\r\n              </el-checkbox>\r\n            </el-checkbox-group>\r\n  \r\n            <!--                  填空-->\r\n            <div class=\"q-opt\" v-if=\"item.type==='text'\">\r\n              <el-input\r\n                  type=\"textarea\"\r\n                  :autosize=\"{ minRows: 2, maxRows: item.row}\"\r\n                  placeholder=\"请输入内容\"\r\n                  v-model=\"answers[item.id-1].ans\"\r\n                  :disabled=\"true\">\r\n              </el-input>\r\n            </div>\r\n  \r\n            <div v-if=\"!isInfo(item)\" class=\"tail-info\">\r\n              <div class=\"tail-point\">\r\n                <div v-if=\"answers[item.id-1].correct\">您的得分：{{ item.point }}</div>\r\n                <div v-else>您的得分：0</div>\r\n              </div>\r\n  \r\n              <div class=\"tail-refer\" v-if=\"item.refer!==null && item.refer!==undefined\">\r\n                <div v-if=\"item.type==='radio' || item.type==='judge'\">您的答案：{{ answers[item.id-1].ans }}</div>\r\n                <div v-if=\"item.type==='checkbox'\">您的答案：{{ answers[item.id-1].ansList }}</div>\r\n                <div v-if=\"item.type==='text'\">您的答案：{{ answers[item.id-1].ans }}</div>\r\n                <div v-if=\"item.refer!==''\">参考答案：{{ item.refer }}</div>\r\n                <div v-if=\"item.refer===''\">参考答案：无</div>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"tail\">\r\n          <a :href=\"rootUrl\">问卷星球</a>&ensp;提供技术支持\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import user from \"@/storage/user\";\r\n  \r\n  export default {\r\n    name: \"FinishTest\",\r\n    props: {\r\n      quesStorage: []\r\n    },\r\n    data(){\r\n      return{\r\n        rootUrl: this.GLOBAL.baseUrl,\r\n  \r\n        hoverColor:{\r\n          \"--hcolor\":\"red\"\r\n        },\r\n        questions: [],\r\n        answers: [],\r\n        totalScore: null,\r\n        actualScore: null,\r\n        // questions: [\r\n        //   {\r\n        //     id: 1,\r\n        //     type: 'name',\r\n        //     title: '姓名',\r\n        //     must: true, // 是否必填\r\n        //     description: '', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '', // 选项标题\r\n        //         id: 0 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 1, // 填空区域行数\r\n        //     refer: '', // 参考答案\r\n        //     point: 0,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 2,\r\n        //     type: 'stuId',\r\n        //     title: '学号',\r\n        //     must: true, // 是否必填\r\n        //     description: '', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '', // 选项标题\r\n        //         id: 0 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 1, // 填空区域行数\r\n        //     refer: '', // 参考答案\r\n        //     point: 0,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 3,\r\n        //     type: 'class',\r\n        //     title: '班级',\r\n        //     must: true, // 是否必填\r\n        //     description: '', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '', // 选项标题\r\n        //         id: 0 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 1, // 填空区域行数\r\n        //     refer: '', // 参考答案\r\n        //     point: 0,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 4,\r\n        //     type: 'school',\r\n        //     title: '学校',\r\n        //     must: true, // 是否必填\r\n        //     description: '', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '', // 选项标题\r\n        //         id: 0 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 1, // 填空区域行数\r\n        //     refer: '', // 参考答案\r\n        //     point: 0,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 5,\r\n        //     type: 'radio',\r\n        //     title: '这是一个什么问卷？',\r\n        //     must: true, // 是否必填\r\n        //     description: '请谨慎做答', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '考试问卷', // 选项标题\r\n        //         id: 1 // 选项id\r\n        //       },\r\n        //       {\r\n        //         title: '调查问卷', // 选项标题\r\n        //         id: 2 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 0, // 填空区域行数\r\n        //     refer: '考试问卷', // 参考答案\r\n        //     point: 10,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 6,\r\n        //     type: 'checkbox',\r\n        //     title: '软工助教都有谁？',\r\n        //     must: false, // 是否必填\r\n        //     description: '', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: 'ZYH', // 选项标题\r\n        //         id: 1 // 选项id\r\n        //       },\r\n        //       {\r\n        //         title: 'LKW', // 选项标题\r\n        //         id: 2 // 选项id\r\n        //       },\r\n        //       {\r\n        //         title: 'MHY', // 选项标题\r\n        //         id: 3 // 选项id\r\n        //       },\r\n        //       {\r\n        //         title: 'HZH', // 选项标题\r\n        //         id: 4 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 0, // 填空区域行数\r\n        //     refer: '[\"LKW\", \"MHY\"]', // 参考答案\r\n        //     point: 20,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 7,\r\n        //     type: 'text',\r\n        //     title: '小学期累不累？',\r\n        //     must: false, // 是否必填\r\n        //     description: '请谨慎考虑做答', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '', // 选项标题\r\n        //         id: 0 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 5, // 填空区域行数\r\n        //     refer: '', // 参考答案\r\n        //     point: 30,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 8,\r\n        //     type: 'judge',\r\n        //     title: '从来没有加过班',\r\n        //     must: true, // 是否必填\r\n        //     description: '请谨慎考虑做答', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '对', // 选项标题\r\n        //         id: 1 // 选项id\r\n        //       },\r\n        //       {\r\n        //         title: '错', // 选项标题\r\n        //         id: 2 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 0, // 填空区域行数\r\n        //     refer: '对', // 参考答案\r\n        //     point: 50,  // 分值\r\n        //   },\r\n        // ],\r\n        // answers: [\r\n        //   {\r\n        //     question_id: '1',\r\n        //     type: 'name',\r\n        //     ans: 'Zuo_zuo',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '2',\r\n        //     type: 'stuId',\r\n        //     ans: '19373260',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '3',\r\n        //     type: 'class',\r\n        //     ans: '192111',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '4',\r\n        //     type: 'school',\r\n        //     ans: '北航',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '5',\r\n        //     type: 'radio',\r\n        //     ans: '调查问卷',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '6',\r\n        //     type: 'checkbox',\r\n        //     ans: null,\r\n        //     ansList: [\"LKW\", \"MHY\"],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '7',\r\n        //     type: 'text',\r\n        //     ans: '累死啦',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '8',\r\n        //     type: 'judge',\r\n        //     ans: '对',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        // ],\r\n      }\r\n    },\r\n    methods: {\r\n      isInfo: function (item) {\r\n        return item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school'\r\n      },\r\n      isRight: function (item) {\r\n        return this.answers[item.id-1].correct;\r\n      },\r\n      judge() {\r\n        // 判卷\r\n        let questions = this.questions;\r\n        let answers = this.answers;\r\n        let total = 0;\r\n        let score = 0;\r\n        for (let i=0; i<questions.length; i++) {\r\n          // 略过信息和主观题\r\n          if (this.isInfo(questions[i])) { continue;}\r\n          // 统计\r\n          if (questions[i].type === 'radio' || questions[i].type === 'judge') {\r\n            if (questions[i].refer === answers[i].ans) {\r\n              answers[i].correct = true;\r\n              score += questions[i].point;\r\n            }\r\n            total += questions[i].point;\r\n          }\r\n          if (questions[i].type === 'checkbox') {\r\n            // 预处理\r\n            let reference = questions[i].refer;\r\n            // let reference = questions[i].refer.substring(1, questions[i].refer.length-1).replace(/\"/g, \"\").split(', ');\r\n            if (reference.sort().toString() === answers[i].ansList.sort().toString()) {\r\n              answers[i].correct = true;\r\n              score += questions[i].point;\r\n            }\r\n            total += questions[i].point;\r\n          } else if (questions[i].type === 'text') {\r\n            if (questions[i].refer === answers[i].ans) {\r\n              answers[i].correct = true;\r\n              score += questions[i].point;\r\n            }\r\n            total += questions[i].point;\r\n          }\r\n        }\r\n        this.actualScore = score;\r\n        this.totalScore = total;\r\n      },\r\n    },\r\n    created() {\r\n      var data = [];\r\n      this.questions = this.quesStorage;\r\n      const userInfo = user.getters.getUser(user.state());\r\n      const formData = new FormData();\r\n      formData.append(\"code\", this.$route.query.code);\r\n      formData.append(\"username\", userInfo.user.username);\r\n      this.$axios({\r\n        method: 'post',\r\n        url: '/sm/get/submit_answers/code',\r\n        data: formData,\r\n      })\r\n      .then(res => {\r\n        if (res.data.status_code === 1) {\r\n          data = res.data.answers;\r\n          this.questions = res.data.questions;\r\n  \r\n          for (var m=0; m<this.questions.length; m++) {\r\n            if (this.questions[m].type === 'checkbox') {\r\n              this.questions[m].refer = this.questions[m].refer.split('-<^-^>-');\r\n            }\r\n          }\r\n  \r\n          this.answers = [];\r\n          //建立答案框架\r\n          for (var i=0; i<this.questions.length; i++) {\r\n            this.answers.push({\r\n              question_id: this.questions[i].question_id,\r\n              type: this.questions[i].type,\r\n              ans: null,\r\n              ansList: [],\r\n              answer: ''\r\n            });\r\n          }\r\n          for (var j=0; j<this.answers.length; j++) {\r\n            for (var k=0; k<data.length; k++) {\r\n              if (this.answers[j].question_id === data[k].question_id) {\r\n                switch (this.answers[j].type) {\r\n                  case 'checkbox':\r\n                    this.answers[j].ansList = data[k].answer.split('-<^-^>-');\r\n                    break;\r\n                  case 'mark':\r\n                    this.answers[j].ans = parseInt(data[k].answer);\r\n                    this.answers[j].answer = data[k].answer;\r\n                    break;\r\n                  case 'radio':\r\n                    this.answers[j].ans = data[k].answer;\r\n                    this.answers[j].answer = data[k].answer;\r\n                    break;\r\n                  default:\r\n                    this.answers[j].ans = data[k].answer;\r\n                    this.answers[j].answer = data[k].answer;\r\n                    break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n  \r\n          this.judge();\r\n        } else {\r\n          this.$message.error(\"请求失败！\");\r\n        }\r\n      });\r\n    },\r\n  \r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .qn-result {\r\n    background-image: url(\"../../assets/images/preview_background.png\");\r\n    background-repeat: repeat-y;\r\n    min-height: 800px;\r\n    overflow: hidden;\r\n    background-position:center;\r\n    background-size: 100% auto;\r\n    background-attachment: fixed;\r\n  }\r\n  \r\n  .qn-result .paper {\r\n    margin: 120px auto 0;\r\n    width: 900px;\r\n    background-color: #FFFFFF;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, .12), 0 0 6px rgba(0, 0, 0, .04)\r\n  }\r\n  \r\n  .qn-result .note {\r\n    color: #b9b9b9;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .qn-result .block-refer {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #a3a3a3;\r\n  }\r\n  \r\n  .qn-result .block-yourAnswer {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #a3a3a3;\r\n  }\r\n  \r\n  .qn-result .block-point {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #e59824;\r\n  }\r\n  \r\n  .qn-result .title {\r\n    margin-top: 40px;\r\n    margin-bottom: 40px;\r\n    color: #1687fd;\r\n  }\r\n  \r\n  .qn-result .ques-block-info {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    text-align: center;\r\n    padding:20px\r\n  }\r\n  \r\n  .qn-result .ques-block-info:hover {\r\n    background: #f6f6f6 !important;\r\n    transition: .3s;\r\n  }\r\n  \r\n  .qn-result .ques-block-right {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    text-align: center;\r\n    padding:20px\r\n  }\r\n  \r\n  .qn-result .ques-block-right:hover {\r\n    background: #eef6fd;\r\n    transition: .3s;\r\n  }\r\n  \r\n  .qn-result .ques-block-wrong {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    text-align: center;\r\n    padding:20px\r\n  }\r\n  \r\n  .qn-result .ques-block-wrong:hover {\r\n    background: #fff2f2;\r\n    transition: .3s;\r\n  }\r\n  \r\n  .qn-result .q-title {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 0 10px 10px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .qn-result .q-description {\r\n    text-align: left;\r\n    font-size: 14px;\r\n    padding-left: 10px;\r\n    padding-top: 5px;\r\n    padding-bottom: 10px;\r\n    color: #969696;\r\n  }\r\n  \r\n  .qn-result .must {\r\n    font-weight: normal;\r\n    color: crimson;\r\n  }\r\n  \r\n  .qn-result .point {\r\n    font-weight: normal;\r\n    color: #EC9D2D;\r\n  }\r\n  \r\n  .qn-result .q-opt {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 10px 10px 10px;\r\n  }\r\n  \r\n  .qn-result .el-checkbox {\r\n    padding: 10px 0;\r\n    display: block;\r\n  }\r\n  \r\n  .qn-result .q-opt .el-textarea__inner {\r\n    max-height: 100px;\r\n  }\r\n  \r\n  .qn-result .tail {\r\n    padding-top: 25px;\r\n    font-size: 15px;\r\n    color: #b9b9b9;\r\n    border-top: solid 1px #e3e3e3;\r\n    height: 50px;\r\n    margin: 0 30px 130px;\r\n  }\r\n  \r\n  .qn-result .tail-point {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: crimson;\r\n  }\r\n  \r\n  .qn-result .tail-refer {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #0404c9;\r\n  }\r\n  \r\n  .tail-info {\r\n    padding: 0 10px;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}