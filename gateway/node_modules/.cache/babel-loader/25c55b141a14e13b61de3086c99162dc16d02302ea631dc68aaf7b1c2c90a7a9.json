{"ast":null,"code":"import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nfunction EdgePass(opt) {\n  opt = opt || {};\n  this._edgePass = new Pass({\n    fragment: Shader.source('ecgl.edge')\n  });\n  this._edgePass.setUniform('normalTexture', opt.normalTexture);\n  this._edgePass.setUniform('depthTexture', opt.depthTexture);\n  this._targetTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._frameBuffer = new FrameBuffer();\n  this._frameBuffer.attach(this._targetTexture);\n}\nEdgePass.prototype.update = function (renderer, camera, sourceTexture, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var texture = this._targetTexture;\n  texture.width = width;\n  texture.height = height;\n  var frameBuffer = this._frameBuffer;\n  frameBuffer.bind(renderer);\n  this._edgePass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n  this._edgePass.setUniform('textureSize', [width, height]);\n  this._edgePass.setUniform('texture', sourceTexture);\n  this._edgePass.render(renderer);\n  frameBuffer.unbind(renderer);\n};\nEdgePass.prototype.getTargetTexture = function () {\n  return this._targetTexture;\n};\nEdgePass.prototype.setParameter = function (name, val) {\n  this._edgePass.setUniform(name, val);\n};\nEdgePass.prototype.dispose = function (renderer) {\n  this._targetTexture.dispose(renderer);\n  this._frameBuffer.dispose(renderer);\n};\nexport default EdgePass;","map":{"version":3,"names":["Matrix4","Vector3","Texture2D","Texture","Pass","Shader","FrameBuffer","EdgePass","opt","_edgePass","fragment","source","setUniform","normalTexture","depthTexture","_targetTexture","type","HALF_FLOAT","_frameBuffer","attach","prototype","update","renderer","camera","sourceTexture","frame","width","getWidth","height","getHeight","texture","frameBuffer","bind","invProjectionMatrix","array","render","unbind","getTargetTexture","setParameter","name","val","dispose"],"sources":["E:/mytest/node_modules/echarts-gl/lib/effect/EdgePass.js"],"sourcesContent":["import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\n\nfunction EdgePass(opt) {\n  opt = opt || {};\n  this._edgePass = new Pass({\n    fragment: Shader.source('ecgl.edge')\n  });\n\n  this._edgePass.setUniform('normalTexture', opt.normalTexture);\n\n  this._edgePass.setUniform('depthTexture', opt.depthTexture);\n\n  this._targetTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._frameBuffer = new FrameBuffer();\n\n  this._frameBuffer.attach(this._targetTexture);\n}\n\nEdgePass.prototype.update = function (renderer, camera, sourceTexture, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var texture = this._targetTexture;\n  texture.width = width;\n  texture.height = height;\n  var frameBuffer = this._frameBuffer;\n  frameBuffer.bind(renderer);\n\n  this._edgePass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n\n  this._edgePass.setUniform('textureSize', [width, height]);\n\n  this._edgePass.setUniform('texture', sourceTexture);\n\n  this._edgePass.render(renderer);\n\n  frameBuffer.unbind(renderer);\n};\n\nEdgePass.prototype.getTargetTexture = function () {\n  return this._targetTexture;\n};\n\nEdgePass.prototype.setParameter = function (name, val) {\n  this._edgePass.setUniform(name, val);\n};\n\nEdgePass.prototype.dispose = function (renderer) {\n  this._targetTexture.dispose(renderer);\n\n  this._frameBuffer.dispose(renderer);\n};\n\nexport default EdgePass;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,WAAW,MAAM,wBAAwB;AAEhD,SAASC,QAAQA,CAACC,GAAG,EAAE;EACrBA,GAAG,GAAGA,GAAG,IAAI,CAAC,CAAC;EACf,IAAI,CAACC,SAAS,GAAG,IAAIL,IAAI,CAAC;IACxBM,QAAQ,EAAEL,MAAM,CAACM,MAAM,CAAC,WAAW;EACrC,CAAC,CAAC;EAEF,IAAI,CAACF,SAAS,CAACG,UAAU,CAAC,eAAe,EAAEJ,GAAG,CAACK,aAAa,CAAC;EAE7D,IAAI,CAACJ,SAAS,CAACG,UAAU,CAAC,cAAc,EAAEJ,GAAG,CAACM,YAAY,CAAC;EAE3D,IAAI,CAACC,cAAc,GAAG,IAAIb,SAAS,CAAC;IAClCc,IAAI,EAAEb,OAAO,CAACc;EAChB,CAAC,CAAC;EACF,IAAI,CAACC,YAAY,GAAG,IAAIZ,WAAW,CAAC,CAAC;EAErC,IAAI,CAACY,YAAY,CAACC,MAAM,CAAC,IAAI,CAACJ,cAAc,CAAC;AAC/C;AAEAR,QAAQ,CAACa,SAAS,CAACC,MAAM,GAAG,UAAUC,QAAQ,EAAEC,MAAM,EAAEC,aAAa,EAAEC,KAAK,EAAE;EAC5E,IAAIC,KAAK,GAAGJ,QAAQ,CAACK,QAAQ,CAAC,CAAC;EAC/B,IAAIC,MAAM,GAAGN,QAAQ,CAACO,SAAS,CAAC,CAAC;EACjC,IAAIC,OAAO,GAAG,IAAI,CAACf,cAAc;EACjCe,OAAO,CAACJ,KAAK,GAAGA,KAAK;EACrBI,OAAO,CAACF,MAAM,GAAGA,MAAM;EACvB,IAAIG,WAAW,GAAG,IAAI,CAACb,YAAY;EACnCa,WAAW,CAACC,IAAI,CAACV,QAAQ,CAAC;EAE1B,IAAI,CAACb,SAAS,CAACG,UAAU,CAAC,eAAe,EAAEW,MAAM,CAACU,mBAAmB,CAACC,KAAK,CAAC;EAE5E,IAAI,CAACzB,SAAS,CAACG,UAAU,CAAC,aAAa,EAAE,CAACc,KAAK,EAAEE,MAAM,CAAC,CAAC;EAEzD,IAAI,CAACnB,SAAS,CAACG,UAAU,CAAC,SAAS,EAAEY,aAAa,CAAC;EAEnD,IAAI,CAACf,SAAS,CAAC0B,MAAM,CAACb,QAAQ,CAAC;EAE/BS,WAAW,CAACK,MAAM,CAACd,QAAQ,CAAC;AAC9B,CAAC;AAEDf,QAAQ,CAACa,SAAS,CAACiB,gBAAgB,GAAG,YAAY;EAChD,OAAO,IAAI,CAACtB,cAAc;AAC5B,CAAC;AAEDR,QAAQ,CAACa,SAAS,CAACkB,YAAY,GAAG,UAAUC,IAAI,EAAEC,GAAG,EAAE;EACrD,IAAI,CAAC/B,SAAS,CAACG,UAAU,CAAC2B,IAAI,EAAEC,GAAG,CAAC;AACtC,CAAC;AAEDjC,QAAQ,CAACa,SAAS,CAACqB,OAAO,GAAG,UAAUnB,QAAQ,EAAE;EAC/C,IAAI,CAACP,cAAc,CAAC0B,OAAO,CAACnB,QAAQ,CAAC;EAErC,IAAI,CAACJ,YAAY,CAACuB,OAAO,CAACnB,QAAQ,CAAC;AACrC,CAAC;AAED,eAAef,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}