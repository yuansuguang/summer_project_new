{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n// Spherical Harmonic Helpers\nimport Texture from '../Texture';\nimport FrameBuffer from '../FrameBuffer';\nimport Texture2D from '../Texture2D';\nimport Pass from '../compositor/Pass';\nimport vendor from '../core/vendor';\nimport Skybox from '../plugin/Skybox';\nimport Skydome from '../plugin/Skydome';\nimport EnvironmentMapPass from '../prePass/EnvironmentMap';\nimport Scene from '../Scene';\nimport vec3 from '../glmatrix/vec3';\nvar sh = {};\nimport projectEnvMapShaderCode from './shader/projectEnvMap.glsl.js';\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n// Project on gpu, but needs browser to support readPixels as Float32Array.\nfunction projectEnvironmentMapGPU(renderer, envMap) {\n  var shTexture = new Texture2D({\n    width: 9,\n    height: 1,\n    type: Texture.FLOAT\n  });\n  var pass = new Pass({\n    fragment: projectEnvMapShaderCode\n  });\n  pass.material.define('fragment', 'TEXTURE_SIZE', envMap.width);\n  pass.setUniform('environmentMap', envMap);\n  var framebuffer = new FrameBuffer();\n  framebuffer.attach(shTexture);\n  pass.render(renderer, framebuffer);\n  framebuffer.bind(renderer);\n  // TODO Only chrome and firefox support Float32Array\n  var pixels = new vendor.Float32Array(9 * 4);\n  renderer.gl.readPixels(0, 0, 9, 1, Texture.RGBA, Texture.FLOAT, pixels);\n  var coeff = new vendor.Float32Array(9 * 3);\n  for (var i = 0; i < 9; i++) {\n    coeff[i * 3] = pixels[i * 4];\n    coeff[i * 3 + 1] = pixels[i * 4 + 1];\n    coeff[i * 3 + 2] = pixels[i * 4 + 2];\n  }\n  framebuffer.unbind(renderer);\n  framebuffer.dispose(renderer);\n  pass.dispose(renderer);\n  return coeff;\n}\nfunction harmonics(normal, index) {\n  var x = normal[0];\n  var y = normal[1];\n  var z = normal[2];\n  if (index === 0) {\n    return 1.0;\n  } else if (index === 1) {\n    return x;\n  } else if (index === 2) {\n    return y;\n  } else if (index === 3) {\n    return z;\n  } else if (index === 4) {\n    return x * z;\n  } else if (index === 5) {\n    return y * z;\n  } else if (index === 6) {\n    return x * y;\n  } else if (index === 7) {\n    return 3.0 * z * z - 1.0;\n  } else {\n    return x * x - y * y;\n  }\n}\nvar normalTransform = {\n  px: [2, 1, 0, -1, -1, 1],\n  nx: [2, 1, 0, 1, -1, -1],\n  py: [0, 2, 1, 1, -1, -1],\n  ny: [0, 2, 1, 1, 1, 1],\n  pz: [0, 1, 2, -1, -1, -1],\n  nz: [0, 1, 2, 1, -1, 1]\n};\n\n// Project on cpu.\nfunction projectEnvironmentMapCPU(renderer, cubePixels, width, height) {\n  var coeff = new vendor.Float32Array(9 * 3);\n  var normal = vec3.create();\n  var texel = vec3.create();\n  var fetchNormal = vec3.create();\n  for (var m = 0; m < 9; m++) {\n    var result = vec3.create();\n    for (var k = 0; k < targets.length; k++) {\n      var pixels = cubePixels[targets[k]];\n      var sideResult = vec3.create();\n      var divider = 0;\n      var i = 0;\n      var transform = normalTransform[targets[k]];\n      for (var y = 0; y < height; y++) {\n        for (var x = 0; x < width; x++) {\n          normal[0] = x / (width - 1.0) * 2.0 - 1.0;\n          // TODO Flip y?\n          normal[1] = y / (height - 1.0) * 2.0 - 1.0;\n          normal[2] = -1.0;\n          vec3.normalize(normal, normal);\n          fetchNormal[0] = normal[transform[0]] * transform[3];\n          fetchNormal[1] = normal[transform[1]] * transform[4];\n          fetchNormal[2] = normal[transform[2]] * transform[5];\n          texel[0] = pixels[i++] / 255;\n          texel[1] = pixels[i++] / 255;\n          texel[2] = pixels[i++] / 255;\n          // RGBM Decode\n          var scale = pixels[i++] / 255 * 8.12;\n          texel[0] *= scale;\n          texel[1] *= scale;\n          texel[2] *= scale;\n          vec3.scaleAndAdd(sideResult, sideResult, texel, harmonics(fetchNormal, m) * -normal[2]);\n          // -normal.z equals cos(theta) of Lambertian\n          divider += -normal[2];\n        }\n      }\n      vec3.scaleAndAdd(result, result, sideResult, 1 / divider);\n    }\n    coeff[m * 3] = result[0] / 6.0;\n    coeff[m * 3 + 1] = result[1] / 6.0;\n    coeff[m * 3 + 2] = result[2] / 6.0;\n  }\n  return coeff;\n}\n\n/**\n * @param  {clay.Renderer} renderer\n * @param  {clay.Texture} envMap\n * @param  {Object} [textureOpts]\n * @param  {Object} [textureOpts.lod]\n * @param  {boolean} [textureOpts.decodeRGBM]\n */\nsh.projectEnvironmentMap = function (renderer, envMap, opts) {\n  // TODO sRGB\n\n  opts = opts || {};\n  opts.lod = opts.lod || 0;\n  var skybox;\n  var dummyScene = new Scene();\n  var size = 64;\n  if (envMap.textureType === 'texture2D') {\n    skybox = new Skydome({\n      scene: dummyScene,\n      environmentMap: envMap\n    });\n  } else {\n    size = envMap.image && envMap.image.px ? envMap.image.px.width : envMap.width;\n    skybox = new Skybox({\n      scene: dummyScene,\n      environmentMap: envMap\n    });\n  }\n  // Convert to rgbm\n  var width = Math.ceil(size / Math.pow(2, opts.lod));\n  var height = Math.ceil(size / Math.pow(2, opts.lod));\n  var rgbmTexture = new Texture2D({\n    width: width,\n    height: height\n  });\n  var framebuffer = new FrameBuffer();\n  skybox.material.define('fragment', 'RGBM_ENCODE');\n  if (opts.decodeRGBM) {\n    skybox.material.define('fragment', 'RGBM_DECODE');\n  }\n  skybox.material.set('lod', opts.lod);\n  var envMapPass = new EnvironmentMapPass({\n    texture: rgbmTexture\n  });\n  var cubePixels = {};\n  for (var i = 0; i < targets.length; i++) {\n    cubePixels[targets[i]] = new Uint8Array(width * height * 4);\n    var camera = envMapPass.getCamera(targets[i]);\n    camera.fov = 90;\n    framebuffer.attach(rgbmTexture);\n    framebuffer.bind(renderer);\n    renderer.render(dummyScene, camera);\n    renderer.gl.readPixels(0, 0, width, height, Texture.RGBA, Texture.UNSIGNED_BYTE, cubePixels[targets[i]]);\n    framebuffer.unbind(renderer);\n  }\n  skybox.dispose(renderer);\n  framebuffer.dispose(renderer);\n  rgbmTexture.dispose(renderer);\n  return projectEnvironmentMapCPU(renderer, cubePixels, width, height);\n};\nexport default sh;","map":{"version":3,"names":["Texture","FrameBuffer","Texture2D","Pass","vendor","Skybox","Skydome","EnvironmentMapPass","Scene","vec3","sh","projectEnvMapShaderCode","targets","projectEnvironmentMapGPU","renderer","envMap","shTexture","width","height","type","FLOAT","pass","fragment","material","define","setUniform","framebuffer","attach","render","bind","pixels","Float32Array","gl","readPixels","RGBA","coeff","i","unbind","dispose","harmonics","normal","index","x","y","z","normalTransform","px","nx","py","ny","pz","nz","projectEnvironmentMapCPU","cubePixels","create","texel","fetchNormal","m","result","k","length","sideResult","divider","transform","normalize","scale","scaleAndAdd","projectEnvironmentMap","opts","lod","skybox","dummyScene","size","textureType","scene","environmentMap","image","Math","ceil","pow","rgbmTexture","decodeRGBM","set","envMapPass","texture","Uint8Array","camera","getCamera","fov","UNSIGNED_BYTE"],"sources":["E:/mytest/node_modules/claygl/src/util/sh.js"],"sourcesContent":["// Spherical Harmonic Helpers\nimport Texture from '../Texture';\nimport FrameBuffer from '../FrameBuffer';\nimport Texture2D from '../Texture2D';\nimport Pass from '../compositor/Pass';\nimport vendor from '../core/vendor';\nimport Skybox from '../plugin/Skybox';\nimport Skydome from '../plugin/Skydome';\nimport EnvironmentMapPass from '../prePass/EnvironmentMap';\nimport Scene from '../Scene';\nimport vec3 from '../glmatrix/vec3';\nvar sh = {};\n\nimport projectEnvMapShaderCode from './shader/projectEnvMap.glsl.js';\n\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n// Project on gpu, but needs browser to support readPixels as Float32Array.\nfunction projectEnvironmentMapGPU(renderer, envMap) {\n    var shTexture = new Texture2D({\n        width: 9,\n        height: 1,\n        type: Texture.FLOAT\n    });\n    var pass = new Pass({\n        fragment: projectEnvMapShaderCode\n    });\n    pass.material.define('fragment', 'TEXTURE_SIZE', envMap.width);\n    pass.setUniform('environmentMap', envMap);\n\n    var framebuffer = new FrameBuffer();\n    framebuffer.attach(shTexture);\n    pass.render(renderer, framebuffer);\n\n    framebuffer.bind(renderer);\n    // TODO Only chrome and firefox support Float32Array\n    var pixels = new vendor.Float32Array(9 * 4);\n    renderer.gl.readPixels(0, 0, 9, 1, Texture.RGBA, Texture.FLOAT, pixels);\n\n    var coeff = new vendor.Float32Array(9 * 3);\n    for (var i = 0; i < 9; i++) {\n        coeff[i * 3] = pixels[i * 4];\n        coeff[i * 3 + 1] = pixels[i * 4 + 1];\n        coeff[i * 3 + 2] = pixels[i * 4 + 2];\n    }\n    framebuffer.unbind(renderer);\n\n    framebuffer.dispose(renderer);\n    pass.dispose(renderer);\n    return coeff;\n}\n\nfunction harmonics(normal, index){\n    var x = normal[0];\n    var y = normal[1];\n    var z = normal[2];\n\n    if (index === 0) {\n        return 1.0;\n    }\n    else if (index === 1) {\n        return x;\n    }\n    else if (index === 2) {\n        return y;\n    }\n    else if (index === 3) {\n        return z;\n    }\n    else if (index === 4) {\n        return x * z;\n    }\n    else if (index === 5) {\n        return y * z;\n    }\n    else if (index === 6) {\n        return x * y;\n    }\n    else if (index === 7) {\n        return 3.0 * z * z - 1.0;\n    }\n    else {\n        return x * x - y * y;\n    }\n}\n\nvar normalTransform = {\n    px: [2, 1, 0, -1, -1, 1],\n    nx: [2, 1, 0, 1, -1, -1],\n    py: [0, 2, 1, 1, -1, -1],\n    ny: [0, 2, 1, 1, 1, 1],\n    pz: [0, 1, 2, -1, -1, -1],\n    nz: [0, 1, 2, 1, -1, 1]\n};\n\n// Project on cpu.\nfunction projectEnvironmentMapCPU(renderer, cubePixels, width, height) {\n    var coeff = new vendor.Float32Array(9 * 3);\n    var normal = vec3.create();\n    var texel = vec3.create();\n    var fetchNormal = vec3.create();\n    for (var m = 0; m < 9; m++) {\n        var result = vec3.create();\n        for (var k = 0; k < targets.length; k++) {\n            var pixels = cubePixels[targets[k]];\n\n            var sideResult = vec3.create();\n            var divider = 0;\n            var i = 0;\n            var transform = normalTransform[targets[k]];\n            for (var y = 0; y < height; y++) {\n                for (var x = 0; x < width; x++) {\n\n                    normal[0] = x / (width - 1.0) * 2.0 - 1.0;\n                    // TODO Flip y?\n                    normal[1] = y / (height - 1.0) * 2.0 - 1.0;\n                    normal[2] = -1.0;\n                    vec3.normalize(normal, normal);\n\n                    fetchNormal[0] = normal[transform[0]] * transform[3];\n                    fetchNormal[1] = normal[transform[1]] * transform[4];\n                    fetchNormal[2] = normal[transform[2]] * transform[5];\n\n                    texel[0] = pixels[i++] / 255;\n                    texel[1] = pixels[i++] / 255;\n                    texel[2] = pixels[i++] / 255;\n                    // RGBM Decode\n                    var scale = pixels[i++] / 255 * 8.12;\n                    texel[0] *= scale;\n                    texel[1] *= scale;\n                    texel[2] *= scale;\n\n                    vec3.scaleAndAdd(sideResult, sideResult, texel, harmonics(fetchNormal, m) * -normal[2]);\n                    // -normal.z equals cos(theta) of Lambertian\n                    divider += -normal[2];\n                }\n            }\n            vec3.scaleAndAdd(result, result, sideResult, 1 / divider);\n        }\n\n        coeff[m * 3] = result[0] / 6.0;\n        coeff[m * 3 + 1] = result[1] / 6.0;\n        coeff[m * 3 + 2] = result[2] / 6.0;\n    }\n    return coeff;\n}\n\n/**\n * @param  {clay.Renderer} renderer\n * @param  {clay.Texture} envMap\n * @param  {Object} [textureOpts]\n * @param  {Object} [textureOpts.lod]\n * @param  {boolean} [textureOpts.decodeRGBM]\n */\nsh.projectEnvironmentMap = function (renderer, envMap, opts) {\n\n    // TODO sRGB\n\n    opts = opts || {};\n    opts.lod = opts.lod || 0;\n\n    var skybox;\n    var dummyScene = new Scene();\n    var size = 64;\n    if (envMap.textureType === 'texture2D') {\n        skybox = new Skydome({\n            scene: dummyScene,\n            environmentMap: envMap\n        });\n    }\n    else {\n        size = (envMap.image && envMap.image.px) ? envMap.image.px.width : envMap.width;\n        skybox = new Skybox({\n            scene: dummyScene,\n            environmentMap: envMap\n        });\n    }\n    // Convert to rgbm\n    var width = Math.ceil(size / Math.pow(2, opts.lod));\n    var height = Math.ceil(size / Math.pow(2, opts.lod));\n    var rgbmTexture = new Texture2D({\n        width: width,\n        height: height\n    });\n    var framebuffer = new FrameBuffer();\n    skybox.material.define('fragment', 'RGBM_ENCODE');\n    if (opts.decodeRGBM) {\n        skybox.material.define('fragment', 'RGBM_DECODE');\n    }\n    skybox.material.set('lod', opts.lod);\n    var envMapPass = new EnvironmentMapPass({\n        texture: rgbmTexture\n    });\n    var cubePixels = {};\n    for (var i = 0; i < targets.length; i++) {\n        cubePixels[targets[i]] = new Uint8Array(width * height * 4);\n        var camera = envMapPass.getCamera(targets[i]);\n        camera.fov = 90;\n        framebuffer.attach(rgbmTexture);\n        framebuffer.bind(renderer);\n        renderer.render(dummyScene, camera);\n        renderer.gl.readPixels(\n            0, 0, width, height,\n            Texture.RGBA, Texture.UNSIGNED_BYTE, cubePixels[targets[i]]\n        );\n        framebuffer.unbind(renderer);\n    }\n\n    skybox.dispose(renderer);\n    framebuffer.dispose(renderer);\n    rgbmTexture.dispose(renderer);\n\n    return projectEnvironmentMapCPU(renderer, cubePixels, width, height);\n};\n\nexport default sh;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}