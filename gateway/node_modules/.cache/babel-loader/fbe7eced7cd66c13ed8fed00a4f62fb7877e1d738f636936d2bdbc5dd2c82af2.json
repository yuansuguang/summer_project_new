{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nfunction makeSprite(size, canvas, draw) {\n  // http://simonsarris.com/blog/346-how-you-clear-your-canvas-matters\n  // http://jsperf.com/canvasclear\n  // Set width and height is fast\n  // And use the exist canvas if possible\n  // http://jsperf.com/create-canvas-vs-set-width-height/2\n  var canvas = canvas || document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  var ctx = canvas.getContext('2d');\n  draw && draw(ctx);\n  return canvas;\n}\nfunction makePath(symbol, symbolSize, style, marginBias) {\n  if (!echarts.util.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n  var margin = spriteUtil.getMarginByStyle(style, marginBias);\n  var width = symbolSize[0] + margin.left + margin.right;\n  var height = symbolSize[1] + margin.top + margin.bottom;\n  var path = echarts.helper.createSymbol(symbol, 0, 0, symbolSize[0], symbolSize[1]);\n  var size = Math.max(width, height);\n  path.x = margin.left;\n  path.y = margin.top;\n  if (width > height) {\n    path.y += (size - height) / 2;\n  } else {\n    path.x += (size - width) / 2;\n  }\n  var rect = path.getBoundingRect();\n  path.x -= rect.x;\n  path.y -= rect.y;\n  path.setStyle(style);\n  path.update();\n  path.__size = size;\n  return path;\n} // http://www.valvesoftware.com/publications/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf\n\nfunction generateSDF(ctx, sourceImageData, range) {\n  var sourceWidth = sourceImageData.width;\n  var sourceHeight = sourceImageData.height;\n  var width = ctx.canvas.width;\n  var height = ctx.canvas.height;\n  var scaleX = sourceWidth / width;\n  var scaleY = sourceHeight / height;\n  function sign(r) {\n    return r < 128 ? 1 : -1;\n  }\n  function searchMinDistance(x, y) {\n    var minDistSqr = Infinity;\n    x = Math.floor(x * scaleX);\n    y = Math.floor(y * scaleY);\n    var i = y * sourceWidth + x;\n    var r = sourceImageData.data[i * 4];\n    var a = sign(r); // Search for min distance\n\n    for (var y2 = Math.max(y - range, 0); y2 < Math.min(y + range, sourceHeight); y2++) {\n      for (var x2 = Math.max(x - range, 0); x2 < Math.min(x + range, sourceWidth); x2++) {\n        var i = y2 * sourceWidth + x2;\n        var r2 = sourceImageData.data[i * 4];\n        var b = sign(r2);\n        var dx = x2 - x;\n        var dy = y2 - y;\n        if (a !== b) {\n          var distSqr = dx * dx + dy * dy;\n          if (distSqr < minDistSqr) {\n            minDistSqr = distSqr;\n          }\n        }\n      }\n    }\n    return a * Math.sqrt(minDistSqr);\n  }\n  var sdfImageData = ctx.createImageData(width, height);\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      var dist = searchMinDistance(x, y);\n      var normalized = dist / range * 0.5 + 0.5;\n      var i = (y * width + x) * 4;\n      sdfImageData.data[i++] = (1.0 - normalized) * 255;\n      sdfImageData.data[i++] = (1.0 - normalized) * 255;\n      sdfImageData.data[i++] = (1.0 - normalized) * 255;\n      sdfImageData.data[i++] = 255;\n    }\n  }\n  return sdfImageData;\n}\nvar spriteUtil = {\n  getMarginByStyle: function (style) {\n    var minMargin = style.minMargin || 0;\n    var lineWidth = 0;\n    if (style.stroke && style.stroke !== 'none') {\n      lineWidth = style.lineWidth == null ? 1 : style.lineWidth;\n    }\n    var shadowBlurSize = style.shadowBlur || 0;\n    var shadowOffsetX = style.shadowOffsetX || 0;\n    var shadowOffsetY = style.shadowOffsetY || 0;\n    var margin = {};\n    margin.left = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize, minMargin);\n    margin.right = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize, minMargin);\n    margin.top = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize, minMargin);\n    margin.bottom = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize, minMargin);\n    return margin;\n  },\n  // TODO Not consider shadowOffsetX, shadowOffsetY.\n\n  /**\n   * @param {string} symbol\n   * @param {number | Array.<number>} symbolSize\n   * @param {Object} style\n   */\n  createSymbolSprite: function (symbol, symbolSize, style, canvas) {\n    var path = makePath(symbol, symbolSize, style);\n    var margin = spriteUtil.getMarginByStyle(style);\n    return {\n      image: makeSprite(path.__size, canvas, function (ctx) {\n        echarts.innerDrawElementOnCanvas(ctx, path);\n      }),\n      margin: margin\n    };\n  },\n  createSDFFromCanvas: function (canvas, size, range, outCanvas) {\n    // TODO Create a low resolution SDF from high resolution image.\n    return makeSprite(size, outCanvas, function (outCtx) {\n      var ctx = canvas.getContext('2d');\n      var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      outCtx.putImageData(generateSDF(outCtx, imgData, range), 0, 0);\n    });\n  },\n  createSimpleSprite: function (size, canvas) {\n    return makeSprite(size, canvas, function (ctx) {\n      var halfSize = size / 2;\n      ctx.beginPath();\n      ctx.arc(halfSize, halfSize, 60, 0, Math.PI * 2, false);\n      ctx.closePath();\n      var gradient = ctx.createRadialGradient(halfSize, halfSize, 0, halfSize, halfSize, halfSize);\n      gradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n      gradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)');\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n      ctx.fillStyle = gradient;\n      ctx.fill();\n    });\n  }\n};\nexport default spriteUtil;","map":{"version":3,"names":["echarts","makeSprite","size","canvas","draw","document","createElement","width","height","ctx","getContext","makePath","symbol","symbolSize","style","marginBias","util","isArray","margin","spriteUtil","getMarginByStyle","left","right","top","bottom","path","helper","createSymbol","Math","max","x","y","rect","getBoundingRect","setStyle","update","__size","generateSDF","sourceImageData","range","sourceWidth","sourceHeight","scaleX","scaleY","sign","r","searchMinDistance","minDistSqr","Infinity","floor","i","data","a","y2","min","x2","r2","b","dx","dy","distSqr","sqrt","sdfImageData","createImageData","dist","normalized","minMargin","lineWidth","stroke","shadowBlurSize","shadowBlur","shadowOffsetX","shadowOffsetY","createSymbolSprite","image","innerDrawElementOnCanvas","createSDFFromCanvas","outCanvas","outCtx","imgData","getImageData","putImageData","createSimpleSprite","halfSize","beginPath","arc","PI","closePath","gradient","createRadialGradient","addColorStop","fillStyle","fill"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/util/sprite.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\n\nfunction makeSprite(size, canvas, draw) {\n  // http://simonsarris.com/blog/346-how-you-clear-your-canvas-matters\n  // http://jsperf.com/canvasclear\n  // Set width and height is fast\n  // And use the exist canvas if possible\n  // http://jsperf.com/create-canvas-vs-set-width-height/2\n  var canvas = canvas || document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  var ctx = canvas.getContext('2d');\n  draw && draw(ctx);\n  return canvas;\n}\n\nfunction makePath(symbol, symbolSize, style, marginBias) {\n  if (!echarts.util.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var margin = spriteUtil.getMarginByStyle(style, marginBias);\n  var width = symbolSize[0] + margin.left + margin.right;\n  var height = symbolSize[1] + margin.top + margin.bottom;\n  var path = echarts.helper.createSymbol(symbol, 0, 0, symbolSize[0], symbolSize[1]);\n  var size = Math.max(width, height);\n  path.x = margin.left;\n  path.y = margin.top;\n\n  if (width > height) {\n    path.y += (size - height) / 2;\n  } else {\n    path.x += (size - width) / 2;\n  }\n\n  var rect = path.getBoundingRect();\n  path.x -= rect.x;\n  path.y -= rect.y;\n  path.setStyle(style);\n  path.update();\n  path.__size = size;\n  return path;\n} // http://www.valvesoftware.com/publications/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf\n\n\nfunction generateSDF(ctx, sourceImageData, range) {\n  var sourceWidth = sourceImageData.width;\n  var sourceHeight = sourceImageData.height;\n  var width = ctx.canvas.width;\n  var height = ctx.canvas.height;\n  var scaleX = sourceWidth / width;\n  var scaleY = sourceHeight / height;\n\n  function sign(r) {\n    return r < 128 ? 1 : -1;\n  }\n\n  function searchMinDistance(x, y) {\n    var minDistSqr = Infinity;\n    x = Math.floor(x * scaleX);\n    y = Math.floor(y * scaleY);\n    var i = y * sourceWidth + x;\n    var r = sourceImageData.data[i * 4];\n    var a = sign(r); // Search for min distance\n\n    for (var y2 = Math.max(y - range, 0); y2 < Math.min(y + range, sourceHeight); y2++) {\n      for (var x2 = Math.max(x - range, 0); x2 < Math.min(x + range, sourceWidth); x2++) {\n        var i = y2 * sourceWidth + x2;\n        var r2 = sourceImageData.data[i * 4];\n        var b = sign(r2);\n        var dx = x2 - x;\n        var dy = y2 - y;\n\n        if (a !== b) {\n          var distSqr = dx * dx + dy * dy;\n\n          if (distSqr < minDistSqr) {\n            minDistSqr = distSqr;\n          }\n        }\n      }\n    }\n\n    return a * Math.sqrt(minDistSqr);\n  }\n\n  var sdfImageData = ctx.createImageData(width, height);\n\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      var dist = searchMinDistance(x, y);\n      var normalized = dist / range * 0.5 + 0.5;\n      var i = (y * width + x) * 4;\n      sdfImageData.data[i++] = (1.0 - normalized) * 255;\n      sdfImageData.data[i++] = (1.0 - normalized) * 255;\n      sdfImageData.data[i++] = (1.0 - normalized) * 255;\n      sdfImageData.data[i++] = 255;\n    }\n  }\n\n  return sdfImageData;\n}\n\nvar spriteUtil = {\n  getMarginByStyle: function (style) {\n    var minMargin = style.minMargin || 0;\n    var lineWidth = 0;\n\n    if (style.stroke && style.stroke !== 'none') {\n      lineWidth = style.lineWidth == null ? 1 : style.lineWidth;\n    }\n\n    var shadowBlurSize = style.shadowBlur || 0;\n    var shadowOffsetX = style.shadowOffsetX || 0;\n    var shadowOffsetY = style.shadowOffsetY || 0;\n    var margin = {};\n    margin.left = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize, minMargin);\n    margin.right = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize, minMargin);\n    margin.top = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize, minMargin);\n    margin.bottom = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize, minMargin);\n    return margin;\n  },\n  // TODO Not consider shadowOffsetX, shadowOffsetY.\n\n  /**\n   * @param {string} symbol\n   * @param {number | Array.<number>} symbolSize\n   * @param {Object} style\n   */\n  createSymbolSprite: function (symbol, symbolSize, style, canvas) {\n    var path = makePath(symbol, symbolSize, style);\n    var margin = spriteUtil.getMarginByStyle(style);\n    return {\n      image: makeSprite(path.__size, canvas, function (ctx) {\n        echarts.innerDrawElementOnCanvas(ctx, path);\n      }),\n      margin: margin\n    };\n  },\n  createSDFFromCanvas: function (canvas, size, range, outCanvas) {\n    // TODO Create a low resolution SDF from high resolution image.\n    return makeSprite(size, outCanvas, function (outCtx) {\n      var ctx = canvas.getContext('2d');\n      var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      outCtx.putImageData(generateSDF(outCtx, imgData, range), 0, 0);\n    });\n  },\n  createSimpleSprite: function (size, canvas) {\n    return makeSprite(size, canvas, function (ctx) {\n      var halfSize = size / 2;\n      ctx.beginPath();\n      ctx.arc(halfSize, halfSize, 60, 0, Math.PI * 2, false);\n      ctx.closePath();\n      var gradient = ctx.createRadialGradient(halfSize, halfSize, 0, halfSize, halfSize, halfSize);\n      gradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n      gradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)');\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n      ctx.fillStyle = gradient;\n      ctx.fill();\n    });\n  }\n};\nexport default spriteUtil;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}