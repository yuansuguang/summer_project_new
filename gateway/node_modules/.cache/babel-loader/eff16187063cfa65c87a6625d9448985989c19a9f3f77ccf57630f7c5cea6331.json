{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Temporal Super Sample for static Scene\nimport halton from './halton';\nimport Pass from 'claygl/src/compositor/Pass';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Shader from 'claygl/src/Shader';\nimport Matrix4 from 'claygl/src/math/Matrix4';\nfunction TemporalSuperSampling(frames) {\n  var haltonSequence = [];\n  for (var i = 0; i < 30; i++) {\n    haltonSequence.push([halton(i, 2), halton(i, 3)]);\n  }\n  this._haltonSequence = haltonSequence;\n  this._frame = 0;\n  this._sourceTex = new Texture2D();\n  this._sourceFb = new FrameBuffer();\n  this._sourceFb.attach(this._sourceTex); // Frame texture before temporal supersampling\n\n  this._prevFrameTex = new Texture2D();\n  this._outputTex = new Texture2D();\n  var blendPass = this._blendPass = new Pass({\n    fragment: Shader.source('clay.compositor.blend')\n  });\n  blendPass.material.disableTexturesAll();\n  blendPass.material.enableTexture(['texture1', 'texture2']);\n  this._blendFb = new FrameBuffer({\n    depthBuffer: false\n  });\n  this._outputPass = new Pass({\n    fragment: Shader.source('clay.compositor.output'),\n    // TODO, alpha is premultiplied?\n    blendWithPrevious: true\n  });\n  this._outputPass.material.define('fragment', 'OUTPUT_ALPHA');\n  this._outputPass.material.blend = function (_gl) {\n    // FIXME.\n    // Output is premultiplied alpha when BLEND is enabled ?\n    // http://stackoverflow.com/questions/2171085/opengl-blending-with-previous-contents-of-framebuffer\n    _gl.blendEquationSeparate(_gl.FUNC_ADD, _gl.FUNC_ADD);\n    _gl.blendFuncSeparate(_gl.ONE, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA);\n  };\n}\nTemporalSuperSampling.prototype = {\n  constructor: TemporalSuperSampling,\n  /**\n   * Jitter camera projectionMatrix\n   * @parma {clay.Renderer} renderer\n   * @param {clay.Camera} camera\n   */\n  jitterProjection: function (renderer, camera) {\n    var viewport = renderer.viewport;\n    var dpr = viewport.devicePixelRatio || renderer.getDevicePixelRatio();\n    var width = viewport.width * dpr;\n    var height = viewport.height * dpr;\n    var offset = this._haltonSequence[this._frame % this._haltonSequence.length];\n    var translationMat = new Matrix4();\n    translationMat.array[12] = (offset[0] * 2.0 - 1.0) / width;\n    translationMat.array[13] = (offset[1] * 2.0 - 1.0) / height;\n    Matrix4.mul(camera.projectionMatrix, translationMat, camera.projectionMatrix);\n    Matrix4.invert(camera.invProjectionMatrix, camera.projectionMatrix);\n  },\n  /**\n   * Reset accumulating frame\n   */\n  resetFrame: function () {\n    this._frame = 0;\n  },\n  /**\n   * Return current frame\n   */\n  getFrame: function () {\n    return this._frame;\n  },\n  /**\n   * Get source framebuffer for usage\n   */\n  getSourceFrameBuffer: function () {\n    return this._sourceFb;\n  },\n  getOutputTexture: function () {\n    return this._outputTex;\n  },\n  resize: function (width, height) {\n    this._prevFrameTex.width = width;\n    this._prevFrameTex.height = height;\n    this._outputTex.width = width;\n    this._outputTex.height = height;\n    this._sourceTex.width = width;\n    this._sourceTex.height = height;\n    this._prevFrameTex.dirty();\n    this._outputTex.dirty();\n    this._sourceTex.dirty();\n  },\n  isFinished: function () {\n    return this._frame >= this._haltonSequence.length;\n  },\n  render: function (renderer, sourceTex, notOutput) {\n    var blendPass = this._blendPass;\n    if (this._frame === 0) {\n      // Direct output\n      blendPass.setUniform('weight1', 0);\n      blendPass.setUniform('weight2', 1);\n    } else {\n      blendPass.setUniform('weight1', 0.9);\n      blendPass.setUniform('weight2', 0.1);\n    }\n    blendPass.setUniform('texture1', this._prevFrameTex);\n    blendPass.setUniform('texture2', sourceTex || this._sourceTex);\n    this._blendFb.attach(this._outputTex);\n    this._blendFb.bind(renderer);\n    blendPass.render(renderer);\n    this._blendFb.unbind(renderer);\n    if (!notOutput) {\n      this._outputPass.setUniform('texture', this._outputTex);\n      this._outputPass.render(renderer);\n    } // Swap texture\n\n    var tmp = this._prevFrameTex;\n    this._prevFrameTex = this._outputTex;\n    this._outputTex = tmp;\n    this._frame++;\n  },\n  dispose: function (renderer) {\n    this._sourceFb.dispose(renderer);\n    this._blendFb.dispose(renderer);\n    this._prevFrameTex.dispose(renderer);\n    this._outputTex.dispose(renderer);\n    this._sourceTex.dispose(renderer);\n    this._outputPass.dispose(renderer);\n    this._blendPass.dispose(renderer);\n  }\n};\nexport default TemporalSuperSampling;","map":{"version":3,"names":["halton","Pass","FrameBuffer","Texture2D","Shader","Matrix4","TemporalSuperSampling","frames","haltonSequence","i","push","_haltonSequence","_frame","_sourceTex","_sourceFb","attach","_prevFrameTex","_outputTex","blendPass","_blendPass","fragment","source","material","disableTexturesAll","enableTexture","_blendFb","depthBuffer","_outputPass","blendWithPrevious","define","blend","_gl","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","ONE_MINUS_SRC_ALPHA","prototype","constructor","jitterProjection","renderer","camera","viewport","dpr","devicePixelRatio","getDevicePixelRatio","width","height","offset","length","translationMat","array","mul","projectionMatrix","invert","invProjectionMatrix","resetFrame","getFrame","getSourceFrameBuffer","getOutputTexture","resize","dirty","isFinished","render","sourceTex","notOutput","setUniform","bind","unbind","tmp","dispose"],"sources":["E:/mytest/node_modules/echarts-gl/lib/effect/TemporalSuperSampling.js"],"sourcesContent":["// Temporal Super Sample for static Scene\nimport halton from './halton';\nimport Pass from 'claygl/src/compositor/Pass';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Shader from 'claygl/src/Shader';\nimport Matrix4 from 'claygl/src/math/Matrix4';\n\nfunction TemporalSuperSampling(frames) {\n  var haltonSequence = [];\n\n  for (var i = 0; i < 30; i++) {\n    haltonSequence.push([halton(i, 2), halton(i, 3)]);\n  }\n\n  this._haltonSequence = haltonSequence;\n  this._frame = 0;\n  this._sourceTex = new Texture2D();\n  this._sourceFb = new FrameBuffer();\n\n  this._sourceFb.attach(this._sourceTex); // Frame texture before temporal supersampling\n\n\n  this._prevFrameTex = new Texture2D();\n  this._outputTex = new Texture2D();\n  var blendPass = this._blendPass = new Pass({\n    fragment: Shader.source('clay.compositor.blend')\n  });\n  blendPass.material.disableTexturesAll();\n  blendPass.material.enableTexture(['texture1', 'texture2']);\n  this._blendFb = new FrameBuffer({\n    depthBuffer: false\n  });\n  this._outputPass = new Pass({\n    fragment: Shader.source('clay.compositor.output'),\n    // TODO, alpha is premultiplied?\n    blendWithPrevious: true\n  });\n\n  this._outputPass.material.define('fragment', 'OUTPUT_ALPHA');\n\n  this._outputPass.material.blend = function (_gl) {\n    // FIXME.\n    // Output is premultiplied alpha when BLEND is enabled ?\n    // http://stackoverflow.com/questions/2171085/opengl-blending-with-previous-contents-of-framebuffer\n    _gl.blendEquationSeparate(_gl.FUNC_ADD, _gl.FUNC_ADD);\n\n    _gl.blendFuncSeparate(_gl.ONE, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA);\n  };\n}\n\nTemporalSuperSampling.prototype = {\n  constructor: TemporalSuperSampling,\n\n  /**\n   * Jitter camera projectionMatrix\n   * @parma {clay.Renderer} renderer\n   * @param {clay.Camera} camera\n   */\n  jitterProjection: function (renderer, camera) {\n    var viewport = renderer.viewport;\n    var dpr = viewport.devicePixelRatio || renderer.getDevicePixelRatio();\n    var width = viewport.width * dpr;\n    var height = viewport.height * dpr;\n    var offset = this._haltonSequence[this._frame % this._haltonSequence.length];\n    var translationMat = new Matrix4();\n    translationMat.array[12] = (offset[0] * 2.0 - 1.0) / width;\n    translationMat.array[13] = (offset[1] * 2.0 - 1.0) / height;\n    Matrix4.mul(camera.projectionMatrix, translationMat, camera.projectionMatrix);\n    Matrix4.invert(camera.invProjectionMatrix, camera.projectionMatrix);\n  },\n\n  /**\n   * Reset accumulating frame\n   */\n  resetFrame: function () {\n    this._frame = 0;\n  },\n\n  /**\n   * Return current frame\n   */\n  getFrame: function () {\n    return this._frame;\n  },\n\n  /**\n   * Get source framebuffer for usage\n   */\n  getSourceFrameBuffer: function () {\n    return this._sourceFb;\n  },\n  getOutputTexture: function () {\n    return this._outputTex;\n  },\n  resize: function (width, height) {\n    this._prevFrameTex.width = width;\n    this._prevFrameTex.height = height;\n    this._outputTex.width = width;\n    this._outputTex.height = height;\n    this._sourceTex.width = width;\n    this._sourceTex.height = height;\n\n    this._prevFrameTex.dirty();\n\n    this._outputTex.dirty();\n\n    this._sourceTex.dirty();\n  },\n  isFinished: function () {\n    return this._frame >= this._haltonSequence.length;\n  },\n  render: function (renderer, sourceTex, notOutput) {\n    var blendPass = this._blendPass;\n\n    if (this._frame === 0) {\n      // Direct output\n      blendPass.setUniform('weight1', 0);\n      blendPass.setUniform('weight2', 1);\n    } else {\n      blendPass.setUniform('weight1', 0.9);\n      blendPass.setUniform('weight2', 0.1);\n    }\n\n    blendPass.setUniform('texture1', this._prevFrameTex);\n    blendPass.setUniform('texture2', sourceTex || this._sourceTex);\n\n    this._blendFb.attach(this._outputTex);\n\n    this._blendFb.bind(renderer);\n\n    blendPass.render(renderer);\n\n    this._blendFb.unbind(renderer);\n\n    if (!notOutput) {\n      this._outputPass.setUniform('texture', this._outputTex);\n\n      this._outputPass.render(renderer);\n    } // Swap texture\n\n\n    var tmp = this._prevFrameTex;\n    this._prevFrameTex = this._outputTex;\n    this._outputTex = tmp;\n    this._frame++;\n  },\n  dispose: function (renderer) {\n    this._sourceFb.dispose(renderer);\n\n    this._blendFb.dispose(renderer);\n\n    this._prevFrameTex.dispose(renderer);\n\n    this._outputTex.dispose(renderer);\n\n    this._sourceTex.dispose(renderer);\n\n    this._outputPass.dispose(renderer);\n\n    this._blendPass.dispose(renderer);\n  }\n};\nexport default TemporalSuperSampling;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}