{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n// Cubemap prefilter utility\n// http://www.unrealengine.com/files/downloads/2013SiggraphPresentationsNotes.pdf\n// http://http.developer.nvidia.com/GPUGems3/gpugems3_ch20.html\nimport Texture2D from '../Texture2D';\nimport TextureCube from '../TextureCube';\nimport Texture from '../Texture';\nimport FrameBuffer from '../FrameBuffer';\nimport Pass from '../compositor/Pass';\nimport Material from '../Material';\nimport Shader from '../Shader';\nimport Skybox from '../plugin/Skybox';\nimport Scene from '../Scene';\nimport EnvironmentMapPass from '../prePass/EnvironmentMap';\nimport vendor from '../core/vendor';\nimport textureUtil from './texture';\nimport integrateBRDFShaderCode from './shader/integrateBRDF.glsl.js';\nimport prefilterFragCode from './shader/prefilter.glsl.js';\nvar cubemapUtil = {};\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n// TODO Downsample\n/**\n * @name clay.util.cubemap.prefilterEnvironmentMap\n * @param  {clay.Renderer} renderer\n * @param  {clay.Texture} envMap\n * @param  {Object} [textureOpts]\n * @param  {number} [textureOpts.width=64]\n * @param  {number} [textureOpts.height=64]\n * @param  {number} [textureOpts.type]\n * @param  {boolean} [textureOpts.encodeRGBM=false]\n * @param  {boolean} [textureOpts.decodeRGBM=false]\n * @param  {clay.Texture2D} [normalDistribution]\n * @param  {clay.Texture2D} [brdfLookup]\n */\ncubemapUtil.prefilterEnvironmentMap = function (renderer, envMap, textureOpts, normalDistribution, brdfLookup) {\n  // Not create other renderer, it is easy having issue of cross reference of resources like framebuffer\n  // PENDING preserveDrawingBuffer?\n  if (!brdfLookup || !normalDistribution) {\n    normalDistribution = cubemapUtil.generateNormalDistribution();\n    brdfLookup = cubemapUtil.integrateBRDF(renderer, normalDistribution);\n  }\n  textureOpts = textureOpts || {};\n  var width = textureOpts.width || 64;\n  var height = textureOpts.height || 64;\n  var textureType = textureOpts.type || envMap.type;\n\n  // Use same type with given envMap\n  var prefilteredCubeMap = new TextureCube({\n    width: width,\n    height: height,\n    type: textureType,\n    flipY: false,\n    mipmaps: []\n  });\n  if (!prefilteredCubeMap.isPowerOfTwo()) {\n    console.warn('Width and height must be power of two to enable mipmap.');\n  }\n  var size = Math.min(width, height);\n  var mipmapNum = Math.log(size) / Math.log(2) + 1;\n  var prefilterMaterial = new Material({\n    shader: new Shader({\n      vertex: Shader.source('clay.skybox.vertex'),\n      fragment: prefilterFragCode\n    })\n  });\n  prefilterMaterial.set('normalDistribution', normalDistribution);\n  textureOpts.encodeRGBM && prefilterMaterial.define('fragment', 'RGBM_ENCODE');\n  textureOpts.decodeRGBM && prefilterMaterial.define('fragment', 'RGBM_DECODE');\n  var dummyScene = new Scene();\n  var skyEnv;\n  if (envMap.textureType === 'texture2D') {\n    // Convert panorama to cubemap\n    var envCubemap = new TextureCube({\n      width: width,\n      height: height,\n      // FIXME FLOAT type will cause GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT error on iOS\n      type: textureType === Texture.FLOAT ? Texture.HALF_FLOAT : textureType\n    });\n    textureUtil.panoramaToCubeMap(renderer, envMap, envCubemap, {\n      // PENDING encodeRGBM so it can be decoded as RGBM\n      encodeRGBM: textureOpts.decodeRGBM\n    });\n    envMap = envCubemap;\n  }\n  skyEnv = new Skybox({\n    scene: dummyScene,\n    material: prefilterMaterial\n  });\n  skyEnv.material.set('environmentMap', envMap);\n  var envMapPass = new EnvironmentMapPass({\n    texture: prefilteredCubeMap\n  });\n\n  // Force to be UNSIGNED_BYTE\n  if (textureOpts.encodeRGBM) {\n    textureType = prefilteredCubeMap.type = Texture.UNSIGNED_BYTE;\n  }\n  var renderTargetTmp = new Texture2D({\n    width: width,\n    height: height,\n    type: textureType\n  });\n  var frameBuffer = new FrameBuffer({\n    depthBuffer: false\n  });\n  var ArrayCtor = vendor[textureType === Texture.UNSIGNED_BYTE ? 'Uint8Array' : 'Float32Array'];\n  for (var i = 0; i < mipmapNum; i++) {\n    // console.time('prefilter');\n    prefilteredCubeMap.mipmaps[i] = {\n      pixels: {}\n    };\n    skyEnv.material.set('roughness', i / (mipmapNum - 1));\n\n    // Tweak fov\n    // http://the-witness.net/news/2012/02/seamless-cube-map-filtering/\n    var n = renderTargetTmp.width;\n    var fov = 2 * Math.atan(n / (n - 0.5)) / Math.PI * 180;\n    for (var j = 0; j < targets.length; j++) {\n      var pixels = new ArrayCtor(renderTargetTmp.width * renderTargetTmp.height * 4);\n      frameBuffer.attach(renderTargetTmp);\n      frameBuffer.bind(renderer);\n      var camera = envMapPass.getCamera(targets[j]);\n      camera.fov = fov;\n      renderer.render(dummyScene, camera);\n      renderer.gl.readPixels(0, 0, renderTargetTmp.width, renderTargetTmp.height, Texture.RGBA, textureType, pixels);\n\n      // var canvas = document.createElement('canvas');\n      // var ctx = canvas.getContext('2d');\n      // canvas.width = renderTargetTmp.width;\n      // canvas.height = renderTargetTmp.height;\n      // var imageData = ctx.createImageData(renderTargetTmp.width, renderTargetTmp.height);\n      // for (var k = 0; k < pixels.length; k++) {\n      //     imageData.data[k] = pixels[k];\n      // }\n      // ctx.putImageData(imageData, 0, 0);\n      // document.body.appendChild(canvas);\n\n      frameBuffer.unbind(renderer);\n      prefilteredCubeMap.mipmaps[i].pixels[targets[j]] = pixels;\n    }\n    renderTargetTmp.width /= 2;\n    renderTargetTmp.height /= 2;\n    renderTargetTmp.dirty();\n    // console.timeEnd('prefilter');\n  }\n  frameBuffer.dispose(renderer);\n  renderTargetTmp.dispose(renderer);\n  skyEnv.dispose(renderer);\n  // Remove gpu resource allucated in renderer\n  normalDistribution.dispose(renderer);\n\n  // renderer.dispose();\n\n  return {\n    environmentMap: prefilteredCubeMap,\n    brdfLookup: brdfLookup,\n    normalDistribution: normalDistribution,\n    maxMipmapLevel: mipmapNum\n  };\n};\ncubemapUtil.integrateBRDF = function (renderer, normalDistribution) {\n  normalDistribution = normalDistribution || cubemapUtil.generateNormalDistribution();\n  var framebuffer = new FrameBuffer({\n    depthBuffer: false\n  });\n  var pass = new Pass({\n    fragment: integrateBRDFShaderCode\n  });\n  var texture = new Texture2D({\n    width: 512,\n    height: 256,\n    type: Texture.HALF_FLOAT,\n    wrapS: Texture.CLAMP_TO_EDGE,\n    wrapT: Texture.CLAMP_TO_EDGE,\n    minFilter: Texture.NEAREST,\n    magFilter: Texture.NEAREST,\n    useMipmap: false\n  });\n  pass.setUniform('normalDistribution', normalDistribution);\n  pass.setUniform('viewportSize', [512, 256]);\n  pass.attachOutput(texture);\n  pass.render(renderer, framebuffer);\n\n  // FIXME Only chrome and firefox can readPixels with float type.\n  // framebuffer.bind(renderer);\n  // var pixels = new Float32Array(512 * 256 * 4);\n  // renderer.gl.readPixels(\n  //     0, 0, texture.width, texture.height,\n  //     Texture.RGBA, Texture.FLOAT, pixels\n  // );\n  // texture.pixels = pixels;\n  // texture.flipY = false;\n  // texture.dirty();\n  // framebuffer.unbind(renderer);\n\n  framebuffer.dispose(renderer);\n  return texture;\n};\ncubemapUtil.generateNormalDistribution = function (roughnessLevels, sampleSize) {\n  // http://holger.dammertz.org/stuff/notes_HammersleyOnHemisphere.html\n  // GLSL not support bit operation, use lookup instead\n  // V -> i / N, U -> roughness\n  var roughnessLevels = roughnessLevels || 256;\n  var sampleSize = sampleSize || 1024;\n  var normalDistribution = new Texture2D({\n    width: roughnessLevels,\n    height: sampleSize,\n    type: Texture.FLOAT,\n    minFilter: Texture.NEAREST,\n    magFilter: Texture.NEAREST,\n    wrapS: Texture.CLAMP_TO_EDGE,\n    wrapT: Texture.CLAMP_TO_EDGE,\n    useMipmap: false\n  });\n  var pixels = new Float32Array(sampleSize * roughnessLevels * 4);\n  var tmp = [];\n\n  // function sortFunc(a, b) {\n  //     return Math.abs(b) - Math.abs(a);\n  // }\n  for (var j = 0; j < roughnessLevels; j++) {\n    var roughness = j / roughnessLevels;\n    var a = roughness * roughness;\n    for (var i = 0; i < sampleSize; i++) {\n      // http://holger.dammertz.org/stuff/notes_HammersleyOnHemisphere.html\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\n      // http://stackoverflow.com/questions/1908492/unsigned-integer-in-javascript\n      // http://stackoverflow.com/questions/1822350/what-is-the-javascript-operator-and-how-do-you-use-it\n      var y = (i << 16 | i >>> 16) >>> 0;\n      y = ((y & 1431655765) << 1 | (y & 2863311530) >>> 1) >>> 0;\n      y = ((y & 858993459) << 2 | (y & 3435973836) >>> 2) >>> 0;\n      y = ((y & 252645135) << 4 | (y & 4042322160) >>> 4) >>> 0;\n      y = (((y & 16711935) << 8 | (y & 4278255360) >>> 8) >>> 0) / 4294967296;\n\n      // CDF\n      var cosTheta = Math.sqrt((1 - y) / (1 + (a * a - 1.0) * y));\n      tmp[i] = cosTheta;\n    }\n    for (var i = 0; i < sampleSize; i++) {\n      var offset = (i * roughnessLevels + j) * 4;\n      var cosTheta = tmp[i];\n      var sinTheta = Math.sqrt(1.0 - cosTheta * cosTheta);\n      var x = i / sampleSize;\n      var phi = 2.0 * Math.PI * x;\n      pixels[offset] = sinTheta * Math.cos(phi);\n      pixels[offset + 1] = cosTheta;\n      pixels[offset + 2] = sinTheta * Math.sin(phi);\n      pixels[offset + 3] = 1.0;\n    }\n  }\n  normalDistribution.pixels = pixels;\n  return normalDistribution;\n};\nexport default cubemapUtil;","map":{"version":3,"names":["Texture2D","TextureCube","Texture","FrameBuffer","Pass","Material","Shader","Skybox","Scene","EnvironmentMapPass","vendor","textureUtil","integrateBRDFShaderCode","prefilterFragCode","cubemapUtil","targets","prefilterEnvironmentMap","renderer","envMap","textureOpts","normalDistribution","brdfLookup","generateNormalDistribution","integrateBRDF","width","height","textureType","type","prefilteredCubeMap","flipY","mipmaps","isPowerOfTwo","console","warn","size","Math","min","mipmapNum","log","prefilterMaterial","shader","vertex","source","fragment","set","encodeRGBM","define","decodeRGBM","dummyScene","skyEnv","envCubemap","FLOAT","HALF_FLOAT","panoramaToCubeMap","scene","material","envMapPass","texture","UNSIGNED_BYTE","renderTargetTmp","frameBuffer","depthBuffer","ArrayCtor","i","pixels","n","fov","atan","PI","j","length","attach","bind","camera","getCamera","render","gl","readPixels","RGBA","unbind","dirty","dispose","environmentMap","maxMipmapLevel","framebuffer","pass","wrapS","CLAMP_TO_EDGE","wrapT","minFilter","NEAREST","magFilter","useMipmap","setUniform","attachOutput","roughnessLevels","sampleSize","Float32Array","tmp","roughness","a","y","cosTheta","sqrt","offset","sinTheta","x","phi","cos","sin"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/claygl/src/util/cubemap.js"],"sourcesContent":["// Cubemap prefilter utility\n// http://www.unrealengine.com/files/downloads/2013SiggraphPresentationsNotes.pdf\n// http://http.developer.nvidia.com/GPUGems3/gpugems3_ch20.html\nimport Texture2D from '../Texture2D';\nimport TextureCube from '../TextureCube';\nimport Texture from '../Texture';\nimport FrameBuffer from '../FrameBuffer';\nimport Pass from '../compositor/Pass';\nimport Material from '../Material';\nimport Shader from '../Shader';\nimport Skybox from '../plugin/Skybox';\nimport Scene from '../Scene';\nimport EnvironmentMapPass from '../prePass/EnvironmentMap';\nimport vendor from '../core/vendor';\nimport textureUtil from './texture';\n\nimport integrateBRDFShaderCode from './shader/integrateBRDF.glsl.js';\nimport prefilterFragCode from './shader/prefilter.glsl.js';\n\nvar cubemapUtil = {};\n\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n// TODO Downsample\n/**\n * @name clay.util.cubemap.prefilterEnvironmentMap\n * @param  {clay.Renderer} renderer\n * @param  {clay.Texture} envMap\n * @param  {Object} [textureOpts]\n * @param  {number} [textureOpts.width=64]\n * @param  {number} [textureOpts.height=64]\n * @param  {number} [textureOpts.type]\n * @param  {boolean} [textureOpts.encodeRGBM=false]\n * @param  {boolean} [textureOpts.decodeRGBM=false]\n * @param  {clay.Texture2D} [normalDistribution]\n * @param  {clay.Texture2D} [brdfLookup]\n */\ncubemapUtil.prefilterEnvironmentMap = function (\n    renderer, envMap, textureOpts, normalDistribution, brdfLookup\n) {\n    // Not create other renderer, it is easy having issue of cross reference of resources like framebuffer\n    // PENDING preserveDrawingBuffer?\n    if (!brdfLookup || !normalDistribution) {\n        normalDistribution = cubemapUtil.generateNormalDistribution();\n        brdfLookup = cubemapUtil.integrateBRDF(renderer, normalDistribution);\n    }\n    textureOpts = textureOpts || {};\n\n    var width = textureOpts.width || 64;\n    var height = textureOpts.height || 64;\n\n    var textureType = textureOpts.type || envMap.type;\n\n    // Use same type with given envMap\n    var prefilteredCubeMap = new TextureCube({\n        width: width,\n        height: height,\n        type: textureType,\n        flipY: false,\n        mipmaps: []\n    });\n\n    if (!prefilteredCubeMap.isPowerOfTwo()) {\n        console.warn('Width and height must be power of two to enable mipmap.');\n    }\n\n    var size = Math.min(width, height);\n    var mipmapNum = Math.log(size) / Math.log(2) + 1;\n\n    var prefilterMaterial = new Material({\n        shader: new Shader({\n            vertex: Shader.source('clay.skybox.vertex'),\n            fragment: prefilterFragCode\n        })\n    });\n    prefilterMaterial.set('normalDistribution', normalDistribution);\n\n    textureOpts.encodeRGBM && prefilterMaterial.define('fragment', 'RGBM_ENCODE');\n    textureOpts.decodeRGBM && prefilterMaterial.define('fragment', 'RGBM_DECODE');\n\n    var dummyScene = new Scene();\n    var skyEnv;\n\n    if (envMap.textureType === 'texture2D') {\n        // Convert panorama to cubemap\n        var envCubemap = new TextureCube({\n            width: width,\n            height: height,\n            // FIXME FLOAT type will cause GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT error on iOS\n            type: textureType === Texture.FLOAT ?\n                Texture.HALF_FLOAT : textureType\n        });\n        textureUtil.panoramaToCubeMap(renderer, envMap, envCubemap, {\n            // PENDING encodeRGBM so it can be decoded as RGBM\n            encodeRGBM: textureOpts.decodeRGBM\n        });\n        envMap = envCubemap;\n    }\n    skyEnv = new Skybox({\n        scene: dummyScene,\n        material: prefilterMaterial\n    });\n    skyEnv.material.set('environmentMap', envMap);\n\n    var envMapPass = new EnvironmentMapPass({\n        texture: prefilteredCubeMap\n    });\n\n    // Force to be UNSIGNED_BYTE\n    if (textureOpts.encodeRGBM) {\n        textureType = prefilteredCubeMap.type = Texture.UNSIGNED_BYTE;\n    }\n\n    var renderTargetTmp = new Texture2D({\n        width: width,\n        height: height,\n        type: textureType\n    });\n    var frameBuffer = new FrameBuffer({\n        depthBuffer: false\n    });\n    var ArrayCtor = vendor[textureType === Texture.UNSIGNED_BYTE ? 'Uint8Array' : 'Float32Array'];\n    for (var i = 0; i < mipmapNum; i++) {\n        // console.time('prefilter');\n        prefilteredCubeMap.mipmaps[i] = {\n            pixels: {}\n        };\n        skyEnv.material.set('roughness', i / (mipmapNum - 1));\n\n        // Tweak fov\n        // http://the-witness.net/news/2012/02/seamless-cube-map-filtering/\n        var n = renderTargetTmp.width;\n        var fov = 2 * Math.atan(n / (n - 0.5)) / Math.PI * 180;\n\n        for (var j = 0; j < targets.length; j++) {\n            var pixels = new ArrayCtor(renderTargetTmp.width * renderTargetTmp.height * 4);\n            frameBuffer.attach(renderTargetTmp);\n            frameBuffer.bind(renderer);\n\n            var camera = envMapPass.getCamera(targets[j]);\n            camera.fov = fov;\n            renderer.render(dummyScene, camera);\n            renderer.gl.readPixels(\n                0, 0, renderTargetTmp.width, renderTargetTmp.height,\n                Texture.RGBA, textureType, pixels\n            );\n\n            // var canvas = document.createElement('canvas');\n            // var ctx = canvas.getContext('2d');\n            // canvas.width = renderTargetTmp.width;\n            // canvas.height = renderTargetTmp.height;\n            // var imageData = ctx.createImageData(renderTargetTmp.width, renderTargetTmp.height);\n            // for (var k = 0; k < pixels.length; k++) {\n            //     imageData.data[k] = pixels[k];\n            // }\n            // ctx.putImageData(imageData, 0, 0);\n            // document.body.appendChild(canvas);\n\n            frameBuffer.unbind(renderer);\n            prefilteredCubeMap.mipmaps[i].pixels[targets[j]] = pixels;\n        }\n\n        renderTargetTmp.width /= 2;\n        renderTargetTmp.height /= 2;\n        renderTargetTmp.dirty();\n        // console.timeEnd('prefilter');\n    }\n\n    frameBuffer.dispose(renderer);\n    renderTargetTmp.dispose(renderer);\n    skyEnv.dispose(renderer);\n    // Remove gpu resource allucated in renderer\n    normalDistribution.dispose(renderer);\n\n    // renderer.dispose();\n\n    return {\n        environmentMap: prefilteredCubeMap,\n        brdfLookup: brdfLookup,\n        normalDistribution: normalDistribution,\n        maxMipmapLevel: mipmapNum\n    };\n};\n\ncubemapUtil.integrateBRDF = function (renderer, normalDistribution) {\n    normalDistribution = normalDistribution || cubemapUtil.generateNormalDistribution();\n    var framebuffer = new FrameBuffer({\n        depthBuffer: false\n    });\n    var pass = new Pass({\n        fragment: integrateBRDFShaderCode\n    });\n\n    var texture = new Texture2D({\n        width: 512,\n        height: 256,\n        type: Texture.HALF_FLOAT,\n        wrapS: Texture.CLAMP_TO_EDGE,\n        wrapT: Texture.CLAMP_TO_EDGE,\n        minFilter: Texture.NEAREST,\n        magFilter: Texture.NEAREST,\n        useMipmap: false\n    });\n    pass.setUniform('normalDistribution', normalDistribution);\n    pass.setUniform('viewportSize', [512, 256]);\n    pass.attachOutput(texture);\n    pass.render(renderer, framebuffer);\n\n    // FIXME Only chrome and firefox can readPixels with float type.\n    // framebuffer.bind(renderer);\n    // var pixels = new Float32Array(512 * 256 * 4);\n    // renderer.gl.readPixels(\n    //     0, 0, texture.width, texture.height,\n    //     Texture.RGBA, Texture.FLOAT, pixels\n    // );\n    // texture.pixels = pixels;\n    // texture.flipY = false;\n    // texture.dirty();\n    // framebuffer.unbind(renderer);\n\n    framebuffer.dispose(renderer);\n\n    return texture;\n};\n\ncubemapUtil.generateNormalDistribution = function (roughnessLevels, sampleSize) {\n\n    // http://holger.dammertz.org/stuff/notes_HammersleyOnHemisphere.html\n    // GLSL not support bit operation, use lookup instead\n    // V -> i / N, U -> roughness\n    var roughnessLevels = roughnessLevels || 256;\n    var sampleSize = sampleSize || 1024;\n\n    var normalDistribution = new Texture2D({\n        width: roughnessLevels,\n        height: sampleSize,\n        type: Texture.FLOAT,\n        minFilter: Texture.NEAREST,\n        magFilter: Texture.NEAREST,\n        wrapS: Texture.CLAMP_TO_EDGE,\n        wrapT: Texture.CLAMP_TO_EDGE,\n        useMipmap: false\n    });\n    var pixels = new Float32Array(sampleSize * roughnessLevels * 4);\n    var tmp = [];\n\n    // function sortFunc(a, b) {\n    //     return Math.abs(b) - Math.abs(a);\n    // }\n    for (var j = 0; j < roughnessLevels; j++) {\n        var roughness = j / roughnessLevels;\n        var a = roughness * roughness;\n\n        for (var i = 0; i < sampleSize; i++) {\n            // http://holger.dammertz.org/stuff/notes_HammersleyOnHemisphere.html\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\n            // http://stackoverflow.com/questions/1908492/unsigned-integer-in-javascript\n            // http://stackoverflow.com/questions/1822350/what-is-the-javascript-operator-and-how-do-you-use-it\n            var y = (i << 16 | i >>> 16) >>> 0;\n            y = ((y & 1431655765) << 1 | (y & 2863311530) >>> 1) >>> 0;\n            y = ((y & 858993459) << 2 | (y & 3435973836) >>> 2) >>> 0;\n            y = ((y & 252645135) << 4 | (y & 4042322160) >>> 4) >>> 0;\n            y = (((y & 16711935) << 8 | (y & 4278255360) >>> 8) >>> 0) / 4294967296;\n\n            // CDF\n            var cosTheta = Math.sqrt((1 - y) / (1 + (a * a - 1.0) * y));\n            tmp[i] = cosTheta;\n        }\n\n        for (var i = 0; i < sampleSize; i++) {\n            var offset = (i * roughnessLevels + j) * 4;\n            var cosTheta = tmp[i];\n            var sinTheta = Math.sqrt(1.0 - cosTheta * cosTheta);\n            var x = i / sampleSize;\n            var phi = 2.0 * Math.PI * x;\n            pixels[offset] = sinTheta * Math.cos(phi);\n            pixels[offset + 1] = cosTheta;\n            pixels[offset + 2] = sinTheta * Math.sin(phi);\n            pixels[offset + 3] = 1.0;\n        }\n    }\n    normalDistribution.pixels = pixels;\n\n    return normalDistribution;\n};\n\nexport default cubemapUtil;\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,cAAc;AACpC,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,kBAAkB,MAAM,2BAA2B;AAC1D,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,WAAW,MAAM,WAAW;AAEnC,OAAOC,uBAAuB,MAAM,gCAAgC;AACpE,OAAOC,iBAAiB,MAAM,4BAA4B;AAE1D,IAAIC,WAAW,GAAG,CAAC,CAAC;AAEpB,IAAIC,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,WAAW,CAACE,uBAAuB,GAAG,UAClCC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,UAAU,EAC/D;EACE;EACA;EACA,IAAI,CAACA,UAAU,IAAI,CAACD,kBAAkB,EAAE;IACpCA,kBAAkB,GAAGN,WAAW,CAACQ,0BAA0B,CAAC,CAAC;IAC7DD,UAAU,GAAGP,WAAW,CAACS,aAAa,CAACN,QAAQ,EAAEG,kBAAkB,CAAC;EACxE;EACAD,WAAW,GAAGA,WAAW,IAAI,CAAC,CAAC;EAE/B,IAAIK,KAAK,GAAGL,WAAW,CAACK,KAAK,IAAI,EAAE;EACnC,IAAIC,MAAM,GAAGN,WAAW,CAACM,MAAM,IAAI,EAAE;EAErC,IAAIC,WAAW,GAAGP,WAAW,CAACQ,IAAI,IAAIT,MAAM,CAACS,IAAI;;EAEjD;EACA,IAAIC,kBAAkB,GAAG,IAAI3B,WAAW,CAAC;IACrCuB,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA,MAAM;IACdE,IAAI,EAAED,WAAW;IACjBG,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,IAAI,CAACF,kBAAkB,CAACG,YAAY,CAAC,CAAC,EAAE;IACpCC,OAAO,CAACC,IAAI,CAAC,yDAAyD,CAAC;EAC3E;EAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACZ,KAAK,EAAEC,MAAM,CAAC;EAClC,IAAIY,SAAS,GAAGF,IAAI,CAACG,GAAG,CAACJ,IAAI,CAAC,GAAGC,IAAI,CAACG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAEhD,IAAIC,iBAAiB,GAAG,IAAIlC,QAAQ,CAAC;IACjCmC,MAAM,EAAE,IAAIlC,MAAM,CAAC;MACfmC,MAAM,EAAEnC,MAAM,CAACoC,MAAM,CAAC,oBAAoB,CAAC;MAC3CC,QAAQ,EAAE9B;IACd,CAAC;EACL,CAAC,CAAC;EACF0B,iBAAiB,CAACK,GAAG,CAAC,oBAAoB,EAAExB,kBAAkB,CAAC;EAE/DD,WAAW,CAAC0B,UAAU,IAAIN,iBAAiB,CAACO,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC;EAC7E3B,WAAW,CAAC4B,UAAU,IAAIR,iBAAiB,CAACO,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC;EAE7E,IAAIE,UAAU,GAAG,IAAIxC,KAAK,CAAC,CAAC;EAC5B,IAAIyC,MAAM;EAEV,IAAI/B,MAAM,CAACQ,WAAW,KAAK,WAAW,EAAE;IACpC;IACA,IAAIwB,UAAU,GAAG,IAAIjD,WAAW,CAAC;MAC7BuB,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACd;MACAE,IAAI,EAAED,WAAW,KAAKxB,OAAO,CAACiD,KAAK,GAC/BjD,OAAO,CAACkD,UAAU,GAAG1B;IAC7B,CAAC,CAAC;IACFf,WAAW,CAAC0C,iBAAiB,CAACpC,QAAQ,EAAEC,MAAM,EAAEgC,UAAU,EAAE;MACxD;MACAL,UAAU,EAAE1B,WAAW,CAAC4B;IAC5B,CAAC,CAAC;IACF7B,MAAM,GAAGgC,UAAU;EACvB;EACAD,MAAM,GAAG,IAAI1C,MAAM,CAAC;IAChB+C,KAAK,EAAEN,UAAU;IACjBO,QAAQ,EAAEhB;EACd,CAAC,CAAC;EACFU,MAAM,CAACM,QAAQ,CAACX,GAAG,CAAC,gBAAgB,EAAE1B,MAAM,CAAC;EAE7C,IAAIsC,UAAU,GAAG,IAAI/C,kBAAkB,CAAC;IACpCgD,OAAO,EAAE7B;EACb,CAAC,CAAC;;EAEF;EACA,IAAIT,WAAW,CAAC0B,UAAU,EAAE;IACxBnB,WAAW,GAAGE,kBAAkB,CAACD,IAAI,GAAGzB,OAAO,CAACwD,aAAa;EACjE;EAEA,IAAIC,eAAe,GAAG,IAAI3D,SAAS,CAAC;IAChCwB,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA,MAAM;IACdE,IAAI,EAAED;EACV,CAAC,CAAC;EACF,IAAIkC,WAAW,GAAG,IAAIzD,WAAW,CAAC;IAC9B0D,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,IAAIC,SAAS,GAAGpD,MAAM,CAACgB,WAAW,KAAKxB,OAAO,CAACwD,aAAa,GAAG,YAAY,GAAG,cAAc,CAAC;EAC7F,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,SAAS,EAAE0B,CAAC,EAAE,EAAE;IAChC;IACAnC,kBAAkB,CAACE,OAAO,CAACiC,CAAC,CAAC,GAAG;MAC5BC,MAAM,EAAE,CAAC;IACb,CAAC;IACDf,MAAM,CAACM,QAAQ,CAACX,GAAG,CAAC,WAAW,EAAEmB,CAAC,IAAI1B,SAAS,GAAG,CAAC,CAAC,CAAC;;IAErD;IACA;IACA,IAAI4B,CAAC,GAAGN,eAAe,CAACnC,KAAK;IAC7B,IAAI0C,GAAG,GAAG,CAAC,GAAG/B,IAAI,CAACgC,IAAI,CAACF,CAAC,IAAIA,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG9B,IAAI,CAACiC,EAAE,GAAG,GAAG;IAEtD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtD,OAAO,CAACuD,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,IAAIL,MAAM,GAAG,IAAIF,SAAS,CAACH,eAAe,CAACnC,KAAK,GAAGmC,eAAe,CAAClC,MAAM,GAAG,CAAC,CAAC;MAC9EmC,WAAW,CAACW,MAAM,CAACZ,eAAe,CAAC;MACnCC,WAAW,CAACY,IAAI,CAACvD,QAAQ,CAAC;MAE1B,IAAIwD,MAAM,GAAGjB,UAAU,CAACkB,SAAS,CAAC3D,OAAO,CAACsD,CAAC,CAAC,CAAC;MAC7CI,MAAM,CAACP,GAAG,GAAGA,GAAG;MAChBjD,QAAQ,CAAC0D,MAAM,CAAC3B,UAAU,EAAEyB,MAAM,CAAC;MACnCxD,QAAQ,CAAC2D,EAAE,CAACC,UAAU,CAClB,CAAC,EAAE,CAAC,EAAElB,eAAe,CAACnC,KAAK,EAAEmC,eAAe,CAAClC,MAAM,EACnDvB,OAAO,CAAC4E,IAAI,EAAEpD,WAAW,EAAEsC,MAC/B,CAAC;;MAED;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEAJ,WAAW,CAACmB,MAAM,CAAC9D,QAAQ,CAAC;MAC5BW,kBAAkB,CAACE,OAAO,CAACiC,CAAC,CAAC,CAACC,MAAM,CAACjD,OAAO,CAACsD,CAAC,CAAC,CAAC,GAAGL,MAAM;IAC7D;IAEAL,eAAe,CAACnC,KAAK,IAAI,CAAC;IAC1BmC,eAAe,CAAClC,MAAM,IAAI,CAAC;IAC3BkC,eAAe,CAACqB,KAAK,CAAC,CAAC;IACvB;EACJ;EAEApB,WAAW,CAACqB,OAAO,CAAChE,QAAQ,CAAC;EAC7B0C,eAAe,CAACsB,OAAO,CAAChE,QAAQ,CAAC;EACjCgC,MAAM,CAACgC,OAAO,CAAChE,QAAQ,CAAC;EACxB;EACAG,kBAAkB,CAAC6D,OAAO,CAAChE,QAAQ,CAAC;;EAEpC;;EAEA,OAAO;IACHiE,cAAc,EAAEtD,kBAAkB;IAClCP,UAAU,EAAEA,UAAU;IACtBD,kBAAkB,EAAEA,kBAAkB;IACtC+D,cAAc,EAAE9C;EACpB,CAAC;AACL,CAAC;AAEDvB,WAAW,CAACS,aAAa,GAAG,UAAUN,QAAQ,EAAEG,kBAAkB,EAAE;EAChEA,kBAAkB,GAAGA,kBAAkB,IAAIN,WAAW,CAACQ,0BAA0B,CAAC,CAAC;EACnF,IAAI8D,WAAW,GAAG,IAAIjF,WAAW,CAAC;IAC9B0D,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,IAAIwB,IAAI,GAAG,IAAIjF,IAAI,CAAC;IAChBuC,QAAQ,EAAE/B;EACd,CAAC,CAAC;EAEF,IAAI6C,OAAO,GAAG,IAAIzD,SAAS,CAAC;IACxBwB,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXE,IAAI,EAAEzB,OAAO,CAACkD,UAAU;IACxBkC,KAAK,EAAEpF,OAAO,CAACqF,aAAa;IAC5BC,KAAK,EAAEtF,OAAO,CAACqF,aAAa;IAC5BE,SAAS,EAAEvF,OAAO,CAACwF,OAAO;IAC1BC,SAAS,EAAEzF,OAAO,CAACwF,OAAO;IAC1BE,SAAS,EAAE;EACf,CAAC,CAAC;EACFP,IAAI,CAACQ,UAAU,CAAC,oBAAoB,EAAEzE,kBAAkB,CAAC;EACzDiE,IAAI,CAACQ,UAAU,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC3CR,IAAI,CAACS,YAAY,CAACrC,OAAO,CAAC;EAC1B4B,IAAI,CAACV,MAAM,CAAC1D,QAAQ,EAAEmE,WAAW,CAAC;;EAElC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAA,WAAW,CAACH,OAAO,CAAChE,QAAQ,CAAC;EAE7B,OAAOwC,OAAO;AAClB,CAAC;AAED3C,WAAW,CAACQ,0BAA0B,GAAG,UAAUyE,eAAe,EAAEC,UAAU,EAAE;EAE5E;EACA;EACA;EACA,IAAID,eAAe,GAAGA,eAAe,IAAI,GAAG;EAC5C,IAAIC,UAAU,GAAGA,UAAU,IAAI,IAAI;EAEnC,IAAI5E,kBAAkB,GAAG,IAAIpB,SAAS,CAAC;IACnCwB,KAAK,EAAEuE,eAAe;IACtBtE,MAAM,EAAEuE,UAAU;IAClBrE,IAAI,EAAEzB,OAAO,CAACiD,KAAK;IACnBsC,SAAS,EAAEvF,OAAO,CAACwF,OAAO;IAC1BC,SAAS,EAAEzF,OAAO,CAACwF,OAAO;IAC1BJ,KAAK,EAAEpF,OAAO,CAACqF,aAAa;IAC5BC,KAAK,EAAEtF,OAAO,CAACqF,aAAa;IAC5BK,SAAS,EAAE;EACf,CAAC,CAAC;EACF,IAAI5B,MAAM,GAAG,IAAIiC,YAAY,CAACD,UAAU,GAAGD,eAAe,GAAG,CAAC,CAAC;EAC/D,IAAIG,GAAG,GAAG,EAAE;;EAEZ;EACA;EACA;EACA,KAAK,IAAI7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0B,eAAe,EAAE1B,CAAC,EAAE,EAAE;IACtC,IAAI8B,SAAS,GAAG9B,CAAC,GAAG0B,eAAe;IACnC,IAAIK,CAAC,GAAGD,SAAS,GAAGA,SAAS;IAE7B,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiC,UAAU,EAAEjC,CAAC,EAAE,EAAE;MACjC;MACA;MACA;MACA;MACA,IAAIsC,CAAC,GAAG,CAACtC,CAAC,IAAI,EAAE,GAAGA,CAAC,KAAK,EAAE,MAAM,CAAC;MAClCsC,CAAC,GAAG,CAAC,CAACA,CAAC,GAAG,UAAU,KAAK,CAAC,GAAG,CAACA,CAAC,GAAG,UAAU,MAAM,CAAC,MAAM,CAAC;MAC1DA,CAAC,GAAG,CAAC,CAACA,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,CAACA,CAAC,GAAG,UAAU,MAAM,CAAC,MAAM,CAAC;MACzDA,CAAC,GAAG,CAAC,CAACA,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,CAACA,CAAC,GAAG,UAAU,MAAM,CAAC,MAAM,CAAC;MACzDA,CAAC,GAAG,CAAC,CAAC,CAACA,CAAC,GAAG,QAAQ,KAAK,CAAC,GAAG,CAACA,CAAC,GAAG,UAAU,MAAM,CAAC,MAAM,CAAC,IAAI,UAAU;;MAEvE;MACA,IAAIC,QAAQ,GAAGnE,IAAI,CAACoE,IAAI,CAAC,CAAC,CAAC,GAAGF,CAAC,KAAK,CAAC,GAAG,CAACD,CAAC,GAAGA,CAAC,GAAG,GAAG,IAAIC,CAAC,CAAC,CAAC;MAC3DH,GAAG,CAACnC,CAAC,CAAC,GAAGuC,QAAQ;IACrB;IAEA,KAAK,IAAIvC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiC,UAAU,EAAEjC,CAAC,EAAE,EAAE;MACjC,IAAIyC,MAAM,GAAG,CAACzC,CAAC,GAAGgC,eAAe,GAAG1B,CAAC,IAAI,CAAC;MAC1C,IAAIiC,QAAQ,GAAGJ,GAAG,CAACnC,CAAC,CAAC;MACrB,IAAI0C,QAAQ,GAAGtE,IAAI,CAACoE,IAAI,CAAC,GAAG,GAAGD,QAAQ,GAAGA,QAAQ,CAAC;MACnD,IAAII,CAAC,GAAG3C,CAAC,GAAGiC,UAAU;MACtB,IAAIW,GAAG,GAAG,GAAG,GAAGxE,IAAI,CAACiC,EAAE,GAAGsC,CAAC;MAC3B1C,MAAM,CAACwC,MAAM,CAAC,GAAGC,QAAQ,GAAGtE,IAAI,CAACyE,GAAG,CAACD,GAAG,CAAC;MACzC3C,MAAM,CAACwC,MAAM,GAAG,CAAC,CAAC,GAAGF,QAAQ;MAC7BtC,MAAM,CAACwC,MAAM,GAAG,CAAC,CAAC,GAAGC,QAAQ,GAAGtE,IAAI,CAAC0E,GAAG,CAACF,GAAG,CAAC;MAC7C3C,MAAM,CAACwC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG;IAC5B;EACJ;EACApF,kBAAkB,CAAC4C,MAAM,GAAGA,MAAM;EAElC,OAAO5C,kBAAkB;AAC7B,CAAC;AAED,eAAeN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}