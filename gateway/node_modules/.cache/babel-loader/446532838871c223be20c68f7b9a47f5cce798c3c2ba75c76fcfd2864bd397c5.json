{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '../../assets/images/survey2.png';\nconst _hoisted_1 = {\n  key: 1,\n  class: \"qn-fill\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"back-bt\"\n};\nconst _hoisted_3 = {\n  class: \"paper\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"padding-bottom\": \"50px\"\n  }\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"tyn-icon\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n})], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"body\"\n};\nconst _hoisted_8 = {\n  class: \"title\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"description\"\n};\nconst _hoisted_10 = {\n  class: \"main\"\n};\nconst _hoisted_11 = {\n  class: \"q-title\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"must\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"point\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"q-description\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  style: {\n    \"color\": \"#9b9ea0\",\n    \"font-size\": \"x-small\",\n    \"margin\": \"5px\"\n  }\n};\nconst _hoisted_16 = {\n  key: 2,\n  class: \"q-opt\"\n};\nconst _hoisted_17 = {\n  key: 3\n};\nconst _hoisted_18 = {\n  key: 5,\n  class: \"q-opt\"\n};\nconst _hoisted_19 = {\n  class: \"submit-bt\"\n};\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_23 = {\n  class: \"tail\"\n};\nconst _hoisted_24 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FinishTest = _resolveComponent(\"FinishTest\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_DeadTime = _resolveComponent(\"DeadTime\");\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\");\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.success ? (_openBlock(), _createBlock(_component_FinishTest, {\n    key: 0,\n    quesStorage: $data.questions\n  }, null, 8 /* PROPS */, [\"quesStorage\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.mode === '0' || $data.mode === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_button, {\n    icon: \"el-icon-arrow-left\",\n    type: \"danger\",\n    onClick: $options.quit\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"退出预览\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [$data.close ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, $data.close ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_6, \"问卷已结束，感谢您的参与！\")) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"middle\",\n    onClick: $options.gotoHome\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"返回\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\"        <div v-if=\\\"repeat\\\" style=\\\"padding-bottom: 50px\\\">\"), _createCommentVNode(\"          <div class=\\\"tyn-icon\\\">\"), _createCommentVNode(\"            <img src=\\\"../../assets/images/survey2.png\\\" alt=\\\"\\\">\"), _createCommentVNode(\"          </div>\"), _createCommentVNode(\"          <h1 v-if=\\\"repeat\\\">您已填写过此问卷！</h1>\"), _createCommentVNode(\"          <el-button type=\\\"primary\\\" size=\\\"middle\\\" @click=\\\"gotoHome\\\">返回</el-button>\"), _createCommentVNode(\"        </div>\"), _createElementVNode(\"div\", _hoisted_7, [$data.finished_time !== '' && $data.finished_time !== undefined ? (_openBlock(), _createBlock(_component_DeadTime, {\n    key: 0,\n    endTime: $data.finished_time\n  }, null, 8 /* PROPS */, [\"endTime\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_8, _toDisplayString($data.title), 1 /* TEXT */), this.description !== '' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"   \" + _toDisplayString($data.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_divider), _createElementVNode(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"ques-block\",\n      key: item.id\n    }, [_createElementVNode(\"div\", _hoisted_11, [_createTextVNode(_toDisplayString(item.title) + \" \", 1 /* TEXT */), item.must ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, \"(必填)\")) : _createCommentVNode(\"v-if\", true), item.type !== 'name' && item.type !== 'stuId' && item.type !== 'class' && item.type !== 'school' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_13, \"  [分值 : \" + _toDisplayString(item.point) + \"] \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), item.description !== '' && item.description !== null && item.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _toDisplayString(item.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  图片\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.imgList, (i, index) => {\n      return _openBlock(), _createBlock(_component_el_row, {\n        class: \"block-img\",\n        key: i.index\n      }, {\n        default: _withCtx(() => [index % 2 === 0 ? (_openBlock(), _createBlock(_component_el_col, {\n          key: 0,\n          offset: 4,\n          span: 8,\n          class: \"demo-image__preview\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_image, {\n            class: \"img\",\n            src: i.url,\n            \"preview-src-list\": [i.url]\n          }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), index % 2 === 0 && index + 1 <= item.imgList.length - 1 ? (_openBlock(), _createBlock(_component_el_col, {\n          key: 1,\n          span: 8,\n          class: \"demo-image__preview\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_image, {\n            class: \"img\",\n            src: item.imgList[index + 1].url,\n            \"preview-src-list\": [item.imgList[index + 1].url]\n          }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */)), item.imgList.length !== 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_15, \"（点击图片查看大图）\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                视频\"), _createCommentVNode(\" <el-row class=\\\"block-img\\\" v-for=\\\"i in item.videoList\\\" :key=\\\"i.index\\\">\\r\\n                    <embed width=400 height=230 transparentatstart=true\\r\\n                           animationatstart=false autostart=true autosize=false volume=100\\r\\n                           displaysize=0 showdisplay=true showstatusbar=true showcontrols=true\\r\\n                           showaudiocontrols=true showtracker=true showpositioncontrols=true\\r\\n                           balance=true :src=\\\"i.url\\\">\\r\\n                  </el-row> \"), _createCommentVNode(\"     姓名/学号/班级/学校\"), item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createVNode(_component_el_input, {\n      placeholder: \"请输入内容\",\n      modelValue: $data.answers[item.id - 1].ans,\n      \"onUpdate:modelValue\": $event => $data.answers[item.id - 1].ans = $event,\n      style: {\n        \"z-index\": \"0\"\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"              判断/单选\"), item.type === 'radio' || item.type === 'judge' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.options, opt => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"q-opt\",\n        key: opt.id\n      }, [item.type === 'radio' || item.type === 'judge' ? (_openBlock(), _createBlock(_component_el_radio, {\n        key: 0,\n        modelValue: $data.answers[item.id - 1].ans,\n        \"onUpdate:modelValue\": $event => $data.answers[item.id - 1].ans = $event,\n        label: opt.title\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(opt.title), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"label\"])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  多选\"), item.type === 'checkbox' ? (_openBlock(), _createBlock(_component_el_checkbox_group, {\n      key: 4,\n      class: \"q-opt\",\n      modelValue: $data.answers[item.id - 1].ansList,\n      \"onUpdate:modelValue\": $event => $data.answers[item.id - 1].ansList = $event\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.options, opt => {\n        return _openBlock(), _createBlock(_component_el_checkbox, {\n          key: opt.id,\n          label: opt.title\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(opt.title), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  填空\"), item.type === 'text' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [item.row > 1 ? (_openBlock(), _createBlock(_component_el_input, {\n      key: 0,\n      type: \"textarea\",\n      autosize: {\n        minRows: 2,\n        maxRows: item.row\n      },\n      placeholder: \"请输入内容\",\n      modelValue: $data.answers[item.id - 1].ans,\n      \"onUpdate:modelValue\": $event => $data.answers[item.id - 1].ans = $event\n    }, null, 8 /* PROPS */, [\"autosize\", \"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true), item.row === 1 ? (_openBlock(), _createBlock(_component_el_input, {\n      key: 1,\n      placeholder: \"请输入内容\",\n      modelValue: $data.answers[item.id - 1].ans,\n      \"onUpdate:modelValue\": $event => $data.answers[item.id - 1].ans = $event,\n      style: {\n        \"z-index\": \"0px\"\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_19, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"default\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"暂存并退出\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.submit,\n    size: \"default\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"提交\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _hoisted_20, _hoisted_21, _hoisted_22, _createVNode(_component_el_divider), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"a\", {\n    href: _ctx.rootUrl\n  }, \"问卷星球\", 8 /* PROPS */, _hoisted_24), _createTextVNode(\" 提供技术支持 \")])])]))]);\n}","map":{"version":3,"names":["_imports_0","key","class","style","_createElementVNode","src","alt","_createElementBlock","$data","success","_createBlock","_component_FinishTest","quesStorage","questions","_hoisted_1","mode","_hoisted_2","_createVNode","_component_el_button","icon","type","onClick","$options","quit","default","_withCtx","_createTextVNode","_","_createCommentVNode","_hoisted_3","close","_hoisted_4","_hoisted_5","_hoisted_6","size","gotoHome","_Fragment","_hoisted_7","finished_time","undefined","_component_DeadTime","endTime","_hoisted_8","_toDisplayString","title","description","_hoisted_9","_component_el_divider","_hoisted_10","_renderList","item","id","_hoisted_11","must","_hoisted_12","_hoisted_13","point","_hoisted_14","imgList","i","index","_component_el_row","_component_el_col","offset","span","_component_el_image","url","length","_hoisted_15","_hoisted_16","_component_el_input","placeholder","modelValue","answers","ans","$event","_hoisted_17","options","opt","_component_el_radio","label","_component_el_checkbox_group","ansList","_component_el_checkbox","_hoisted_18","row","autosize","minRows","maxRows","_hoisted_19","submit","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","href","_ctx","rootUrl","_hoisted_24"],"sources":["E:\\mytest\\src\\views\\qn-fillpane\\fillQnmytest.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <FinishTest v-if=\"success\" :quesStorage=\"questions\"></FinishTest>\r\n    <div class=\"qn-fill\" v-else>\r\n      <div class=\"back-bt\" v-if=\"mode === '0' || mode === 0\">\r\n        <el-button icon=\"el-icon-arrow-left\" type=\"danger\" @click=\"quit\">退出预览</el-button>\r\n      </div>\r\n      <div class=\"paper\">\r\n        <div v-if=\"close\" style=\"padding-bottom: 50px\">\r\n          <div class=\"tyn-icon\">\r\n            <img src=\"../../assets/images/survey2.png\" alt=\"\">\r\n          </div>\r\n          <h1 v-if=\"close\">问卷已结束，感谢您的参与！</h1>\r\n          <el-button type=\"primary\" size=\"middle\" @click=\"gotoHome\">返回</el-button>\r\n        </div>\r\n        <!--        <div v-if=\"repeat\" style=\"padding-bottom: 50px\">-->\r\n        <!--          <div class=\"tyn-icon\">-->\r\n        <!--            <img src=\"../../assets/images/survey2.png\" alt=\"\">-->\r\n        <!--          </div>-->\r\n        <!--          <h1 v-if=\"repeat\">您已填写过此问卷！</h1>-->\r\n        <!--          <el-button type=\"primary\" size=\"middle\" @click=\"gotoHome\">返回</el-button>-->\r\n        <!--        </div>-->\r\n        <div class=\"body\" v-else>\r\n\r\n          <DeadTime v-if=\"finished_time !== '' && finished_time !== undefined\" :endTime=\"finished_time\"></DeadTime>\r\n\r\n          <div class=\"title\">\r\n            {{ title }}\r\n          </div>\r\n\r\n          <div class=\"description\" v-if=\"this.description !== ''\">\r\n            &emsp;&emsp;{{ description }}\r\n          </div>\r\n\r\n          <el-divider></el-divider>\r\n\r\n          <div class=\"main\">\r\n            <div class=\"ques-block\" v-for=\"item in questions\" :key=\"item.id\">\r\n              <div class=\"q-title\">\r\n                {{ item.title }}\r\n                <span class=\"must\" v-if=\"item.must\">(必填)</span>\r\n                <span class=\"point\" v-if=\"item.type !== 'name'\r\n                  && item.type !== 'stuId'\r\n                  && item.type !== 'class'\r\n                  && item.type !== 'school'\">\r\n                  &ensp;[分值 : {{ item.point }}]\r\n                </span>\r\n              </div>\r\n\r\n              <div class=\"q-description\"\r\n                v-if=\"item.description !== '' && item.description !== null && item.description !== undefined\">\r\n                {{ item.description }}\r\n              </div>\r\n\r\n              <!--                  图片-->\r\n              <el-row class=\"block-img\" v-for=\"(i, index) in item.imgList\" :key=\"i.index\">\r\n                <el-col :offset=\"4\" :span=\"8\" class=\"demo-image__preview\" v-if=\"index % 2 === 0\">\r\n                  <el-image class=\"img\" :src=\"i.url\" :preview-src-list=\"[i.url]\">\r\n                  </el-image>\r\n                </el-col>\r\n                <el-col :span=\"8\" class=\"demo-image__preview\" v-if=\"index % 2 === 0 && index + 1 <= item.imgList.length - 1\">\r\n                  <el-image class=\"img\" :src=\"item.imgList[index + 1].url\"\r\n                    :preview-src-list=\"[item.imgList[index + 1].url]\">\r\n                  </el-image>\r\n                </el-col>\r\n              </el-row>\r\n              <span style=\"color: #9b9ea0;font-size: x-small;margin: 5px\"\r\n                v-if=\"item.imgList.length !== 0\">（点击图片查看大图）</span>\r\n\r\n\r\n              <!--                视频-->\r\n              <!-- <el-row class=\"block-img\" v-for=\"i in item.videoList\" :key=\"i.index\">\r\n                    <embed width=400 height=230 transparentatstart=true\r\n                           animationatstart=false autostart=true autosize=false volume=100\r\n                           displaysize=0 showdisplay=true showstatusbar=true showcontrols=true\r\n                           showaudiocontrols=true showtracker=true showpositioncontrols=true\r\n                           balance=true :src=\"i.url\">\r\n                  </el-row> -->\r\n\r\n              <!--     姓名/学号/班级/学校-->\r\n              <div class=\"q-opt\" v-if=\"item.type === 'name'\r\n                || item.type === 'stuId'\r\n                || item.type === 'class'\r\n                || item.type === 'school'\">\r\n                <el-input placeholder=\"请输入内容\" v-model=\"answers[item.id - 1].ans\" style=\"z-index: 0;\">\r\n                </el-input>\r\n              </div>\r\n\r\n              <!--              判断/单选-->\r\n              <div v-if=\"item.type === 'radio' || item.type === 'judge'\">\r\n                <div class=\"q-opt\" v-for=\"opt in item.options\" :key=\"opt.id\">\r\n                  <el-radio v-if=\"item.type === 'radio' || item.type === 'judge'\" v-model=\"answers[item.id - 1].ans\"\r\n                    :label=\"opt.title\">\r\n                    {{ opt.title }}\r\n                  </el-radio>\r\n                </div>\r\n              </div>\r\n\r\n              <!--                  多选-->\r\n              <el-checkbox-group class=\"q-opt\" v-if=\"item.type === 'checkbox'\" v-model=\"answers[item.id - 1].ansList\">\r\n                <el-checkbox v-for=\"opt in item.options\" :key=\"opt.id\" :label=\"opt.title\">\r\n                  {{ opt.title }}\r\n                </el-checkbox>\r\n              </el-checkbox-group>\r\n\r\n              <!--                  填空-->\r\n              <div class=\"q-opt\" v-if=\"item.type === 'text'\">\r\n                <el-input v-if=\"item.row > 1\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: item.row }\"\r\n                  placeholder=\"请输入内容\" v-model=\"answers[item.id - 1].ans\">\r\n                </el-input>\r\n                <el-input v-if=\"item.row === 1\" placeholder=\"请输入内容\" v-model=\"answers[item.id - 1].ans\" style=\"z-index: 0px;\">\r\n                </el-input>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"submit-bt\">\r\n          <el-button type=\"primary\" size=\"default\">暂存并退出</el-button>\r\n          <el-button type=\"primary\" @click=\"submit\" size=\"default\">提交</el-button>\r\n        </div>\r\n        <p></p>\r\n        <p></p>\r\n        <p></p>\r\n        <el-divider/>\r\n        <div class=\"tail\">\r\n          <a :href=\"rootUrl\">问卷星球</a>&ensp;提供技术支持\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FinishTest from \"@/views/qn-fillpane/FinishTest.vue\";\r\nimport getDataApi from \"@/utils/getDataApi\";\r\nimport saveAnsApi from \"@/utils/saveDataApi\";\r\nimport toolApi from \"@/utils/toolApi\";\r\nimport DeadTime from \"@/views/qn-fillpane/components/ddl.vue\";\r\nexport default {\r\n  name: \"FillQn\",\r\n  mixins: [getDataApi, saveAnsApi, toolApi],\r\n  components: { FinishTest, DeadTime },\r\n  data() {\r\n    return {\r\n      // rootUrl: this.GLOBAL.baseUrl,\r\n      success: false,\r\n      close: false,\r\n      repeat: false,\r\n      // finished_time: '999',\r\n      qn_id: '',\r\n      mode: this.$route.query.mode,\r\n      open: 1,\r\n      duration: 999,\r\n      title: '考试问卷Beta',\r\n      description: '直接就是填写',\r\n      questions: [\r\n        {\r\n          id: 1,\r\n          type: 'name',\r\n          title: '姓名',\r\n          must: true, // 是否必填\r\n          description: '111', // 问题描述\r\n          options: [\r\n            {\r\n              title: '111', // 选项标题\r\n              id: 0 // 选项id\r\n            },\r\n          ],\r\n          row: 1, // 填空区域行数\r\n          refer: '', // 参考答案\r\n          point: 20,  // 分值\r\n          answer: '',\r\n          imgList: [],\r\n          // videoList: [],\r\n          // last_question: 0,\r\n          // last_option: 0,\r\n          // is_shown: true,\r\n          // question_id: 1,\r\n          // qn_id: 456,\r\n          // score: 10, // 最大评分\r\n        },\r\n        {\r\n          id: 2,\r\n          type: 'stuId',\r\n          title: '学号',\r\n          must: true, // 是否必填\r\n          description: '111', // 问题描述\r\n          options: [\r\n            {\r\n              title: '111', // 选项标题\r\n              id: 0 // 选项id\r\n            },\r\n          ],\r\n          row: 1, // 填空区域行数\r\n          refer: '', // 参考答案\r\n          point: 20,  // 分值\r\n          answer: '',\r\n          imgList: [],\r\n          // videoList: [],\r\n          // last_question: 0,\r\n          // last_option: 0,\r\n          // is_shown: true,\r\n          // question_id: 1,\r\n          // qn_id: 456,\r\n          // score: 10, // 最大评分\r\n        },\r\n        {\r\n          id: 3,\r\n          type: 'class',\r\n          title: '班级',\r\n          must: true, // 是否必填\r\n          description: '111', // 问题描述\r\n          options: [\r\n            {\r\n              title: '111', // 选项标题\r\n              id: 0 // 选项id\r\n            },\r\n          ],\r\n          row: 1, // 填空区域行数\r\n          refer: '', // 参考答案\r\n          point: 20,  // 分值\r\n          answer: '',\r\n          imgList: [],\r\n          // videoList: [],\r\n          // last_question: 0,\r\n          // last_option: 0,\r\n          // is_shown: true,\r\n          // question_id: 1,\r\n          // qn_id: 456,\r\n          // score: 10, // 最大评分\r\n        },\r\n        {\r\n          id: 4,\r\n          type: 'school',\r\n          title: '学校',\r\n          must: true, // 是否必填\r\n          description: '111', // 问题描述\r\n          options: [\r\n            {\r\n              title: '111', // 选项标题\r\n              id: 0 // 选项id\r\n            },\r\n          ],\r\n          row: 1, // 填空区域行数\r\n          refer: '', // 参考答案\r\n          point: 20,  // 分值\r\n          answer: '',\r\n          imgList: [],\r\n          // videoList: [],\r\n          // last_question: 0,\r\n          // last_option: 0,\r\n          // is_shown: true,\r\n          // question_id: 1,\r\n          // qn_id: 456,\r\n          // score: 10, // 最大评分\r\n        },\r\n        {\r\n          id: 5,\r\n          type: 'radio',\r\n          title: '这是什么题',\r\n          must: true, // 是否必填\r\n          description: '111', // 问题描述\r\n          options: [\r\n            {\r\n              title: '单选题', // 选项标题\r\n              id: 0 // 选项id\r\n            },\r\n            {\r\n              title: '多选题', // 选项标题\r\n              id: 1 // 选项id\r\n            },\r\n          ],\r\n          row: 1, // 填空区域行数\r\n          refer: '', // 参考答案\r\n          point: 20,  // 分值\r\n          answer: '',\r\n          imgList: [],\r\n          // videoList: [],\r\n          // last_question: 0,\r\n          // last_option: 0,\r\n          // is_shown: true,\r\n          // question_id: 1,\r\n          // qn_id: 456,\r\n          // score: 10, // 最大评分\r\n        },\r\n        {\r\n          id: 6,\r\n          type: 'checkbox',\r\n          title: '哪些是正确答案',\r\n          must: true, // 是否必填\r\n          description: '111', // 问题描述\r\n          options: [\r\n            {\r\n              title: '1+1=2', // 选项标题\r\n              id: 0 // 选项id\r\n            },\r\n            {\r\n              title: '1+4=2', // 选项标题\r\n              id: 0 // 选项id\r\n            },\r\n            {\r\n              title: '1+3=4', // 选项标题\r\n              id: 0 // 选项id\r\n            },\r\n            {\r\n              title: '1+4=4', // 选项标题\r\n              id: 0 // 选项id\r\n            },\r\n          ],\r\n          row: 1, // 填空区域行数\r\n          refer: '', // 参考答案\r\n          point: 20,  // 分值\r\n          answer: '',\r\n          imgList: [],\r\n          // videoList: [],\r\n          // last_question: 0,\r\n          // last_option: 0,\r\n          // is_shown: true,\r\n          // question_id: 1,\r\n          // qn_id: 456,\r\n          // score: 10, // 最大评分\r\n        },\r\n        {\r\n          id: 7,\r\n          type: 'text',\r\n          title: '填点东西',\r\n          must: true, // 是否必填\r\n          description: '111', // 问题描述\r\n          options: [\r\n            {\r\n              title: '描述', // 选项标题\r\n              id: 0 // 选项id\r\n            },\r\n          ],\r\n          row: 1, // 填空区域行数\r\n          refer: '', // 参考答案\r\n          point: 20,  // 分值\r\n          answer: '',\r\n          imgList: [],\r\n          // videoList: [],\r\n          // last_question: 0,\r\n          // last_option: 0,\r\n          // is_shown: true,\r\n          // question_id: 1,\r\n          // qn_id: 456,\r\n          // score: 10, // 最大评分\r\n        },\r\n        {\r\n          id: 8,\r\n          type: 'judge',\r\n          title: '这是判断题',\r\n          must: true, // 是否必填\r\n          description: '1', // 问题描述\r\n          options: [\r\n            {\r\n              title: '对', // 选项标题\r\n              id: 1 // 选项id\r\n            },\r\n            {\r\n              title: '错', // 选项标题\r\n              id: 2 // 选项id\r\n            },\r\n          ],\r\n          row: 1, // 填空区域行数\r\n          refer: '', // 参考答案\r\n          point: 20,  // 分值\r\n          answer: '',\r\n          imgList: [],\r\n          // videoList: [],\r\n          // last_question: 0,\r\n          // last_option: 0,\r\n          // is_shown: true,\r\n          // question_id: 1,\r\n          // qn_id: 456,\r\n          // score: 10, // 最大评分\r\n        },\r\n      ],\r\n      answers: [\r\n        {\r\n          question_id: '1',\r\n          type: 'name',\r\n          ans: null,\r\n          ansList: [],\r\n          answer: ''\r\n        },\r\n        {\r\n          question_id: '2',\r\n          type: 'stuId',\r\n          ans: null,\r\n          ansList: [],\r\n          answer: ''\r\n        },\r\n        {\r\n          question_id: '3',\r\n          type: 'class',\r\n          ans: null,\r\n          ansList: [],\r\n          answer: ''\r\n        },\r\n        {\r\n          question_id: '4',\r\n          type: 'school',\r\n          ans: null,\r\n          ansList: [],\r\n          answer: ''\r\n        },\r\n        {\r\n          question_id: '5',\r\n          type: 'radio',\r\n          ans: null,\r\n          ansList: [],\r\n          answer: ''\r\n        },\r\n        {\r\n          question_id: '6',\r\n          type: 'checkbox',\r\n          ans: null,\r\n          ansList: [],\r\n          answer: ''\r\n        },\r\n        {\r\n          question_id: '7',\r\n          type: 'text',\r\n          ans: null,\r\n          ansList: [],\r\n          answer: ''\r\n        },\r\n        {\r\n          question_id: '8',\r\n          type: 'judge',\r\n          ans: null,\r\n          ansList: [],\r\n          answer: ''\r\n        },\r\n      ],\r\n      quesStorage: [],\r\n      type: '',\r\n      finished_time: new Date(),\r\n    }\r\n  },\r\n  methods: {\r\n    gotoHome() {\r\n      this.$router.push('/');\r\n    },\r\n    backToSurvey() {\r\n      this.success = false;\r\n      this.repeat = false;\r\n      this.close = false;\r\n      location.reload();\r\n    },\r\n    submit: function () {\r\n      this.submitAns('2');\r\n    },\r\n    quit: function () {\r\n      this.$confirm('请选择返回问卷编辑页面或问卷中心？', '确认信息', {\r\n        distinguishCancelAndClose: true,\r\n        confirmButtonText: '编辑页面',\r\n        cancelButtonText: '问卷中心'\r\n      })\r\n        .then(() => {\r\n          location.href = this.GLOBAL.baseUrl + \"/edit_test?pid=\" + this.$route.query.pid;\r\n        })\r\n        .catch(action => {\r\n          if (action === 'cancel') {\r\n            this.$router.push('/index');\r\n          }\r\n        });\r\n    },\r\n    fetchQuestions() {\r\n      // 假设从后端获取问题数据的过程\r\n      const formData = new FormData();\r\n      // formData.append(\"survey_keyword\", this.loginForm.user);\r\n      formData.append(\"code\", this.$route.params.code);\r\n      this.$axios({\r\n        method: 'post',\r\n        url: '/question/api/listquestionalt',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            this.title = res.data.title;\r\n            this.description = res.data.description;\r\n            this.duration = res.data.duration;\r\n            this.finished_time = new Date();\r\n            console.log(\"duration:\", res.data.duration);\r\n            this.finished_time.setMinutes(this.finished_time.getMinutes() + res.data.duration);\r\n            console.log(\"finish time:\", this.finished_time);\r\n            this.questions = JSON.parse(res.data.data);\r\n            this.answers = this.questions.map(question => ({\r\n              id: question.id,\r\n              type: question.type,\r\n              ans: '',\r\n              ansList: []\r\n            }));\r\n            // for (var i = 0; i < this.questionnaires.length; i++) {\r\n            // if (this.questionnaires[i].questionType == '1')\r\n            //     this.questionnaires[i].questionType = '普通问卷'\r\n            // else if (this.questionnaires[i].questionType == '2')\r\n            //     this.questionnaires[i].questionType = '投票问卷'\r\n            // else if (this.questionnaires[i].questionType == '3')\r\n            //     this.questionnaires[i].questionType = '考试问卷'\r\n            // else\r\n            //     this.questionnaires[i].questionType = '报名问卷'\r\n            // }\r\n            console.log(this.title);\r\n            console.log(this.description);\r\n            console.log(this.questions);\r\n            console.log(\"answers init:\");\r\n            console.log(this.answers);\r\n            console.log(\"success on fetching questions\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case 4:\r\n            console.log(\"error 4\");\r\n            break;\r\n          case 5:\r\n            console.log(\"error 5\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n  },\r\n  created() {\r\n    // if (this.mode === '0') {\r\n    //   this.getQnDataForPreview();\r\n    // }\r\n    // else if (this.mode === '1') {\r\n    //   this.getQnDataForFill(false, true, true);\r\n    // }\r\n    this.fetchQuestions();\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n@media screen and (min-width: 600px) {\r\n  .tyn-icon {\r\n    margin: 50px;\r\n    padding-top: 100px;\r\n  }\r\n\r\n  .qn-fill {\r\n    /* background-image: url(\"../../../src/assets/images/Edit.png\"); */\r\n    background-repeat: repeat-y;\r\n    min-height: 800px;\r\n    overflow: hidden;\r\n    background-position: center;\r\n    background-size: 100% auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .qn-fill .back-bt {\r\n    position: fixed;\r\n    right: 90px;\r\n    top: 0;\r\n    margin: auto;\r\n  }\r\n\r\n  .qn-fill .back-bt .el-button {\r\n    border-radius: 0 0 15px 15px;\r\n  }\r\n\r\n  .qn-fill .paper {\r\n    margin: 120px auto 0;\r\n    width: 900px;\r\n    background-color: #FFFFFF;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, .12), 0 0 6px rgba(0, 0, 0, .04)\r\n  }\r\n\r\n  .qn-fill .body {\r\n    margin-left: 80px;\r\n    margin-right: 80px;\r\n  }\r\n\r\n  .qn-fill .body .title {\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    padding-bottom: 40px;\r\n    padding-top: 45px;\r\n  }\r\n\r\n  .qn-fill .body .description {\r\n    text-align: left;\r\n    font-size: 16px;\r\n    color: black;\r\n    line-height: 30px;\r\n    padding-bottom: 20px;\r\n  }\r\n\r\n  .img {\r\n    width: 200px;\r\n    height: 200px;\r\n  }\r\n\r\n  .qn-fill .body .el-divider--horizontal {\r\n    margin: 0;\r\n  }\r\n\r\n  .qn-fill .body .q-title {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 40px 10px 10px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .qn-fill .body .q-description {\r\n    text-align: left;\r\n    font-size: 14px;\r\n    padding-left: 10px;\r\n    padding-top: 5px;\r\n    padding-bottom: 10px;\r\n    color: #969696;\r\n  }\r\n\r\n  .qn-fill .body .must {\r\n    font-weight: normal;\r\n    color: crimson;\r\n  }\r\n\r\n  .qn-fill .body .q-opt {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 10px 10px 10px;\r\n  }\r\n\r\n  .qn-fill .body .el-checkbox {\r\n    padding: 10px 0;\r\n    display: block;\r\n  }\r\n\r\n  .qn-fill .body .q-opt .el-textarea__inner {\r\n    max-height: 100px;\r\n  }\r\n\r\n  .qn-fill .body .submit-bt {\r\n    padding-top: 30px;\r\n    padding-bottom: 50px;\r\n  }\r\n\r\n  .qn-fill .tail {\r\n    padding-top: 25px;\r\n    font-size: 15px;\r\n    color: #b9b9b9;\r\n    /* border-top: solid 1px #e3e3e3; */\r\n    height: 50px;\r\n    margin: 0 30px 130px;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 600px) {\r\n  .tyn-icon {\r\n    margin: 50px;\r\n    padding-top: 100px;\r\n  }\r\n\r\n  .qn-fill {\r\n    /* background-image: url(\"../../../src/assets/images/Edit.png\"); */\r\n    /* background-repeat: repeat-y;\r\n    min-height: 800px;\r\n    overflow: hidden; */\r\n    background-position: center;\r\n    background-size: 100% auto;\r\n  }\r\n\r\n  .qn-fill .back-bt {\r\n    /* position: fixed;\r\n    right: 90px;\r\n    top: 0;\r\n    margin: auto; */\r\n  }\r\n\r\n  .qn-fill .back-bt .el-button {\r\n    /* border-radius: 0 0 15px 15px; */\r\n  }\r\n\r\n  .qn-fill .paper {\r\n    /* margin: 120px auto 0; */\r\n    width: 100%;\r\n    background-color: #FFFFFF;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, .12), 0 0 6px rgba(0, 0, 0, .04)\r\n  }\r\n\r\n  .img {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n\r\n  .qn-fill .body {\r\n    margin-left: 20px;\r\n    margin-right: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .qn-fill .body .title {\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    padding-bottom: 10px;\r\n    padding-top: 25px;\r\n  }\r\n\r\n  .qn-fill .body .description {\r\n    /* text-align: left; */\r\n    font-size: 16px;\r\n    color: black;\r\n    /* line-height: 30px; */\r\n    align-self: self-start;\r\n    padding-bottom: 5px;\r\n  }\r\n\r\n  .qn-fill .body .el-divider--horizontal {\r\n    margin: 0;\r\n  }\r\n\r\n  .qn-fill .body .q-title {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 40px 10px 10px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .qn-fill .body .q-description {\r\n    text-align: left;\r\n    font-size: 14px;\r\n    padding-left: 10px;\r\n    padding-top: 5px;\r\n    padding-bottom: 10px;\r\n    color: #969696;\r\n  }\r\n\r\n  .qn-fill .body .must {\r\n    font-weight: normal;\r\n    color: crimson;\r\n  }\r\n\r\n  .qn-fill .body .q-opt {\r\n    text-align: left;\r\n    font-size: 16px;\r\n    padding: 10px 10px 10px;\r\n  }\r\n\r\n  .qn-fill .body .el-checkbox {\r\n    padding: 10px 0;\r\n    display: block;\r\n  }\r\n\r\n  .qn-fill .body .q-opt .el-textarea__inner {\r\n    max-height: 100px;\r\n  }\r\n\r\n  .paper .submit-bt {\r\n    padding-top: 30px;\r\n    padding-bottom: 50px;\r\n    margin-left: 26%;\r\n    /* border-top: solid 1px #e3e3e3; */\r\n  }\r\n\r\n  .qn-fill .tail {\r\n    padding-top: 25px;\r\n    font-size: 15px;\r\n    color: #b9b9b9;\r\n    /* border-top: solid 1px #e3e3e3; */\r\n    height: 50px;\r\n    margin-left: 28%;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}