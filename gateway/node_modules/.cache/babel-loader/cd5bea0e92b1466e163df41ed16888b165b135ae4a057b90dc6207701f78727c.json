{"ast":null,"code":"// NormalPass will generate normal and depth data.\n// TODO Animation\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport Material from 'claygl/src/Material';\nimport Pass from 'claygl/src/compositor/Pass';\nimport textureUtil from 'claygl/src/util/texture';\nimport normalGLSL from '../util/shader/normal.glsl.js';\nShader.import(normalGLSL);\nfunction attachTextureToSlot(renderer, program, symbol, texture, slot) {\n  var gl = renderer.gl;\n  program.setUniform(gl, '1i', symbol, slot);\n  gl.activeTexture(gl.TEXTURE0 + slot); // Maybe texture is not loaded yet;\n\n  if (texture.isRenderable()) {\n    texture.bind(renderer);\n  } else {\n    // Bind texture to null\n    texture.unbind(renderer);\n  }\n} // TODO Use globalShader insteadof globalMaterial?\n\nfunction getBeforeRenderHook(renderer, defaultNormalMap, defaultBumpMap, defaultRoughnessMap, normalMaterial) {\n  var previousNormalMap;\n  var previousBumpMap;\n  var previousRoughnessMap;\n  var previousRenderable;\n  var gl = renderer.gl;\n  return function (renderable, normalMaterial, prevNormalMaterial) {\n    // Material not change\n    if (previousRenderable && previousRenderable.material === renderable.material) {\n      return;\n    }\n    var material = renderable.material;\n    var program = renderable.__program;\n    var roughness = material.get('roughness');\n    if (roughness == null) {\n      roughness = 1;\n    }\n    var normalMap = material.get('normalMap') || defaultNormalMap;\n    var roughnessMap = material.get('roughnessMap');\n    var bumpMap = material.get('bumpMap');\n    var uvRepeat = material.get('uvRepeat');\n    var uvOffset = material.get('uvOffset');\n    var detailUvRepeat = material.get('detailUvRepeat');\n    var detailUvOffset = material.get('detailUvOffset');\n    var useBumpMap = !!bumpMap && material.isTextureEnabled('bumpMap');\n    var useRoughnessMap = !!roughnessMap && material.isTextureEnabled('roughnessMap');\n    var doubleSide = material.isDefined('fragment', 'DOUBLE_SIDED');\n    bumpMap = bumpMap || defaultBumpMap;\n    roughnessMap = roughnessMap || defaultRoughnessMap;\n    if (prevNormalMaterial !== normalMaterial) {\n      normalMaterial.set('normalMap', normalMap);\n      normalMaterial.set('bumpMap', bumpMap);\n      normalMaterial.set('roughnessMap', roughnessMap);\n      normalMaterial.set('useBumpMap', useBumpMap);\n      normalMaterial.set('useRoughnessMap', useRoughnessMap);\n      normalMaterial.set('doubleSide', doubleSide);\n      uvRepeat != null && normalMaterial.set('uvRepeat', uvRepeat);\n      uvOffset != null && normalMaterial.set('uvOffset', uvOffset);\n      detailUvRepeat != null && normalMaterial.set('detailUvRepeat', detailUvRepeat);\n      detailUvOffset != null && normalMaterial.set('detailUvOffset', detailUvOffset);\n      normalMaterial.set('roughness', roughness);\n    } else {\n      program.setUniform(gl, '1f', 'roughness', roughness);\n      if (previousNormalMap !== normalMap) {\n        attachTextureToSlot(renderer, program, 'normalMap', normalMap, 0);\n      }\n      if (previousBumpMap !== bumpMap && bumpMap) {\n        attachTextureToSlot(renderer, program, 'bumpMap', bumpMap, 1);\n      }\n      if (previousRoughnessMap !== roughnessMap && roughnessMap) {\n        attachTextureToSlot(renderer, program, 'roughnessMap', roughnessMap, 2);\n      }\n      if (uvRepeat != null) {\n        program.setUniform(gl, '2f', 'uvRepeat', uvRepeat);\n      }\n      if (uvOffset != null) {\n        program.setUniform(gl, '2f', 'uvOffset', uvOffset);\n      }\n      if (detailUvRepeat != null) {\n        program.setUniform(gl, '2f', 'detailUvRepeat', detailUvRepeat);\n      }\n      if (detailUvOffset != null) {\n        program.setUniform(gl, '2f', 'detailUvOffset', detailUvOffset);\n      }\n      program.setUniform(gl, '1i', 'useBumpMap', +useBumpMap);\n      program.setUniform(gl, '1i', 'useRoughnessMap', +useRoughnessMap);\n      program.setUniform(gl, '1i', 'doubleSide', +doubleSide);\n    }\n    previousNormalMap = normalMap;\n    previousBumpMap = bumpMap;\n    previousRoughnessMap = roughnessMap;\n    previousRenderable = renderable;\n  };\n}\nfunction NormalPass(opt) {\n  opt = opt || {};\n  this._depthTex = new Texture2D({\n    format: Texture.DEPTH_COMPONENT,\n    type: Texture.UNSIGNED_INT\n  });\n  this._normalTex = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._framebuffer = new FrameBuffer();\n  this._framebuffer.attach(this._normalTex);\n  this._framebuffer.attach(this._depthTex, FrameBuffer.DEPTH_ATTACHMENT);\n  this._normalMaterial = new Material({\n    shader: new Shader(Shader.source('ecgl.normal.vertex'), Shader.source('ecgl.normal.fragment'))\n  });\n  this._normalMaterial.enableTexture(['normalMap', 'bumpMap', 'roughnessMap']);\n  this._defaultNormalMap = textureUtil.createBlank('#000');\n  this._defaultBumpMap = textureUtil.createBlank('#000');\n  this._defaultRoughessMap = textureUtil.createBlank('#000');\n  this._debugPass = new Pass({\n    fragment: Shader.source('clay.compositor.output')\n  });\n  this._debugPass.setUniform('texture', this._normalTex);\n  this._debugPass.material.undefine('fragment', 'OUTPUT_ALPHA');\n}\nNormalPass.prototype.getDepthTexture = function () {\n  return this._depthTex;\n};\nNormalPass.prototype.getNormalTexture = function () {\n  return this._normalTex;\n};\nNormalPass.prototype.update = function (renderer, scene, camera) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var depthTexture = this._depthTex;\n  var normalTexture = this._normalTex;\n  var normalMaterial = this._normalMaterial;\n  depthTexture.width = width;\n  depthTexture.height = height;\n  normalTexture.width = width;\n  normalTexture.height = height;\n  var opaqueList = scene.getRenderList(camera).opaque;\n  this._framebuffer.bind(renderer);\n  renderer.gl.clearColor(0, 0, 0, 0);\n  renderer.gl.clear(renderer.gl.COLOR_BUFFER_BIT | renderer.gl.DEPTH_BUFFER_BIT);\n  renderer.gl.disable(renderer.gl.BLEND);\n  renderer.renderPass(opaqueList, camera, {\n    getMaterial: function () {\n      return normalMaterial;\n    },\n    ifRender: function (object) {\n      return object.renderNormal;\n    },\n    beforeRender: getBeforeRenderHook(renderer, this._defaultNormalMap, this._defaultBumpMap, this._defaultRoughessMap, this._normalMaterial),\n    sort: renderer.opaqueSortCompare\n  });\n  this._framebuffer.unbind(renderer);\n};\nNormalPass.prototype.renderDebug = function (renderer) {\n  this._debugPass.render(renderer);\n};\nNormalPass.prototype.dispose = function (renderer) {\n  this._depthTex.dispose(renderer);\n  this._normalTex.dispose(renderer);\n};\nexport default NormalPass;","map":{"version":3,"names":["Texture2D","Texture","Shader","FrameBuffer","Material","Pass","textureUtil","normalGLSL","import","attachTextureToSlot","renderer","program","symbol","texture","slot","gl","setUniform","activeTexture","TEXTURE0","isRenderable","bind","unbind","getBeforeRenderHook","defaultNormalMap","defaultBumpMap","defaultRoughnessMap","normalMaterial","previousNormalMap","previousBumpMap","previousRoughnessMap","previousRenderable","renderable","prevNormalMaterial","material","__program","roughness","get","normalMap","roughnessMap","bumpMap","uvRepeat","uvOffset","detailUvRepeat","detailUvOffset","useBumpMap","isTextureEnabled","useRoughnessMap","doubleSide","isDefined","set","NormalPass","opt","_depthTex","format","DEPTH_COMPONENT","type","UNSIGNED_INT","_normalTex","HALF_FLOAT","_framebuffer","attach","DEPTH_ATTACHMENT","_normalMaterial","shader","source","enableTexture","_defaultNormalMap","createBlank","_defaultBumpMap","_defaultRoughessMap","_debugPass","fragment","undefine","prototype","getDepthTexture","getNormalTexture","update","scene","camera","width","getWidth","height","getHeight","depthTexture","normalTexture","opaqueList","getRenderList","opaque","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","disable","BLEND","renderPass","getMaterial","ifRender","object","renderNormal","beforeRender","sort","opaqueSortCompare","renderDebug","render","dispose"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/effect/NormalPass.js"],"sourcesContent":["// NormalPass will generate normal and depth data.\n// TODO Animation\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport Material from 'claygl/src/Material';\nimport Pass from 'claygl/src/compositor/Pass';\nimport textureUtil from 'claygl/src/util/texture';\nimport normalGLSL from '../util/shader/normal.glsl.js';\nShader.import(normalGLSL);\n\nfunction attachTextureToSlot(renderer, program, symbol, texture, slot) {\n  var gl = renderer.gl;\n  program.setUniform(gl, '1i', symbol, slot);\n  gl.activeTexture(gl.TEXTURE0 + slot); // Maybe texture is not loaded yet;\n\n  if (texture.isRenderable()) {\n    texture.bind(renderer);\n  } else {\n    // Bind texture to null\n    texture.unbind(renderer);\n  }\n} // TODO Use globalShader insteadof globalMaterial?\n\n\nfunction getBeforeRenderHook(renderer, defaultNormalMap, defaultBumpMap, defaultRoughnessMap, normalMaterial) {\n  var previousNormalMap;\n  var previousBumpMap;\n  var previousRoughnessMap;\n  var previousRenderable;\n  var gl = renderer.gl;\n  return function (renderable, normalMaterial, prevNormalMaterial) {\n    // Material not change\n    if (previousRenderable && previousRenderable.material === renderable.material) {\n      return;\n    }\n\n    var material = renderable.material;\n    var program = renderable.__program;\n    var roughness = material.get('roughness');\n\n    if (roughness == null) {\n      roughness = 1;\n    }\n\n    var normalMap = material.get('normalMap') || defaultNormalMap;\n    var roughnessMap = material.get('roughnessMap');\n    var bumpMap = material.get('bumpMap');\n    var uvRepeat = material.get('uvRepeat');\n    var uvOffset = material.get('uvOffset');\n    var detailUvRepeat = material.get('detailUvRepeat');\n    var detailUvOffset = material.get('detailUvOffset');\n    var useBumpMap = !!bumpMap && material.isTextureEnabled('bumpMap');\n    var useRoughnessMap = !!roughnessMap && material.isTextureEnabled('roughnessMap');\n    var doubleSide = material.isDefined('fragment', 'DOUBLE_SIDED');\n    bumpMap = bumpMap || defaultBumpMap;\n    roughnessMap = roughnessMap || defaultRoughnessMap;\n\n    if (prevNormalMaterial !== normalMaterial) {\n      normalMaterial.set('normalMap', normalMap);\n      normalMaterial.set('bumpMap', bumpMap);\n      normalMaterial.set('roughnessMap', roughnessMap);\n      normalMaterial.set('useBumpMap', useBumpMap);\n      normalMaterial.set('useRoughnessMap', useRoughnessMap);\n      normalMaterial.set('doubleSide', doubleSide);\n      uvRepeat != null && normalMaterial.set('uvRepeat', uvRepeat);\n      uvOffset != null && normalMaterial.set('uvOffset', uvOffset);\n      detailUvRepeat != null && normalMaterial.set('detailUvRepeat', detailUvRepeat);\n      detailUvOffset != null && normalMaterial.set('detailUvOffset', detailUvOffset);\n      normalMaterial.set('roughness', roughness);\n    } else {\n      program.setUniform(gl, '1f', 'roughness', roughness);\n\n      if (previousNormalMap !== normalMap) {\n        attachTextureToSlot(renderer, program, 'normalMap', normalMap, 0);\n      }\n\n      if (previousBumpMap !== bumpMap && bumpMap) {\n        attachTextureToSlot(renderer, program, 'bumpMap', bumpMap, 1);\n      }\n\n      if (previousRoughnessMap !== roughnessMap && roughnessMap) {\n        attachTextureToSlot(renderer, program, 'roughnessMap', roughnessMap, 2);\n      }\n\n      if (uvRepeat != null) {\n        program.setUniform(gl, '2f', 'uvRepeat', uvRepeat);\n      }\n\n      if (uvOffset != null) {\n        program.setUniform(gl, '2f', 'uvOffset', uvOffset);\n      }\n\n      if (detailUvRepeat != null) {\n        program.setUniform(gl, '2f', 'detailUvRepeat', detailUvRepeat);\n      }\n\n      if (detailUvOffset != null) {\n        program.setUniform(gl, '2f', 'detailUvOffset', detailUvOffset);\n      }\n\n      program.setUniform(gl, '1i', 'useBumpMap', +useBumpMap);\n      program.setUniform(gl, '1i', 'useRoughnessMap', +useRoughnessMap);\n      program.setUniform(gl, '1i', 'doubleSide', +doubleSide);\n    }\n\n    previousNormalMap = normalMap;\n    previousBumpMap = bumpMap;\n    previousRoughnessMap = roughnessMap;\n    previousRenderable = renderable;\n  };\n}\n\nfunction NormalPass(opt) {\n  opt = opt || {};\n  this._depthTex = new Texture2D({\n    format: Texture.DEPTH_COMPONENT,\n    type: Texture.UNSIGNED_INT\n  });\n  this._normalTex = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._framebuffer = new FrameBuffer();\n\n  this._framebuffer.attach(this._normalTex);\n\n  this._framebuffer.attach(this._depthTex, FrameBuffer.DEPTH_ATTACHMENT);\n\n  this._normalMaterial = new Material({\n    shader: new Shader(Shader.source('ecgl.normal.vertex'), Shader.source('ecgl.normal.fragment'))\n  });\n\n  this._normalMaterial.enableTexture(['normalMap', 'bumpMap', 'roughnessMap']);\n\n  this._defaultNormalMap = textureUtil.createBlank('#000');\n  this._defaultBumpMap = textureUtil.createBlank('#000');\n  this._defaultRoughessMap = textureUtil.createBlank('#000');\n  this._debugPass = new Pass({\n    fragment: Shader.source('clay.compositor.output')\n  });\n\n  this._debugPass.setUniform('texture', this._normalTex);\n\n  this._debugPass.material.undefine('fragment', 'OUTPUT_ALPHA');\n}\n\nNormalPass.prototype.getDepthTexture = function () {\n  return this._depthTex;\n};\n\nNormalPass.prototype.getNormalTexture = function () {\n  return this._normalTex;\n};\n\nNormalPass.prototype.update = function (renderer, scene, camera) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var depthTexture = this._depthTex;\n  var normalTexture = this._normalTex;\n  var normalMaterial = this._normalMaterial;\n  depthTexture.width = width;\n  depthTexture.height = height;\n  normalTexture.width = width;\n  normalTexture.height = height;\n  var opaqueList = scene.getRenderList(camera).opaque;\n\n  this._framebuffer.bind(renderer);\n\n  renderer.gl.clearColor(0, 0, 0, 0);\n  renderer.gl.clear(renderer.gl.COLOR_BUFFER_BIT | renderer.gl.DEPTH_BUFFER_BIT);\n  renderer.gl.disable(renderer.gl.BLEND);\n  renderer.renderPass(opaqueList, camera, {\n    getMaterial: function () {\n      return normalMaterial;\n    },\n    ifRender: function (object) {\n      return object.renderNormal;\n    },\n    beforeRender: getBeforeRenderHook(renderer, this._defaultNormalMap, this._defaultBumpMap, this._defaultRoughessMap, this._normalMaterial),\n    sort: renderer.opaqueSortCompare\n  });\n\n  this._framebuffer.unbind(renderer);\n};\n\nNormalPass.prototype.renderDebug = function (renderer) {\n  this._debugPass.render(renderer);\n};\n\nNormalPass.prototype.dispose = function (renderer) {\n  this._depthTex.dispose(renderer);\n\n  this._normalTex.dispose(renderer);\n};\n\nexport default NormalPass;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}