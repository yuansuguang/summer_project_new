{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nexport default {\n  convertToDynamicArray: function (clear) {\n    if (clear) {\n      this.resetOffset();\n    }\n    var attributes = this.attributes;\n    for (var name in attributes) {\n      if (clear || !attributes[name].value) {\n        attributes[name].value = [];\n      } else {\n        attributes[name].value = Array.prototype.slice.call(attributes[name].value);\n      }\n    }\n    if (clear || !this.indices) {\n      this.indices = [];\n    } else {\n      this.indices = Array.prototype.slice.call(this.indices);\n    }\n  },\n  convertToTypedArray: function () {\n    var attributes = this.attributes;\n    for (var name in attributes) {\n      if (attributes[name].value && attributes[name].value.length > 0) {\n        attributes[name].value = new Float32Array(attributes[name].value);\n      } else {\n        attributes[name].value = null;\n      }\n    }\n    if (this.indices && this.indices.length > 0) {\n      this.indices = this.vertexCount > 0xffff ? new Uint32Array(this.indices) : new Uint16Array(this.indices);\n    }\n    this.dirty();\n  }\n};","map":{"version":3,"names":["convertToDynamicArray","clear","resetOffset","attributes","name","value","Array","prototype","slice","call","indices","convertToTypedArray","length","Float32Array","vertexCount","Uint32Array","Uint16Array","dirty"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/util/geometry/dynamicConvertMixin.js"],"sourcesContent":["export default {\n  convertToDynamicArray: function (clear) {\n    if (clear) {\n      this.resetOffset();\n    }\n\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      if (clear || !attributes[name].value) {\n        attributes[name].value = [];\n      } else {\n        attributes[name].value = Array.prototype.slice.call(attributes[name].value);\n      }\n    }\n\n    if (clear || !this.indices) {\n      this.indices = [];\n    } else {\n      this.indices = Array.prototype.slice.call(this.indices);\n    }\n  },\n  convertToTypedArray: function () {\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      if (attributes[name].value && attributes[name].value.length > 0) {\n        attributes[name].value = new Float32Array(attributes[name].value);\n      } else {\n        attributes[name].value = null;\n      }\n    }\n\n    if (this.indices && this.indices.length > 0) {\n      this.indices = this.vertexCount > 0xffff ? new Uint32Array(this.indices) : new Uint16Array(this.indices);\n    }\n\n    this.dirty();\n  }\n};"],"mappings":";;;;;;AAAA,eAAe;EACbA,qBAAqB,EAAE,SAAAA,CAAUC,KAAK,EAAE;IACtC,IAAIA,KAAK,EAAE;MACT,IAAI,CAACC,WAAW,CAAC,CAAC;IACpB;IAEA,IAAIC,UAAU,GAAG,IAAI,CAACA,UAAU;IAEhC,KAAK,IAAIC,IAAI,IAAID,UAAU,EAAE;MAC3B,IAAIF,KAAK,IAAI,CAACE,UAAU,CAACC,IAAI,CAAC,CAACC,KAAK,EAAE;QACpCF,UAAU,CAACC,IAAI,CAAC,CAACC,KAAK,GAAG,EAAE;MAC7B,CAAC,MAAM;QACLF,UAAU,CAACC,IAAI,CAAC,CAACC,KAAK,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACN,UAAU,CAACC,IAAI,CAAC,CAACC,KAAK,CAAC;MAC7E;IACF;IAEA,IAAIJ,KAAK,IAAI,CAAC,IAAI,CAACS,OAAO,EAAE;MAC1B,IAAI,CAACA,OAAO,GAAG,EAAE;IACnB,CAAC,MAAM;MACL,IAAI,CAACA,OAAO,GAAGJ,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC;IACzD;EACF,CAAC;EACDC,mBAAmB,EAAE,SAAAA,CAAA,EAAY;IAC/B,IAAIR,UAAU,GAAG,IAAI,CAACA,UAAU;IAEhC,KAAK,IAAIC,IAAI,IAAID,UAAU,EAAE;MAC3B,IAAIA,UAAU,CAACC,IAAI,CAAC,CAACC,KAAK,IAAIF,UAAU,CAACC,IAAI,CAAC,CAACC,KAAK,CAACO,MAAM,GAAG,CAAC,EAAE;QAC/DT,UAAU,CAACC,IAAI,CAAC,CAACC,KAAK,GAAG,IAAIQ,YAAY,CAACV,UAAU,CAACC,IAAI,CAAC,CAACC,KAAK,CAAC;MACnE,CAAC,MAAM;QACLF,UAAU,CAACC,IAAI,CAAC,CAACC,KAAK,GAAG,IAAI;MAC/B;IACF;IAEA,IAAI,IAAI,CAACK,OAAO,IAAI,IAAI,CAACA,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;MAC3C,IAAI,CAACF,OAAO,GAAG,IAAI,CAACI,WAAW,GAAG,MAAM,GAAG,IAAIC,WAAW,CAAC,IAAI,CAACL,OAAO,CAAC,GAAG,IAAIM,WAAW,CAAC,IAAI,CAACN,OAAO,CAAC;IAC1G;IAEA,IAAI,CAACO,KAAK,CAAC,CAAC;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}