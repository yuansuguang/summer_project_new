{"ast":null,"code":"import Geometry from '../Geometry';\nimport Plane from './Plane';\nimport Matrix4 from '../math/Matrix4';\nimport Vector3 from '../math/Vector3';\nimport BoundingBox from '../math/BoundingBox';\nimport vendor from '../core/vendor';\nvar planeMatrix = new Matrix4();\n\n/**\n * @constructor clay.geometry.Cube\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [opt.widthSegments]\n * @param {number} [opt.heightSegments]\n * @param {number} [opt.depthSegments]\n * @param {boolean} [opt.inside]\n */\nvar Cube = Geometry.extend( /**@lends clay.geometry.Cube# */\n{\n  dynamic: false,\n  /**\n   * @type {number}\n   */\n  widthSegments: 1,\n  /**\n   * @type {number}\n   */\n  heightSegments: 1,\n  /**\n   * @type {number}\n   */\n  depthSegments: 1,\n  /**\n   * @type {boolean}\n   */\n  inside: false\n}, function () {\n  this.build();\n}, /** @lends clay.geometry.Cube.prototype */\n{\n  /**\n   * Build cube geometry\n   */\n  build: function () {\n    var planes = {\n      'px': createPlane('px', this.depthSegments, this.heightSegments),\n      'nx': createPlane('nx', this.depthSegments, this.heightSegments),\n      'py': createPlane('py', this.widthSegments, this.depthSegments),\n      'ny': createPlane('ny', this.widthSegments, this.depthSegments),\n      'pz': createPlane('pz', this.widthSegments, this.heightSegments),\n      'nz': createPlane('nz', this.widthSegments, this.heightSegments)\n    };\n    var attrList = ['position', 'texcoord0', 'normal'];\n    var vertexNumber = 0;\n    var faceNumber = 0;\n    for (var pos in planes) {\n      vertexNumber += planes[pos].vertexCount;\n      faceNumber += planes[pos].indices.length;\n    }\n    for (var k = 0; k < attrList.length; k++) {\n      this.attributes[attrList[k]].init(vertexNumber);\n    }\n    this.indices = new vendor.Uint16Array(faceNumber);\n    var faceOffset = 0;\n    var vertexOffset = 0;\n    for (var pos in planes) {\n      var plane = planes[pos];\n      for (var k = 0; k < attrList.length; k++) {\n        var attrName = attrList[k];\n        var attrArray = plane.attributes[attrName].value;\n        var attrSize = plane.attributes[attrName].size;\n        var isNormal = attrName === 'normal';\n        for (var i = 0; i < attrArray.length; i++) {\n          var value = attrArray[i];\n          if (this.inside && isNormal) {\n            value = -value;\n          }\n          this.attributes[attrName].value[i + attrSize * vertexOffset] = value;\n        }\n      }\n      var len = plane.indices.length;\n      for (var i = 0; i < plane.indices.length; i++) {\n        this.indices[i + faceOffset] = vertexOffset + plane.indices[this.inside ? len - i - 1 : i];\n      }\n      faceOffset += plane.indices.length;\n      vertexOffset += plane.vertexCount;\n    }\n    this.boundingBox = new BoundingBox();\n    this.boundingBox.max.set(1, 1, 1);\n    this.boundingBox.min.set(-1, -1, -1);\n  }\n});\nfunction createPlane(pos, widthSegments, heightSegments) {\n  planeMatrix.identity();\n  var plane = new Plane({\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  });\n  switch (pos) {\n    case 'px':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_X);\n      Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI / 2);\n      break;\n    case 'nx':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_X);\n      Matrix4.rotateY(planeMatrix, planeMatrix, -Math.PI / 2);\n      break;\n    case 'py':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Y);\n      Matrix4.rotateX(planeMatrix, planeMatrix, -Math.PI / 2);\n      break;\n    case 'ny':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Y);\n      Matrix4.rotateX(planeMatrix, planeMatrix, Math.PI / 2);\n      break;\n    case 'pz':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Z);\n      break;\n    case 'nz':\n      Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Z);\n      Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI);\n      break;\n  }\n  plane.applyTransform(planeMatrix);\n  return plane;\n}\nexport default Cube;","map":{"version":3,"names":["Geometry","Plane","Matrix4","Vector3","BoundingBox","vendor","planeMatrix","Cube","extend","dynamic","widthSegments","heightSegments","depthSegments","inside","build","planes","createPlane","attrList","vertexNumber","faceNumber","pos","vertexCount","indices","length","k","attributes","init","Uint16Array","faceOffset","vertexOffset","plane","attrName","attrArray","value","attrSize","size","isNormal","i","len","boundingBox","max","set","min","identity","translate","POSITIVE_X","rotateY","Math","PI","NEGATIVE_X","POSITIVE_Y","rotateX","NEGATIVE_Y","POSITIVE_Z","NEGATIVE_Z","applyTransform"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/claygl/src/geometry/Cube.js"],"sourcesContent":["import Geometry from '../Geometry';\nimport Plane from './Plane';\nimport Matrix4 from '../math/Matrix4';\nimport Vector3 from '../math/Vector3';\nimport BoundingBox from '../math/BoundingBox';\nimport vendor from '../core/vendor';\n\nvar planeMatrix = new Matrix4();\n\n/**\n * @constructor clay.geometry.Cube\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [opt.widthSegments]\n * @param {number} [opt.heightSegments]\n * @param {number} [opt.depthSegments]\n * @param {boolean} [opt.inside]\n */\nvar Cube = Geometry.extend(\n/**@lends clay.geometry.Cube# */\n{\n    dynamic: false,\n    /**\n     * @type {number}\n     */\n    widthSegments: 1,\n    /**\n     * @type {number}\n     */\n    heightSegments: 1,\n    /**\n     * @type {number}\n     */\n    depthSegments: 1,\n    /**\n     * @type {boolean}\n     */\n    inside: false\n}, function() {\n    this.build();\n},\n/** @lends clay.geometry.Cube.prototype */\n{\n    /**\n     * Build cube geometry\n     */\n    build: function() {\n\n        var planes = {\n            'px': createPlane('px', this.depthSegments, this.heightSegments),\n            'nx': createPlane('nx', this.depthSegments, this.heightSegments),\n            'py': createPlane('py', this.widthSegments, this.depthSegments),\n            'ny': createPlane('ny', this.widthSegments, this.depthSegments),\n            'pz': createPlane('pz', this.widthSegments, this.heightSegments),\n            'nz': createPlane('nz', this.widthSegments, this.heightSegments),\n        };\n\n        var attrList = ['position', 'texcoord0', 'normal'];\n        var vertexNumber = 0;\n        var faceNumber = 0;\n        for (var pos in planes) {\n            vertexNumber += planes[pos].vertexCount;\n            faceNumber += planes[pos].indices.length;\n        }\n        for (var k = 0; k < attrList.length; k++) {\n            this.attributes[attrList[k]].init(vertexNumber);\n        }\n        this.indices = new vendor.Uint16Array(faceNumber);\n        var faceOffset = 0;\n        var vertexOffset = 0;\n        for (var pos in planes) {\n            var plane = planes[pos];\n            for (var k = 0; k < attrList.length; k++) {\n                var attrName = attrList[k];\n                var attrArray = plane.attributes[attrName].value;\n                var attrSize = plane.attributes[attrName].size;\n                var isNormal = attrName === 'normal';\n                for (var i = 0; i < attrArray.length; i++) {\n                    var value = attrArray[i];\n                    if (this.inside && isNormal) {\n                        value = -value;\n                    }\n                    this.attributes[attrName].value[i + attrSize * vertexOffset] = value;\n                }\n            }\n            var len = plane.indices.length;\n            for (var i = 0; i < plane.indices.length; i++) {\n                this.indices[i + faceOffset] = vertexOffset + plane.indices[this.inside ? (len - i - 1) : i];\n            }\n            faceOffset += plane.indices.length;\n            vertexOffset += plane.vertexCount;\n        }\n\n        this.boundingBox = new BoundingBox();\n        this.boundingBox.max.set(1, 1, 1);\n        this.boundingBox.min.set(-1, -1, -1);\n    }\n});\n\nfunction createPlane(pos, widthSegments, heightSegments) {\n\n    planeMatrix.identity();\n\n    var plane = new Plane({\n        widthSegments: widthSegments,\n        heightSegments: heightSegments\n    });\n\n    switch(pos) {\n        case 'px':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_X);\n            Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI / 2);\n            break;\n        case 'nx':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_X);\n            Matrix4.rotateY(planeMatrix, planeMatrix, -Math.PI / 2);\n            break;\n        case 'py':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Y);\n            Matrix4.rotateX(planeMatrix, planeMatrix, -Math.PI / 2);\n            break;\n        case 'ny':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Y);\n            Matrix4.rotateX(planeMatrix, planeMatrix, Math.PI / 2);\n            break;\n        case 'pz':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Z);\n            break;\n        case 'nz':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Z);\n            Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI);\n            break;\n    }\n    plane.applyTransform(planeMatrix);\n    return plane;\n}\n\nexport default Cube;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}