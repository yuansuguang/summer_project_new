{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, mergeProps as _mergeProps, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form\"\n};\nconst _hoisted_2 = {\n  class: \"edit\"\n};\nconst _hoisted_3 = {\n  class: \"ques-type\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-check\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", null, \" 单选题         \", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"ques-type\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-finished\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", null, \" 多选题         \", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  class: \"ques-type\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-edit-outline\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"span\", null, \" 填空题         \", -1 /* HOISTED */);\nconst _hoisted_12 = {\n  class: \"ques-type\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-star-off\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"span\", null, \" 评分题         \", -1 /* HOISTED */);\nconst _hoisted_15 = {\n  class: \"ques-type\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-user\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"chooseLabel\"\n}, \"姓名 \", -1 /* HOISTED */);\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-discount\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"chooseLabel\"\n}, \"学号 \", -1 /* HOISTED */);\nconst _hoisted_20 = {\n  class: \"ques-type\"\n};\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-phone-outline\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"chooseLabel\"\n}, \"电话 \", -1 /* HOISTED */);\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-message\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"chooseLabel\"\n}, \"邮箱 \", -1 /* HOISTED */);\nconst _hoisted_25 = {\n  class: \"outline\"\n};\nconst _hoisted_26 = {\n  class: \"ques\"\n};\nconst _hoisted_27 = {\n  class: \"title\"\n};\nconst _hoisted_28 = {\n  key: 0,\n  class: \"description\"\n};\nconst _hoisted_29 = {\n  class: \"content\"\n};\nconst _hoisted_30 = {\n  class: \"block-title\"\n};\nconst _hoisted_31 = {\n  key: 0,\n  class: \"must\"\n};\nconst _hoisted_32 = {\n  key: 0,\n  class: \"block-info\"\n};\nconst _hoisted_33 = {\n  key: 1,\n  class: \"block-choice\"\n};\nconst _hoisted_34 = {\n  style: {\n    \"padding-bottom\": \"10px\"\n  }\n};\nconst _hoisted_35 = {\n  key: 2,\n  class: \"block-description\"\n};\nconst _hoisted_36 = {\n  key: 3,\n  style: {\n    \"color\": \"#9b9ea0\",\n    \"font-size\": \"x-small\"\n  }\n};\nconst _hoisted_37 = [\"src\"];\nconst _hoisted_38 = {\n  key: 0,\n  style: {\n    \"color\": \"#aaaaaa\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"15px\"\n  }\n};\nconst _hoisted_39 = {\n  key: 0,\n  style: {\n    \"color\": \"#aaaaaa\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"15px\"\n  }\n};\nconst _hoisted_40 = {\n  key: 4,\n  class: \"block-choice\"\n};\nconst _hoisted_41 = {\n  key: 5,\n  class: \"block-relation\"\n};\nconst _hoisted_42 = {\n  key: 0,\n  class: \"is-info\"\n};\nconst _hoisted_43 = {\n  key: 1,\n  class: \"non-pre\"\n};\nconst _hoisted_44 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"el-upload__tip\"\n}, \" 只能上传jpg/png文件，且不超过5mb\", -1 /* HOISTED */);\nconst _hoisted_45 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"el-upload__tip\"\n}, \" 只能上传mp4/mkv文件，且不超过10mb\", -1 /* HOISTED */);\nconst _hoisted_46 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_47 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"qrcode_2\",\n  style: {\n    \"height\": \"200px\",\n    \"width\": \"200px\",\n    \"margin-left\": \"22px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_48 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"链接与二维码\", -1 /* HOISTED */);\nconst _hoisted_49 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_50 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_51 = {\n  class: \"logic-title\"\n};\nconst _hoisted_52 = {\n  key: 1,\n  class: \"logic-info\"\n};\nconst _hoisted_53 = {\n  style: {\n    \"color\": \"#1687fd\"\n  }\n};\nconst _hoisted_54 = {\n  style: {\n    \"color\": \"#1687fd\"\n  }\n};\nconst _hoisted_55 = {\n  key: 2,\n  class: \"logic-info\"\n};\nconst _hoisted_56 = {\n  class: \"logic-bt\"\n};\nconst _hoisted_57 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"logic-description\"\n}, \" 题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】 \", -1 /* HOISTED */);\nconst _hoisted_58 = {\n  key: 0,\n  class: \"logic-description important\"\n};\nconst _hoisted_59 = {\n  class: \"setting-bt\"\n};\nexport function render(_ctx, _cache) {\n  const _component_edit_header = _resolveComponent(\"edit-header\");\n  const _component_el_header = _resolveComponent(\"el-header\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_el_aside = _resolveComponent(\"el-aside\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_rate = _resolveComponent(\"el-rate\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  const _component_el_button_group = _resolveComponent(\"el-button-group\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  const _directive_medel = _resolveDirective(\"medel\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_header, {\n    class: \"header\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_edit_header, {\n      title: _ctx.title,\n      description: _ctx.description,\n      isReleased: _ctx.isReleased,\n      onTitleChanged: _cache[0] || (_cache[0] = $event => _ctx.changeTitle($event)),\n      onDescriptionChanged: _cache[1] || (_cache[1] = $event => _ctx.changeDescription($event)),\n      onAdvancedSetting: _cache[2] || (_cache[2] = $event => _ctx.openSetting($event)),\n      onPublishClicked: _cache[3] || (_cache[3] = $event => _ctx.publish($event)),\n      onSaveClicked: _cache[4] || (_cache[4] = $event => _ctx.save($event)),\n      onQnPreview: _cache[5] || (_cache[5] = $event => _ctx.preview($event)),\n      onOnConfirm: _cache[6] || (_cache[6] = $event => _ctx.dialogCancel($event)),\n      onShareClicked: _cache[7] || (_cache[7] = $event => _ctx.share($event))\n    }, null, 8 /* PROPS */, [\"title\", \"description\", \"isReleased\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_container, {\n    class: \"container\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_aside, {\n      class: \"side\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_tabs, {\n        modelValue: _ctx.activeName,\n        \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.activeName = $event),\n        onTabClick: _ctx.initOutline\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n          label: \"题目类型\",\n          name: \"first\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _hoisted_5, _createElementVNode(\"i\", {\n            class: \"el-icon-circle-plus type-icon\",\n            onClick: _cache[8] || (_cache[8] = $event => {\n              _ctx.willAddQuestion.type = 'radio';\n              _ctx.qsEditDialogVisible = true;\n            })\n          })]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _hoisted_8, _createElementVNode(\"i\", {\n            class: \"el-icon-circle-plus type-icon\",\n            onClick: _cache[9] || (_cache[9] = $event => {\n              _ctx.willAddQuestion.type = 'checkbox';\n              _ctx.qsEditDialogVisible = true;\n            })\n          })]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _hoisted_11, _createElementVNode(\"i\", {\n            class: \"el-icon-circle-plus type-icon\",\n            onClick: _cache[10] || (_cache[10] = $event => {\n              _ctx.willAddQuestion.type = 'text';\n              _ctx.qsEditDialogVisible = true;\n            })\n          })]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _hoisted_14, _createElementVNode(\"i\", {\n            class: \"el-icon-circle-plus type-icon\",\n            onClick: _cache[11] || (_cache[11] = $event => {\n              _ctx.willAddQuestion.type = 'mark';\n              _ctx.qsEditDialogVisible = true;\n            })\n          })]), _createElementVNode(\"div\", null, [_createVNode(_component_el_row, {\n            class: \"sideTitle\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"个人信息模板\")]),\n            _: 1 /* STABLE */\n          }), _createElementVNode(\"div\", _hoisted_15, [_hoisted_16, _hoisted_17, _createElementVNode(\"i\", {\n            class: \"el-icon-circle-plus type-icon\",\n            onClick: _cache[12] || (_cache[12] = (...args) => _ctx.addName && _ctx.addName(...args))\n          }), _createTextVNode(\"   \"), _hoisted_18, _hoisted_19, _createElementVNode(\"i\", {\n            class: \"el-icon-circle-plus type-icon\",\n            onClick: _cache[13] || (_cache[13] = (...args) => _ctx.addStuID && _ctx.addStuID(...args))\n          }), _createCommentVNode(\"                    <i class=\\\"el-icon-male\\\"></i>\"), _createCommentVNode(\"                    <span class=\\\"chooseLabel\\\">性别 </span>\"), _createCommentVNode(\"                    <i class=\\\"el-icon-circle-plus type-icon\\\" @click=\\\"addSex\\\"></i>\")]), _createElementVNode(\"div\", _hoisted_20, [_hoisted_21, _hoisted_22, _createElementVNode(\"i\", {\n            class: \"el-icon-circle-plus type-icon\",\n            onClick: _cache[14] || (_cache[14] = (...args) => _ctx.addPhone && _ctx.addPhone(...args))\n          }), _createTextVNode(\"   \"), _hoisted_23, _hoisted_24, _createElementVNode(\"i\", {\n            class: \"el-icon-circle-plus type-icon\",\n            onClick: _cache[15] || (_cache[15] = (...args) => _ctx.addEmail && _ctx.addEmail(...args))\n          })]), _createCommentVNode(\"                  <div class=\\\"ques-type\\\">\"), _createCommentVNode(\"                    &emsp;&emsp;\"), _createCommentVNode(\"                    <i class=\\\"el-icon-school\\\"></i>\"), _createCommentVNode(\"                    <span class=\\\"chooseLabel\\\">学校 </span>\"), _createCommentVNode(\"                    <i class=\\\"el-icon-circle-plus type-icon\\\" @click=\\\"addSchool\\\"></i>\"), _createCommentVNode(\"                  </div>\")])])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_tab_pane, {\n          label: \"问卷大纲\",\n          name: \"second\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_25, [_createVNode(_component_el_tree, {\n            data: _ctx.outline,\n            \"node-key\": \"id\",\n            props: _ctx.defaultProps,\n            onNodeDrop: _ctx.handleDrop,\n            draggable: \"\",\n            \"allow-drop\": _ctx.allowDrop\n          }, null, 8 /* PROPS */, [\"data\", \"props\", \"onNodeDrop\", \"allow-drop\"])])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onTabClick\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_main, {\n      class: \"main\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, _toDisplayString(_ctx.title), 1 /* TEXT */), this.description !== '' && this.description !== null && this.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, \"   \" + _toDisplayString(_ctx.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_29, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.questions, item => {\n        return _openBlock(), _createBlock(_component_el_row, {\n          class: \"ques-block\",\n          key: item.id,\n          onMouseover: $event => _ctx.hoverItem = item.id\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 16,\n            class: \"block-content\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_30, [_createTextVNode(_toDisplayString(item.id) + \". \" + _toDisplayString(item.title) + \" \", 1 /* TEXT */), item.must ? (_openBlock(), _createElementBlock(\"span\", _hoisted_31, \"(必填)\")) : _createCommentVNode(\"v-if\", true)]), item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school' || item.type === 'phone' || item.type === 'email' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [_createVNode(_component_el_input, {\n              placeholder: \"请输入内容\",\n              style: {\n                \"margin-left\": \"10px\"\n              }\n            })])) : _createCommentVNode(\"v-if\", true), item.type === 'sex' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_createVNode(_component_el_radio, {\n              value: \"0\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"男\")]),\n              _: 1 /* STABLE */\n            })]), _createElementVNode(\"div\", null, [_createVNode(_component_el_radio, {\n              value: \"0\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"女\")]),\n              _: 1 /* STABLE */\n            })])])) : _createCommentVNode(\"v-if\", true), item.description !== '' && item.description !== null && item.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, _toDisplayString(item.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  图片\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.imgList, (i, index) => {\n              return _openBlock(), _createBlock(_component_el_row, {\n                class: \"block-img\",\n                key: i.index\n              }, {\n                default: _withCtx(() => [index % 2 === 0 ? (_openBlock(), _createBlock(_component_el_col, {\n                  key: 0,\n                  offset: 2,\n                  span: 10,\n                  class: \"demo-image__preview\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_image, {\n                    style: {\n                      \"width\": \"200px\",\n                      \"height\": \"200px\"\n                    },\n                    src: i.url,\n                    \"preview-src-list\": [i.url]\n                  }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), index % 2 === 0 && index + 1 <= item.imgList.length - 1 ? (_openBlock(), _createBlock(_component_el_col, {\n                  key: 1,\n                  span: 10,\n                  class: \"demo-image__preview\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_image, {\n                    style: {\n                      \"width\": \"200px\",\n                      \"height\": \"200px\"\n                    },\n                    src: item.imgList[index + 1].url,\n                    \"preview-src-list\": [item.imgList[index + 1].url]\n                  }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 128 /* KEYED_FRAGMENT */)), item.imgList.length !== 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_36, \"（点击图片查看大图）\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                视频\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.videoList, i => {\n              return _openBlock(), _createBlock(_component_el_row, {\n                class: \"block-img\",\n                key: i.index\n              }, {\n                default: _withCtx(() => [_createElementVNode(\"embed\", {\n                  width: \"400\",\n                  height: \"230\",\n                  transparentatstart: \"true\",\n                  animationatstart: \"false\",\n                  autostart: \"true\",\n                  autosize: \"false\",\n                  volume: \"100\",\n                  displaysize: \"0\",\n                  showdisplay: \"true\",\n                  showstatusbar: \"true\",\n                  showcontrols: \"true\",\n                  showaudiocontrols: \"true\",\n                  showtracker: \"true\",\n                  showpositioncontrols: \"true\",\n                  balance: \"true\",\n                  src: i.url\n                }, null, 8 /* PROPS */, _hoisted_37)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.options, ans => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                class: \"block-choice\",\n                key: ans.id\n              }, [_createCommentVNode(\"                  单选\"), item.type === 'radio' ? (_openBlock(), _createBlock(_component_el_radio, {\n                key: 0,\n                value: \"0\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(ans.title), 1 /* TEXT */), ans.hasNumLimit ? (_openBlock(), _createElementBlock(\"span\", _hoisted_38, \"剩余\" + _toDisplayString(ans.supply - ans.consume) + \" 总计\" + _toDisplayString(ans.supply), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  多选\"), item.type === 'checkbox' ? (_openBlock(), _createBlock(_component_el_checkbox, {\n                key: 1,\n                value: \"0\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(ans.title) + \" \", 1 /* TEXT */), ans.hasNumLimit ? (_openBlock(), _createElementBlock(\"span\", _hoisted_39, \"剩余\" + _toDisplayString(ans.supply - ans.consume) + \" 总计\" + _toDisplayString(ans.supply), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  填空\"), item.type === 'text' && item.row > 1 ? (_openBlock(), _createBlock(_component_el_input, _mergeProps({\n                key: 2,\n                type: \"textarea\",\n                placeholder: \"请输入内容\",\n                ref_for: true\n              }, ans.title), null, 16 /* FULL_PROPS */)) : _createCommentVNode(\"v-if\", true), item.type === 'text' && item.row === 1 ? (_openBlock(), _createBlock(_component_el_input, _mergeProps({\n                key: 3,\n                placeholder: \"请输入内容\",\n                ref_for: true\n              }, ans.title), null, 16 /* FULL_PROPS */)) : _createCommentVNode(\"v-if\", true)]);\n            }), 128 /* KEYED_FRAGMENT */)), item.type === 'mark' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_40, [_createCommentVNode(\"                  评分\"), _createVNode(_component_el_rate, {\n              value: \"0\",\n              max: item.score\n            }, null, 8 /* PROPS */, [\"max\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                 关联信息\"), _ctx.isLogic && item.last_question !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_41, [_createElementVNode(\"div\", null, _toDisplayString(_ctx.relatedQs(item)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _ctx.hoverItem === item.id ? (_openBlock(), _createBlock(_component_el_col, {\n            key: 0,\n            span: 8,\n            class: \"block-button\",\n            style: {\n              \"text-align\": \"right\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button_group, null, {\n              default: _withCtx(() => [_createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"编辑\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  icon: \"el-icon-edit\",\n                  onClick: $event => _ctx.edit(item.id)\n                }, null, 8 /* PROPS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _ctx.isLogic ? (_openBlock(), _createBlock(_component_el_tooltip, {\n                key: 0,\n                class: \"item\",\n                effect: \"light\",\n                content: \"添加关联逻辑\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  icon: \"el-icon-paperclip\",\n                  onClick: $event => _ctx.logic(item.id)\n                }, null, 8 /* PROPS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"复制\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  icon: \"el-icon-document-copy\",\n                  onClick: $event => _ctx.copy(item.id)\n                }, null, 8 /* PROPS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"删除\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  icon: \"el-icon-delete\",\n                  onClick: $event => _ctx.del_pre(item.id)\n                }, null, 8 /* PROPS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"上移\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  icon: \"el-icon-caret-top\",\n                  onClick: $event => _ctx.up(item.id)\n                }, null, 8 /* PROPS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"下移\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  icon: \"el-icon-caret-bottom\",\n                  onClick: $event => _ctx.down(item.id)\n                }, null, 8 /* PROPS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onMouseover\"]);\n      }), 128 /* KEYED_FRAGMENT */))])])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_dialog, {\n    title: _ctx.qsEditDialogTitle,\n    visible: _ctx.qsEditDialogVisible,\n    \"onUpdate:visible\": _cache[24] || (_cache[24] = $event => _ctx.qsEditDialogVisible = $event),\n    \"before-close\": _ctx.cancel_pre,\n    class: \"dialog\",\n    width: \"1100px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"form\",\n      model: _ctx.willAddQuestion,\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"题目类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          disabled: _ctx.selectDisAble,\n          modelValue: _ctx.willAddQuestion.type,\n          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => _ctx.willAddQuestion.type = $event),\n          placeholder: \"请选择题目类型\",\n          onChange: _ctx.typeChange\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.allType, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.value,\n              label: item.label,\n              value: item.value\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"disabled\", \"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _ctx.willAddQuestion.type === 'name' || _ctx.willAddQuestion.type === 'stuId' || _ctx.willAddQuestion.type === 'class' || _ctx.willAddQuestion.type === 'school' || _ctx.willAddQuestion.type === 'phone' || _ctx.willAddQuestion.type === 'email' || _ctx.willAddQuestion.type === 'sex' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_42, [_ctx.willAddQuestion.type === 'name' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"姓名\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'stuId' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 1,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"学号\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'school' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"学校\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'sex' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 3,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"性别\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'phone' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 4,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"手机号\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'email' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 5,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"邮箱\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"是否必填\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          modelValue: _ctx.willAddQuestion.must,\n          \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => _ctx.willAddQuestion.must = $event)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"必填\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_43, [_createVNode(_component_el_form_item, {\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.willAddQuestion.title,\n          \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => _ctx.willAddQuestion.title = $event),\n          placeholder: \"请输入标题\",\n          style: {\n            \"width\": \"800px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"题目描述\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.willAddQuestion.description,\n          \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => _ctx.willAddQuestion.description = $event),\n          placeholder: \"请输入题目描述\",\n          style: {\n            \"width\": \"800px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"是否必填\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          modelValue: _ctx.willAddQuestion.must,\n          \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => _ctx.willAddQuestion.must = $event)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"必填\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _ctx.willAddQuestion.type === 'radio' || _ctx.willAddQuestion.type === 'checkbox' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.willAddQuestion.options, (item, index) => {\n        return _openBlock(), _createBlock(_component_el_form_item, {\n          label: '选项' + (index + 1),\n          key: index\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_row, null, {\n            default: _withCtx(() => [_createVNode(_component_el_col, {\n              span: 12\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_input, {\n                modelValue: item.title,\n                \"onUpdate:modelValue\": $event => item.title = $event,\n                placeholder: \"请输入选项名\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_col, {\n              span: 12\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_button, {\n                type: \"danger\",\n                plain: \"\",\n                class: \"deleteOptionButton\",\n                onClick: $event => _ctx.deleteOption(index)\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"删除选项\")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), !item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 0,\n                type: \"success\",\n                plain: \"\",\n                style: {\n                  \"margin-right\": \"8px\"\n                },\n                onClick: $event => item.hasNumLimit = true\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"添加库存限制\")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 1,\n                type: \"info\",\n                plain: \"\",\n                style: {\n                  \"margin-right\": \"8px\"\n                },\n                onClick: $event => item.hasNumLimit = false\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"取消库存限制\")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_input_number, {\n                key: 2,\n                modelValue: item.supply,\n                \"onUpdate:modelValue\": $event => item.supply = $event\n              }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n      }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_el_button, {\n        type: \"primary\",\n        plain: \"\",\n        class: \"addOptionButton\",\n        onClick: _ctx.addOption\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"新增选项\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'text' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createVNode(_component_el_form_item, {\n        label: \"填空\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"textarea\",\n          class: \"my-input\",\n          rows: _ctx.willAddQuestion.row,\n          resize: \"none\"\n        }, null, 8 /* PROPS */, [\"rows\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"行数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: _ctx.willAddQuestion.row,\n          \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => _ctx.willAddQuestion.row = $event),\n          min: 1,\n          max: 10\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'mark' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"最大分数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: _ctx.willAddQuestion.score,\n          \"onUpdate:modelValue\": _cache[23] || (_cache[23] = $event => _ctx.willAddQuestion.score = $event),\n          min: 3,\n          max: 10\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"上传图片\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          class: \"upload-img\",\n          action: _ctx.uploadImgUrl,\n          multiple: \"\",\n          \"http-request\": _ctx.upLoadImage,\n          \"before-upload\": _ctx.beforeImageUpload,\n          \"file-list\": _ctx.willAddQuestion.imgList,\n          limit: 6\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            plain: \"\",\n            style: {\n              \"width\": \"100px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1 /* STABLE */\n          }), _hoisted_44]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"action\", \"http-request\", \"before-upload\", \"file-list\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"上传视频\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          class: \"upload-video\",\n          action: _ctx.uploadVideoUrl,\n          \"http-request\": _ctx.upLoadVideo,\n          \"before-upload\": _ctx.beforeVideoUpload,\n          \"file-list\": _ctx.willAddQuestion.videoList,\n          limit: 1\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            plain: \"\",\n            style: {\n              \"width\": \"100px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1 /* STABLE */\n          }), _hoisted_45]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"action\", \"http-request\", \"before-upload\", \"file-list\"])]),\n        _: 1 /* STABLE */\n      })]))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"]), _createElementVNode(\"span\", _hoisted_46, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"primary\",\n        onClick: _ctx.dialogConfirm\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"确定\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createTextVNode(\"   \"), _createVNode(_component_el_button, {\n        span: 6,\n        onClick: _ctx.cancel_pre\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"取消\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"visible\", \"before-close\"]), _createVNode(_component_el_dialog, {\n    visible: _ctx.qsLinkDialogVisible,\n    \"onUpdate:visible\": _cache[26] || (_cache[26] = $event => _ctx.qsLinkDialogVisible = $event),\n    title: _ctx.qsLinkDialogTitle,\n    class: \"linkDialog\",\n    \"show-close\": false,\n    width: \"800px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: \"8\",\n        style: {\n          \"text-align\": \"center\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_hoisted_47]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: \"16\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_hoisted_48]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, {\n          style: {\n            \"margin-top\": \"15px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 16,\n            style: {\n              \"margin-right\": \"5px\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              placeholder: _ctx.linkShare,\n              modelValue: _ctx.linkShare,\n              \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => _ctx.linkShare = $event),\n              id: \"copyText\",\n              disabled: true\n            }, null, 8 /* PROPS */, [\"placeholder\", \"modelValue\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_button, {\n            type: \"info\",\n            plain: \"\",\n            id: \"copyBtn\",\n            onClick: _ctx.copyToClip\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"复制链接\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, {\n          style: {\n            \"margin-top\": \"25px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            plain: \"\",\n            onClick: _ctx.downloadQrcode\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"下载二维码\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: _ctx.genCodeAgain,\n            style: {\n              \"margin-left\": \"30px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"重新生成链接\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"span\", _hoisted_49, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"success\",\n        style: {\n          \"width\": \"80px\"\n        },\n        onClick: _ctx.finish\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"完 成\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"title\"]), _createVNode(_component_el_dialog, {\n    visible: _ctx.editWrongMsgVisible,\n    \"onUpdate:visible\": _cache[28] || (_cache[28] = $event => _ctx.editWrongMsgVisible = $event),\n    class: \"linkDialog\",\n    \"show-close\": false,\n    \"close-on-click-modal\": false,\n    width: \"300px\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString(_ctx.editWrongMsg), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_50, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"danger\",\n        style: {\n          \"width\": \"80px\"\n        },\n        onClick: _cache[27] || (_cache[27] = $event => _ctx.editWrongMsgVisible = false)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"知道了\")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"]), _createCommentVNode(\"    关联问题弹框\"), _createVNode(_component_el_dialog, {\n    title: _ctx.qsLogicDialogTitle,\n    visible: _ctx.qsLogicDialogVisible,\n    \"onUpdate:visible\": _cache[32] || (_cache[32] = $event => _ctx.qsLogicDialogVisible = $event),\n    \"before-close\": _ctx.cancel_pre_logic,\n    class: \"dialog\"\n  }, {\n    default: _withCtx(() => [_ctx.questions.length !== 0 ? (_openBlock(), _createBlock(_component_el_form, {\n      key: 0,\n      class: \"logic-form\",\n      ref: \"form\",\n      \"label-width\": \"80px\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_51, \" 当前题目：\" + _toDisplayString(_ctx.questions[_ctx.logicIndex].id) + \". \" + _toDisplayString(_ctx.questions[_ctx.logicIndex].title), 1 /* TEXT */), _createVNode(_component_el_form_item, {\n        label: \"关联题目\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: _ctx.willAddLogic.question_id,\n          \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => _ctx.willAddLogic.question_id = $event),\n          placeholder: \"请选择关联题目\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.questionsFilter, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: _ctx.idTitle(item),\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _ctx.willAddLogic.question_id !== 0 ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"关联选项\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: _ctx.willAddLogic.option_id,\n          \"onUpdate:modelValue\": _cache[30] || (_cache[30] = $event => _ctx.willAddLogic.option_id = $event),\n          placeholder: \"请选择关联选项\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.questions[_ctx.willAddLogic.question_id - 1].options, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: item.title,\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddLogic.question_id !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_52, [_createCommentVNode(\"          保存加入后选项id记得减一\"), _createTextVNode(\" 当题目\"), _createElementVNode(\"span\", _hoisted_53, \" \\\"\" + _toDisplayString(_ctx.idTitle(_ctx.questions[_ctx.willAddLogic.question_id - 1])) + \"\\\" \", 1 /* TEXT */), _createTextVNode(\"选择选项\"), _createElementVNode(\"span\", _hoisted_54, \" \\\"\" + _toDisplayString(_ctx.questions[_ctx.willAddLogic.question_id - 1].options[_ctx.willAddLogic.option_id - 1].title) + \"\\\" \", 1 /* TEXT */), _createTextVNode(\"时此题才会显示 \")])) : _createCommentVNode(\"v-if\", true), _ctx.questionsFilter.length === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_55, \" 题目之前不存在单（多）选题，无法设置关联题目 \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_56, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[31] || (_cache[31] = $event => _ctx.logicConfirm(_ctx.logicIndex))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"确定\")]),\n        _: 1 /* STABLE */\n      })])]),\n      _: 1 /* STABLE */\n    }, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"visible\", \"before-close\"]), _createCommentVNode(\"    高级设置弹框\"), _withDirectives((_openBlock(), _createBlock(_component_el_dialog, {\n    title: _ctx.settingDialogTitle,\n    class: \"settingDialog\",\n    width: \"30%\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, null, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        class: \"timeBlock\",\n        label: \"截止时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n          style: {\n            \"margin-left\": \"100px\"\n          },\n          modelValue: _ctx.timeFrame,\n          \"onUpdate:modelValue\": _cache[33] || (_cache[33] = $event => _ctx.timeFrame = $event),\n          onChange: _ctx.formatTime,\n          type: \"datetime\",\n          \"value-format\": \"yyyy-MM-dd HH:mm\",\n          placeholder: \"选择结束时间\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"是否限制回收量\",\n        class: \"recycleBlock\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_switch, {\n            modelValue: _ctx.hasRecycleLimit,\n            \"onUpdate:modelValue\": _cache[34] || (_cache[34] = $event => _ctx.hasRecycleLimit = $event),\n            \"active-color\": \"#13ce66\",\n            \"inactive-color\": \"grey\",\n            \"active-text\": \"是\",\n            \"inactive-text\": \"否\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_ctx.hasRecycleLimit ? (_openBlock(), _createBlock(_component_el_input_number, {\n            key: 0,\n            modelValue: _ctx.max_recycling,\n            \"onUpdate:modelValue\": _cache[35] || (_cache[35] = $event => _ctx.max_recycling = $event),\n            min: 1,\n            style: {\n              \"margin-left\": \"120px\",\n              \"height\": \"40px\",\n              \"margin-top\": \"10px\"\n            }\n          }, null, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"题目关联逻辑开关\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_switch, {\n          modelValue: _ctx.isLogic,\n          \"onUpdate:modelValue\": _cache[36] || (_cache[36] = $event => _ctx.isLogic = $event),\n          \"active-text\": \"开\",\n          \"inactive-text\": \"关\",\n          onChange: _ctx.closeGlobalLogic\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _hoisted_57, _ctx.isLogic ? (_openBlock(), _createElementBlock(\"div\", _hoisted_58, \" 为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑 \")) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_59, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _ctx.settingSuccess\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"完成\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\"])), [[_directive_medel, _ctx.settingDialogVisible, \"visible\"]])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","style","id","_createElementBlock","_hoisted_1","_createVNode","_component_el_header","default","_withCtx","_component_edit_header","title","_ctx","description","isReleased","onTitleChanged","_cache","$event","changeTitle","onDescriptionChanged","changeDescription","onAdvancedSetting","openSetting","onPublishClicked","publish","onSaveClicked","save","onQnPreview","preview","onOnConfirm","dialogCancel","onShareClicked","share","_","_component_el_container","_component_el_aside","_component_el_tabs","modelValue","activeName","onTabClick","initOutline","_component_el_tab_pane","label","name","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onClick","willAddQuestion","type","qsEditDialogVisible","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_component_el_row","_createTextVNode","_hoisted_15","_hoisted_16","_hoisted_17","args","addName","_hoisted_18","_hoisted_19","addStuID","_createCommentVNode","_hoisted_20","_hoisted_21","_hoisted_22","addPhone","_hoisted_23","_hoisted_24","addEmail","_hoisted_25","_component_el_tree","data","outline","props","defaultProps","onNodeDrop","handleDrop","draggable","allowDrop","_component_el_main","_hoisted_26","_hoisted_27","_toDisplayString","undefined","_hoisted_28","_hoisted_29","_Fragment","_renderList","questions","item","_createBlock","onMouseover","hoverItem","_component_el_col","span","_hoisted_30","must","_hoisted_31","_hoisted_32","_component_el_input","placeholder","_hoisted_33","_hoisted_34","_component_el_radio","value","_hoisted_35","imgList","i","index","offset","_component_el_image","src","url","length","_hoisted_36","videoList","width","height","transparentatstart","animationatstart","autostart","autosize","volume","displaysize","showdisplay","showstatusbar","showcontrols","showaudiocontrols","showtracker","showpositioncontrols","balance","_hoisted_37","options","ans","hasNumLimit","_hoisted_38","supply","consume","_component_el_checkbox","_hoisted_39","row","_mergeProps","ref_for","_hoisted_40","_component_el_rate","max","score","isLogic","last_question","_hoisted_41","relatedQs","_component_el_button_group","_component_el_tooltip","effect","content","placement","_component_el_button","icon","edit","logic","copy","del_pre","up","down","_component_el_dialog","qsEditDialogTitle","visible","cancel_pre","_component_el_form","ref","model","_component_el_form_item","_component_el_select","disabled","selectDisAble","onChange","typeChange","allType","_component_el_option","_hoisted_42","_hoisted_43","plain","deleteOption","_component_el_input_number","addOption","rows","resize","min","_component_el_upload","action","uploadImgUrl","multiple","upLoadImage","beforeImageUpload","limit","size","_hoisted_44","uploadVideoUrl","upLoadVideo","beforeVideoUpload","_hoisted_45","_hoisted_46","dialogConfirm","qsLinkDialogVisible","qsLinkDialogTitle","_hoisted_47","_hoisted_48","linkShare","copyToClip","downloadQrcode","genCodeAgain","_hoisted_49","finish","editWrongMsgVisible","editWrongMsg","_hoisted_50","qsLogicDialogTitle","qsLogicDialogVisible","cancel_pre_logic","_hoisted_51","logicIndex","willAddLogic","question_id","questionsFilter","idTitle","option_id","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","logicConfirm","settingDialogTitle","_component_el_date_picker","timeFrame","formatTime","_component_el_switch","hasRecycleLimit","max_recycling","closeGlobalLogic","_hoisted_57","_hoisted_58","_hoisted_59","settingSuccess","settingDialogVisible"],"sources":["E:\\mytest\\src\\views\\qn-createpane\\qn-categorypane\\myform.vue"],"sourcesContent":["<template>\r\n    <div class=\"form\">\r\n      <el-header class=\"header\">\r\n        <edit-header\r\n            :title=\"title\"\r\n            :description=\"description\"\r\n            :isReleased=\"isReleased\"\r\n            v-on:titleChanged=\"changeTitle($event)\"\r\n            v-on:descriptionChanged=\"changeDescription($event)\"\r\n            v-on:advancedSetting=\"openSetting($event)\"\r\n            v-on:publishClicked=\"publish($event)\"\r\n            v-on:saveClicked=\"save($event)\"\r\n            v-on:qnPreview=\"preview($event)\"\r\n            v-on:onConfirm=\"dialogCancel($event)\"\r\n            v-on:shareClicked=\"share($event)\"\r\n        >\r\n        </edit-header>\r\n      </el-header>\r\n  \r\n      <el-container class=\"container\">\r\n        <el-aside class=\"side\">\r\n          <el-tabs v-model=\"activeName\" @tab-click=\"initOutline\">\r\n  \r\n  \r\n              <el-tab-pane label=\"题目类型\" name=\"first\">\r\n                <div class=\"edit\">\r\n                  <div class=\"ques-type\">\r\n                    <i class=\"el-icon-check\"></i>\r\n                    <span> 单选题&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</span>\r\n                    <i class=\"el-icon-circle-plus type-icon\" @click=\"willAddQuestion.type='radio';qsEditDialogVisible=true\"></i>\r\n                  </div>\r\n                  <div class=\"ques-type\">\r\n                    <i class=\"el-icon-finished\"></i>\r\n                    <span> 多选题&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</span>\r\n                    <i class=\"el-icon-circle-plus type-icon\" @click=\"willAddQuestion.type='checkbox';qsEditDialogVisible=true\"></i>\r\n                  </div>\r\n                  <div class=\"ques-type\">\r\n                    <i class=\"el-icon-edit-outline\"></i>\r\n                    <span> 填空题&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</span>\r\n                    <i class=\"el-icon-circle-plus type-icon\" @click=\"willAddQuestion.type='text';qsEditDialogVisible=true\"></i>\r\n                  </div>\r\n                  <div class=\"ques-type\">\r\n                    <i class=\"el-icon-star-off\"></i>\r\n                    <span> 评分题&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</span>\r\n                    <i class=\"el-icon-circle-plus type-icon\" @click=\"willAddQuestion.type='mark';qsEditDialogVisible=true\"></i>\r\n                  </div>\r\n                  <div>\r\n                    <el-row class=\"sideTitle\">个人信息模板</el-row>\r\n                    <div class=\"ques-type\">\r\n                      <i class=\"el-icon-user\"></i>\r\n                      <span class=\"chooseLabel\">姓名 </span>\r\n                      <i class=\"el-icon-circle-plus type-icon\" @click=\"addName\"></i>&emsp;&emsp;\r\n                      <i class=\"el-icon-discount\"></i>\r\n                      <span class=\"chooseLabel\">学号 </span>\r\n                      <i class=\"el-icon-circle-plus type-icon\" @click=\"addStuID\"></i>\r\n  <!--                    <i class=\"el-icon-male\"></i>-->\r\n  <!--                    <span class=\"chooseLabel\">性别 </span>-->\r\n  <!--                    <i class=\"el-icon-circle-plus type-icon\" @click=\"addSex\"></i>-->\r\n                    </div>\r\n  \r\n                    <div class=\"ques-type\">\r\n                      <i class=\"el-icon-phone-outline\"></i>\r\n                      <span class=\"chooseLabel\">电话 </span>\r\n                      <i class=\"el-icon-circle-plus type-icon\" @click=\"addPhone\"></i>&emsp;&emsp;\r\n                      <i class=\"el-icon-message\"></i>\r\n                      <span class=\"chooseLabel\">邮箱 </span>\r\n                      <i class=\"el-icon-circle-plus type-icon\" @click=\"addEmail\"></i>\r\n                    </div>\r\n  <!--                  <div class=\"ques-type\">-->\r\n  <!--                    &emsp;&emsp;-->\r\n  <!--                    <i class=\"el-icon-school\"></i>-->\r\n  <!--                    <span class=\"chooseLabel\">学校 </span>-->\r\n  <!--                    <i class=\"el-icon-circle-plus type-icon\" @click=\"addSchool\"></i>-->\r\n  <!--                  </div>-->\r\n                  </div>\r\n                </div>\r\n              </el-tab-pane>\r\n  \r\n            <el-tab-pane label=\"问卷大纲\" name=\"second\">\r\n              <div class=\"outline\">\r\n                <el-tree\r\n                    :data=\"outline\"\r\n                    node-key=\"id\"\r\n                    :props=\"defaultProps\"\r\n                    @node-drop=\"handleDrop\"\r\n                    draggable\r\n                    :allow-drop=\"allowDrop\"\r\n                ></el-tree>\r\n              </div>\r\n            </el-tab-pane>\r\n  \r\n          </el-tabs>\r\n        </el-aside>\r\n  \r\n        <el-main class=\"main\">\r\n          <div class=\"ques\">\r\n  \r\n            <div class=\"title\">\r\n              {{ title }}\r\n            </div>\r\n            <div class=\"description\" v-if=\"this.description!=='' && this.description!==null && this.description !== undefined\">\r\n              &emsp;&emsp;{{ description }}\r\n            </div>\r\n            <div class=\"content\">\r\n              <el-row class=\"ques-block\" v-for=\"item in questions\" :key=\"item.id\" @mouseover.enter=\"hoverItem=item.id\">\r\n  \r\n                <el-col :span=\"16\" class=\"block-content\">\r\n                  <div class=\"block-title\">\r\n                    {{ item.id }}. {{ item.title }} <span class=\"must\" v-if=\"item.must\">(必填)</span>\r\n                  </div>\r\n  \r\n                  <div class=\"block-info\" v-if=\"item.type==='name' || item.type==='stuId' || item.type==='class' || item.type==='school'\r\n                            ||item.type==='phone' || item.type==='email' \">\r\n                    <el-input placeholder=\"请输入内容\" style=\"margin-left: 10px\"\r\n                        >\r\n                    </el-input>\r\n                  </div>\r\n  \r\n                  <div class=\"block-choice\" v-if=\"item.type==='sex'\">\r\n                    <div style=\"padding-bottom: 10px\"><el-radio value=\"0\">男</el-radio></div>\r\n                    <div><el-radio value=\"0\">女</el-radio></div>\r\n                  </div>\r\n  \r\n                  <div\r\n                      class=\"block-description\"\r\n                      v-if=\"item.description!=='' && item.description!==null && item.description!==undefined\"\r\n                  >\r\n                    {{ item.description }}\r\n                  </div>\r\n  \r\n                  <!--                  图片-->\r\n                  <el-row class=\"block-img\" v-for=\"(i,index) in item.imgList\" :key=\"i.index\">\r\n                    <el-col :offset=\"2\" :span=\"10\" class=\"demo-image__preview\" v-if=\"index%2===0\">\r\n                      <el-image\r\n                          style=\"width: 200px; height: 200px\"\r\n                          :src=\"i.url\"\r\n                          :preview-src-list=\"[i.url]\">\r\n                      </el-image>\r\n                    </el-col>\r\n                    <el-col :span=\"10\" class=\"demo-image__preview\" v-if=\"index%2===0&&index+1<=item.imgList.length-1\">\r\n                      <el-image\r\n                          style=\"width: 200px; height: 200px\"\r\n                          :src=\"item.imgList[index+1].url\"\r\n                          :preview-src-list=\"[item.imgList[index+1].url]\">\r\n                      </el-image>\r\n                    </el-col>\r\n                  </el-row>\r\n                  <span style=\"color: #9b9ea0;font-size: x-small\" v-if=\"item.imgList.length!==0\">（点击图片查看大图）</span>\r\n  \r\n  \r\n                  <!--                视频-->\r\n                  <el-row class=\"block-img\" v-for=\"i in item.videoList\" :key=\"i.index\">\r\n                    <embed width=400 height=230 transparentatstart=true\r\n                           animationatstart=false autostart=true autosize=false volume=100\r\n                           displaysize=0 showdisplay=true showstatusbar=true showcontrols=true\r\n                           showaudiocontrols=true showtracker=true showpositioncontrols=true\r\n                           balance=true :src=\"i.url\">\r\n                  </el-row>\r\n  \r\n  \r\n                  <div class=\"block-choice\" v-for=\"ans in item.options\" :key=\"ans.id\">\r\n  \r\n                    <!--                  单选-->\r\n                    <el-radio v-if=\"item.type==='radio'\" value=\"0\">\r\n                      {{ ans.title }}<span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\" v-if=\"ans.hasNumLimit\">剩余{{ans.supply-ans.consume}}&emsp;总计{{ans.supply}}</span>\r\n                    </el-radio>\r\n  \r\n                    <!--                  多选-->\r\n                    <el-checkbox v-if=\"item.type==='checkbox'\" value=\"0\">\r\n                      {{ ans.title }}\r\n                      <span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\" v-if=\"ans.hasNumLimit\">剩余{{ans.supply-ans.consume}}&emsp;总计{{ans.supply}}</span>\r\n                    </el-checkbox>\r\n  \r\n                    <!--                  填空-->\r\n                    <el-input\r\n                        v-if=\"item.type==='text'&&item.row>1\"\r\n                        type=\"textarea\"\r\n                        placeholder=\"请输入内容\"\r\n                        v-bind=\"ans.title\">\r\n                    </el-input>\r\n                    <el-input\r\n                        v-if=\"item.type==='text'&&item.row===1\"\r\n                        placeholder=\"请输入内容\"\r\n                        v-bind=\"ans.title\">\r\n                    </el-input>\r\n                  </div>\r\n  \r\n                  <div class=\"block-choice\" v-if=\"item.type==='mark'\">\r\n                    <!--                  评分-->\r\n                    <el-rate value=\"0\" :max=\"item.score\"></el-rate>\r\n                  </div>\r\n  \r\n                  <!--                 关联信息-->\r\n                  <div class=\"block-relation\" v-if=\"isLogic && item.last_question!==0\">\r\n                    <div>{{ relatedQs(item) }}</div>\r\n                  </div>\r\n                </el-col>\r\n  \r\n                <el-col :span=\"8\" class=\"block-button\" style=\"text-align: right\" v-if=\"hoverItem===item.id\">\r\n                  <el-button-group>\r\n                    <el-tooltip class=\"item\" effect=\"light\" content=\"编辑\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-edit\" @click=\"edit(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                    <el-tooltip class=\"item\" v-if=\"isLogic\" effect=\"light\" content=\"添加关联逻辑\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-paperclip\" @click=\"logic(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                    <el-tooltip class=\"item\" effect=\"light\" content=\"复制\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-document-copy\" @click=\"copy(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                    <el-tooltip class=\"item\" effect=\"light\" content=\"删除\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-delete\" @click=\"del_pre(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                    <el-tooltip class=\"item\" effect=\"light\" content=\"上移\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-caret-top\" @click=\"up(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                    <el-tooltip class=\"item\" effect=\"light\" content=\"下移\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-caret-bottom\" @click=\"down(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                  </el-button-group>\r\n                </el-col>\r\n  \r\n              </el-row>\r\n            </div>\r\n  \r\n          </div>\r\n        </el-main>\r\n  \r\n      </el-container>\r\n  \r\n      <el-dialog :title=\"qsEditDialogTitle\" v-model:visible=\"qsEditDialogVisible\"  :before-close=\"cancel_pre\" class=\"dialog\" width=\"1100px\">\r\n        <el-form ref=\"form\" :model=\"willAddQuestion\" label-width=\"100px\">\r\n          <el-form-item label=\"题目类型\" >\r\n            <el-select :disabled=\"selectDisAble\" v-model=\"willAddQuestion.type\" placeholder=\"请选择题目类型\" @change=\"typeChange\">\r\n              <el-option\r\n                  v-for=\"item in allType\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <div\r\n              class=\"is-info\"\r\n              v-if=\"willAddQuestion.type==='name'\r\n              || willAddQuestion.type==='stuId'\r\n              || willAddQuestion.type==='class'\r\n              || willAddQuestion.type==='school'\r\n              || willAddQuestion.type==='phone'\r\n              || willAddQuestion.type==='email'\r\n              || willAddQuestion.type==='sex'\"\r\n          >\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='name'\">\r\n              <el-input value=\"姓名\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='stuId'\">\r\n              <el-input value=\"学号\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='school'\">\r\n              <el-input value=\"学校\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='sex'\">\r\n              <el-input value=\"性别\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='phone'\">\r\n              <el-input value=\"手机号\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='email'\">\r\n              <el-input value=\"邮箱\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"是否必填\" >\r\n              <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n            </el-form-item>\r\n          </div>\r\n          <div v-else class=\"non-pre\">\r\n          <el-form-item label=\"题目标题\" style=\"width: 100%;\">\r\n            <el-input v-model=\"willAddQuestion.title\" placeholder=\"请输入标题\" style=\"width: 800px\" ></el-input>\r\n          </el-form-item>\r\n  \r\n          <el-form-item label=\"题目描述\" style=\"width: 100%;\">\r\n            <el-input v-model=\"willAddQuestion.description\" placeholder=\"请输入题目描述\" style=\"width: 800px\"></el-input>\r\n          </el-form-item>\r\n  \r\n          <el-form-item label=\"是否必填\" >\r\n            <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n          </el-form-item>\r\n  \r\n          <template v-if=\"willAddQuestion.type==='radio'||willAddQuestion.type==='checkbox'\">\r\n            <el-form-item :label=\"'选项'+(index+1)\" v-for=\"(item,index) in willAddQuestion.options\" :key=\"index\">\r\n              <el-row>\r\n                <el-col :span=\"12\">\r\n                  <el-input  v-model=\"item.title\" placeholder=\"请输入选项名\" ></el-input>\r\n                </el-col>\r\n                <el-col :span=\"12\">\r\n                  <el-button type=\"danger\" plain class=\"deleteOptionButton\"  @click=\"deleteOption(index)\" >删除选项</el-button>\r\n                  <el-button type=\"success\" plain style=\"margin-right: 8px\" v-if=\"!item.hasNumLimit\" @click=\"item.hasNumLimit=true\">添加库存限制</el-button>\r\n                  <el-button type=\"info\" plain style=\"margin-right: 8px\" v-if=\"item.hasNumLimit\" @click=\"item.hasNumLimit=false\">取消库存限制</el-button>\r\n                  <el-input-number v-model=\"item.supply\" v-if=\"item.hasNumLimit\"></el-input-number>\r\n                </el-col>\r\n              </el-row>\r\n  \r\n            </el-form-item>\r\n            <el-button type=\"primary\" plain class=\"addOptionButton\" @click=\"addOption\">新增选项</el-button>\r\n          </template>\r\n  \r\n          <template v-if=\"willAddQuestion.type==='text'\" >\r\n            <el-form-item label=\"填空\">\r\n              <el-input\r\n                  type=\"textarea\"\r\n                  class=\"my-input\"\r\n                  :rows=\"willAddQuestion.row\"\r\n                  resize=\"none\">\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"行数\">\r\n              <el-input-number v-model=\"willAddQuestion.row\" :min=\"1\" :max=\"10\" ></el-input-number>\r\n            </el-form-item>\r\n          </template>\r\n  \r\n          <template v-if=\"willAddQuestion.type==='mark'\">\r\n            <el-form-item label=\"最大分数\">\r\n              <el-input-number v-model=\"willAddQuestion.score\" :min=\"3\" :max=\"10\" ></el-input-number>\r\n            </el-form-item>\r\n          </template>\r\n          <el-form-item label=\"上传图片\">\r\n            <el-upload\r\n                class=\"upload-img\"\r\n                :action=uploadImgUrl\r\n                multiple\r\n                :http-request=\"upLoadImage\"\r\n                :before-upload=\"beforeImageUpload\"\r\n                :file-list=\"willAddQuestion.imgList\"\r\n                :limit=\"6\">\r\n              <el-button size=\"small\"  plain style=\"width: 100px\">点击上传</el-button>\r\n              <span class=\"el-upload__tip\">&emsp;只能上传jpg/png文件，且不超过5mb</span>\r\n            </el-upload>\r\n          </el-form-item>\r\n  \r\n          <el-form-item label=\"上传视频\">\r\n            <el-upload\r\n                class=\"upload-video\"\r\n                :action=uploadVideoUrl\r\n                :http-request=\"upLoadVideo\"\r\n                :before-upload=\"beforeVideoUpload\"\r\n                :file-list=\"willAddQuestion.videoList\"\r\n                :limit=\"1\">\r\n              <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n              <span class=\"el-upload__tip\">&emsp;只能上传mp4/mkv文件，且不超过10mb</span>\r\n            </el-upload>\r\n          </el-form-item>\r\n          </div>\r\n        </el-form>\r\n        <span class=\"dialog-footer\" style=\"text-align: center\">\r\n          <el-row>\r\n            <el-button :span=\"6\" type=\"primary\" @click=\"dialogConfirm\">确定</el-button>\r\n            &emsp;\r\n            <el-button :span=\"6\" @click=\"cancel_pre\" >取消</el-button>\r\n          </el-row>\r\n        </span>\r\n      </el-dialog>\r\n      <el-dialog v-model:visible=\"qsLinkDialogVisible\" :title=\"qsLinkDialogTitle\" class=\"linkDialog\" :show-close=\"false\" width=\"800px\" >\r\n        <el-row>\r\n          <el-col span=\"8\" style=\"text-align: center\">\r\n            <el-row>\r\n              <div id=\"qrcode_2\" style=\"height:200px; width:200px; margin-left: 22px;\"></div>\r\n            </el-row>\r\n          </el-col>\r\n          <el-col span=\"16\">\r\n            <el-row><h2>链接与二维码</h2></el-row>\r\n            <el-row style=\"margin-top:15px\">\r\n              <el-col :span=\"16\" style=\"margin-right: 5px\">\r\n                <el-input :placeholder=linkShare v-model=\"linkShare\" id=\"copyText\" :disabled=\"true\">\r\n                </el-input>\r\n              </el-col>\r\n              <el-button type=\"info\" plain id=\"copyBtn\" @click=\"copyToClip\">复制链接</el-button></el-row>\r\n            <el-row style=\"margin-top: 25px\">\r\n              <el-button type=\"primary\" plain @click=\"downloadQrcode\">下载二维码</el-button>\r\n              <el-button type=\"primary\" @click=\"genCodeAgain\" style=\"margin-left: 30px\">重新生成链接</el-button>\r\n            </el-row>\r\n          </el-col>\r\n        </el-row>\r\n        <span class=\"dialog-footer\" style=\"text-align: center\">\r\n          <el-row>\r\n            <el-button :span=\"6\" type=\"success\" style=\"width: 80px\"  @click=\"finish\">完 成</el-button>\r\n          </el-row>\r\n        </span>\r\n      </el-dialog>\r\n      <el-dialog v-model:visible=\"editWrongMsgVisible\"  class=\"linkDialog\" :show-close=\"false\" :close-on-click-modal=\"false\" width=\"300px\" >\r\n        <span>{{ editWrongMsg }}</span>\r\n        <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                    <el-row>\r\n                      <el-button :span=\"6\" type=\"danger\" style=\"width: 80px\"  @click=\"editWrongMsgVisible=false\">知道了</el-button>\r\n                    </el-row>\r\n        </span>\r\n      </el-dialog>\r\n      <!--    关联问题弹框-->\r\n      <el-dialog :title=\"qsLogicDialogTitle\" v-model:visible=\"qsLogicDialogVisible\"  :before-close=\"cancel_pre_logic\" class=\"dialog\" >\r\n        <el-form v-if=\"questions.length !== 0\" class=\"logic-form\" ref=\"form\" label-width=\"80px\">\r\n  \r\n          <div class=\"logic-title\">\r\n            当前题目：{{ questions[logicIndex].id }}. {{ questions[logicIndex].title }}\r\n          </div>\r\n  \r\n          <el-form-item label=\"关联题目\">\r\n            <el-select v-model=\"willAddLogic.question_id\" placeholder=\"请选择关联题目\">\r\n              <el-option\r\n                  v-for=\"item in questionsFilter\"\r\n                  :key=\"item.id\"\r\n                  :label=\"idTitle(item)\"\r\n                  :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n  \r\n          <el-form-item label=\"关联选项\" v-if=\"willAddLogic.question_id!==0\">\r\n            <el-select v-model=\"willAddLogic.option_id\" placeholder=\"请选择关联选项\">\r\n              <el-option\r\n                  v-for=\"item in questions[willAddLogic.question_id-1].options\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.title\"\r\n                  :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n  \r\n          <div class=\"logic-info\" v-if=\"willAddLogic.question_id!==0\">\r\n            <!--          保存加入后选项id记得减一-->\r\n            当题目<span style=\"color: #1687fd\"> \"{{ idTitle(questions[willAddLogic.question_id-1]) }}\" </span>选择选项<span style=\"color: #1687fd\"> \"{{ questions[willAddLogic.question_id-1].options[willAddLogic.option_id-1].title}}\" </span>时此题才会显示\r\n          </div>\r\n          <div class=\"logic-info\" v-if=\"questionsFilter.length===1\">\r\n            题目之前不存在单（多）选题，无法设置关联题目\r\n          </div>\r\n  \r\n          <div class=\"logic-bt\">\r\n            <el-button type=\"primary\" @click=\"logicConfirm(logicIndex)\">确定</el-button>\r\n          </div>\r\n  \r\n        </el-form>\r\n      </el-dialog>\r\n      <!--    高级设置弹框-->\r\n      <el-dialog :title=\"settingDialogTitle\" v-medel:visible=\"settingDialogVisible\" class=\"settingDialog\" width=\"30%\">\r\n        <el-form>\r\n          <el-form-item class=\"timeBlock\" label=\"截止时间\">\r\n            <el-date-picker style=\"margin-left: 100px\"\r\n                            v-model=\"timeFrame\"\r\n                            @change=\"formatTime\"\r\n                            type=\"datetime\"\r\n                            value-format=\"yyyy-MM-dd HH:mm\"\r\n                            placeholder=\"选择结束时间\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n        <el-form-item label=\"是否限制回收量\" class=\"recycleBlock\">\r\n            <el-row>\r\n              <el-switch\r\n                  v-model=\"hasRecycleLimit\"\r\n                  active-color=\"#13ce66\"\r\n                  inactive-color=\"grey\"\r\n                  active-text=\"是\"\r\n                  inactive-text=\"否\"\r\n              >\r\n              </el-switch>\r\n            </el-row>\r\n            <el-row>\r\n              <el-input-number v-model=\"max_recycling\" :min=\"1\" v-if=\"hasRecycleLimit\" style=\"margin-left: 120px;height: 40px;margin-top: 10px\">\r\n              </el-input-number>\r\n            </el-row>\r\n          </el-form-item>\r\n          <el-form-item label=\"题目关联逻辑开关\">\r\n            <el-switch\r\n                v-model=\"isLogic\"\r\n                active-text=\"开\"\r\n                inactive-text=\"关\"\r\n                @change=\"closeGlobalLogic\"\r\n            >\r\n            </el-switch>\r\n          </el-form-item>\r\n  \r\n          <div class=\"logic-description\">\r\n            题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】\r\n          </div>\r\n  \r\n          <div class=\"logic-description important\" v-if=\"isLogic\">\r\n            为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑\r\n          </div>\r\n        </el-form>\r\n  \r\n        <div class=\"setting-bt\">\r\n          <el-button type=\"primary\" @click=\"settingSuccess\">完成</el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import editHeader from \"@/components/header/editPageHeader\";\r\n  // import QRCode from \"qrcodejs2\";\r\n  import getDataApi from \"@/utils/getDataApi\";\r\n  import saveDataApi from \"@/utils/saveDataApi\";\r\n  import qrcodeApi from \"@/utils/qrcodeApi\";\r\n  import user from \"@/storage/user\";\r\n  \r\n  export default {\r\n    name: \"myForm\",\r\n    mixins: [getDataApi, saveDataApi, qrcodeApi],\r\n    data() {\r\n      return {\r\n        logicQuestionState: 0,  // 用于判断用户是否更改关联问题设置\r\n        logicOptionState: 0,    // 用于判断用户是否更改关联选项设置\r\n  \r\n        uploadImgUrl: this.GLOBAL.backUrl + 'upload/image',\r\n        uploadVideoUrl: this.GLOBAL.backUrl + 'upload/video',\r\n  \r\n        timer: '',\r\n        value:'',\r\n        qrcode: null,\r\n        timeFrame: '',\r\n        linkShare: '',\r\n        editWrongMsg: \"\",\r\n        editWrongMsgVisible: false,\r\n        qsLinkDialogVisible: false,\r\n        dialogVisibleAsso: false,\r\n        qsLinkDialogTitle: \"发布成功！\",\r\n        settingDialogTitle: \"高级设置\",   // 高级设置弹框的标题\r\n        settingDialogVisible: false,     // 高级设置对话框可见性\r\n        closingDate: null,   // 高级设置中问卷回收的截止日期\r\n        isLogic: true,      // 问卷是否引入关联逻辑\r\n        isReleased: false,   // 是否发布\r\n        hasRecycleLimit:false,\r\n        max_recycling: 10000,\r\n        editIndex:0,\r\n        logicIndex: 0,          // 当前添加题目逻辑的问题ID\r\n        selectDisAble:false,\r\n        hoverItem:0,\r\n        activeName: 'first',\r\n        title: '',\r\n        description: '',\r\n        defaultProps: {\r\n          children: 'children',\r\n          label: 'label'\r\n        },\r\n        type: 1,\r\n        questions: [],\r\n        outline: [],\r\n        pid: this.$route.query.pid,\r\n        qsEditDialogVisible:false,\r\n        qsEditDialogTitle:\"新建题目\",\r\n        qsLogicDialogVisible:false,\r\n        qsLogicDialogTitle: \"关联逻辑设置\",\r\n        willAddQuestion: {\r\n          question_id: 0,\r\n          id: 0,\r\n          type: '',\r\n          title: '',\r\n          must: false, // 是否必填\r\n          is_shown: true,   // 是否显示\r\n          last_question: 0,   // 前导问题\r\n          last_option: 0,     // 前导选项\r\n          description: '', // 问题描述\r\n          options:[\r\n            {\r\n              hasNumLimit:false,  // 是否添加库存限制\r\n              title:'', // 选项标题\r\n              id: 1, // 选项id\r\n              supply: 1,  // 库存\r\n              consume: 0, // 已消耗库存（已选）\r\n            }\r\n          ],\r\n          row: 1, // 填空题区域显示行数\r\n          score: 5, // 评分题的最大评分\r\n          imgList: [],\r\n          videoList: [],\r\n        },\r\n        willAddLogic: {\r\n          question_id: 0,\r\n          option_id: 1,\r\n        },\r\n        allType:[\r\n          {\r\n            value:'radio',\r\n            label:'单选题',\r\n          },\r\n          {\r\n            value:'checkbox',\r\n            label:'多选题',\r\n          },\r\n          {\r\n            value:'text',\r\n            label:'填空题',\r\n          },{\r\n            value: 'mark',\r\n            label: '评分题',\r\n          },{\r\n            value: 'name',\r\n            label: '姓名'\r\n          },\r\n          {\r\n            value: 'stuId',\r\n            label: '学号'\r\n          },\r\n          {\r\n            value: 'phone',\r\n            label: '手机号'\r\n          },\r\n          {\r\n            value: 'school',\r\n            label: '学校'\r\n          },\r\n          {\r\n            value: 'sex',\r\n            label: '性别'\r\n          },\r\n          {\r\n            value: 'email',\r\n            label: '邮箱'\r\n          },\r\n        ],\r\n  \r\n        xiaoxueqi_questions: [\r\n          {\r\n            id: 1,\r\n            type: 'radio',\r\n            title: '这是一个什么网站？',\r\n            description: '请考虑妥当后填写',\r\n            must: true,\r\n            options: [{\r\n              id: 1,\r\n              title: '问卷系统',\r\n            }, {\r\n              id: 2,\r\n              title: '出版系统',\r\n            }],\r\n            row: 0,\r\n            score: 0,\r\n          },\r\n          {\r\n            id: 2,\r\n            type: 'checkbox',\r\n            title: '软工小学期助教都有谁？',\r\n            description: '请考虑妥当后填写',\r\n            must: false,\r\n            options: [{\r\n              id: 1,\r\n              title: 'ZYH',\r\n            }, {\r\n              id: 2,\r\n              title: 'LKW',\r\n            },{\r\n              id: 3,\r\n              title: 'ZXH',\r\n            }, {\r\n              id: 4,\r\n              title: 'HZH',\r\n            }],\r\n            row: 0,\r\n            score: 0,\r\n          },\r\n          {\r\n            id: 3,\r\n            type: 'radio',\r\n            title: '软工小学期累不累',\r\n            description: '请考虑妥当后填写',\r\n            must: false,\r\n            options: [{\r\n              id: 1,\r\n              title: '累',\r\n            }, {\r\n              id: 2,\r\n              title: '非常累',\r\n            }],\r\n            row: 0,\r\n            score: 0,\r\n          },\r\n          {\r\n            id: 4,\r\n            type: 'text',\r\n            title: '您对小学期的评价如何？',\r\n            description: '请考虑妥当后填写',\r\n            must: false,\r\n            options: [{\r\n              id: 0,\r\n              title: '',\r\n            }],\r\n            row: 3,\r\n            score: 0,\r\n          },\r\n          {\r\n            id: 5,\r\n            type: 'mark',\r\n            title: '给小学期打个分吧~',\r\n            description: '请考虑妥当后填写',\r\n            must: true,\r\n            options: [{\r\n              id: 0,\r\n              title: '',\r\n            }],\r\n            row: 0,\r\n            score: 10,\r\n          },\r\n        ],\r\n        xiaoxueqi_outline: [\r\n        {\r\n          id: 1,\r\n          label: '1. 这是一个什么网站？',\r\n        },\r\n        {\r\n          id: 2,\r\n          label: '2. 软工小学期助教都有谁？',\r\n        },\r\n        {\r\n          id: 3,\r\n          label: '3. 软工小学期累不累',\r\n        },\r\n        {\r\n          id: 4,\r\n          label: '4. 您对小学期的评价如何？',\r\n        },\r\n        {\r\n          id: 5,\r\n          label: '5. 给小学期打个分吧~',\r\n        },\r\n      ],\r\n      }\r\n    },\r\n    components: {\r\n      editHeader,\r\n    },\r\n    methods: {\r\n      //---------------------------Image and video--------------------------------//\r\n      upLoadImage(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file.file);\r\n        this.$axios({\r\n          method: 'post',\r\n          url: this.uploadImgUrl,\r\n          data: formData,\r\n        })\r\n            .then(res => {\r\n              switch (res.data.status_code) {\r\n                case 1:\r\n                  var name = res.data.name;\r\n                  var url = res.data.url;\r\n                  this.willAddQuestion.imgList.push({\r\n                    name: name,\r\n                    url: url\r\n                  });\r\n                  console.log(this.willAddQuestion.imgList);\r\n                  break;\r\n                case 2:\r\n                  // this.$message.error(\"上传文件格式错误！\");\r\n                  break;\r\n                default:\r\n                  this.$message.error(\"操作失败！\");\r\n                  break;\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            })\r\n      },\r\n      upLoadVideo(file) {\r\n        const formData = new FormData();\r\n        formData.append('video', file.file);\r\n        this.$axios({\r\n          method: 'post',\r\n          url: this.uploadVideoUrl,\r\n          data: formData,\r\n        })\r\n            .then(res => {\r\n              switch (res.data.status_code) {\r\n                case 1:\r\n                  var name = res.data.name;\r\n                  var url = res.data.url;\r\n                  this.willAddQuestion.videoList.push({\r\n                    name: name,\r\n                    url: url\r\n                  });\r\n                  console.log(this.willAddQuestion.videoList);\r\n                  break;\r\n                case 2:\r\n                  // this.$message.error(\"上传文件格式错误！\");\r\n                  break;\r\n                default:\r\n                  this.$message.error(\"操作失败！\");\r\n                  break;\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            })\r\n      },\r\n      beforeImageUpload(file) {\r\n        const isJPG = file.type === 'image/jpeg';\r\n        const isPNG = file.type === 'image/png';\r\n        const isLt5M = file.size / 1024 / 1024 < 10;\r\n  \r\n        if (!isJPG && !isPNG) {\r\n          this.$message.error('上传头像图片只能是 JPG/PNG 格式!');\r\n        } else if (!isLt5M) {\r\n          this.$message.error('上传头像图片大小不能超过 5MB!');\r\n        }\r\n        return (isJPG || isPNG) && isLt5M;\r\n      },\r\n      beforeVideoUpload(file) {\r\n        const filename = file.name;\r\n        var suffix = '';\r\n        var isVideo = false;\r\n        const isLt2M = file.size / 1024 / 1024 < 30;\r\n        try {\r\n          var flieArr = filename.split('.');\r\n          suffix = flieArr[flieArr.length - 1];\r\n        } catch (err) {\r\n          suffix = '';\r\n        }\r\n        var videoList = ['mp4', 'mkv'];\r\n        var judge = videoList.some(function (item) {\r\n          return item === suffix;\r\n        });\r\n        if (judge) {\r\n          isVideo = true;\r\n        }\r\n        if (!isVideo) {\r\n          this.$message.error('上传视频文件只能是 MP4/MKV 格式!');\r\n        } else if (!isLt2M) {\r\n          this.$message.error('上传视频文件大小不能超过 10MB!');\r\n        }\r\n        return isLt2M && isVideo;\r\n      },\r\n      beforeRemove(file, fileList) {\r\n        console.log(file, fileList);\r\n        return this.$confirm(`确定移除 ${ file.name }？`);\r\n      },\r\n      handleRemove(file, fileList) {\r\n        console.log(file, fileList);\r\n        this.$message(\"移除成功\")\r\n      },\r\n      //--------------------------------------------------------------------------//\r\n      recycleLimit(){\r\n        if (this.hasRecycleLimit===false) this.max_recycling=10000;\r\n      },\r\n      autoSave() {\r\n        this.saveQnInfo('autosave', '4');\r\n      },\r\n      share() {\r\n        this.publish();\r\n      },\r\n      genCodeAgain() {\r\n        this.makeCodeAgain(\"4\");\r\n      },\r\n      formatTime(time) {\r\n        this.timeFrame = time;\r\n      },\r\n      addName(){\r\n        this.willAddQuestion.type=\"name\";\r\n        this.willAddQuestion.title=\"姓名\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      addSex(){\r\n        this.willAddQuestion.type=\"sex\";\r\n        this.willAddQuestion.title=\"性别\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      addStuID(){\r\n        this.willAddQuestion.type=\"stuId\";\r\n        this.willAddQuestion.title=\"学号\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      addSchool(){\r\n        this.willAddQuestion.type=\"school\";\r\n        this.willAddQuestion.title=\"学校\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      addPhone(){\r\n        this.willAddQuestion.type=\"phone\";\r\n        this.willAddQuestion.title=\"手机号\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      addEmail(){\r\n        this.willAddQuestion.type=\"email\";\r\n        this.willAddQuestion.title=\"邮箱\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      finish(){\r\n        this.qsLinkDialogVisible=false;\r\n        this.$router.push('/index')// 跳转到问卷中心？\r\n      },\r\n      publishSuccess:function (){\r\n        this.qsLinkDialogVisible=true;\r\n      },\r\n      edit:function (index){\r\n        index--;\r\n        this.willAddQuestion={\r\n          question_id:this.questions[index].question_id,\r\n          id:this.questions[index].id,\r\n          type:this.questions[index].type,\r\n          title:this.questions[index].title,\r\n          must:this.questions[index].must,\r\n          description: this.questions[index].description,\r\n          options: JSON.parse(JSON.stringify(this.questions[index].options)),\r\n          row:this.questions[index].row,\r\n          score:this.questions[index].score,\r\n          is_shown: this.questions[index].is_shown,\r\n          last_question: this.questions[index].last_question,\r\n          last_option: this.questions[index].last_option,\r\n          imgList: JSON.parse(JSON.stringify(this.questions[index].imgList)),\r\n          videoList: JSON.parse(JSON.stringify(this.questions[index].videoList)),\r\n        };\r\n        this.editIndex=index;\r\n        this.selectDisAble=true;\r\n        this.qsEditDialogTitle=\"编辑题目\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      isExistEmptyOption:function (){\r\n        for(let i=0;i<this.willAddQuestion.options.length;i++){\r\n          if(this.willAddQuestion.options[i].title==='') return true;\r\n        }\r\n        return false;\r\n      },\r\n      isExistSameOption:function (){\r\n        for(let i=0;i<this.willAddQuestion.options.length;i++){\r\n          for(let j=0;j<this.willAddQuestion.options.length;j++){\r\n            if(i!==j&&this.willAddQuestion.options[i].title===this.willAddQuestion.options[j].title) return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n      dialogConfirm(){\r\n        let index = this.editIndex;\r\n        if(this.qsEditDialogTitle===\"编辑题目\") {\r\n          if (this.willAddQuestion.title === '') {\r\n            this.$message({\r\n              type: 'error',\r\n              message: '标题不能为空!'\r\n            });\r\n          }\r\n          else if((this.willAddQuestion.type===\"radio\"||this.willAddQuestion.type===\"checkbox\")&&this.isExistEmptyOption()){\r\n            this.$message({\r\n              type: 'error',\r\n              message: '选项名不能为空!'\r\n            });\r\n          }\r\n          else if((this.willAddQuestion.type===\"radio\"||this.willAddQuestion.type===\"checkbox\")&&this.isExistSameOption()){\r\n            this.$message({\r\n              type: 'error',\r\n              message: '选项名不能重复!'\r\n            });\r\n          }\r\n          else {\r\n            this.questions[index].id = this.willAddQuestion.id;\r\n            this.questions[index].row = this.willAddQuestion.row;\r\n            this.questions[index].must = this.willAddQuestion.must;\r\n            this.questions[index].description = this.willAddQuestion.description;\r\n            this.questions[index].title = this.willAddQuestion.title;\r\n            this.questions[index].options = this.willAddQuestion.options;\r\n            this.questions[index].score = this.willAddQuestion.score;\r\n            this.questions[index].is_shown = this.willAddQuestion.is_shown;\r\n            this.questions[index].last_question = this.willAddQuestion.last_question;\r\n            this.questions[index].last_option = this.willAddQuestion.last_option;\r\n            this.questions[index].options = JSON.parse(JSON.stringify(this.willAddQuestion.options));\r\n            this.questions[index].imgList=JSON.parse(JSON.stringify(this.willAddQuestion.imgList));\r\n            this.questions[index].videoList=JSON.parse(JSON.stringify(this.willAddQuestion.videoList));\r\n            // 大纲更新\r\n            this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n            this.qsEditDialogTitle = \"\";\r\n            this.qsEditDialogVisible = false;\r\n            this.$message({\r\n              type: 'success',\r\n              message: '修改成功!'\r\n            });\r\n            // 重置\r\n            this.resetWillAdd();\r\n            this.selectDisAble = false;\r\n          }\r\n        }\r\n        else{\r\n          if (this.willAddQuestion.title === '') {\r\n            this.$message({\r\n              type: 'error',\r\n              message: '标题不能为空!'\r\n            });\r\n          }\r\n          else if((this.willAddQuestion.type===\"radio\"||this.willAddQuestion.type===\"checkbox\")&&this.isExistEmptyOption()){\r\n            this.$message({\r\n              type: 'error',\r\n              message: '选项名不能为空!'\r\n            });\r\n          }\r\n          else if((this.willAddQuestion.type===\"radio\"||this.willAddQuestion.type===\"checkbox\")&&this.isExistSameOption()){\r\n            this.$message({\r\n              type: 'error',\r\n              message: '选项名不能重复!'\r\n            });\r\n          }\r\n          else {\r\n            this.qsEditDialogVisible = false;\r\n            this.willAddQuestion.id = this.questions.length + 1;\r\n            // 大纲更新\r\n            this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n            this.questions.push(this.willAddQuestion);\r\n            this.$message({\r\n              type: 'success',\r\n              message: '添加成功!'\r\n            });\r\n            // 重置\r\n            this.resetWillAdd();\r\n          }\r\n        }\r\n      },\r\n      resetWillAdd(){\r\n        this.willAddQuestion={\r\n          question_id: 0,\r\n          id: 0,\r\n          type:'',\r\n          title:'',\r\n          must: false, // 是否必填\r\n          is_shown: true,   // 是否显示\r\n          last_question: 0,   // 前导问题\r\n          last_option: 0,     // 前导选项\r\n          description: '', // 问题描述\r\n          options:[\r\n            {\r\n              title:'', // 选项标题\r\n              id: 1 ,// 选项id\r\n              hasNumLimit:false,\r\n              supply:1,\r\n              consume:0,\r\n            }\r\n          ],\r\n          row:1, // 填空区域行数\r\n          score: 5, // 最大评分\r\n          imgList:[],\r\n          videoList:[]\r\n        }\r\n      },\r\n      dialogCancel: function(){\r\n        this.qsEditDialogTitle=\"新建题目\";\r\n        this.resetWillAdd();\r\n        this.qsEditDialogVisible=false;\r\n        this.selectDisAble=false;\r\n      },\r\n      cancel_pre: function () {\r\n        this.$confirm('已编辑的题目信息将不会保存,确认关闭？', '提示', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.dialogCancel();\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      LogicDialogCancel: function () {\r\n        this.qsLogicDialogVisible = false;\r\n        this.resetLogic();\r\n      },\r\n      cancel_pre_logic: function () {\r\n        this.$confirm('已编辑的题目关联逻辑将不会保存,确认关闭？', '提示', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.LogicDialogCancel();\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      logicConfirm: function(index) {\r\n        console.log(this.questions);\r\n        let questions = this.questions;\r\n        let willAddLogic = this.willAddLogic;\r\n        questions[index].last_question = willAddLogic.question_id;\r\n        questions[index].last_option = willAddLogic.option_id;\r\n        questions[index].is_shown = willAddLogic.question_id === 0;\r\n        if (this.willAddLogic.question_id !== this.logicQuestionState || this.willAddLogic.option_id !== this.logicOptionState) {\r\n          this.$message({\r\n            type: 'success',\r\n            message: '问题关联设置成功'\r\n          });\r\n        }\r\n        this.qsLogicDialogVisible = false;\r\n        this.resetLogic();\r\n      },\r\n      logic: function (index) {\r\n        this.logicIndex = index-1;\r\n        this.willAddLogic.question_id = this.questions[index-1].last_question;\r\n        if (this.questions[index-1].last_option!==0) { this.willAddLogic.option_id = this.questions[index-1].last_option; }\r\n        else this.willAddLogic.option_id = 1;\r\n        console.log(this.questions);\r\n        this.qsLogicDialogVisible = true;\r\n        this.logicQuestionState = this.willAddLogic.question_id;\r\n        this.logicOptionState = this.willAddLogic.option_id;\r\n      },\r\n      resetLogic(){\r\n        this.willAddLogic = {\r\n          question_id: 0,\r\n          option_id: 1,\r\n        };\r\n        this.logicIndex = 0;\r\n      },\r\n      typeChange(value){\r\n        this.willAddQuestion.type = value;\r\n      },\r\n      addOption(){\r\n        // 问题关联检查\r\n        if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id-1).length !== 0) {\r\n          this.$message({\r\n            type: 'warning',\r\n            message: '此问题已被关联，无法新增选项，请删除关联信息后再试'\r\n          });\r\n          return;\r\n        }\r\n        this.willAddQuestion.options.push({\r\n          hasNumLimit:false,\r\n          title: '', // 选项标题\r\n          id: this.willAddQuestion.options.length + 1,\r\n          supply:1,\r\n          consume:0,\r\n        });\r\n      },\r\n      deleteOption(index){\r\n        if(this.willAddQuestion.options.length===1){\r\n          this.$message({\r\n            type:\"error\",\r\n            message:\"至少需要设置一个选项！\"\r\n          })\r\n        }\r\n        else {\r\n          // 问题关联检查\r\n          if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id-1).length !== 0) {\r\n            this.$message({\r\n              type: 'warning',\r\n              message: '此问题已被关联，无法删除选项，请删除关联信息后再试'\r\n            });\r\n            return;\r\n          }\r\n          // id重排\r\n          for(let i=index+1; i<this.willAddQuestion.options.length; i++) {\r\n            this.willAddQuestion.options[i].id--;\r\n          }\r\n          this.willAddQuestion.options.splice(index,1);\r\n        }\r\n      },\r\n      changeTitle: function (value) {\r\n        this.title = value;\r\n      },\r\n      changeDescription: function (value) {\r\n        this.description = value;\r\n      },\r\n      openSetting: function () {\r\n        this.settingDialogVisible = true;\r\n      },\r\n      settingSuccess: function () {\r\n        this.settingDialogVisible = false;\r\n        this.$message({\r\n          type: 'success',\r\n          message: '设置已生效'\r\n        });\r\n      },\r\n      publish() {\r\n        if (this.questions.length === 0) {\r\n          this.$message.error(\"题目为空，无法发布！\");\r\n          return;\r\n        }\r\n  \r\n        this.$confirm('确认发布？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'success'\r\n        }).then(() => {\r\n          let loadingIns = this.$loading({fullscreen: true, text: '拼命加载中'});\r\n          this.publishSuccess();\r\n          var new_questions = JSON.parse(JSON.stringify(this.questions));\r\n          let url = '/sm/save/qn/deploy';\r\n          const userInfo = user.getters.getUser(user.state());\r\n          var param = {\r\n            username: userInfo.user.username,\r\n            title: this.title,\r\n            finished_time: this.timeFrame,\r\n            description: this.description,\r\n            type: this.type,\r\n            max_recycling: this.max_recycling,\r\n            qn_id: this.$route.query.pid,\r\n            questions: new_questions\r\n          };\r\n          var paramer = JSON.stringify(param, {questions: 'brackets'})\r\n          this.$axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: paramer,\r\n          })\r\n          .then(res => {\r\n            loadingIns.close();\r\n            if (res.data.status_code === 1) {\r\n              this.linkShare = this.GLOBAL.baseUrl + '/fill_form?mode=1&code=' + res.data.code;\r\n  \r\n            //   if (this.qrcode == null) {\r\n            //     this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n            //       width: 200, //生成的二维码的宽度\r\n            //       height: 200, //生成的二维码的高度\r\n            //       colorDark : \"#000000\", // 生成的二维码的深色部分\r\n            //       colorLight : \"#ffffff\", //生成二维码的浅色部分\r\n            //       correctLevel : QRCode.CorrectLevel.H\r\n            //     });\r\n            //   }\r\n            //   this.qrcode.clear();\r\n            //   this.qrcode.makeCode(this.linkShare);\r\n            // }\r\n            else if (res.data.status_code === 2) {\r\n              this.$message.error(\"题目为空，无法发布！\");\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '取消发布'\r\n          });\r\n        });\r\n      },\r\n      saveinfo(tag) {\r\n        this.saveQnInfo(tag, \"4\");\r\n      },\r\n      save() {\r\n        this.saveinfo('save');\r\n      },\r\n      preview() {\r\n        this.saveinfo('preview');\r\n      },\r\n      up: function (index) {\r\n        index--;\r\n        let questions = this.questions;\r\n        if (index!==0) {\r\n          // 非法移动\r\n          if (questions[index].last_question === index) {\r\n            this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n            return;\r\n          }\r\n          // 关联维护\r\n          let arr = this.sonGroup(index);\r\n          let willSubtract = [];\r\n          if(arr.length !== 0) {\r\n            for(let j=0; j<arr.length; j++) {\r\n              willSubtract.push(arr[j].id-1);\r\n            }\r\n          }\r\n          arr = this.sonGroup(index-1);\r\n          if(arr.length !== 0) {\r\n            for(let j=0; j<arr.length; j++) {\r\n              questions[arr[j].id-1].last_question++;\r\n            }\r\n          }\r\n          for (let i=0; i<willSubtract.length; i++) {\r\n            questions[willSubtract[i]].last_question--;\r\n          }\r\n          // 题序维护\r\n          questions[index].id--;\r\n          questions[index-1].id++;\r\n          let temp = questions[index];\r\n          questions[index] = questions[index-1];\r\n          questions[index-1] = temp;\r\n          // 大纲维护\r\n          this.updateOutline(index, questions[index-1].title);\r\n          this.updateOutline(index+1, questions[index].title);\r\n        }\r\n      },\r\n      down: function (index) {\r\n        index--;\r\n        let questions = this.questions;\r\n        if (index!==questions.length-1) {\r\n          // 非法移动\r\n          if (questions[index+1].last_question === index+1) {\r\n            this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n            return;\r\n          }\r\n          // 关联维护\r\n          let arr = this.sonGroup(index);\r\n          let willAdd = [];\r\n          if(arr.length !== 0) {\r\n            for(let j=0; j<arr.length; j++) {\r\n              willAdd.push(arr[j].id-1);\r\n            }\r\n          }\r\n          arr = this.sonGroup(index+1);\r\n          if(arr.length !== 0) {\r\n            for(let j=0; j<arr.length; j++) {\r\n              questions[arr[j].id-1].last_question--;\r\n            }\r\n          }\r\n          for (let i=0; i<willAdd.length; i++) {\r\n            questions[willAdd[i]].last_question++;\r\n          }\r\n          // 题序维护\r\n          questions[index].id++;\r\n          questions[index+1].id--;\r\n          let temp = questions[index];\r\n          questions[index] = questions[index+1];\r\n          questions[index+1] = temp;\r\n          // 大纲维护\r\n          this.updateOutline(index+1, questions[index].title);\r\n          this.updateOutline(index+2, questions[index+1].title);\r\n        }\r\n      },\r\n      del_pre: function (index) {\r\n        // 问题关联检查\r\n        if (this.sonGroup(index-1).length !== 0) {\r\n          this.$confirm('该问题已被关联，删除此问题会删除所有相关关联信息', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            this.del_relation(index);\r\n            this.del(index)\r\n            this.$message({\r\n              type: 'success',\r\n              message: '问题及关联信息已成功删除'\r\n            });\r\n          }).catch(() => {\r\n            this.$message({\r\n              type: 'info',\r\n              message: '取消删除题目及关联'\r\n            });\r\n          });\r\n        } else {\r\n          this.$confirm('确认删除（不可恢复）？', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            this.del(index)\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功'\r\n            });\r\n          }).catch(() => {\r\n            this.$message({\r\n              type: 'info',\r\n              message: '取消删除'\r\n            });\r\n          });\r\n        }\r\n      },\r\n      del: function (index) {\r\n        index--;\r\n        let questions = this.questions;\r\n        let outline = this.outline;\r\n        // 维护关联关系\r\n        for (let i=index+1; i<questions.length; i++) {\r\n          let arr = this.sonGroup(i);\r\n          if(arr.length !== 0) {\r\n            for(let j=0; j<arr.length; j++) {\r\n              if (questions[arr[j].id-1] !== index) {\r\n                questions[arr[j].id-1].last_question--;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        // 维护题序\r\n        for (let i=index+1; i<questions.length; i++) {\r\n          questions[i].id--;\r\n        }\r\n        outline.splice(index,1);\r\n        questions.splice(index,1);\r\n        // 维护大纲\r\n        for (let num=index; num<outline.length; num++) {\r\n          this.updateOutline(num+1, questions[num].title);\r\n        }\r\n      },\r\n      copy: function (index) {\r\n        index--;\r\n        let questions = this.questions;\r\n        // 大纲更新\r\n        this.updateOutline(this.outline.length + 1, questions[index].title);\r\n        // 问卷更新\r\n        let temp = this.deepClone(questions[index]);\r\n        temp.id = questions.length+1;\r\n        temp.question_id = 0;\r\n        questions.push(temp);\r\n        this.$message.success(\"问题复制成功，已粘贴至问卷末尾\");\r\n      },\r\n      deepClone :function(initialObj) {\r\n        let obj = {};\r\n        try {\r\n          obj = JSON.parse(JSON.stringify(initialObj));\r\n          // eslint-disable-next-line no-empty\r\n        } finally {}\r\n        return obj;\r\n      },    // 深拷贝\r\n      updateOutline: function (id, label) {\r\n        if (label.length > 12) {\r\n          label = id + '. ' + label.substring(0, 11) + '...';\r\n        } else {\r\n          label = id + '. ' + label;\r\n        }\r\n        if (id <= this.questions.length) {\r\n          this.outline[id-1].id = id;\r\n          this.outline[id-1].label = label;\r\n        } else {\r\n          this.outline.push({\r\n            id: id,\r\n            label: label,\r\n          })\r\n        }\r\n      },\r\n      updateQuestions: function (start, end) {\r\n        let offset = end - start;\r\n        if (offset > 0) {\r\n          for (let i=0; i<offset; i++) {\r\n            this.down(start+i);\r\n          }\r\n        } else {\r\n          for (let i=0; i<offset*-1; i++) {\r\n            this.up(start-i);\r\n          }\r\n        }\r\n      },  // good\r\n      toFillQn: function (value) {\r\n        this.$router.push({\r\n          name: 'FillQn',\r\n          query: {\r\n            mode: value,\r\n            title: this.title,\r\n          }\r\n        });\r\n      },\r\n      InitOutline() {\r\n        for (var i = 0; i < this.questions.length; i++) {\r\n          this.outline.push({\r\n            id: this.questions[i].id,\r\n            label: (i+1) + \". \" + this.questions[i].title\r\n          })\r\n        }\r\n      },\r\n      copyToClip(message) {\r\n        var aux = document.createElement(\"input\");\r\n        aux.setAttribute(\"value\", this.linkShare);\r\n        document.body.appendChild(aux);\r\n        aux.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(aux);\r\n        if (message !== null) {\r\n          this.$message.success(\"复制成功\");\r\n        } else{\r\n          this.$message.error(\"复制失败\");\r\n        }\r\n      },\r\n      // 大纲拖拽处理函数(下3个)\r\n      handleDrop(draggingNode, dropNode, dropType) {\r\n        console.log('tree drop: ', draggingNode.key, dropNode.key, dropType);\r\n        if (this.isRightRelation(draggingNode.key, dropNode.key)) {\r\n          this.updateQuestions(draggingNode.key, dropNode.key);\r\n        } else {\r\n          this.outline.splice(0, this.outline.length);\r\n          this.InitOutline();\r\n          this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n        }\r\n      },\r\n      allowDrop(draggingNode, dropNode, type) {\r\n        if (draggingNode.key > dropNode.key) {\r\n          return type === 'prev';\r\n        } else  {\r\n          return type==='next';\r\n        }\r\n      },\r\n      isRightRelation: function (index1, index2) {\r\n        console.log(index1, index2);\r\n        index1--;\r\n        index2--;\r\n        let questions=this.questions;\r\n        if (index1 < index2) {\r\n          for (let i=index1+1; i<=index2; i++) {\r\n            if (questions[i].last_question === index1+1) {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        } else {\r\n          for (let i=index1-1; i>=index2; i--) {\r\n            if (questions[index1].last_question === i+1) {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n      },\r\n      idTitle: function (item) {\r\n        if (item.id === 0) {\r\n          return item.title;\r\n        } else {\r\n          return item.id + \". \" + item.title;\r\n        }\r\n      },\r\n      relatedQs: function (item) {\r\n        return \"关联问题：\" + this.questions[item.last_question-1].id + \".\" + this.questions[item.last_question-1].title + \"(\" + this.questions[item.last_question-1].options[item.last_option-1].title + \")\";\r\n      },\r\n      // 遍历得爸爸\r\n      fatherIndex: function (qs_id) {\r\n        for (let i=0; i<this.questions.length; i++) {\r\n          if (this.questions[i].question_id === qs_id) {\r\n            return i;\r\n          }\r\n        }\r\n      },\r\n      // 遍历得儿子\r\n      sonGroup: function (index) {\r\n        let arr = [];\r\n        for (let i=0; i<this.questions.length; i++) {\r\n          if (this.questions[i].last_question === this.questions[index].id) {\r\n            arr.push(this.questions[i]);\r\n          }\r\n        }\r\n        return arr;\r\n      },\r\n      // 连带删除关联信息\r\n      del_relation: function (index) {\r\n        for (let i=0; i<this.questions.length; i++) {\r\n          // 保存加入后,下面需修改id为question_id\r\n          if (this.questions[i].last_question === this.questions[index-1].id) {\r\n            this.questions[i].last_option = 0;\r\n            this.questions[i].last_question = 0;\r\n            this.questions[i].is_shown = true;\r\n          }\r\n        }\r\n      },\r\n      // 关联信息存在性判断\r\n      isExistRelation: function () {\r\n        for (let i=0; i<this.questions.length; i++) {\r\n          if (this.questions[i].last_question !== 0) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n      // 监听：全局删除关联信息\r\n      closeGlobalLogic: function(state) {\r\n        if(!state && this.isExistRelation()) {\r\n          this.$confirm('检测到您已为题目添加关联，关闭设置将会删除所有关联信息，是否继续？', '提示', {\r\n            confirmButtonText: '确认',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            this.deleteGlobalRelation();\r\n            this.$message.info(\"关联信息已全部删除\");\r\n          }).catch(() => {\r\n            this.isLogic = true;\r\n            this.$message.info(\"取消操作\");\r\n          });\r\n        }\r\n      },\r\n      // 删除全局关联信息\r\n      deleteGlobalRelation: function () {\r\n        for (let i=0; i<this.questions.length; i++) {\r\n          this.questions[i].last_question = 0;\r\n          this.questions[i].last_option = 0;\r\n          this.questions[i].is_shown = true;\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      questionsFilter: function () {\r\n        let questions = this.questions;\r\n        let arr = [{\r\n          question_id: 0,\r\n          id: 0,\r\n          type: '',\r\n          title: '不设置关联题目',\r\n          must: false, // 是否必填\r\n          is_shown: true,   // 是否显示\r\n          last_question: 0,   // 前导问题\r\n          last_option: 0,     // 前导选项\r\n          description: '', // 问题描述\r\n          options:[\r\n            {\r\n              title: '', // 选项标题\r\n              id: 0 // 选项id\r\n            }\r\n          ],\r\n          row: 1, // 填空区域行数\r\n          score: 5, // 最大评分\r\n        }];\r\n        for (let i=0; i<this.logicIndex; i++) {\r\n          if (questions[i].type === \"radio\" || questions[i].type === \"checkbox\") {\r\n            arr.push(questions[i]);\r\n          }\r\n        }\r\n        return arr;\r\n      },\r\n    },\r\n    created() {\r\n      this.getQnDataSelf();\r\n    },\r\n    mounted() {\r\n      this.timer = setInterval(this.autoSave, 60000);\r\n    },\r\n    beforeUnmount() {\r\n      clearInterval(this.timer);\r\n    },\r\n    watch:{\r\n      hasRecycleLimit:\"recycleLimit\",\r\n    },\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .form .linkDialog{\r\n    text-align: left;\r\n  }\r\n  .form .container {\r\n    padding: 0;\r\n    height: auto;\r\n    min-height: 610px;\r\n  }\r\n  \r\n  .form header {\r\n    padding: 0 100px;\r\n  }\r\n  \r\n  .form .el-container {\r\n    padding: 0 100px;\r\n  }\r\n  \r\n  .form .side {\r\n    border-top: solid 1px #e3e3e3;\r\n    border-right: solid 1px #e3e3e3;\r\n    background: #FFFFFF;\r\n  }\r\n  \r\n  .form .main {\r\n    border-top: solid 1px #e3e3e3;\r\n    background: #FFFFFF;\r\n  }\r\n  \r\n  .form .edit {\r\n    margin-top: 0;\r\n    overflow: auto;\r\n    height: 550px;\r\n  }\r\n  \r\n  .form .outline {\r\n    overflow: auto;\r\n    height: 550px;\r\n  }\r\n  \r\n  .form .ques-type {\r\n    padding: 15px 0;\r\n    font-size: 16px;\r\n    border-bottom: dashed #e3e3e3 1px;\r\n  }\r\n  \r\n  .form .type-icon {\r\n    color: #1687fd;\r\n    display: inline-block;\r\n  }\r\n  \r\n  .form .type-icon:hover {\r\n    color: #409EFF;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .form .el-tabs__nav-scroll {\r\n    text-align: center;\r\n    height: 60px;\r\n    margin: 0 60px;\r\n  }\r\n  \r\n  .form .el-tabs__item {\r\n    font-weight: bold;\r\n    padding: 0 20px;\r\n    height: 60px;\r\n    box-sizing: border-box;\r\n    line-height: 60px;\r\n    display: inline-block;\r\n    list-style: none;\r\n    font-size: 16px;\r\n    color: black;\r\n    position: relative;\r\n  }\r\n  \r\n  .form .el-tabs__header {\r\n    margin: 0;\r\n  }\r\n  \r\n  .form .el-tree-node__content {\r\n    padding-left: 10px !important;\r\n    height: 40px;\r\n  }\r\n  \r\n  .form .main {\r\n    max-height: 610px;\r\n  }\r\n  \r\n  .form .ques .title {\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    padding-top: 10px;\r\n    padding-bottom: 26px;\r\n  }\r\n  \r\n  .form .ques .description {\r\n    text-align: left;\r\n    font-size: 18px;\r\n    padding-bottom: 30px;\r\n    color: black;\r\n    line-height: 30px;\r\n  }\r\n  \r\n  .form .ques-block {\r\n    padding-bottom: 15px;\r\n    border-top: solid #e3e3e3 1px;\r\n  }\r\n  \r\n  .form .ques-block:hover {\r\n    background: #f5f5f5;\r\n    transition: .3s;\r\n  }\r\n  \r\n  .form .ques-block .must {\r\n    font-weight: normal;\r\n    color: crimson;\r\n  }\r\n  \r\n  .form .block-title {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 20px 10px 10px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .form .block-description {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 5px;\r\n    padding-bottom: 15px;\r\n    padding-left: 10px;\r\n    color: #969696;\r\n  }\r\n  \r\n  .form .block-choice {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 5px 10px 10px;\r\n  }\r\n  \r\n  .form .el-button-group>.el-button:first-child {\r\n    border-radius: 0 0 0 8px;\r\n  }\r\n  \r\n  .form .el-button-group>.el-button:last-child {\r\n    border-radius: 0 0 8px 0;\r\n  }\r\n  \r\n  .form .block-button .el-button {\r\n    background: #b9b9b9;\r\n    border: transparent;\r\n  }\r\n  \r\n  .form .block-button .el-button:hover {\r\n    background: #989898;\r\n    border: transparent;\r\n  }\r\n  \r\n  .form .bt {\r\n    color: white;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .form .block-choice .el-textarea__inner {\r\n    max-height: 100px;\r\n  }\r\n  \r\n  .form .dialog{\r\n    text-align: left;\r\n    font-size: large;\r\n  }\r\n  .form .addOptionButton{\r\n    display: inline-block;\r\n    margin-left: 100px;\r\n  }\r\n  .form .deleteOptionButton{\r\n    margin-left: 20px;\r\n  }\r\n  .form .logic-description {\r\n    margin-top: -15px;\r\n    margin-bottom: 30px;\r\n    text-align: left;\r\n    padding-left: 6px;\r\n    font-size: 14px;\r\n    color: #aaaaaa;\r\n  }\r\n  \r\n  .form .important {\r\n    color: crimson;\r\n  }\r\n  \r\n  .form .logic-title {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    padding-left: 12px;\r\n    padding-bottom: 30px;\r\n  }\r\n  \r\n  .form .logic-bt {\r\n    text-align: center;\r\n  }\r\n  \r\n  .form .logic-form .el-input--suffix .el-input__inner {\r\n    width: 620px;\r\n  }\r\n  \r\n  .form .sideTitle{\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 10px;\r\n    margin-top: 20px;\r\n  }\r\n  .form .easyChoose{\r\n    font-size: medium;\r\n    margin-top: 10px;\r\n  }\r\n  .form .chooseLabel{\r\n    margin-right: 10px;\r\n    margin-left: 5px;\r\n  }\r\n  \r\n  .form .setting-item {\r\n    text-align: left;\r\n  }\r\n  \r\n  .form .setting-bt {\r\n    margin-top: 28px;\r\n  }\r\n  \r\n  .form .settingDialog .el-dialog__header {\r\n    text-align: left;\r\n  }\r\n  \r\n  .form .settingDialog .item-title {\r\n    padding-right: 20px;\r\n  }\r\n  \r\n  .form .logic-info {\r\n    color: #aaaaaa;\r\n    padding-top: 2px;\r\n    padding-left: 12px;\r\n    padding-bottom: 25px;\r\n  }\r\n  \r\n  .form .block-relation {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #1687fd;\r\n  }\r\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAM;;EAwBAA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAA6B;EAA1BD,KAAK,EAAC;AAAe;gCACxBC,mBAAA,CAAuE,cAAjE,eAA0D;;EAG7DD,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAgC;EAA7BD,KAAK,EAAC;AAAkB;gCAC3BC,mBAAA,CAAuE,cAAjE,eAA0D;;EAG7DD,KAAK,EAAC;AAAW;iCACpBC,mBAAA,CAAoC;EAAjCD,KAAK,EAAC;AAAsB;iCAC/BC,mBAAA,CAAuE,cAAjE,eAA0D;;EAG7DD,KAAK,EAAC;AAAW;iCACpBC,mBAAA,CAAgC;EAA7BD,KAAK,EAAC;AAAkB;iCAC3BC,mBAAA,CAAuE,cAAjE,eAA0D;;EAK3DD,KAAK,EAAC;AAAW;iCACpBC,mBAAA,CAA4B;EAAzBD,KAAK,EAAC;AAAc;iCACvBC,mBAAA,CAAoC;EAA9BD,KAAK,EAAC;AAAa,GAAC,KAAG;iCAE7BC,mBAAA,CAAgC;EAA7BD,KAAK,EAAC;AAAkB;iCAC3BC,mBAAA,CAAoC;EAA9BD,KAAK,EAAC;AAAa,GAAC,KAAG;;EAO1BA,KAAK,EAAC;AAAW;iCACpBC,mBAAA,CAAqC;EAAlCD,KAAK,EAAC;AAAuB;iCAChCC,mBAAA,CAAoC;EAA9BD,KAAK,EAAC;AAAa,GAAC,KAAG;iCAE7BC,mBAAA,CAA+B;EAA5BD,KAAK,EAAC;AAAiB;iCAC1BC,mBAAA,CAAoC;EAA9BD,KAAK,EAAC;AAAa,GAAC,KAAG;;EAchCA,KAAK,EAAC;AAAS;;EAgBnBA,KAAK,EAAC;AAAM;;EAEVA,KAAK,EAAC;AAAO;;EAjG9BE,GAAA;EAoGiBF,KAAK,EAAC;;;EAGNA,KAAK,EAAC;AAAS;;EAITA,KAAK,EAAC;AAAa;;EA3G1CE,GAAA;EA4G0DF,KAAK,EAAC;;;EA5GhEE,GAAA;EA+GuBF,KAAK,EAAC;;;EA/G7BE,GAAA;EAsHuBF,KAAK,EAAC;;;EACJG,KAA4B,EAA5B;IAAA;EAAA;AAA4B;;EAvHrDD,GAAA;EA4HsBF,KAAK,EAAC;;;EA5H5BE,GAAA;EAmJwBC,KAAyC,EAAzC;IAAA;IAAA;EAAA;;oBAnJxB;;EAAAD,GAAA;EAoK2CC,KAAyD,EAAzD;IAAA;IAAA;IAAA;EAAA;;;EApK3CD,GAAA;EA0K4BC,KAAyD,EAAzD;IAAA;IAAA;IAAA;EAAA;;;EA1K5BD,GAAA;EA2LuBF,KAAK,EAAC;;;EA3L7BE,GAAA;EAiMuBF,KAAK,EAAC;;;EAjM7BE,GAAA;EAkPcF,KAAK,EAAC;;;EAlPpBE,GAAA;EAiRsBF,KAAK,EAAC;;iCA4DdC,mBAAA,CAA+D;EAAzDD,KAAK,EAAC;AAAgB,GAAC,wBAA2B;iCAaxDC,mBAAA,CAAgE;EAA1DD,KAAK,EAAC;AAAgB,GAAC,yBAA4B;;EAKzDA,KAAK,EAAC,eAAe;EAACG,KAA0B,EAA1B;IAAA;EAAA;;iCAYtBF,mBAAA,CAA+E;EAA1EG,EAAE,EAAC,UAAU;EAACD,KAAqD,EAArD;IAAA;IAAA;IAAA;EAAA;;iCAIbF,mBAAA,CAAe,YAAX,QAAM;;EAahBD,KAAK,EAAC,eAAe;EAACG,KAA0B,EAA1B;IAAA;EAAA;;;EAQtBH,KAAK,EAAC,eAAe;EAACG,KAA0B,EAA1B;IAAA;EAAA;;;EAUrBH,KAAK,EAAC;AAAa;;EA9YlCE,GAAA;EAwaeF,KAAK,EAAC;;;EAEAG,KAAsB,EAAtB;IAAA;EAAA;AAAsB;;EAA0EA,KAAsB,EAAtB;IAAA;EAAA;AAAsB;;EA1a3ID,GAAA;EA4aeF,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAU;iCA4CrBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAmB,GAAC,qDAE/B;;EA9dVE,GAAA;EAgeeF,KAAK,EAAC;;;EAKRA,KAAK,EAAC;AAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBApe3BK,mBAAA,CAweM,OAxeNC,UAweM,GAveJC,YAAA,CAeYC,oBAAA;IAfDR,KAAK,EAAC;EAAQ;IAF/BS,OAAA,EAAAC,QAAA,CAGQ,MAac,CAbdH,YAAA,CAacI,sBAAA;MAZTC,KAAK,EAAEC,IAAA,CAAAD,KAAK;MACZE,WAAW,EAAED,IAAA,CAAAC,WAAW;MACxBC,UAAU,EAAEF,IAAA,CAAAE,UAAU;MAClBC,cAAY,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,IAAA,CAAAM,WAAW,CAACD,MAAM;MAChCE,oBAAkB,EAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,IAAA,CAAAQ,iBAAiB,CAACH,MAAM;MAC5CI,iBAAe,EAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,IAAA,CAAAU,WAAW,CAACL,MAAM;MACnCM,gBAAc,EAAAP,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,IAAA,CAAAY,OAAO,CAACP,MAAM;MAC9BQ,aAAW,EAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,IAAA,CAAAc,IAAI,CAACT,MAAM;MACxBU,WAAS,EAAAX,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,IAAA,CAAAgB,OAAO,CAACX,MAAM;MACzBY,WAAS,EAAAb,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,IAAA,CAAAkB,YAAY,CAACb,MAAM;MAC9Bc,cAAY,EAAAf,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,IAAA,CAAAoB,KAAK,CAACf,MAAM;;IAd3CgB,CAAA;MAmBM3B,YAAA,CAgNe4B,uBAAA;IAhNDnC,KAAK,EAAC;EAAW;IAnBrCS,OAAA,EAAAC,QAAA,CAoBQ,MAwEW,CAxEXH,YAAA,CAwEW6B,mBAAA;MAxEDpC,KAAK,EAAC;IAAM;MApB9BS,OAAA,EAAAC,QAAA,CAqBU,MAsEU,CAtEVH,YAAA,CAsEU8B,kBAAA;QA3FpBC,UAAA,EAqB4BzB,IAAA,CAAA0B,UAAU;QArBtC,uBAAAtB,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAqB4BL,IAAA,CAAA0B,UAAU,GAAArB,MAAA;QAAGsB,UAAS,EAAE3B,IAAA,CAAA4B;;QArBpDhC,OAAA,EAAAC,QAAA,CAwBc,MAoDc,CApDdH,YAAA,CAoDcmC,sBAAA;UApDDC,KAAK,EAAC,MAAM;UAACC,IAAI,EAAC;;UAxB7CnC,OAAA,EAAAC,QAAA,CAyBgB,MAkDM,CAlDNT,mBAAA,CAkDM,OAlDN4C,UAkDM,GAjDJ5C,mBAAA,CAIM,OAJN6C,UAIM,GAHJC,UAA6B,EAC7BC,UAAuE,EACvE/C,mBAAA,CAA4G;YAAzGD,KAAK,EAAC,+BAA+B;YAAEiD,OAAK,EAAAhC,MAAA,QAAAA,MAAA,MAAAC,MAAA;cAAEL,IAAA,CAAAqC,eAAe,CAACC,IAAI;cAAStC,IAAA,CAAAuC,mBAAmB;YAAA;gBAEnGnD,mBAAA,CAIM,OAJNoD,UAIM,GAHJC,UAAgC,EAChCC,UAAuE,EACvEtD,mBAAA,CAA+G;YAA5GD,KAAK,EAAC,+BAA+B;YAAEiD,OAAK,EAAAhC,MAAA,QAAAA,MAAA,MAAAC,MAAA;cAAEL,IAAA,CAAAqC,eAAe,CAACC,IAAI;cAAYtC,IAAA,CAAAuC,mBAAmB;YAAA;gBAEtGnD,mBAAA,CAIM,OAJNuD,UAIM,GAHJC,WAAoC,EACpCC,WAAuE,EACvEzD,mBAAA,CAA2G;YAAxGD,KAAK,EAAC,+BAA+B;YAAEiD,OAAK,EAAAhC,MAAA,SAAAA,MAAA,OAAAC,MAAA;cAAEL,IAAA,CAAAqC,eAAe,CAACC,IAAI;cAAQtC,IAAA,CAAAuC,mBAAmB;YAAA;gBAElGnD,mBAAA,CAIM,OAJN0D,WAIM,GAHJC,WAAgC,EAChCC,WAAuE,EACvE5D,mBAAA,CAA2G;YAAxGD,KAAK,EAAC,+BAA+B;YAAEiD,OAAK,EAAAhC,MAAA,SAAAA,MAAA,OAAAC,MAAA;cAAEL,IAAA,CAAAqC,eAAe,CAACC,IAAI;cAAQtC,IAAA,CAAAuC,mBAAmB;YAAA;gBAElGnD,mBAAA,CA4BM,cA3BJM,YAAA,CAAyCuD,iBAAA;YAAjC9D,KAAK,EAAC;UAAW;YA/C7CS,OAAA,EAAAC,QAAA,CA+C8C,MAAM,CA/CpDqD,gBAAA,CA+C8C,QAAM,E;YA/CpD7B,CAAA;cAgDoBjC,mBAAA,CAUM,OAVN+D,WAUM,GATJC,WAA4B,EAC5BC,WAAoC,EACpCjE,mBAAA,CAA8D;YAA3DD,KAAK,EAAC,+BAA+B;YAAEiD,OAAK,EAAAhC,MAAA,SAAAA,MAAA,WAAAkD,IAAA,KAAEtD,IAAA,CAAAuD,OAAA,IAAAvD,IAAA,CAAAuD,OAAA,IAAAD,IAAA,CAAO;cAnD9EJ,gBAAA,CAmDoF,KAC9D,GAAAM,WAAgC,EAChCC,WAAoC,EACpCrE,mBAAA,CAA+D;YAA5DD,KAAK,EAAC,+BAA+B;YAAEiD,OAAK,EAAAhC,MAAA,SAAAA,MAAA,WAAAkD,IAAA,KAAEtD,IAAA,CAAA0D,QAAA,IAAA1D,IAAA,CAAA0D,QAAA,IAAAJ,IAAA,CAAQ;cAC7EK,mBAAA,sDAAuD,EACvDA,mBAAA,8DAA+D,EAC/DA,mBAAA,yFAAwF,C,GAGtEvE,mBAAA,CAOM,OAPNwE,WAOM,GANJC,WAAqC,EACrCC,WAAoC,EACpC1E,mBAAA,CAA+D;YAA5DD,KAAK,EAAC,+BAA+B;YAAEiD,OAAK,EAAAhC,MAAA,SAAAA,MAAA,WAAAkD,IAAA,KAAEtD,IAAA,CAAA+D,QAAA,IAAA/D,IAAA,CAAA+D,QAAA,IAAAT,IAAA,CAAQ;cA/D/EJ,gBAAA,CA+DqF,KAC/D,GAAAc,WAA+B,EAC/BC,WAAoC,EACpC7E,mBAAA,CAA+D;YAA5DD,KAAK,EAAC,+BAA+B;YAAEiD,OAAK,EAAAhC,MAAA,SAAAA,MAAA,WAAAkD,IAAA,KAAEtD,IAAA,CAAAkE,QAAA,IAAAlE,IAAA,CAAAkE,QAAA,IAAAZ,IAAA,CAAQ;gBAE7EK,mBAAA,+CAAgD,EAChDA,mBAAA,oCAAuC,EACvCA,mBAAA,wDAAyD,EACzDA,mBAAA,8DAA+D,EAC/DA,mBAAA,4FAA2F,EAC3FA,mBAAA,4BAA+B,C;UAzEjCtC,CAAA;YA8EY3B,YAAA,CAWcmC,sBAAA;UAXDC,KAAK,EAAC,MAAM;UAACC,IAAI,EAAC;;UA9E3CnC,OAAA,EAAAC,QAAA,CA+Ec,MASM,CATNT,mBAAA,CASM,OATN+E,WASM,GARJzE,YAAA,CAOW0E,kBAAA;YANNC,IAAI,EAAErE,IAAA,CAAAsE,OAAO;YACd,UAAQ,EAAC,IAAI;YACZC,KAAK,EAAEvE,IAAA,CAAAwE,YAAY;YACnBC,UAAS,EAAEzE,IAAA,CAAA0E,UAAU;YACtBC,SAAS,EAAT,EAAS;YACR,YAAU,EAAE3E,IAAA,CAAA4E;;UAtFjCvD,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QA8FQ3B,YAAA,CAmIUmF,kBAAA;MAnID1F,KAAK,EAAC;IAAM;MA9F7BS,OAAA,EAAAC,QAAA,CA+FU,MAiIM,CAjINT,mBAAA,CAiIM,OAjIN0F,WAiIM,GA/HJ1F,mBAAA,CAEM,OAFN2F,WAEM,EAAAC,gBAAA,CADDhF,IAAA,CAAAD,KAAK,kB,KAE0BE,WAAW,gBAAcA,WAAW,kBAAgBA,WAAW,KAAKgF,SAAS,I,cAAjHzF,mBAAA,CAEM,OAFN0F,WAEM,EAF6G,KACrG,GAAAF,gBAAA,CAAGhF,IAAA,CAAAC,WAAW,oBArGxC0D,mBAAA,gBAuGYvE,mBAAA,CAuHM,OAvHN+F,WAuHM,I,kBAtHJ3F,mBAAA,CAqHS4F,SAAA,QA7NvBC,WAAA,CAwGwDrF,IAAA,CAAAsF,SAAS,EAAjBC,IAAI;6BAAtCC,YAAA,CAqHSvC,iBAAA;UArHD9D,KAAK,EAAC,YAAY;UAA4BE,GAAG,EAAEkG,IAAI,CAAChG,EAAE;UAAGkG,WAAS,EAAApF,MAAA,IAAQL,IAAA,CAAA0F,SAAS,GAACH,IAAI,CAAChG;;UAxGnHK,OAAA,EAAAC,QAAA,CA0GgB,MA0FS,CA1FTH,YAAA,CA0FSiG,iBAAA;YA1FAC,IAAI,EAAE,EAAE;YAAEzG,KAAK,EAAC;;YA1GzCS,OAAA,EAAAC,QAAA,CA2GkB,MAEM,CAFNT,mBAAA,CAEM,OAFNyG,WAEM,GA7GxB3C,gBAAA,CAAA8B,gBAAA,CA4GuBO,IAAI,CAAChG,EAAE,IAAG,IAAE,GAAAyF,gBAAA,CAAGO,IAAI,CAACxF,KAAK,IAAG,GAAC,iBAAyBwF,IAAI,CAACO,IAAI,I,cAAlCtG,mBAAA,CAA+C,QAA/CuG,WAA+C,EAAX,MAAI,KA5G5FpC,mBAAA,e,GA+GgD4B,IAAI,CAACjD,IAAI,eAAaiD,IAAI,CAACjD,IAAI,gBAAciD,IAAI,CAACjD,IAAI,gBAAciD,IAAI,CAACjD,IAAI,iBAA2CiD,IAAI,CAACjD,IAAI,gBAAciD,IAAI,CAACjD,IAAI,gB,cAAtL9C,mBAAA,CAKM,OALNwG,WAKM,GAHJtG,YAAA,CAEWuG,mBAAA;cAFDC,WAAW,EAAC,OAAO;cAAC5G,KAAyB,EAAzB;gBAAA;cAAA;oBAjHlDqE,mBAAA,gBAsHkD4B,IAAI,CAACjD,IAAI,c,cAAzC9C,mBAAA,CAGM,OAHN2G,WAGM,GAFJ/G,mBAAA,CAAwE,OAAxEgH,WAAwE,GAAtC1G,YAAA,CAAgC2G,mBAAA;cAAtBC,KAAK,EAAC;YAAG;cAvHzE1G,OAAA,EAAAC,QAAA,CAuH0E,MAAC,CAvH3EqD,gBAAA,CAuH0E,GAAC,E;cAvH3E7B,CAAA;kBAwHoBjC,mBAAA,CAA2C,cAAtCM,YAAA,CAAgC2G,mBAAA;cAAtBC,KAAK,EAAC;YAAG;cAxH5C1G,OAAA,EAAAC,QAAA,CAwH6C,MAAC,CAxH9CqD,gBAAA,CAwH6C,GAAC,E;cAxH9C7B,CAAA;sBAAAsC,mBAAA,gBA6H4B4B,IAAI,CAACtF,WAAW,WAASsF,IAAI,CAACtF,WAAW,aAAWsF,IAAI,CAACtF,WAAW,KAAGgF,SAAS,I,cAF1FzF,mBAAA,CAKM,OALN+G,WAKM,EAAAvB,gBAAA,CADDO,IAAI,CAACtF,WAAW,oBA/HvC0D,mBAAA,gBAkIkBA,mBAAA,wBAA2B,G,kBAC3BnE,mBAAA,CAeS4F,SAAA,QAlJ3BC,WAAA,CAmIgEE,IAAI,CAACiB,OAAO,EAnI5E,CAmIoDC,CAAC,EAACC,KAAK;mCAAzClB,YAAA,CAeSvC,iBAAA;gBAfD9D,KAAK,EAAC,WAAW;gBAAoCE,GAAG,EAAEoH,CAAC,CAACC;;gBAnItF9G,OAAA,EAAAC,QAAA,CAoIoB,MAMS,CANwD6G,KAAK,c,cAAtElB,YAAA,CAMSG,iBAAA;kBA1I7BtG,GAAA;kBAoI6BsH,MAAM,EAAE,CAAC;kBAAGf,IAAI,EAAE,EAAE;kBAAEzG,KAAK,EAAC;;kBApIzDS,OAAA,EAAAC,QAAA,CAqIsB,MAIW,CAJXH,YAAA,CAIWkH,mBAAA;oBAHPtH,KAAmC,EAAnC;sBAAA;sBAAA;oBAAA,CAAmC;oBAClCuH,GAAG,EAAEJ,CAAC,CAACK,GAAG;oBACV,kBAAgB,GAAGL,CAAC,CAACK,GAAG;;kBAxInDzF,CAAA;gDAAAsC,mBAAA,gBA2IyE+C,KAAK,cAAQA,KAAK,QAAInB,IAAI,CAACiB,OAAO,CAACO,MAAM,Q,cAA9FvB,YAAA,CAMSG,iBAAA;kBAjJ7BtG,GAAA;kBA2I6BuG,IAAI,EAAE,EAAE;kBAAEzG,KAAK,EAAC;;kBA3I7CS,OAAA,EAAAC,QAAA,CA4IsB,MAIW,CAJXH,YAAA,CAIWkH,mBAAA;oBAHPtH,KAAmC,EAAnC;sBAAA;sBAAA;oBAAA,CAAmC;oBAClCuH,GAAG,EAAEtB,IAAI,CAACiB,OAAO,CAACE,KAAK,MAAII,GAAG;oBAC9B,kBAAgB,GAAGvB,IAAI,CAACiB,OAAO,CAACE,KAAK,MAAII,GAAG;;kBA/IvEzF,CAAA;gDAAAsC,mBAAA,e;gBAAAtC,CAAA;;4CAmJwEkE,IAAI,CAACiB,OAAO,CAACO,MAAM,U,cAAzEvH,mBAAA,CAAgG,QAAhGwH,WAAgG,EAAjB,YAAU,KAnJ3GrD,mBAAA,gBAsJkBA,mBAAA,sBAAyB,G,kBACzBnE,mBAAA,CAMS4F,SAAA,QA7J3BC,WAAA,CAuJwDE,IAAI,CAAC0B,SAAS,EAAnBR,CAAC;mCAAlCjB,YAAA,CAMSvC,iBAAA;gBAND9D,KAAK,EAAC,WAAW;gBAA8BE,GAAG,EAAEoH,CAAC,CAACC;;gBAvJhF9G,OAAA,EAAAC,QAAA,CAwJoB,MAIiC,CAJjCT,mBAAA,CAIiC;kBAJ1B8H,KAAK,EAAC,KAAG;kBAACC,MAAM,EAAC,KAAG;kBAACC,kBAAkB,EAAC,MAAI;kBAC5CC,gBAAgB,EAAC,OAAK;kBAACC,SAAS,EAAC,MAAI;kBAACC,QAAQ,EAAC,OAAK;kBAACC,MAAM,EAAC,KAAG;kBAC/DC,WAAW,EAAC,GAAC;kBAACC,WAAW,EAAC,MAAI;kBAACC,aAAa,EAAC,MAAI;kBAACC,YAAY,EAAC,MAAI;kBACnEC,iBAAiB,EAAC,MAAI;kBAACC,WAAW,EAAC,MAAI;kBAACC,oBAAoB,EAAC,MAAI;kBACjEC,OAAO,EAAC,MAAI;kBAAEnB,GAAG,EAAEJ,CAAC,CAACK;wCA5JhDmB,WAAA,E;gBAAA5G,CAAA;;+DAgKkB7B,mBAAA,CAyBM4F,SAAA,QAzLxBC,WAAA,CAgK0DE,IAAI,CAAC2C,OAAO,EAAnBC,GAAG;mCAApC3I,mBAAA,CAyBM;gBAzBDL,KAAK,EAAC,cAAc;gBAA8BE,GAAG,EAAE8I,GAAG,CAAC5I;kBAE9DoE,mBAAA,wBAA2B,EACX4B,IAAI,CAACjD,IAAI,gB,cAAzBkD,YAAA,CAEWa,mBAAA;gBArK/BhH,GAAA;gBAmKyDiH,KAAK,EAAC;;gBAnK/D1G,OAAA,EAAAC,QAAA,CAoKsB,MAAe,CApKrCqD,gBAAA,CAAA8B,gBAAA,CAoKyBmD,GAAG,CAACpI,KAAK,kBAAyEoI,GAAG,CAACC,WAAW,I,cAArF5I,mBAAA,CAAgJ,QAAhJ6I,WAAgJ,EAAzD,IAAE,GAAArD,gBAAA,CAAEmD,GAAG,CAACG,MAAM,GAACH,GAAG,CAACI,OAAO,IAAE,KAAQ,GAAAvD,gBAAA,CAAEmD,GAAG,CAACG,MAAM,oBApK5K3E,mBAAA,e;gBAAAtC,CAAA;8CAAAsC,mBAAA,gBAuKoBA,mBAAA,wBAA2B,EACR4B,IAAI,CAACjD,IAAI,mB,cAA5BkD,YAAA,CAGcgD,sBAAA;gBA3KlCnJ,GAAA;gBAwK+DiH,KAAK,EAAC;;gBAxKrE1G,OAAA,EAAAC,QAAA,CAyKsB,MAAe,CAzKrCqD,gBAAA,CAAA8B,gBAAA,CAyKyBmD,GAAG,CAACpI,KAAK,IAAG,GACf,iBAAsEoI,GAAG,CAACC,WAAW,I,cAArF5I,mBAAA,CAAgJ,QAAhJiJ,WAAgJ,EAAzD,IAAE,GAAAzD,gBAAA,CAAEmD,GAAG,CAACG,MAAM,GAACH,GAAG,CAACI,OAAO,IAAE,KAAQ,GAAAvD,gBAAA,CAAEmD,GAAG,CAACG,MAAM,oBA1K7J3E,mBAAA,e;gBAAAtC,CAAA;8CAAAsC,mBAAA,gBA6KoBA,mBAAA,wBAA2B,EAEjB4B,IAAI,CAACjD,IAAI,eAAWiD,IAAI,CAACmD,GAAG,Q,cADtClD,YAAA,CAKWS,mBAAA,EALX0C,WAAA,CAKW;gBAnL/BtJ,GAAA;gBAgLwBiD,IAAI,EAAC,UAAU;gBACf4D,WAAW,EAAC,OAAO;gBAjL3C0C,OAAA;iBAkLgCT,GAAG,CAACpI,KAAK,iCAlLzC4D,mBAAA,gBAqL8B4B,IAAI,CAACjD,IAAI,eAAWiD,IAAI,CAACmD,GAAG,U,cADtClD,YAAA,CAIWS,mBAAA,EAJX0C,WAAA,CAIW;gBAxL/BtJ,GAAA;gBAsLwB6G,WAAW,EAAC,OAAO;gBAtL3C0C,OAAA;iBAuLgCT,GAAG,CAACpI,KAAK,iCAvLzC4D,mBAAA,e;4CA2LkD4B,IAAI,CAACjD,IAAI,e,cAAzC9C,mBAAA,CAGM,OAHNqJ,WAGM,GAFJlF,mBAAA,wBAA2B,EAC3BjE,YAAA,CAA+CoJ,kBAAA;cAAtCxC,KAAK,EAAC,GAAG;cAAEyC,GAAG,EAAExD,IAAI,CAACyD;kDA7LlDrF,mBAAA,gBAgMkBA,mBAAA,yBAA4B,EACM3D,IAAA,CAAAiJ,OAAO,IAAI1D,IAAI,CAAC2D,aAAa,U,cAA/D1J,mBAAA,CAEM,OAFN2J,WAEM,GADJ/J,mBAAA,CAAgC,aAAA4F,gBAAA,CAAxBhF,IAAA,CAAAoJ,SAAS,CAAC7D,IAAI,kB,KAlM1C5B,mBAAA,e;YAAAtC,CAAA;wCAsMuFrB,IAAA,CAAA0F,SAAS,KAAGH,IAAI,CAAChG,EAAE,I,cAA1FiG,YAAA,CAqBSG,iBAAA;YA3NzBtG,GAAA;YAsMyBuG,IAAI,EAAE,CAAC;YAAEzG,KAAK,EAAC,cAAc;YAACG,KAAyB,EAAzB;cAAA;YAAA;;YAtMvDM,OAAA,EAAAC,QAAA,CAuMkB,MAmBkB,CAnBlBH,YAAA,CAmBkB2J,0BAAA;cA1NpCzJ,OAAA,EAAAC,QAAA,CAwMoB,MAEa,CAFbH,YAAA,CAEa4J,qBAAA;gBAFDnK,KAAK,EAAC,MAAM;gBAACoK,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBAAC,YAAU,EAAC;;gBAxMvG7J,OAAA,EAAAC,QAAA,CAyMsB,MAA4F,CAA5FH,YAAA,CAA4FgK,oBAAA;kBAAjFvK,KAAK,EAAC,IAAI;kBAACmD,IAAI,EAAC,SAAS;kBAACqH,IAAI,EAAC,cAAc;kBAAEvH,OAAK,EAAA/B,MAAA,IAAEL,IAAA,CAAA4J,IAAI,CAACrE,IAAI,CAAChG,EAAE;;gBAzMnG8B,CAAA;4CA2MmDrB,IAAA,CAAAiJ,OAAO,I,cAAtCzD,YAAA,CAEa8D,qBAAA;gBA7MjCjK,GAAA;gBA2MgCF,KAAK,EAAC,MAAM;gBAAgBoK,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,QAAQ;gBAACC,SAAS,EAAC,QAAQ;gBAAC,YAAU,EAAC;;gBA3M1H7J,OAAA,EAAAC,QAAA,CA4MsB,MAAkG,CAAlGH,YAAA,CAAkGgK,oBAAA;kBAAvFvK,KAAK,EAAC,IAAI;kBAACmD,IAAI,EAAC,SAAS;kBAACqH,IAAI,EAAC,mBAAmB;kBAAEvH,OAAK,EAAA/B,MAAA,IAAEL,IAAA,CAAA6J,KAAK,CAACtE,IAAI,CAAChG,EAAE;;gBA5MzG8B,CAAA;8CAAAsC,mBAAA,gBA8MoBjE,YAAA,CAEa4J,qBAAA;gBAFDnK,KAAK,EAAC,MAAM;gBAACoK,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBAAC,YAAU,EAAC;;gBA9MvG7J,OAAA,EAAAC,QAAA,CA+MsB,MAAqG,CAArGH,YAAA,CAAqGgK,oBAAA;kBAA1FvK,KAAK,EAAC,IAAI;kBAACmD,IAAI,EAAC,SAAS;kBAACqH,IAAI,EAAC,uBAAuB;kBAAEvH,OAAK,EAAA/B,MAAA,IAAEL,IAAA,CAAA8J,IAAI,CAACvE,IAAI,CAAChG,EAAE;;gBA/M5G8B,CAAA;4CAiNoB3B,YAAA,CAEa4J,qBAAA;gBAFDnK,KAAK,EAAC,MAAM;gBAACoK,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBAAC,YAAU,EAAC;;gBAjNvG7J,OAAA,EAAAC,QAAA,CAkNsB,MAAiG,CAAjGH,YAAA,CAAiGgK,oBAAA;kBAAtFvK,KAAK,EAAC,IAAI;kBAACmD,IAAI,EAAC,SAAS;kBAACqH,IAAI,EAAC,gBAAgB;kBAAEvH,OAAK,EAAA/B,MAAA,IAAEL,IAAA,CAAA+J,OAAO,CAACxE,IAAI,CAAChG,EAAE;;gBAlNxG8B,CAAA;4CAoNoB3B,YAAA,CAEa4J,qBAAA;gBAFDnK,KAAK,EAAC,MAAM;gBAACoK,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBAAC,YAAU,EAAC;;gBApNvG7J,OAAA,EAAAC,QAAA,CAqNsB,MAA+F,CAA/FH,YAAA,CAA+FgK,oBAAA;kBAApFvK,KAAK,EAAC,IAAI;kBAACmD,IAAI,EAAC,SAAS;kBAACqH,IAAI,EAAC,mBAAmB;kBAAEvH,OAAK,EAAA/B,MAAA,IAAEL,IAAA,CAAAgK,EAAE,CAACzE,IAAI,CAAChG,EAAE;;gBArNtG8B,CAAA;4CAuNoB3B,YAAA,CAEa4J,qBAAA;gBAFDnK,KAAK,EAAC,MAAM;gBAACoK,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBAAC,YAAU,EAAC;;gBAvNvG7J,OAAA,EAAAC,QAAA,CAwNsB,MAAoG,CAApGH,YAAA,CAAoGgK,oBAAA;kBAAzFvK,KAAK,EAAC,IAAI;kBAACmD,IAAI,EAAC,SAAS;kBAACqH,IAAI,EAAC,sBAAsB;kBAAEvH,OAAK,EAAA/B,MAAA,IAAEL,IAAA,CAAAiK,IAAI,CAAC1E,IAAI,CAAChG,EAAE;;gBAxN3G8B,CAAA;;cAAAA,CAAA;;YAAAA,CAAA;0CAAAsC,mBAAA,e;UAAAtC,CAAA;;;MAAAA,CAAA;;IAAAA,CAAA;MAqOM3B,YAAA,CAiIYwK,oBAAA;IAjIAnK,KAAK,EAAEC,IAAA,CAAAmK,iBAAiB;IAAUC,OAAO,EAAEpK,IAAA,CAAAuC,mBAAmB;IArOhF,oBAAAnC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAqO6DL,IAAA,CAAAuC,mBAAmB,GAAAlC,MAAA;IAAI,cAAY,EAAEL,IAAA,CAAAqK,UAAU;IAAElL,KAAK,EAAC,QAAQ;IAAC+H,KAAK,EAAC;;IArOnItH,OAAA,EAAAC,QAAA,CAsOQ,MAwHU,CAxHVH,YAAA,CAwHU4K,kBAAA;MAxHDC,GAAG,EAAC,MAAM;MAAEC,KAAK,EAAExK,IAAA,CAAAqC,eAAe;MAAE,aAAW,EAAC;;MAtOjEzC,OAAA,EAAAC,QAAA,CAuOU,MASe,CATfH,YAAA,CASe+K,uBAAA;QATD3I,KAAK,EAAC;MAAM;QAvOpClC,OAAA,EAAAC,QAAA,CAwOY,MAOY,CAPZH,YAAA,CAOYgL,oBAAA;UAPAC,QAAQ,EAAE3K,IAAA,CAAA4K,aAAa;UAxO/CnJ,UAAA,EAwO0DzB,IAAA,CAAAqC,eAAe,CAACC,IAAI;UAxO9E,uBAAAlC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAwO0DL,IAAA,CAAAqC,eAAe,CAACC,IAAI,GAAAjC,MAAA;UAAE6F,WAAW,EAAC,SAAS;UAAE2E,QAAM,EAAE7K,IAAA,CAAA8K;;UAxO/GlL,OAAA,EAAAC,QAAA,CA0OkB,MAAuB,E,kBAD3BL,mBAAA,CAKY4F,SAAA,QA9O1BC,WAAA,CA0OiCrF,IAAA,CAAA+K,OAAO,EAAfxF,IAAI;iCADfC,YAAA,CAKYwF,oBAAA;cAHP3L,GAAG,EAAEkG,IAAI,CAACe,KAAK;cACfxE,KAAK,EAAEyD,IAAI,CAACzD,KAAK;cACjBwE,KAAK,EAAEf,IAAI,CAACe;;;UA7O/BjF,CAAA;;QAAAA,CAAA;UAmPoBrB,IAAA,CAAAqC,eAAe,CAACC,IAAI,eAA4BtC,IAAA,CAAAqC,eAAe,CAACC,IAAI,gBAA6BtC,IAAA,CAAAqC,eAAe,CAACC,IAAI,gBAA6BtC,IAAA,CAAAqC,eAAe,CAACC,IAAI,iBAA8BtC,IAAA,CAAAqC,eAAe,CAACC,IAAI,gBAA6BtC,IAAA,CAAAqC,eAAe,CAACC,IAAI,gBAA6BtC,IAAA,CAAAqC,eAAe,CAACC,IAAI,c,cAFpU9C,mBAAA,CA+BM,OA/BNyL,WA+BM,GArBkDjL,IAAA,CAAAqC,eAAe,CAACC,IAAI,e,cAA1EkD,YAAA,CAEeiF,uBAAA;QA7P3BpL,GAAA;QA2P0ByC,KAAK,EAAC,MAAM;QAACxC,KAAoB,EAApB;UAAA;QAAA;;QA3PvCM,OAAA,EAAAC,QAAA,CA4Pc,MAAyC,CAAzCH,YAAA,CAAyCuG,mBAAA;UAA/BK,KAAK,EAAC,IAAI;UAACqE,QAAQ,EAAR;;QA5PnCtJ,CAAA;YAAAsC,mBAAA,gBA8PkE3D,IAAA,CAAAqC,eAAe,CAACC,IAAI,gB,cAA1EkD,YAAA,CAEeiF,uBAAA;QAhQ3BpL,GAAA;QA8P0ByC,KAAK,EAAC,MAAM;QAACxC,KAAoB,EAApB;UAAA;QAAA;;QA9PvCM,OAAA,EAAAC,QAAA,CA+Pc,MAAyC,CAAzCH,YAAA,CAAyCuG,mBAAA;UAA/BK,KAAK,EAAC,IAAI;UAACqE,QAAQ,EAAR;;QA/PnCtJ,CAAA;YAAAsC,mBAAA,gBAiQkE3D,IAAA,CAAAqC,eAAe,CAACC,IAAI,iB,cAA1EkD,YAAA,CAEeiF,uBAAA;QAnQ3BpL,GAAA;QAiQ0ByC,KAAK,EAAC,MAAM;QAACxC,KAAoB,EAApB;UAAA;QAAA;;QAjQvCM,OAAA,EAAAC,QAAA,CAkQc,MAAyC,CAAzCH,YAAA,CAAyCuG,mBAAA;UAA/BK,KAAK,EAAC,IAAI;UAACqE,QAAQ,EAAR;;QAlQnCtJ,CAAA;YAAAsC,mBAAA,gBAoQkE3D,IAAA,CAAAqC,eAAe,CAACC,IAAI,c,cAA1EkD,YAAA,CAEeiF,uBAAA;QAtQ3BpL,GAAA;QAoQ0ByC,KAAK,EAAC,MAAM;QAACxC,KAAoB,EAApB;UAAA;QAAA;;QApQvCM,OAAA,EAAAC,QAAA,CAqQc,MAAyC,CAAzCH,YAAA,CAAyCuG,mBAAA;UAA/BK,KAAK,EAAC,IAAI;UAACqE,QAAQ,EAAR;;QArQnCtJ,CAAA;YAAAsC,mBAAA,gBAuQkE3D,IAAA,CAAAqC,eAAe,CAACC,IAAI,gB,cAA1EkD,YAAA,CAEeiF,uBAAA;QAzQ3BpL,GAAA;QAuQ0ByC,KAAK,EAAC,MAAM;QAACxC,KAAoB,EAApB;UAAA;QAAA;;QAvQvCM,OAAA,EAAAC,QAAA,CAwQc,MAA0C,CAA1CH,YAAA,CAA0CuG,mBAAA;UAAhCK,KAAK,EAAC,KAAK;UAACqE,QAAQ,EAAR;;QAxQpCtJ,CAAA;YAAAsC,mBAAA,gBA0QkE3D,IAAA,CAAAqC,eAAe,CAACC,IAAI,gB,cAA1EkD,YAAA,CAEeiF,uBAAA;QA5Q3BpL,GAAA;QA0Q0ByC,KAAK,EAAC,MAAM;QAACxC,KAAoB,EAApB;UAAA;QAAA;;QA1QvCM,OAAA,EAAAC,QAAA,CA2Qc,MAAyC,CAAzCH,YAAA,CAAyCuG,mBAAA;UAA/BK,KAAK,EAAC,IAAI;UAACqE,QAAQ,EAAR;;QA3QnCtJ,CAAA;YAAAsC,mBAAA,gBA6QYjE,YAAA,CAEe+K,uBAAA;QAFD3I,KAAK,EAAC;MAAM;QA7QtClC,OAAA,EAAAC,QAAA,CA8Qc,MAA4D,CAA5DH,YAAA,CAA4D8I,sBAAA;UA9Q1E/G,UAAA,EA8QoCzB,IAAA,CAAAqC,eAAe,CAACyD,IAAI;UA9QxD,uBAAA1F,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA8QoCL,IAAA,CAAAqC,eAAe,CAACyD,IAAI,GAAAzF,MAAA;;UA9QxDT,OAAA,EAAAC,QAAA,CA8Q0D,MAAE,CA9Q5DqD,gBAAA,CA8Q0D,IAAE,E;UA9Q5D7B,CAAA;;QAAAA,CAAA;6BAiRU7B,mBAAA,CA4EM,OA5EN0L,WA4EM,GA3ENxL,YAAA,CAEe+K,uBAAA;QAFD3I,KAAK,EAAC,MAAM;QAACxC,KAAoB,EAApB;UAAA;QAAA;;QAlRrCM,OAAA,EAAAC,QAAA,CAmRY,MAA+F,CAA/FH,YAAA,CAA+FuG,mBAAA;UAnR3GxE,UAAA,EAmR+BzB,IAAA,CAAAqC,eAAe,CAACtC,KAAK;UAnRpD,uBAAAK,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAmR+BL,IAAA,CAAAqC,eAAe,CAACtC,KAAK,GAAAM,MAAA;UAAE6F,WAAW,EAAC,OAAO;UAAC5G,KAAoB,EAApB;YAAA;UAAA;;QAnR1E+B,CAAA;UAsRU3B,YAAA,CAEe+K,uBAAA;QAFD3I,KAAK,EAAC,MAAM;QAACxC,KAAoB,EAApB;UAAA;QAAA;;QAtRrCM,OAAA,EAAAC,QAAA,CAuRY,MAAsG,CAAtGH,YAAA,CAAsGuG,mBAAA;UAvRlHxE,UAAA,EAuR+BzB,IAAA,CAAAqC,eAAe,CAACpC,WAAW;UAvR1D,uBAAAG,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAuR+BL,IAAA,CAAAqC,eAAe,CAACpC,WAAW,GAAAI,MAAA;UAAE6F,WAAW,EAAC,SAAS;UAAC5G,KAAoB,EAApB;YAAA;UAAA;;QAvRlF+B,CAAA;UA0RU3B,YAAA,CAEe+K,uBAAA;QAFD3I,KAAK,EAAC;MAAM;QA1RpClC,OAAA,EAAAC,QAAA,CA2RY,MAA4D,CAA5DH,YAAA,CAA4D8I,sBAAA;UA3RxE/G,UAAA,EA2RkCzB,IAAA,CAAAqC,eAAe,CAACyD,IAAI;UA3RtD,uBAAA1F,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA2RkCL,IAAA,CAAAqC,eAAe,CAACyD,IAAI,GAAAzF,MAAA;;UA3RtDT,OAAA,EAAAC,QAAA,CA2RwD,MAAE,CA3R1DqD,gBAAA,CA2RwD,IAAE,E;UA3R1D7B,CAAA;;QAAAA,CAAA;UA8R0BrB,IAAA,CAAAqC,eAAe,CAACC,IAAI,gBAAYtC,IAAA,CAAAqC,eAAe,CAACC,IAAI,mB,cAApE9C,mBAAA,CAgBW4F,SAAA;QA9SrB/F,GAAA;MAAA,K,kBA+RYG,mBAAA,CAae4F,SAAA,QA5S3BC,WAAA,CA+RyErF,IAAA,CAAAqC,eAAe,CAAC6F,OAAO,EA/RhG,CA+R0D3C,IAAI,EAACmB,KAAK;6BAAxDlB,YAAA,CAaeiF,uBAAA;UAbA3I,KAAK,UAAQ4E,KAAK;UAAsDrH,GAAG,EAAEqH;;UA/RxG9G,OAAA,EAAAC,QAAA,CAgSc,MAUS,CAVTH,YAAA,CAUSuD,iBAAA;YA1SvBrD,OAAA,EAAAC,QAAA,CAiSgB,MAES,CAFTH,YAAA,CAESiG,iBAAA;cAFAC,IAAI,EAAE;YAAE;cAjSjChG,OAAA,EAAAC,QAAA,CAkSkB,MAAiE,CAAjEH,YAAA,CAAiEuG,mBAAA;gBAlSnFxE,UAAA,EAkSsC8D,IAAI,CAACxF,KAAK;gBAlShD,uBAAAM,MAAA,IAkSsCkF,IAAI,CAACxF,KAAK,GAAAM,MAAA;gBAAE6F,WAAW,EAAC;;cAlS9D7E,CAAA;0CAoSgB3B,YAAA,CAKSiG,iBAAA;cALAC,IAAI,EAAE;YAAE;cApSjChG,OAAA,EAAAC,QAAA,CAqSkB,MAAyG,CAAzGH,YAAA,CAAyGgK,oBAAA;gBAA9FpH,IAAI,EAAC,QAAQ;gBAAC6I,KAAK,EAAL,EAAK;gBAAChM,KAAK,EAAC,oBAAoB;gBAAGiD,OAAK,EAAA/B,MAAA,IAAEL,IAAA,CAAAoL,YAAY,CAAC1E,KAAK;;gBArSvG9G,OAAA,EAAAC,QAAA,CAqS2G,MAAI,CArS/GqD,gBAAA,CAqS2G,MAAI,E;gBArS/G7B,CAAA;iEAsSmFkE,IAAI,CAAC6C,WAAW,I,cAAjF5C,YAAA,CAAoIkE,oBAAA;gBAtStJrK,GAAA;gBAsS6BiD,IAAI,EAAC,SAAS;gBAAC6I,KAAK,EAAL,EAAK;gBAAC7L,KAAyB,EAAzB;kBAAA;gBAAA,CAAyB;gBAA2B8C,OAAK,EAAA/B,MAAA,IAAEkF,IAAI,CAAC6C,WAAW;;gBAtS7HxI,OAAA,EAAAC,QAAA,CAsSoI,MAAM,CAtS1IqD,gBAAA,CAsSoI,QAAM,E;gBAtS1I7B,CAAA;kEAAAsC,mBAAA,gBAuS+E4B,IAAI,CAAC6C,WAAW,I,cAA7E5C,YAAA,CAAiIkE,oBAAA;gBAvSnJrK,GAAA;gBAuS6BiD,IAAI,EAAC,MAAM;gBAAC6I,KAAK,EAAL,EAAK;gBAAC7L,KAAyB,EAAzB;kBAAA;gBAAA,CAAyB;gBAA0B8C,OAAK,EAAA/B,MAAA,IAAEkF,IAAI,CAAC6C,WAAW;;gBAvSzHxI,OAAA,EAAAC,QAAA,CAuSiI,MAAM,CAvSvIqD,gBAAA,CAuSiI,QAAM,E;gBAvSvI7B,CAAA;kEAAAsC,mBAAA,gBAwS+D4B,IAAI,CAAC6C,WAAW,I,cAA7D5C,YAAA,CAAiF6F,0BAAA;gBAxSnGhM,GAAA;gBAAAoC,UAAA,EAwS4C8D,IAAI,CAAC+C,MAAM;gBAxSvD,uBAAAjI,MAAA,IAwS4CkF,IAAI,CAAC+C,MAAM,GAAAjI;gFAxSvDsD,mBAAA,e;cAAAtC,CAAA;;YAAAA,CAAA;;UAAAA,CAAA;;sCA6SY3B,YAAA,CAA2FgK,oBAAA;QAAhFpH,IAAI,EAAC,SAAS;QAAC6I,KAAK,EAAL,EAAK;QAAChM,KAAK,EAAC,iBAAiB;QAAEiD,OAAK,EAAEpC,IAAA,CAAAsL;;QA7S5E1L,OAAA,EAAAC,QAAA,CA6SuF,MAAI,CA7S3FqD,gBAAA,CA6SuF,MAAI,E;QA7S3F7B,CAAA;oEAAAsC,mBAAA,gBAgT0B3D,IAAA,CAAAqC,eAAe,CAACC,IAAI,e,cAApC9C,mBAAA,CAYW4F,SAAA;QA5TrB/F,GAAA;MAAA,IAiTYK,YAAA,CAOe+K,uBAAA;QAPD3I,KAAK,EAAC;MAAI;QAjTpClC,OAAA,EAAAC,QAAA,CAkTc,MAKW,CALXH,YAAA,CAKWuG,mBAAA;UAJP3D,IAAI,EAAC,UAAU;UACfnD,KAAK,EAAC,UAAU;UACfoM,IAAI,EAAEvL,IAAA,CAAAqC,eAAe,CAACqG,GAAG;UAC1B8C,MAAM,EAAC;;QAtTzBnK,CAAA;UAyTY3B,YAAA,CAEe+K,uBAAA;QAFD3I,KAAK,EAAC;MAAI;QAzTpClC,OAAA,EAAAC,QAAA,CA0Tc,MAAqF,CAArFH,YAAA,CAAqF2L,0BAAA;UA1TnG5J,UAAA,EA0TwCzB,IAAA,CAAAqC,eAAe,CAACqG,GAAG;UA1T3D,uBAAAtI,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA0TwCL,IAAA,CAAAqC,eAAe,CAACqG,GAAG,GAAArI,MAAA;UAAGoL,GAAG,EAAE,CAAC;UAAG1C,GAAG,EAAE;;QA1T5E1H,CAAA;wCAAAsC,mBAAA,gBA8T0B3D,IAAA,CAAAqC,eAAe,CAACC,IAAI,e,cAClCkD,YAAA,CAEeiF,uBAAA;QAjU3BpL,GAAA;QA+T0ByC,KAAK,EAAC;;QA/ThClC,OAAA,EAAAC,QAAA,CAgUc,MAAuF,CAAvFH,YAAA,CAAuF2L,0BAAA;UAhUrG5J,UAAA,EAgUwCzB,IAAA,CAAAqC,eAAe,CAAC2G,KAAK;UAhU7D,uBAAA5I,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAgUwCL,IAAA,CAAAqC,eAAe,CAAC2G,KAAK,GAAA3I,MAAA;UAAGoL,GAAG,EAAE,CAAC;UAAG1C,GAAG,EAAE;;QAhU9E1H,CAAA;YAAAsC,mBAAA,gBAmUUjE,YAAA,CAYe+K,uBAAA;QAZD3I,KAAK,EAAC;MAAM;QAnUpClC,OAAA,EAAAC,QAAA,CAoUY,MAUY,CAVZH,YAAA,CAUYgM,oBAAA;UATRvM,KAAK,EAAC,YAAY;UACjBwM,MAAM,EAAC3L,IAAA,CAAA4L,YAAY;UACpBC,QAAQ,EAAR,EAAQ;UACP,cAAY,EAAE7L,IAAA,CAAA8L,WAAW;UACzB,eAAa,EAAE9L,IAAA,CAAA+L,iBAAiB;UAChC,WAAS,EAAE/L,IAAA,CAAAqC,eAAe,CAACmE,OAAO;UAClCwF,KAAK,EAAE;;UA3UxBpM,OAAA,EAAAC,QAAA,CA4Uc,MAAoE,CAApEH,YAAA,CAAoEgK,oBAAA;YAAzDuC,IAAI,EAAC,OAAO;YAAEd,KAAK,EAAL,EAAK;YAAC7L,KAAoB,EAApB;cAAA;YAAA;;YA5U7CM,OAAA,EAAAC,QAAA,CA4UkE,MAAI,CA5UtEqD,gBAAA,CA4UkE,MAAI,E;YA5UtE7B,CAAA;cA6Uc6K,WAA+D,C;UA7U7E7K,CAAA;;QAAAA,CAAA;UAiVU3B,YAAA,CAWe+K,uBAAA;QAXD3I,KAAK,EAAC;MAAM;QAjVpClC,OAAA,EAAAC,QAAA,CAkVY,MASY,CATZH,YAAA,CASYgM,oBAAA;UARRvM,KAAK,EAAC,cAAc;UACnBwM,MAAM,EAAC3L,IAAA,CAAAmM,cAAc;UACrB,cAAY,EAAEnM,IAAA,CAAAoM,WAAW;UACzB,eAAa,EAAEpM,IAAA,CAAAqM,iBAAiB;UAChC,WAAS,EAAErM,IAAA,CAAAqC,eAAe,CAAC4E,SAAS;UACpC+E,KAAK,EAAE;;UAxVxBpM,OAAA,EAAAC,QAAA,CAyVc,MAAmE,CAAnEH,YAAA,CAAmEgK,oBAAA;YAAxDuC,IAAI,EAAC,OAAO;YAACd,KAAK,EAAL,EAAK;YAAC7L,KAAoB,EAApB;cAAA;YAAA;;YAzV5CM,OAAA,EAAAC,QAAA,CAyViE,MAAI,CAzVrEqD,gBAAA,CAyViE,MAAI,E;YAzVrE7B,CAAA;cA0VciL,WAAgE,C;UA1V9EjL,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;kCA+VQjC,mBAAA,CAMO,QANPmN,WAMO,GALL7M,YAAA,CAISuD,iBAAA;MApWnBrD,OAAA,EAAAC,QAAA,CAiWY,MAAyE,CAAzEH,YAAA,CAAyEgK,oBAAA;QAA7D9D,IAAI,EAAE,CAAC;QAAEtD,IAAI,EAAC,SAAS;QAAEF,OAAK,EAAEpC,IAAA,CAAAwM;;QAjWxD5M,OAAA,EAAAC,QAAA,CAiWuE,MAAE,CAjWzEqD,gBAAA,CAiWuE,IAAE,E;QAjWzE7B,CAAA;sCAAA6B,gBAAA,CAiWqF,KAEzE,GAAAxD,YAAA,CAAwDgK,oBAAA;QAA5C9D,IAAI,EAAE,CAAC;QAAGxD,OAAK,EAAEpC,IAAA,CAAAqK;;QAnWzCzK,OAAA,EAAAC,QAAA,CAmWsD,MAAE,CAnWxDqD,gBAAA,CAmWsD,IAAE,E;QAnWxD7B,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;2DAuWM3B,YAAA,CA0BYwK,oBAAA;IA1BOE,OAAO,EAAEpK,IAAA,CAAAyM,mBAAmB;IAvWrD,oBAAArM,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAuWkCL,IAAA,CAAAyM,mBAAmB,GAAApM,MAAA;IAAGN,KAAK,EAAEC,IAAA,CAAA0M,iBAAiB;IAAEvN,KAAK,EAAC,YAAY;IAAE,YAAU,EAAE,KAAK;IAAE+H,KAAK,EAAC;;IAvW/HtH,OAAA,EAAAC,QAAA,CAwWQ,MAmBS,CAnBTH,YAAA,CAmBSuD,iBAAA;MA3XjBrD,OAAA,EAAAC,QAAA,CAyWU,MAIS,CAJTH,YAAA,CAISiG,iBAAA;QAJDC,IAAI,EAAC,GAAG;QAACtG,KAA0B,EAA1B;UAAA;QAAA;;QAzW3BM,OAAA,EAAAC,QAAA,CA0WY,MAES,CAFTH,YAAA,CAESuD,iBAAA;UA5WrBrD,OAAA,EAAAC,QAAA,CA2Wc,MAA+E,CAA/E8M,WAA+E,C;UA3W7FtL,CAAA;;QAAAA,CAAA;UA8WU3B,YAAA,CAYSiG,iBAAA;QAZDC,IAAI,EAAC;MAAI;QA9W3BhG,OAAA,EAAAC,QAAA,CA+WY,MAAgC,CAAhCH,YAAA,CAAgCuD,iBAAA;UA/W5CrD,OAAA,EAAAC,QAAA,CA+WoB,MAAe,CAAf+M,WAAe,C;UA/WnCvL,CAAA;YAgXY3B,YAAA,CAKyFuD,iBAAA;UALjF3D,KAAuB,EAAvB;YAAA;UAAA;QAAuB;UAhX3CM,OAAA,EAAAC,QAAA,CAiXc,MAGS,CAHTH,YAAA,CAGSiG,iBAAA;YAHAC,IAAI,EAAE,EAAE;YAAEtG,KAAyB,EAAzB;cAAA;YAAA;;YAjXjCM,OAAA,EAAAC,QAAA,CAkXgB,MACW,CADXH,YAAA,CACWuG,mBAAA;cADAC,WAAW,EAAClG,IAAA,CAAA6M,SAAS;cAlXhDpL,UAAA,EAkX0DzB,IAAA,CAAA6M,SAAS;cAlXnE,uBAAAzM,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAkX0DL,IAAA,CAAA6M,SAAS,GAAAxM,MAAA;cAAEd,EAAE,EAAC,UAAU;cAAEoL,QAAQ,EAAE;;YAlX9FtJ,CAAA;cAqXc3B,YAAA,CAA8EgK,oBAAA;YAAnEpH,IAAI,EAAC,MAAM;YAAC6I,KAAK,EAAL,EAAK;YAAC5L,EAAE,EAAC,SAAS;YAAE6C,OAAK,EAAEpC,IAAA,CAAA8M;;YArXhElN,OAAA,EAAAC,QAAA,CAqX4E,MAAI,CArXhFqD,gBAAA,CAqX4E,MAAI,E;YArXhF7B,CAAA;;UAAAA,CAAA;YAsXY3B,YAAA,CAGSuD,iBAAA;UAHD3D,KAAwB,EAAxB;YAAA;UAAA;QAAwB;UAtX5CM,OAAA,EAAAC,QAAA,CAuXc,MAAyE,CAAzEH,YAAA,CAAyEgK,oBAAA;YAA9DpH,IAAI,EAAC,SAAS;YAAC6I,KAAK,EAAL,EAAK;YAAE/I,OAAK,EAAEpC,IAAA,CAAA+M;;YAvXtDnN,OAAA,EAAAC,QAAA,CAuXsE,MAAK,CAvX3EqD,gBAAA,CAuXsE,OAAK,E;YAvX3E7B,CAAA;0CAwXc3B,YAAA,CAA4FgK,oBAAA;YAAjFpH,IAAI,EAAC,SAAS;YAAEF,OAAK,EAAEpC,IAAA,CAAAgN,YAAY;YAAE1N,KAAyB,EAAzB;cAAA;YAAA;;YAxX9DM,OAAA,EAAAC,QAAA,CAwXwF,MAAM,CAxX9FqD,gBAAA,CAwXwF,QAAM,E;YAxX9F7B,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QA4XQjC,mBAAA,CAIO,QAJP6N,WAIO,GAHLvN,YAAA,CAESuD,iBAAA;MA/XnBrD,OAAA,EAAAC,QAAA,CA8XY,MAAwF,CAAxFH,YAAA,CAAwFgK,oBAAA;QAA5E9D,IAAI,EAAE,CAAC;QAAEtD,IAAI,EAAC,SAAS;QAAChD,KAAmB,EAAnB;UAAA;QAAA,CAAmB;QAAG8C,OAAK,EAAEpC,IAAA,CAAAkN;;QA9X7EtN,OAAA,EAAAC,QAAA,CA8XqF,MAAG,CA9XxFqD,gBAAA,CA8XqF,KAAG,E;QA9XxF7B,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;2CAkYM3B,YAAA,CAOYwK,oBAAA;IAPOE,OAAO,EAAEpK,IAAA,CAAAmN,mBAAmB;IAlYrD,oBAAA/M,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAkYkCL,IAAA,CAAAmN,mBAAmB,GAAA9M,MAAA;IAAGlB,KAAK,EAAC,YAAY;IAAE,YAAU,EAAE,KAAK;IAAG,sBAAoB,EAAE,KAAK;IAAE+H,KAAK,EAAC;;IAlYnItH,OAAA,EAAAC,QAAA,CAmYQ,MAA+B,CAA/BT,mBAAA,CAA+B,cAAA4F,gBAAA,CAAtBhF,IAAA,CAAAoN,YAAY,kBACrBhO,mBAAA,CAIO,QAJPiO,WAIO,GAHK3N,YAAA,CAESuD,iBAAA;MAvY7BrD,OAAA,EAAAC,QAAA,CAsYsB,MAA0G,CAA1GH,YAAA,CAA0GgK,oBAAA;QAA9F9D,IAAI,EAAE,CAAC;QAAEtD,IAAI,EAAC,QAAQ;QAAChD,KAAmB,EAAnB;UAAA;QAAA,CAAmB;QAAG8C,OAAK,EAAAhC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAAEL,IAAA,CAAAmN,mBAAmB;;QAtYzGvN,OAAA,EAAAC,QAAA,CAsYiH,MAAG,CAtYpHqD,gBAAA,CAsYiH,KAAG,E;QAtYpH7B,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;kCA0YMsC,mBAAA,cAAiB,EACjBjE,YAAA,CA0CYwK,oBAAA;IA1CAnK,KAAK,EAAEC,IAAA,CAAAsN,kBAAkB;IAAUlD,OAAO,EAAEpK,IAAA,CAAAuN,oBAAoB;IA3YlF,oBAAAnN,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA2Y8DL,IAAA,CAAAuN,oBAAoB,GAAAlN,MAAA;IAAI,cAAY,EAAEL,IAAA,CAAAwN,gBAAgB;IAAErO,KAAK,EAAC;;IA3Y5HS,OAAA,EAAAC,QAAA,CA4YQ,MAwCU,CAxCKG,IAAA,CAAAsF,SAAS,CAACyB,MAAM,U,cAA/BvB,YAAA,CAwCU8E,kBAAA;MApblBjL,GAAA;MA4Y+CF,KAAK,EAAC,YAAY;MAACoL,GAAG,EAAC,MAAM;MAAC,aAAW,EAAC;;MA5YzF3K,OAAA,EAAAC,QAAA,CA8YU,MAEM,CAFNT,mBAAA,CAEM,OAFNqO,WAEM,EAFmB,QAClB,GAAAzI,gBAAA,CAAGhF,IAAA,CAAAsF,SAAS,CAACtF,IAAA,CAAA0N,UAAU,EAAEnO,EAAE,IAAG,IAAE,GAAAyF,gBAAA,CAAGhF,IAAA,CAAAsF,SAAS,CAACtF,IAAA,CAAA0N,UAAU,EAAE3N,KAAK,kBAGrEL,YAAA,CASe+K,uBAAA;QATD3I,KAAK,EAAC;MAAM;QAlZpClC,OAAA,EAAAC,QAAA,CAmZY,MAOY,CAPZH,YAAA,CAOYgL,oBAAA;UA1ZxBjJ,UAAA,EAmZgCzB,IAAA,CAAA2N,YAAY,CAACC,WAAW;UAnZxD,uBAAAxN,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAmZgCL,IAAA,CAAA2N,YAAY,CAACC,WAAW,GAAAvN,MAAA;UAAE6F,WAAW,EAAC;;UAnZtEtG,OAAA,EAAAC,QAAA,CAqZkB,MAA+B,E,kBADnCL,mBAAA,CAKY4F,SAAA,QAzZ1BC,WAAA,CAqZiCrF,IAAA,CAAA6N,eAAe,EAAvBtI,IAAI;iCADfC,YAAA,CAKYwF,oBAAA;cAHP3L,GAAG,EAAEkG,IAAI,CAAChG,EAAE;cACZuC,KAAK,EAAE9B,IAAA,CAAA8N,OAAO,CAACvI,IAAI;cACnBe,KAAK,EAAEf,IAAI,CAAChG;;;UAxZ/B8B,CAAA;;QAAAA,CAAA;UA6Z2CrB,IAAA,CAAA2N,YAAY,CAACC,WAAW,U,cAAzDpI,YAAA,CASeiF,uBAAA;QAtazBpL,GAAA;QA6ZwByC,KAAK,EAAC;;QA7Z9BlC,OAAA,EAAAC,QAAA,CA8ZY,MAOY,CAPZH,YAAA,CAOYgL,oBAAA;UAraxBjJ,UAAA,EA8ZgCzB,IAAA,CAAA2N,YAAY,CAACI,SAAS;UA9ZtD,uBAAA3N,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA8ZgCL,IAAA,CAAA2N,YAAY,CAACI,SAAS,GAAA1N,MAAA;UAAE6F,WAAW,EAAC;;UA9ZpEtG,OAAA,EAAAC,QAAA,CAgakB,MAA6D,E,kBADjEL,mBAAA,CAKY4F,SAAA,QApa1BC,WAAA,CAgaiCrF,IAAA,CAAAsF,SAAS,CAACtF,IAAA,CAAA2N,YAAY,CAACC,WAAW,MAAI1F,OAAO,EAArD3C,IAAI;iCADfC,YAAA,CAKYwF,oBAAA;cAHP3L,GAAG,EAAEkG,IAAI,CAAChG,EAAE;cACZuC,KAAK,EAAEyD,IAAI,CAACxF,KAAK;cACjBuG,KAAK,EAAEf,IAAI,CAAChG;;;UAna/B8B,CAAA;;QAAAA,CAAA;YAAAsC,mBAAA,gBAwawC3D,IAAA,CAAA2N,YAAY,CAACC,WAAW,U,cAAtDpO,mBAAA,CAGM,OAHNwO,WAGM,GAFJrK,mBAAA,2BAA8B,EAza1CT,gBAAA,CAya0C,MAC3B,GAAA9D,mBAAA,CAA4F,QAA5F6O,WAA4F,EAA/D,KAAE,GAAAjJ,gBAAA,CAAGhF,IAAA,CAAA8N,OAAO,CAAC9N,IAAA,CAAAsF,SAAS,CAACtF,IAAA,CAAA2N,YAAY,CAACC,WAAW,UAAO,KAAE,iBA1apG1K,gBAAA,CA0a2G,MAAI,GAAA9D,mBAAA,CAA0H,QAA1H8O,WAA0H,EAA7F,KAAE,GAAAlJ,gBAAA,CAAGhF,IAAA,CAAAsF,SAAS,CAACtF,IAAA,CAAA2N,YAAY,CAACC,WAAW,MAAI1F,OAAO,CAAClI,IAAA,CAAA2N,YAAY,CAACI,SAAS,MAAIhO,KAAK,IAAE,KAAE,iBA1alOmD,gBAAA,CA0ayO,UAC/N,E,KA3aVS,mBAAA,gBA4awC3D,IAAA,CAAA6N,eAAe,CAAC9G,MAAM,U,cAApDvH,mBAAA,CAEM,OAFN2O,WAEM,EAFoD,0BAE1D,KA9aVxK,mBAAA,gBAgbUvE,mBAAA,CAEM,OAFNgP,WAEM,GADJ1O,YAAA,CAA0EgK,oBAAA;QAA/DpH,IAAI,EAAC,SAAS;QAAEF,OAAK,EAAAhC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAAEL,IAAA,CAAAqO,YAAY,CAACrO,IAAA,CAAA0N,UAAU;;QAjbrE9N,OAAA,EAAAC,QAAA,CAibwE,MAAE,CAjb1EqD,gBAAA,CAibwE,IAAE,E;QAjb1E7B,CAAA;;MAAAA,CAAA;gCAAAsC,mBAAA,e;IAAAtC,CAAA;2DAsbMsC,mBAAA,cAAiB,E,+BACjB6B,YAAA,CAiDY0E,oBAAA;IAjDAnK,KAAK,EAAEC,IAAA,CAAAsO,kBAAkB;IAAyCnP,KAAK,EAAC,eAAe;IAAC+H,KAAK,EAAC;;IAvbhHtH,OAAA,EAAAC,QAAA,CAwbQ,MA2CU,CA3CVH,YAAA,CA2CU4K,kBAAA;MAnelB1K,OAAA,EAAAC,QAAA,CAybU,MAQe,CARfH,YAAA,CAQe+K,uBAAA;QARDtL,KAAK,EAAC,WAAW;QAAC2C,KAAK,EAAC;;QAzbhDlC,OAAA,EAAAC,QAAA,CA0bY,MAMiB,CANjBH,YAAA,CAMiB6O,yBAAA;UANDjP,KAA0B,EAA1B;YAAA;UAAA,CAA0B;UA1btDmC,UAAA,EA2bqCzB,IAAA,CAAAwO,SAAS;UA3b9C,uBAAApO,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA2bqCL,IAAA,CAAAwO,SAAS,GAAAnO,MAAA;UACjBwK,QAAM,EAAE7K,IAAA,CAAAyO,UAAU;UACnBnM,IAAI,EAAC,UAAU;UACf,cAAY,EAAC,kBAAkB;UAC/B4D,WAAW,EAAC;;QA/bxC7E,CAAA;UAkcQ3B,YAAA,CAeiB+K,uBAAA;QAfH3I,KAAK,EAAC,SAAS;QAAC3C,KAAK,EAAC;;QAlc5CS,OAAA,EAAAC,QAAA,CAmcY,MASS,CATTH,YAAA,CASSuD,iBAAA;UA5crBrD,OAAA,EAAAC,QAAA,CAocc,MAOY,CAPZH,YAAA,CAOYgP,oBAAA;YA3c1BjN,UAAA,EAqc2BzB,IAAA,CAAA2O,eAAe;YArc1C,uBAAAvO,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAqc2BL,IAAA,CAAA2O,eAAe,GAAAtO,MAAA;YACxB,cAAY,EAAC,SAAS;YACtB,gBAAc,EAAC,MAAM;YACrB,aAAW,EAAC,GAAG;YACf,eAAa,EAAC;;UAzchCgB,CAAA;YA6cY3B,YAAA,CAGSuD,iBAAA;UAhdrBrD,OAAA,EAAAC,QAAA,CA8cc,MACkB,CADsCG,IAAA,CAAA2O,eAAe,I,cAAvEnJ,YAAA,CACkB6F,0BAAA;YA/chChM,GAAA;YAAAoC,UAAA,EA8cwCzB,IAAA,CAAA4O,aAAa;YA9crD,uBAAAxO,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA8cwCL,IAAA,CAAA4O,aAAa,GAAAvO,MAAA;YAAGoL,GAAG,EAAE,CAAC;YAAyBnM,KAAwD,EAAxD;cAAA;cAAA;cAAA;YAAA;qDA9cvFqE,mBAAA,e;UAAAtC,CAAA;;QAAAA,CAAA;UAkdU3B,YAAA,CAQe+K,uBAAA;QARD3I,KAAK,EAAC;MAAU;QAldxClC,OAAA,EAAAC,QAAA,CAmdY,MAMY,CANZH,YAAA,CAMYgP,oBAAA;UAzdxBjN,UAAA,EAodyBzB,IAAA,CAAAiJ,OAAO;UApdhC,uBAAA7I,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAodyBL,IAAA,CAAAiJ,OAAO,GAAA5I,MAAA;UAChB,aAAW,EAAC,GAAG;UACf,eAAa,EAAC,GAAG;UAChBwK,QAAM,EAAE7K,IAAA,CAAA6O;;QAvdzBxN,CAAA;UA4dUyN,WAEM,EAEyC9O,IAAA,CAAAiJ,OAAO,I,cAAtDzJ,mBAAA,CAEM,OAFNuP,WAEM,EAFkD,gCAExD,KAleVpL,mBAAA,e;MAAAtC,CAAA;QAqeQjC,mBAAA,CAEM,OAFN4P,WAEM,GADJtP,YAAA,CAAgEgK,oBAAA;MAArDpH,IAAI,EAAC,SAAS;MAAEF,OAAK,EAAEpC,IAAA,CAAAiP;;MAte5CrP,OAAA,EAAAC,QAAA,CAse4D,MAAE,CAte9DqD,gBAAA,CAse4D,IAAE,E;MAte9D7B,CAAA;;IAAAA,CAAA;qDAub8DrB,IAAA,CAAAkP,oBAAoB,EAA7B,SAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}