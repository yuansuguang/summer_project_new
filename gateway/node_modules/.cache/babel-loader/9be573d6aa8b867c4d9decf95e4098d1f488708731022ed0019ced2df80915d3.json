{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport cartesian3DLayout from './cartesian3DLayout';\nimport evaluateBarSparseness from './evaluateBarSparseness';\nvar vec3 = glmatrix.vec3;\nvar isDimensionStacked = echarts.helper.dataStack.isDimensionStacked;\nfunction globeLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var barMinHeight = seriesModel.get('minHeight') || 0;\n  var barSize = seriesModel.get('barSize');\n  var dims = ['lng', 'lat', 'alt'].map(function (coordDimName) {\n    return seriesModel.coordDimToDataDim(coordDimName)[0];\n  });\n  if (barSize == null) {\n    var perimeter = coordSys.radius * Math.PI;\n    var fillRatio = evaluateBarSparseness(data, dims[0], dims[1]);\n    barSize = [perimeter / Math.sqrt(data.count() / fillRatio), perimeter / Math.sqrt(data.count() / fillRatio)];\n  } else if (!echarts.util.isArray(barSize)) {\n    barSize = [barSize, barSize];\n  }\n  var valueDim = getValueDimension(data, dims);\n  data.each(dims, function (lng, lat, val, idx) {\n    var stackedValue = data.get(valueDim.dimension, idx);\n    var baseValue = valueDim.isStacked ? stackedValue - val : coordSys.altitudeAxis.scale.getExtent()[0]; // TODO Stacked with minHeight.\n\n    var height = Math.max(coordSys.altitudeAxis.dataToCoord(val), barMinHeight);\n    var start = coordSys.dataToPoint([lng, lat, baseValue]);\n    var end = coordSys.dataToPoint([lng, lat, stackedValue]);\n    var dir = vec3.sub([], end, start);\n    vec3.normalize(dir, dir);\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', Vector3.UP.array);\n}\nfunction geo3DLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var barSize = seriesModel.get('barSize');\n  var barMinHeight = seriesModel.get('minHeight') || 0;\n  var dims = ['lng', 'lat', 'alt'].map(function (coordDimName) {\n    return seriesModel.coordDimToDataDim(coordDimName)[0];\n  });\n  if (barSize == null) {\n    var size = Math.min(coordSys.size[0], coordSys.size[2]);\n    var fillRatio = evaluateBarSparseness(data, dims[0], dims[1]);\n    barSize = [size / Math.sqrt(data.count() / fillRatio), size / Math.sqrt(data.count() / fillRatio)];\n  } else if (!echarts.util.isArray(barSize)) {\n    barSize = [barSize, barSize];\n  }\n  var dir = [0, 1, 0];\n  var valueDim = getValueDimension(data, dims);\n  data.each(dims, function (lng, lat, val, idx) {\n    var stackedValue = data.get(valueDim.dimension, idx);\n    var baseValue = valueDim.isStacked ? stackedValue - val : coordSys.altitudeAxis.scale.getExtent()[0];\n    var height = Math.max(coordSys.altitudeAxis.dataToCoord(val), barMinHeight);\n    var start = coordSys.dataToPoint([lng, lat, baseValue]);\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', [1, 0, 0]);\n}\nfunction mapService3DLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var dimLng = seriesModel.coordDimToDataDim('lng')[0];\n  var dimLat = seriesModel.coordDimToDataDim('lat')[0];\n  var dimAlt = seriesModel.coordDimToDataDim('alt')[0];\n  var barSize = seriesModel.get('barSize');\n  var barMinHeight = seriesModel.get('minHeight') || 0;\n  if (barSize == null) {\n    var xExtent = data.getDataExtent(dimLng);\n    var yExtent = data.getDataExtent(dimLat);\n    var corner0 = coordSys.dataToPoint([xExtent[0], yExtent[0]]);\n    var corner1 = coordSys.dataToPoint([xExtent[1], yExtent[1]]);\n    var size = Math.min(Math.abs(corner0[0] - corner1[0]), Math.abs(corner0[1] - corner1[1])) || 1;\n    var fillRatio = evaluateBarSparseness(data, dimLng, dimLat); // PENDING, data density\n\n    barSize = [size / Math.sqrt(data.count() / fillRatio), size / Math.sqrt(data.count() / fillRatio)];\n  } else {\n    if (!echarts.util.isArray(barSize)) {\n      barSize = [barSize, barSize];\n    }\n    barSize[0] /= coordSys.getScale() / 16;\n    barSize[1] /= coordSys.getScale() / 16;\n  }\n  var dir = [0, 0, 1];\n  var dims = [dimLng, dimLat, dimAlt];\n  var valueDim = getValueDimension(data, dims);\n  data.each(dims, function (lng, lat, val, idx) {\n    var stackedValue = data.get(valueDim.dimension, idx);\n    var baseValue = valueDim.isStacked ? stackedValue - val : 0;\n    var start = coordSys.dataToPoint([lng, lat, baseValue]);\n    var end = coordSys.dataToPoint([lng, lat, stackedValue]);\n    var height = Math.max(end[2] - start[2], barMinHeight);\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', [1, 0, 0]);\n}\nfunction getValueDimension(data, dataDims) {\n  var isStacked = isDimensionStacked(data, dataDims[2]);\n  return {\n    dimension: isStacked ? data.getCalculationInfo('stackResultDimension') : dataDims[2],\n    isStacked: isStacked\n  };\n}\nexport default function registerBarLayout(registers) {\n  registers.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('bar3D', function (seriesModel) {\n      var coordSys = seriesModel.coordinateSystem;\n      var coordSysType = coordSys && coordSys.type;\n      if (coordSysType === 'globe') {\n        globeLayout(seriesModel, coordSys);\n      } else if (coordSysType === 'cartesian3D') {\n        cartesian3DLayout(seriesModel, coordSys);\n      } else if (coordSysType === 'geo3D') {\n        geo3DLayout(seriesModel, coordSys);\n      } else if (coordSysType === 'mapbox3D' || coordSysType === 'maptalks3D') {\n        mapService3DLayout(seriesModel, coordSys);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!coordSys) {\n            throw new Error('bar3D doesn\\'t have coordinate system.');\n          } else {\n            throw new Error('bar3D doesn\\'t support coordinate system ' + coordSys.type);\n          }\n        }\n      }\n    });\n  });\n}","map":{"version":3,"names":["echarts","Vector3","glmatrix","cartesian3DLayout","evaluateBarSparseness","vec3","isDimensionStacked","helper","dataStack","globeLayout","seriesModel","coordSys","data","getData","barMinHeight","get","barSize","dims","map","coordDimName","coordDimToDataDim","perimeter","radius","Math","PI","fillRatio","sqrt","count","util","isArray","valueDim","getValueDimension","each","lng","lat","val","idx","stackedValue","dimension","baseValue","isStacked","altitudeAxis","scale","getExtent","height","max","dataToCoord","start","dataToPoint","end","dir","sub","normalize","size","setItemLayout","setLayout","UP","array","geo3DLayout","min","mapService3DLayout","dimLng","dimLat","dimAlt","xExtent","getDataExtent","yExtent","corner0","corner1","abs","getScale","dataDims","getCalculationInfo","registerBarLayout","registers","registerLayout","ecModel","api","eachSeriesByType","coordinateSystem","coordSysType","type","process","env","NODE_ENV","Error"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/chart/bar3D/bar3DLayout.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport cartesian3DLayout from './cartesian3DLayout';\nimport evaluateBarSparseness from './evaluateBarSparseness';\nvar vec3 = glmatrix.vec3;\nvar isDimensionStacked = echarts.helper.dataStack.isDimensionStacked;\n\nfunction globeLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var barMinHeight = seriesModel.get('minHeight') || 0;\n  var barSize = seriesModel.get('barSize');\n  var dims = ['lng', 'lat', 'alt'].map(function (coordDimName) {\n    return seriesModel.coordDimToDataDim(coordDimName)[0];\n  });\n\n  if (barSize == null) {\n    var perimeter = coordSys.radius * Math.PI;\n    var fillRatio = evaluateBarSparseness(data, dims[0], dims[1]);\n    barSize = [perimeter / Math.sqrt(data.count() / fillRatio), perimeter / Math.sqrt(data.count() / fillRatio)];\n  } else if (!echarts.util.isArray(barSize)) {\n    barSize = [barSize, barSize];\n  }\n\n  var valueDim = getValueDimension(data, dims);\n  data.each(dims, function (lng, lat, val, idx) {\n    var stackedValue = data.get(valueDim.dimension, idx);\n    var baseValue = valueDim.isStacked ? stackedValue - val : coordSys.altitudeAxis.scale.getExtent()[0]; // TODO Stacked with minHeight.\n\n    var height = Math.max(coordSys.altitudeAxis.dataToCoord(val), barMinHeight);\n    var start = coordSys.dataToPoint([lng, lat, baseValue]);\n    var end = coordSys.dataToPoint([lng, lat, stackedValue]);\n    var dir = vec3.sub([], end, start);\n    vec3.normalize(dir, dir);\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', Vector3.UP.array);\n}\n\nfunction geo3DLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var barSize = seriesModel.get('barSize');\n  var barMinHeight = seriesModel.get('minHeight') || 0;\n  var dims = ['lng', 'lat', 'alt'].map(function (coordDimName) {\n    return seriesModel.coordDimToDataDim(coordDimName)[0];\n  });\n\n  if (barSize == null) {\n    var size = Math.min(coordSys.size[0], coordSys.size[2]);\n    var fillRatio = evaluateBarSparseness(data, dims[0], dims[1]);\n    barSize = [size / Math.sqrt(data.count() / fillRatio), size / Math.sqrt(data.count() / fillRatio)];\n  } else if (!echarts.util.isArray(barSize)) {\n    barSize = [barSize, barSize];\n  }\n\n  var dir = [0, 1, 0];\n  var valueDim = getValueDimension(data, dims);\n  data.each(dims, function (lng, lat, val, idx) {\n    var stackedValue = data.get(valueDim.dimension, idx);\n    var baseValue = valueDim.isStacked ? stackedValue - val : coordSys.altitudeAxis.scale.getExtent()[0];\n    var height = Math.max(coordSys.altitudeAxis.dataToCoord(val), barMinHeight);\n    var start = coordSys.dataToPoint([lng, lat, baseValue]);\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', [1, 0, 0]);\n}\n\nfunction mapService3DLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var dimLng = seriesModel.coordDimToDataDim('lng')[0];\n  var dimLat = seriesModel.coordDimToDataDim('lat')[0];\n  var dimAlt = seriesModel.coordDimToDataDim('alt')[0];\n  var barSize = seriesModel.get('barSize');\n  var barMinHeight = seriesModel.get('minHeight') || 0;\n\n  if (barSize == null) {\n    var xExtent = data.getDataExtent(dimLng);\n    var yExtent = data.getDataExtent(dimLat);\n    var corner0 = coordSys.dataToPoint([xExtent[0], yExtent[0]]);\n    var corner1 = coordSys.dataToPoint([xExtent[1], yExtent[1]]);\n    var size = Math.min(Math.abs(corner0[0] - corner1[0]), Math.abs(corner0[1] - corner1[1])) || 1;\n    var fillRatio = evaluateBarSparseness(data, dimLng, dimLat); // PENDING, data density\n\n    barSize = [size / Math.sqrt(data.count() / fillRatio), size / Math.sqrt(data.count() / fillRatio)];\n  } else {\n    if (!echarts.util.isArray(barSize)) {\n      barSize = [barSize, barSize];\n    }\n\n    barSize[0] /= coordSys.getScale() / 16;\n    barSize[1] /= coordSys.getScale() / 16;\n  }\n\n  var dir = [0, 0, 1];\n  var dims = [dimLng, dimLat, dimAlt];\n  var valueDim = getValueDimension(data, dims);\n  data.each(dims, function (lng, lat, val, idx) {\n    var stackedValue = data.get(valueDim.dimension, idx);\n    var baseValue = valueDim.isStacked ? stackedValue - val : 0;\n    var start = coordSys.dataToPoint([lng, lat, baseValue]);\n    var end = coordSys.dataToPoint([lng, lat, stackedValue]);\n    var height = Math.max(end[2] - start[2], barMinHeight);\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', [1, 0, 0]);\n}\n\nfunction getValueDimension(data, dataDims) {\n  var isStacked = isDimensionStacked(data, dataDims[2]);\n  return {\n    dimension: isStacked ? data.getCalculationInfo('stackResultDimension') : dataDims[2],\n    isStacked: isStacked\n  };\n}\n\nexport default function registerBarLayout(registers) {\n  registers.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('bar3D', function (seriesModel) {\n      var coordSys = seriesModel.coordinateSystem;\n      var coordSysType = coordSys && coordSys.type;\n\n      if (coordSysType === 'globe') {\n        globeLayout(seriesModel, coordSys);\n      } else if (coordSysType === 'cartesian3D') {\n        cartesian3DLayout(seriesModel, coordSys);\n      } else if (coordSysType === 'geo3D') {\n        geo3DLayout(seriesModel, coordSys);\n      } else if (coordSysType === 'mapbox3D' || coordSysType === 'maptalks3D') {\n        mapService3DLayout(seriesModel, coordSys);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!coordSys) {\n            throw new Error('bar3D doesn\\'t have coordinate system.');\n          } else {\n            throw new Error('bar3D doesn\\'t support coordinate system ' + coordSys.type);\n          }\n        }\n      }\n    });\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}