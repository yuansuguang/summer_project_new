{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 编辑模式下显示题目输入框 \"), $data.editMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    model: $data.editedQuestion,\n    \"label-width\": \"120px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"题目\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.editedQuestion.title,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editedQuestion.title = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"选项\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n        modelValue: $data.selectedOption,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedOption = $event)\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.editedQuestion.options, (option, index) => {\n          return _openBlock(), _createBlock(_component_el_radio, {\n            label: index,\n            key: index\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(option), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 预览模式下显示题目 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($data.editedQuestion.title), 1 /* TEXT */), $data.selectedOption !== null ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"已选选项：\" + _toDisplayString($data.editedQuestion.options[$data.selectedOption]), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" 根据编辑权限显示编辑按钮或者保存按钮 \"), $data.isOwner && !$data.editMode ? (_openBlock(), _createBlock(_component_el_button, {\n    key: 2,\n    onClick: $options.toggleEditMode\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"编辑题目\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])) : $data.isOwner && $data.editMode ? (_openBlock(), _createBlock(_component_el_button, {\n    key: 3,\n    onClick: $options.saveQuestion,\n    type: \"primary\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"保存题目\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createCommentVNode","$data","editMode","_hoisted_1","_createVNode","_component_el_form","model","editedQuestion","default","_withCtx","_component_el_form_item","label","_component_el_input","modelValue","title","_cache","$event","_","_component_el_radio_group","selectedOption","_Fragment","_renderList","options","option","index","_createBlock","_component_el_radio","_createTextVNode","_toDisplayString","_createElementVNode","_hoisted_2","isOwner","_component_el_button","onClick","$options","toggleEditMode","saveQuestion","type"],"sources":["E:\\mytest\\src\\views\\qn-createpane\\qn-problemset\\SingleChoice.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 编辑模式下显示题目输入框 -->\r\n    <div v-if=\"editMode\">\r\n      <el-form :model=\"editedQuestion\" label-width=\"120px\">\r\n        <el-form-item label=\"题目\">\r\n          <el-input v-model=\"editedQuestion.title\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"选项\">\r\n          <el-radio-group v-model=\"selectedOption\">\r\n            <el-radio :label=\"index\" v-for=\"(option, index) in editedQuestion.options\" :key=\"index\">\r\n              {{ option }}\r\n            </el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!-- 预览模式下显示题目 -->\r\n    <div v-else>\r\n      <h2>{{ editedQuestion.title }}</h2>\r\n      <p v-if=\"selectedOption !== null\">已选选项：{{ editedQuestion.options[selectedOption] }}</p>\r\n    </div>\r\n\r\n    <!-- 根据编辑权限显示编辑按钮或者保存按钮 -->\r\n    <el-button v-if=\"isOwner && !editMode\" @click=\"toggleEditMode\">编辑题目</el-button>\r\n    <el-button v-else-if=\"isOwner && editMode\" @click=\"saveQuestion\" type=\"primary\">保存题目</el-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      originalQuestion: {\r\n        title: '这是一个单选题的题目',\r\n        options: ['选项1', '选项2', '选项3']\r\n      },\r\n      editedQuestion: {}, // 用于编辑的题目对象\r\n      isOwner: true, // 假设当前用户是发布者\r\n      editMode: false, // 是否处于编辑模式\r\n      selectedOption: null // 已选择的选项索引\r\n    };\r\n  },\r\n  created() {\r\n    // 初始化编辑模式下的题目对象\r\n    this.editedQuestion = { ...this.originalQuestion };\r\n  },\r\n  methods: {\r\n    toggleEditMode() {\r\n      // 切换编辑模式\r\n      this.editMode = !this.editMode;\r\n      // 编辑模式下，将原始题目内容复制到编辑题目对象中\r\n      if (this.editMode) {\r\n        this.editedQuestion = { ...this.originalQuestion };\r\n      }\r\n    },\r\n    saveQuestion() {\r\n      // 保存编辑后的题目内容\r\n      this.originalQuestion = { ...this.editedQuestion };\r\n      this.editMode = false; // 退出编辑模式\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;;;;;;uBACEC,mBAAA,CAyBM,cAxBJC,mBAAA,kBAAqB,EACVC,KAAA,CAAAC,QAAQ,I,cAAnBH,mBAAA,CAaM,OAhBVI,UAAA,GAIMC,YAAA,CAWUC,kBAAA;IAXAC,KAAK,EAAEL,KAAA,CAAAM,cAAc;IAAE,aAAW,EAAC;;IAJnDC,OAAA,EAAAC,QAAA,CAKQ,MAEe,CAFfL,YAAA,CAEeM,uBAAA;MAFDC,KAAK,EAAC;IAAI;MALhCH,OAAA,EAAAC,QAAA,CAMU,MAAoD,CAApDL,YAAA,CAAoDQ,mBAAA;QAN9DC,UAAA,EAM6BZ,KAAA,CAAAM,cAAc,CAACO,KAAK;QANjD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAM6Bf,KAAA,CAAAM,cAAc,CAACO,KAAK,GAAAE,MAAA;;MANjDC,CAAA;QAQQb,YAAA,CAMeM,uBAAA;MANDC,KAAK,EAAC;IAAI;MARhCH,OAAA,EAAAC,QAAA,CASU,MAIiB,CAJjBL,YAAA,CAIiBc,yBAAA;QAb3BL,UAAA,EASmCZ,KAAA,CAAAkB,cAAc;QATjD,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASmCf,KAAA,CAAAkB,cAAc,GAAAH,MAAA;;QATjDR,OAAA,EAAAC,QAAA,CAUqC,MAAiD,E,kBAA1EV,mBAAA,CAEWqB,SAAA,QAZvBC,WAAA,CAU+DpB,KAAA,CAAAM,cAAc,CAACe,OAAO,EAVrF,CAU6CC,MAAM,EAAEC,KAAK;+BAA9CC,YAAA,CAEWC,mBAAA;YAFAf,KAAK,EAAEa,KAAK;YAAqD1B,GAAG,EAAE0B;;YAV7FhB,OAAA,EAAAC,QAAA,CAWc,MAAY,CAX1BkB,gBAAA,CAAAC,gBAAA,CAWiBL,MAAM,iB;YAXvBN,CAAA;;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;mDAkBIlB,mBAAA,CAGMqB,SAAA;IArBVtB,GAAA;EAAA,IAiBIE,mBAAA,eAAkB,EAClB6B,mBAAA,CAGM,cAFJA,mBAAA,CAAmC,YAAAD,gBAAA,CAA5B3B,KAAA,CAAAM,cAAc,CAACO,KAAK,kBAClBb,KAAA,CAAAkB,cAAc,a,cAAvBpB,mBAAA,CAAuF,KApB7F+B,UAAA,EAoBwC,OAAK,GAAAF,gBAAA,CAAG3B,KAAA,CAAAM,cAAc,CAACe,OAAO,CAACrB,KAAA,CAAAkB,cAAc,qBApBrFnB,mBAAA,e,qDAuBIA,mBAAA,wBAA2B,EACVC,KAAA,CAAA8B,OAAO,KAAK9B,KAAA,CAAAC,QAAQ,I,cAArCuB,YAAA,CAA+EO,oBAAA;IAxBnFlC,GAAA;IAwB4CmC,OAAK,EAAEC,QAAA,CAAAC;;IAxBnD3B,OAAA,EAAAC,QAAA,CAwBmE,MAAI,CAxBvEkB,gBAAA,CAwBmE,MAAI,E;IAxBvEV,CAAA;oCAyB0BhB,KAAA,CAAA8B,OAAO,IAAI9B,KAAA,CAAAC,QAAQ,I,cAAzCuB,YAAA,CAAgGO,oBAAA;IAzBpGlC,GAAA;IAyBgDmC,OAAK,EAAEC,QAAA,CAAAE,YAAY;IAAEC,IAAI,EAAC;;IAzB1E7B,OAAA,EAAAC,QAAA,CAyBoF,MAAI,CAzBxFkB,gBAAA,CAyBoF,MAAI,E;IAzBxFV,CAAA;oCAAAjB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}