{"ast":null,"code":"/**\n * echarts-gl\n * Extension pack of ECharts providing 3d plots and globe visualization\n *\n * Copyright (c) 2014, echarts-gl\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport LayerGL from './core/LayerGL';\nimport backwardCompat from './preprocessor/backwardCompat';\nfunction EChartsGL(zr) {\n  this._layers = {};\n  this._zr = zr;\n}\nEChartsGL.prototype.update = function (ecModel, api) {\n  var self = this;\n  var zr = api.getZr();\n  if (!zr.getWidth() || !zr.getHeight()) {\n    console.warn('Dom has no width or height');\n    return;\n  }\n  function getLayerGL(model) {\n    // Disable auto sleep in gl layer.\n    zr.setSleepAfterStill(0);\n    var zlevel; // Host on coordinate system.\n\n    if (model.coordinateSystem && model.coordinateSystem.model) {\n      zlevel = model.get('zlevel');\n    } else {\n      zlevel = model.get('zlevel');\n    }\n    var layers = self._layers;\n    var layerGL = layers[zlevel];\n    if (!layerGL) {\n      layerGL = layers[zlevel] = new LayerGL('gl-' + zlevel, zr);\n      if (zr.painter.isSingleCanvas()) {\n        layerGL.virtual = true; // If container is canvas, use image to represent LayerGL\n        // FIXME Performance\n\n        var img = new echarts.graphic.Image({\n          z: 1e4,\n          style: {\n            image: layerGL.renderer.canvas\n          },\n          silent: true\n        });\n        layerGL.__hostImage = img;\n        zr.add(img);\n      }\n      zr.painter.insertLayer(zlevel, layerGL);\n    }\n    if (layerGL.__hostImage) {\n      layerGL.__hostImage.setStyle({\n        width: layerGL.renderer.getWidth(),\n        height: layerGL.renderer.getHeight()\n      });\n    }\n    return layerGL;\n  }\n  function setSilent(groupGL, silent) {\n    if (groupGL) {\n      groupGL.traverse(function (mesh) {\n        if (mesh.isRenderable && mesh.isRenderable()) {\n          mesh.ignorePicking = mesh.$ignorePicking != null ? mesh.$ignorePicking : silent;\n        }\n      });\n    }\n  }\n  for (var zlevel in this._layers) {\n    this._layers[zlevel].removeViewsAll();\n  }\n  ecModel.eachComponent(function (componentType, componentModel) {\n    if (componentType !== 'series') {\n      var view = api.getViewOfComponentModel(componentModel);\n      var coordSys = componentModel.coordinateSystem; // View with __ecgl__ flag is a echarts-gl component.\n\n      if (view.__ecgl__) {\n        var viewGL;\n        if (coordSys) {\n          if (!coordSys.viewGL) {\n            console.error('Can\\'t find viewGL in coordinateSystem of component ' + componentModel.id);\n            return;\n          }\n          viewGL = coordSys.viewGL;\n        } else {\n          if (!componentModel.viewGL) {\n            console.error('Can\\'t find viewGL of component ' + componentModel.id);\n            return;\n          }\n          viewGL = coordSys.viewGL;\n        }\n        var viewGL = coordSys.viewGL;\n        var layerGL = getLayerGL(componentModel);\n        layerGL.addView(viewGL);\n        view.afterRender && view.afterRender(componentModel, ecModel, api, layerGL);\n        setSilent(view.groupGL, componentModel.get('silent'));\n      }\n    }\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = api.getViewOfSeriesModel(seriesModel);\n    var coordSys = seriesModel.coordinateSystem;\n    if (chartView.__ecgl__) {\n      if (coordSys && !coordSys.viewGL && !chartView.viewGL) {\n        console.error('Can\\'t find viewGL of series ' + chartView.id);\n        return;\n      }\n      var viewGL = coordSys && coordSys.viewGL || chartView.viewGL; // TODO Check zlevel not same with component of coordinate system ?\n\n      var layerGL = getLayerGL(seriesModel);\n      layerGL.addView(viewGL);\n      chartView.afterRender && chartView.afterRender(seriesModel, ecModel, api, layerGL);\n      setSilent(chartView.groupGL, seriesModel.get('silent'));\n    }\n  });\n}; // Hack original getRenderedCanvas. Will removed after new echarts released\n// TODO\n\necharts.registerPostInit(function (chart) {\n  var zr = chart.getZr();\n  var oldDispose = zr.painter.dispose;\n  zr.painter.dispose = function () {\n    if (typeof this.eachOtherLayer === 'function') {\n      this.eachOtherLayer(function (layer) {\n        if (layer instanceof LayerGL) {\n          layer.dispose();\n        }\n      });\n    }\n    oldDispose.call(this);\n  };\n  zr.painter.getRenderedCanvas = function (opts) {\n    opts = opts || {};\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n    var canvas = document.createElement('canvas');\n    var dpr = opts.pixelRatio || this.dpr;\n    canvas.width = this.getWidth() * dpr;\n    canvas.height = this.getHeight() * dpr;\n    var ctx = canvas.getContext('2d');\n    ctx.dpr = dpr;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (opts.backgroundColor) {\n      ctx.fillStyle = opts.backgroundColor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n      var intermediateLayer;\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        ctx.save();\n        intermediateLayer.renderToCanvas(ctx);\n        ctx.restore();\n      }\n    }\n    var layer = {\n      ctx: ctx\n    };\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n      this._doPaintEl(el, layer, true, null, scope);\n    }\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return canvas;\n  };\n});\necharts.registerPostUpdate(function (ecModel, api) {\n  var zr = api.getZr();\n  var egl = zr.__egl = zr.__egl || new EChartsGL(zr);\n  egl.update(ecModel, api);\n});\necharts.registerPreprocessor(backwardCompat);\nexport default EChartsGL;","map":{"version":3,"names":["echarts","LayerGL","backwardCompat","EChartsGL","zr","_layers","_zr","prototype","update","ecModel","api","self","getZr","getWidth","getHeight","console","warn","getLayerGL","model","setSleepAfterStill","zlevel","coordinateSystem","get","layers","layerGL","painter","isSingleCanvas","virtual","img","graphic","Image","z","style","image","renderer","canvas","silent","__hostImage","add","insertLayer","setStyle","width","height","setSilent","groupGL","traverse","mesh","isRenderable","ignorePicking","$ignorePicking","removeViewsAll","eachComponent","componentType","componentModel","view","getViewOfComponentModel","coordSys","__ecgl__","viewGL","error","id","addView","afterRender","eachSeries","seriesModel","chartView","getViewOfSeriesModel","registerPostInit","chart","oldDispose","dispose","eachOtherLayer","layer","call","getRenderedCanvas","opts","_singleCanvas","dom","document","createElement","dpr","pixelRatio","ctx","getContext","clearRect","backgroundColor","fillStyle","fillRect","displayList","storage","getDisplayList","scope","findAndDrawOtherLayer","smaller","larger","zlevelList","_zlevelList","Infinity","intermediateLayer","i","length","__builtin__","renderToCanvas","save","restore","el","_doPaintEl","registerPostUpdate","egl","__egl","registerPreprocessor"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/echarts-gl.js"],"sourcesContent":["/**\n * echarts-gl\n * Extension pack of ECharts providing 3d plots and globe visualization\n *\n * Copyright (c) 2014, echarts-gl\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport LayerGL from './core/LayerGL';\nimport backwardCompat from './preprocessor/backwardCompat';\n\nfunction EChartsGL(zr) {\n  this._layers = {};\n  this._zr = zr;\n}\n\nEChartsGL.prototype.update = function (ecModel, api) {\n  var self = this;\n  var zr = api.getZr();\n\n  if (!zr.getWidth() || !zr.getHeight()) {\n    console.warn('Dom has no width or height');\n    return;\n  }\n\n  function getLayerGL(model) {\n    // Disable auto sleep in gl layer.\n    zr.setSleepAfterStill(0);\n    var zlevel; // Host on coordinate system.\n\n    if (model.coordinateSystem && model.coordinateSystem.model) {\n      zlevel = model.get('zlevel');\n    } else {\n      zlevel = model.get('zlevel');\n    }\n\n    var layers = self._layers;\n    var layerGL = layers[zlevel];\n\n    if (!layerGL) {\n      layerGL = layers[zlevel] = new LayerGL('gl-' + zlevel, zr);\n\n      if (zr.painter.isSingleCanvas()) {\n        layerGL.virtual = true; // If container is canvas, use image to represent LayerGL\n        // FIXME Performance\n\n        var img = new echarts.graphic.Image({\n          z: 1e4,\n          style: {\n            image: layerGL.renderer.canvas\n          },\n          silent: true\n        });\n        layerGL.__hostImage = img;\n        zr.add(img);\n      }\n\n      zr.painter.insertLayer(zlevel, layerGL);\n    }\n\n    if (layerGL.__hostImage) {\n      layerGL.__hostImage.setStyle({\n        width: layerGL.renderer.getWidth(),\n        height: layerGL.renderer.getHeight()\n      });\n    }\n\n    return layerGL;\n  }\n\n  function setSilent(groupGL, silent) {\n    if (groupGL) {\n      groupGL.traverse(function (mesh) {\n        if (mesh.isRenderable && mesh.isRenderable()) {\n          mesh.ignorePicking = mesh.$ignorePicking != null ? mesh.$ignorePicking : silent;\n        }\n      });\n    }\n  }\n\n  for (var zlevel in this._layers) {\n    this._layers[zlevel].removeViewsAll();\n  }\n\n  ecModel.eachComponent(function (componentType, componentModel) {\n    if (componentType !== 'series') {\n      var view = api.getViewOfComponentModel(componentModel);\n      var coordSys = componentModel.coordinateSystem; // View with __ecgl__ flag is a echarts-gl component.\n\n      if (view.__ecgl__) {\n        var viewGL;\n\n        if (coordSys) {\n          if (!coordSys.viewGL) {\n            console.error('Can\\'t find viewGL in coordinateSystem of component ' + componentModel.id);\n            return;\n          }\n\n          viewGL = coordSys.viewGL;\n        } else {\n          if (!componentModel.viewGL) {\n            console.error('Can\\'t find viewGL of component ' + componentModel.id);\n            return;\n          }\n\n          viewGL = coordSys.viewGL;\n        }\n\n        var viewGL = coordSys.viewGL;\n        var layerGL = getLayerGL(componentModel);\n        layerGL.addView(viewGL);\n        view.afterRender && view.afterRender(componentModel, ecModel, api, layerGL);\n        setSilent(view.groupGL, componentModel.get('silent'));\n      }\n    }\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = api.getViewOfSeriesModel(seriesModel);\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (chartView.__ecgl__) {\n      if (coordSys && !coordSys.viewGL && !chartView.viewGL) {\n        console.error('Can\\'t find viewGL of series ' + chartView.id);\n        return;\n      }\n\n      var viewGL = coordSys && coordSys.viewGL || chartView.viewGL; // TODO Check zlevel not same with component of coordinate system ?\n\n      var layerGL = getLayerGL(seriesModel);\n      layerGL.addView(viewGL);\n      chartView.afterRender && chartView.afterRender(seriesModel, ecModel, api, layerGL);\n      setSilent(chartView.groupGL, seriesModel.get('silent'));\n    }\n  });\n}; // Hack original getRenderedCanvas. Will removed after new echarts released\n// TODO\n\n\necharts.registerPostInit(function (chart) {\n  var zr = chart.getZr();\n  var oldDispose = zr.painter.dispose;\n\n  zr.painter.dispose = function () {\n    if (typeof this.eachOtherLayer === 'function') {\n      this.eachOtherLayer(function (layer) {\n        if (layer instanceof LayerGL) {\n          layer.dispose();\n        }\n      });\n    }\n\n    oldDispose.call(this);\n  };\n\n  zr.painter.getRenderedCanvas = function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var canvas = document.createElement('canvas');\n    var dpr = opts.pixelRatio || this.dpr;\n    canvas.width = this.getWidth() * dpr;\n    canvas.height = this.getHeight() * dpr;\n    var ctx = canvas.getContext('2d');\n    ctx.dpr = dpr;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (opts.backgroundColor) {\n      ctx.fillStyle = opts.backgroundColor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        ctx.save();\n        intermediateLayer.renderToCanvas(ctx);\n        ctx.restore();\n      }\n    }\n\n    var layer = {\n      ctx: ctx\n    };\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, layer, true, null, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return canvas;\n  };\n});\necharts.registerPostUpdate(function (ecModel, api) {\n  var zr = api.getZr();\n  var egl = zr.__egl = zr.__egl || new EChartsGL(zr);\n  egl.update(ecModel, api);\n});\necharts.registerPreprocessor(backwardCompat);\nexport default EChartsGL;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}