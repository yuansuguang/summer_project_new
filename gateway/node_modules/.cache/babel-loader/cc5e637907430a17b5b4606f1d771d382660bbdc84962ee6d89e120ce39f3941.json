{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, mergeProps as _mergeProps, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7a88a63c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"form\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"问卷题目\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"题目\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"个人信息\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"问卷标题：\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"mt-4\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"问卷简介：\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"mt-4\"\n};\nconst _hoisted_9 = {\n  class: \"ques\"\n};\nconst _hoisted_10 = {\n  class: \"title\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"description\"\n};\nconst _hoisted_12 = {\n  class: \"content\"\n};\nconst _hoisted_13 = {\n  class: \"block-title\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"must\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"block-info\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"block-choice\"\n};\nconst _hoisted_17 = {\n  style: {\n    \"padding-bottom\": \"10px\"\n  }\n};\nconst _hoisted_18 = {\n  key: 2,\n  class: \"block-description\"\n};\nconst _hoisted_19 = {\n  key: 3,\n  style: {\n    \"color\": \"#9b9ea0\",\n    \"font-size\": \"x-small\"\n  }\n};\nconst _hoisted_20 = [\"src\"];\nconst _hoisted_21 = {\n  key: 0,\n  style: {\n    \"color\": \"#aaaaaa\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"15px\"\n  }\n};\nconst _hoisted_22 = {\n  key: 0,\n  style: {\n    \"color\": \"#aaaaaa\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"15px\"\n  }\n};\nconst _hoisted_23 = {\n  key: 4,\n  class: \"block-choice\"\n};\nconst _hoisted_24 = {\n  key: 5,\n  class: \"block-relation\"\n};\nconst _hoisted_25 = {\n  key: 0,\n  class: \"is-info\"\n};\nconst _hoisted_26 = {\n  key: 1,\n  class: \"non-pre\"\n};\nconst _hoisted_27 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"el-upload__tip\"\n}, \" 只能上传jpg/png文件，且不超过5mb\", -1 /* HOISTED */));\nconst _hoisted_28 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"el-upload__tip\"\n}, \" 只能上传mp4/mkv文件，且不超过10mb\", -1 /* HOISTED */));\nconst _hoisted_29 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_30 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"qrcode_2\",\n  style: {\n    \"height\": \"200px\",\n    \"width\": \"200px\",\n    \"margin-left\": \"22px\"\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_31 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"链接与二维码\", -1 /* HOISTED */));\nconst _hoisted_32 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_33 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_34 = {\n  class: \"logic-title\"\n};\nconst _hoisted_35 = {\n  key: 1,\n  class: \"logic-info\"\n};\nconst _hoisted_36 = {\n  style: {\n    \"color\": \"#1687fd\"\n  }\n};\nconst _hoisted_37 = {\n  style: {\n    \"color\": \"#1687fd\"\n  }\n};\nconst _hoisted_38 = {\n  key: 2,\n  class: \"logic-info\"\n};\nconst _hoisted_39 = {\n  class: \"logic-bt\"\n};\nconst _hoisted_40 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"logic-description\"\n}, \" 题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】 \", -1 /* HOISTED */));\nconst _hoisted_41 = {\n  key: 0,\n  class: \"logic-description important\"\n};\nconst _hoisted_42 = {\n  class: \"setting-bt\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Edit = _resolveComponent(\"Edit\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_menu_item_group = _resolveComponent(\"el-menu-item-group\");\n  const _component_el_sub_menu = _resolveComponent(\"el-sub-menu\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_Link = _resolveComponent(\"Link\");\n  const _component_setting = _resolveComponent(\"setting\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_rate = _resolveComponent(\"el-rate\");\n  const _component_EditPen = _resolveComponent(\"EditPen\");\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  const _component_DocumentCopy = _resolveComponent(\"DocumentCopy\");\n  const _component_Delete = _resolveComponent(\"Delete\");\n  const _component_ArrowUp = _resolveComponent(\"ArrowUp\");\n  const _component_ArrowDown = _resolveComponent(\"ArrowDown\");\n  const _component_el_button_group = _resolveComponent(\"el-button-group\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"qnBoard\",\n    style: _normalizeStyle({\n      boxShadow: `var(--el-box-shadow-light)`\n    })\n  }, [_createCommentVNode(\" <el-tabs :tab-position=\\\"'left'\\\" style=\\\"height: 700px;\\\" type=\\\"border-card\\\" class=\\\"demo-tabs\\\" stretch=\\\"true\\\">\\r\\n            <el-tab-pane style=\\\"padding: 140px\\\">\\r\\n                <template #label>\\r\\n                    <span class=\\\"custom-tabs-label\\\">\\r\\n                        <el-icon>\\r\\n                            <Edit />\\r\\n                        </el-icon>\\r\\n                        <span>Edit</span>\\r\\n                    </span>\\r\\n                </template>\\r\\n\\r\\n</el-tab-pane>\\r\\n<el-tab-pane label=\\\"Config\\\">Config</el-tab-pane>\\r\\n<el-tab-pane label=\\\"Role\\\">Role</el-tab-pane>\\r\\n<el-tab-pane label=\\\"Task\\\">Task</el-tab-pane>\\r\\n</el-tabs> \"), _createVNode(_component_el_tabs, {\n    type: \"card\",\n    stretch: \"true\",\n    class: \"qn-tabs\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"编辑问卷\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_menu, {\n        class: \"el-menu-vertical-demo\",\n        style: {\n          \"position\": \"relative\",\n          \"width\": \"190px\"\n        }\n      }, {\n        title: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Edit)]),\n          _: 1 /* STABLE */\n        }), _hoisted_2]),\n        default: _withCtx(() => [_createVNode(_component_el_menu_item_group, null, {\n          title: _withCtx(() => [_hoisted_3]),\n          default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n            onClick: _cache[0] || (_cache[0] = $event => {\n              $data.willAddQuestion.type = 'radio';\n              $data.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"单选题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, {\n            onClick: _cache[1] || (_cache[1] = $event => {\n              $data.willAddQuestion.type = 'checkbox';\n              $data.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"多选题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, {\n            onClick: _cache[2] || (_cache[2] = $event => {\n              $data.willAddQuestion.type = 'text';\n              $data.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"填空题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, {\n            onClick: _cache[3] || (_cache[3] = $event => {\n              $data.willAddQuestion.type = 'mark';\n              $data.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"评分题\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item_group, {\n          title: \"预设题目\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_sub_menu, null, {\n            title: _withCtx(() => [_hoisted_4]),\n            default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n              onClick: $options.addName\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"姓名\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_menu_item, {\n              onClick: $options.addStuID\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"学号\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_menu_item, {\n              onClick: $options.addPhone\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"电话号码\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"问卷相关\"\n    }, {\n      default: _withCtx(() => [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_input, {\n        modelValue: $data.input3,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.input3 = $event),\n        style: {\n          \"max-width\": \"600px\"\n        },\n        placeholder: \"标题\",\n        class: \"input-with-select\"\n      }, {\n        append: _withCtx(() => [_createVNode(_component_el_button, {\n          onClick: _cache[4] || (_cache[4] = $event => $options.changeTitle($data.input3))\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"设置\")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]), _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_input, {\n        modelValue: $data.input2,\n        \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.input2 = $event),\n        style: {\n          \"max-width\": \"600px\"\n        },\n        placeholder: \"简介\",\n        class: \"input-with-select\"\n      }, {\n        append: _withCtx(() => [_createVNode(_component_el_button, {\n          onClick: _cache[6] || (_cache[6] = $event => $options.changeDescription($data.input2))\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"设置\")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]), _createVNode(_component_el_menu, {\n        class: \"el-menu-vertical-demo\",\n        style: {\n          \"position\": \"relative\",\n          \"width\": \"190.5px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_menu_item, null, {\n          title: _withCtx(() => [_createTextVNode(\"问卷逻辑\")]),\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode(_component_Link)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item, {\n          onClick: _cache[8] || (_cache[8] = $event => this.settingDialogVisible = true)\n        }, {\n          title: _withCtx(() => [_createTextVNode(\"问卷设置\")]),\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode(_component_setting)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })], 4 /* STYLE */), _createVNode(_component_el_container, null, {\n    default: _withCtx(() => [_createVNode(_component_el_main, {\n      class: \"qnMain\",\n      style: _normalizeStyle({\n        boxShadow: `var(--el-box-shadow-light)`,\n        borderRadius: `var(--el-border-radius-round)`\n      })\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString($data.title), 1 /* TEXT */), this.description !== '' && this.description !== null && this.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"   \" + _toDisplayString($data.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, item => {\n        return _openBlock(), _createBlock(_component_el_row, {\n          class: \"ques-block\",\n          key: item.id,\n          onMouseover: $event => $data.hoverItem = item.id,\n          style: _normalizeStyle({\n            borderRadius: `var(--el-border-radius-round)`\n          })\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 16,\n            class: \"block-content\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_13, [_createTextVNode(_toDisplayString(item.id) + \". \" + _toDisplayString(item.title) + \" \", 1 /* TEXT */), item.must ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, \"(必填)\")) : _createCommentVNode(\"v-if\", true)]), item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school' || item.type === 'phone' || item.type === 'email' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createVNode(_component_el_input, {\n              placeholder: \"请输入内容\",\n              style: {\n                \"margin-left\": \"10px\"\n              }\n            })])) : _createCommentVNode(\"v-if\", true), item.type === 'sex' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createVNode(_component_el_radio, {\n              value: \"0\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"男\")]),\n              _: 1 /* STABLE */\n            })]), _createElementVNode(\"div\", null, [_createVNode(_component_el_radio, {\n              value: \"0\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"女\")]),\n              _: 1 /* STABLE */\n            })])])) : _createCommentVNode(\"v-if\", true), item.description !== '' && item.description !== null && item.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, _toDisplayString(item.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  图片\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.imgList, (i, index) => {\n              return _openBlock(), _createBlock(_component_el_row, {\n                class: \"block-img\",\n                key: i.index\n              }, {\n                default: _withCtx(() => [index % 2 === 0 ? (_openBlock(), _createBlock(_component_el_col, {\n                  key: 0,\n                  offset: 2,\n                  span: 10,\n                  class: \"demo-image__preview\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_image, {\n                    style: {\n                      \"width\": \"200px\",\n                      \"height\": \"200px\"\n                    },\n                    src: i.url,\n                    \"preview-src-list\": [i.url]\n                  }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), index % 2 === 0 && index + 1 <= item.imgList.length - 1 ? (_openBlock(), _createBlock(_component_el_col, {\n                  key: 1,\n                  span: 10,\n                  class: \"demo-image__preview\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_image, {\n                    style: {\n                      \"width\": \"200px\",\n                      \"height\": \"200px\"\n                    },\n                    src: item.imgList[index + 1].url,\n                    \"preview-src-list\": [item.imgList[index + 1].url]\n                  }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 128 /* KEYED_FRAGMENT */)), item.imgList.length !== 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_19, \"（点击图片查看大图）\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                视频\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.videoList, i => {\n              return _openBlock(), _createBlock(_component_el_row, {\n                class: \"block-img\",\n                key: i.index\n              }, {\n                default: _withCtx(() => [_createElementVNode(\"embed\", {\n                  width: \"400\",\n                  height: \"230\",\n                  transparentatstart: \"true\",\n                  animationatstart: \"false\",\n                  autostart: \"true\",\n                  autosize: \"false\",\n                  volume: \"100\",\n                  displaysize: \"0\",\n                  showdisplay: \"true\",\n                  showstatusbar: \"true\",\n                  showcontrols: \"true\",\n                  showaudiocontrols: \"true\",\n                  showtracker: \"true\",\n                  showpositioncontrols: \"true\",\n                  balance: \"true\",\n                  src: i.url\n                }, null, 8 /* PROPS */, _hoisted_20)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.options, ans => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                class: \"block-choice\",\n                key: ans.id\n              }, [_createCommentVNode(\"                  单选\"), item.type === 'radio' ? (_openBlock(), _createBlock(_component_el_radio, {\n                key: 0,\n                value: \"0\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(ans.title), 1 /* TEXT */), ans.hasNumLimit ? (_openBlock(), _createElementBlock(\"span\", _hoisted_21, \"剩余\" + _toDisplayString(ans.supply - ans.consume) + \" 总计\" + _toDisplayString(ans.supply), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  多选\"), item.type === 'checkbox' ? (_openBlock(), _createBlock(_component_el_checkbox, {\n                key: 1,\n                value: \"0\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(ans.title) + \" \", 1 /* TEXT */), ans.hasNumLimit ? (_openBlock(), _createElementBlock(\"span\", _hoisted_22, \"剩余\" + _toDisplayString(ans.supply - ans.consume) + \" 总计\" + _toDisplayString(ans.supply), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  填空\"), item.type === 'text' && item.row > 1 ? (_openBlock(), _createBlock(_component_el_input, _mergeProps({\n                key: 2,\n                type: \"textarea\",\n                placeholder: \"请输入内容\",\n                ref_for: true\n              }, ans.title), null, 16 /* FULL_PROPS */)) : _createCommentVNode(\"v-if\", true), item.type === 'text' && item.row === 1 ? (_openBlock(), _createBlock(_component_el_input, _mergeProps({\n                key: 3,\n                placeholder: \"请输入内容\",\n                ref_for: true\n              }, ans.title), null, 16 /* FULL_PROPS */)) : _createCommentVNode(\"v-if\", true)]);\n            }), 128 /* KEYED_FRAGMENT */)), item.type === 'mark' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createCommentVNode(\"                  评分\"), _createVNode(_component_el_rate, {\n              value: \"0\",\n              max: item.score\n            }, null, 8 /* PROPS */, [\"max\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                 关联信息\"), $data.isLogic && item.last_question !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createElementVNode(\"div\", null, _toDisplayString($options.relatedQs(item)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), $data.hoverItem === item.id ? (_openBlock(), _createBlock(_component_el_col, {\n            key: 0,\n            span: 8,\n            class: \"block-button\",\n            style: {\n              \"text-align\": \"right\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button_group, null, {\n              default: _withCtx(() => [_createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"编辑\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.edit(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_EditPen)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), $data.isLogic ? (_openBlock(), _createBlock(_component_el_tooltip, {\n                key: 0,\n                class: \"item\",\n                effect: \"light\",\n                content: \"添加关联逻辑\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.logic(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_Link)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"复制\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.copy(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_DocumentCopy)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"删除\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.del_pre(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_Delete)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"上移\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.up(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_ArrowUp)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"下移\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.down(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_ArrowDown)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onMouseover\", \"style\"]);\n      }), 128 /* KEYED_FRAGMENT */))])])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"style\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_dialog, {\n    title: $data.qsEditDialogTitle,\n    modelValue: $data.qsEditDialogVisible,\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.qsEditDialogVisible = $event),\n    \"before-close\": $options.cancel_pre,\n    class: \"dialog\",\n    width: \"1100px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"form\",\n      model: $data.willAddQuestion,\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"题目类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          disabled: $data.selectDisAble,\n          modelValue: $data.willAddQuestion.type,\n          \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.willAddQuestion.type = $event),\n          placeholder: \"请选择题目类型\",\n          onChange: $options.typeChange\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allType, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.value,\n              label: item.label,\n              value: item.value\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"disabled\", \"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), $data.willAddQuestion.type === 'name' || $data.willAddQuestion.type === 'stuId' || $data.willAddQuestion.type === 'class' || $data.willAddQuestion.type === 'school' || $data.willAddQuestion.type === 'phone' || $data.willAddQuestion.type === 'email' || $data.willAddQuestion.type === 'sex' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [$data.willAddQuestion.type === 'name' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"姓名\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'stuId' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 1,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"学号\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'school' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"学校\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'sex' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 3,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"性别\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'phone' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 4,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"手机号\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'email' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 5,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"邮箱\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"是否必填\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          modelValue: $data.willAddQuestion.must,\n          \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.willAddQuestion.must = $event)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"必填\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_createVNode(_component_el_form_item, {\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.willAddQuestion.title,\n          \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.willAddQuestion.title = $event),\n          placeholder: \"请输入标题\",\n          style: {\n            \"width\": \"800px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"题目描述\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.willAddQuestion.description,\n          \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.willAddQuestion.description = $event),\n          placeholder: \"请输入题目描述\",\n          style: {\n            \"width\": \"800px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"是否必填\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          modelValue: $data.willAddQuestion.must,\n          \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.willAddQuestion.must = $event)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"必填\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), $data.willAddQuestion.type === 'radio' || $data.willAddQuestion.type === 'checkbox' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.willAddQuestion.options, (item, index) => {\n        return _openBlock(), _createBlock(_component_el_form_item, {\n          label: '选项' + (index + 1),\n          key: index\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_row, null, {\n            default: _withCtx(() => [_createVNode(_component_el_col, {\n              span: 12\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_input, {\n                modelValue: item.title,\n                \"onUpdate:modelValue\": $event => item.title = $event,\n                placeholder: \"请输入选项名\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_col, {\n              span: 12\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_button, {\n                type: \"danger\",\n                plain: \"\",\n                class: \"deleteOptionButton\",\n                onClick: $event => $options.deleteOption(index)\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"删除选项\")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), !item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 0,\n                type: \"success\",\n                plain: \"\",\n                style: {\n                  \"margin-right\": \"8px\"\n                },\n                onClick: $event => item.hasNumLimit = true\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"添加库存限制\")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 1,\n                type: \"info\",\n                plain: \"\",\n                style: {\n                  \"margin-right\": \"8px\"\n                },\n                onClick: $event => item.hasNumLimit = false\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"取消库存限制\")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_input_number, {\n                key: 2,\n                modelValue: item.supply,\n                \"onUpdate:modelValue\": $event => item.supply = $event\n              }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n      }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_el_button, {\n        type: \"primary\",\n        plain: \"\",\n        class: \"addOptionButton\",\n        onClick: $options.addOption\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"新增选项\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'text' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createVNode(_component_el_form_item, {\n        label: \"填空\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"textarea\",\n          class: \"my-input\",\n          rows: $data.willAddQuestion.row,\n          resize: \"none\"\n        }, null, 8 /* PROPS */, [\"rows\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"行数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $data.willAddQuestion.row,\n          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.willAddQuestion.row = $event),\n          min: 1,\n          max: 10\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'mark' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"最大分数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $data.willAddQuestion.score,\n          \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.willAddQuestion.score = $event),\n          min: 3,\n          max: 10\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"上传图片\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          class: \"upload-img\",\n          action: _ctx.uploadImgUrl,\n          multiple: \"\",\n          \"http-request\": $options.upLoadImage,\n          \"before-upload\": $options.beforeImageUpload,\n          \"file-list\": $data.willAddQuestion.imgList,\n          limit: 6\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            plain: \"\",\n            style: {\n              \"width\": \"100px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1 /* STABLE */\n          }), _hoisted_27]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"action\", \"http-request\", \"before-upload\", \"file-list\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"上传视频\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          class: \"upload-video\",\n          action: _ctx.uploadVideoUrl,\n          \"http-request\": $options.upLoadVideo,\n          \"before-upload\": $options.beforeVideoUpload,\n          \"file-list\": $data.willAddQuestion.videoList,\n          limit: 1\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            plain: \"\",\n            style: {\n              \"width\": \"100px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1 /* STABLE */\n          }), _hoisted_28]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"action\", \"http-request\", \"before-upload\", \"file-list\"])]),\n        _: 1 /* STABLE */\n      })]))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"]), _createElementVNode(\"span\", _hoisted_29, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"primary\",\n        onClick: $options.dialogConfirm\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"确定\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createTextVNode(\"   \"), _createVNode(_component_el_button, {\n        span: 6,\n        onClick: $options.cancel_pre\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"取消\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\", \"before-close\"]), _createVNode(_component_el_dialog, {\n    modelValue: $data.qsLinkDialogVisible,\n    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $data.qsLinkDialogVisible = $event),\n    title: $data.qsLinkDialogTitle,\n    class: \"linkDialog\",\n    \"show-close\": false,\n    width: \"800px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: \"8\",\n        style: {\n          \"text-align\": \"center\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_hoisted_30]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: \"16\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_hoisted_31]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, {\n          style: {\n            \"margin-top\": \"15px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 16,\n            style: {\n              \"margin-right\": \"5px\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              placeholder: $data.linkShare,\n              modelValue: $data.linkShare,\n              \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.linkShare = $event),\n              id: \"copyText\",\n              disabled: true\n            }, null, 8 /* PROPS */, [\"placeholder\", \"modelValue\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_button, {\n            type: \"info\",\n            plain: \"\",\n            id: \"copyBtn\",\n            onClick: $options.copyToClip\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"复制链接\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, {\n          style: {\n            \"margin-top\": \"25px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            plain: \"\",\n            onClick: _ctx.downloadQrcode\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"下载二维码\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $options.genCodeAgain,\n            style: {\n              \"margin-left\": \"30px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"重新生成链接\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"span\", _hoisted_32, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"success\",\n        style: {\n          \"width\": \"80px\"\n        },\n        onClick: $options.finish\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"完 成\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"title\"]), _createVNode(_component_el_dialog, {\n    modelValue: $data.editWrongMsgVisible,\n    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => $data.editWrongMsgVisible = $event),\n    class: \"linkDialog\",\n    \"show-close\": false,\n    \"close-on-click-modal\": false,\n    width: \"300px\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString($data.editWrongMsg), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_33, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"danger\",\n        style: {\n          \"width\": \"80px\"\n        },\n        onClick: _cache[19] || (_cache[19] = $event => $data.editWrongMsgVisible = false)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"知道了\")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\"    关联问题弹框\"), _createVNode(_component_el_dialog, {\n    title: $data.qsLogicDialogTitle,\n    modelValue: $data.qsLogicDialogVisible,\n    \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => $data.qsLogicDialogVisible = $event),\n    \"before-close\": $options.cancel_pre_logic,\n    class: \"dialog\"\n  }, {\n    default: _withCtx(() => [$data.questions.length !== 0 ? (_openBlock(), _createBlock(_component_el_form, {\n      key: 0,\n      class: \"logic-form\",\n      ref: \"form\",\n      \"label-width\": \"80px\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_34, \" 当前题目：\" + _toDisplayString($data.questions[$data.logicIndex].id) + \". \" + _toDisplayString($data.questions[$data.logicIndex].title), 1 /* TEXT */), _createVNode(_component_el_form_item, {\n        label: \"关联题目\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.willAddLogic.question_id,\n          \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => $data.willAddLogic.question_id = $event),\n          placeholder: \"请选择关联题目\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.questionsFilter, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: $options.idTitle(item),\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), $data.willAddLogic.question_id !== 0 ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"关联选项\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.willAddLogic.option_id,\n          \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => $data.willAddLogic.option_id = $event),\n          placeholder: \"请选择关联选项\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions[$data.willAddLogic.question_id - 1].options, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: item.title,\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddLogic.question_id !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, [_createCommentVNode(\"          保存加入后选项id记得减一\"), _createTextVNode(\" 当题目\"), _createElementVNode(\"span\", _hoisted_36, \" \\\"\" + _toDisplayString($options.idTitle($data.questions[$data.willAddLogic.question_id - 1])) + \"\\\" \", 1 /* TEXT */), _createTextVNode(\"选择选项\"), _createElementVNode(\"span\", _hoisted_37, \" \\\"\" + _toDisplayString($data.questions[$data.willAddLogic.question_id - 1].options[$data.willAddLogic.option_id - 1].title) + \"\\\" \", 1 /* TEXT */), _createTextVNode(\"时此题才会显示 \")])) : _createCommentVNode(\"v-if\", true), $options.questionsFilter.length === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, \" 题目之前不存在单（多）选题，无法设置关联题目 \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_39, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[23] || (_cache[23] = $event => $options.logicConfirm($data.logicIndex))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"确定\")]),\n        _: 1 /* STABLE */\n      })])]),\n      _: 1 /* STABLE */\n    }, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\", \"before-close\"]), _createVNode(_component_el_dialog, {\n    title: $data.settingDialogTitle,\n    modelValue: $data.settingDialogVisible,\n    \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => $data.settingDialogVisible = $event),\n    class: \"settingDialog\",\n    width: \"30%\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, null, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        class: \"timeBlock\",\n        label: \"截止时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n          style: {\n            \"margin-left\": \"100px\"\n          },\n          modelValue: $data.timeFrame,\n          \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => $data.timeFrame = $event),\n          onChange: $options.formatTime,\n          type: \"datetime\",\n          \"value-format\": \"yyyy-MM-dd HH:mm\",\n          placeholder: \"选择结束时间\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"是否限制回收量\",\n        class: \"recycleBlock\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_switch, {\n            modelValue: $data.hasRecycleLimit,\n            \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => $data.hasRecycleLimit = $event),\n            \"active-color\": \"#13ce66\",\n            \"inactive-color\": \"grey\",\n            \"active-text\": \"是\",\n            \"inactive-text\": \"否\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, null, {\n          default: _withCtx(() => [$data.hasRecycleLimit ? (_openBlock(), _createBlock(_component_el_input_number, {\n            key: 0,\n            modelValue: $data.max_recycling,\n            \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => $data.max_recycling = $event),\n            min: 1,\n            style: {\n              \"margin-left\": \"120px\",\n              \"height\": \"40px\",\n              \"margin-top\": \"10px\"\n            }\n          }, null, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"题目关联逻辑开关\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_switch, {\n          modelValue: $data.isLogic,\n          \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => $data.isLogic = $event),\n          \"active-text\": \"开\",\n          \"inactive-text\": \"关\",\n          onChange: $options.closeGlobalLogic\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _hoisted_40, $data.isLogic ? (_openBlock(), _createElementBlock(\"div\", _hoisted_41, \" 为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑 \")) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_42, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.settingSuccess\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"完成\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","style","id","_createElementBlock","_hoisted_1","_normalizeStyle","_createCommentVNode","_createVNode","_component_el_tabs","type","stretch","default","_withCtx","_component_el_tab_pane","label","_component_el_menu","title","_component_el_icon","_component_Edit","_","_hoisted_2","_component_el_menu_item_group","_hoisted_3","_component_el_menu_item","onClick","_cache","$event","$data","willAddQuestion","qsEditDialogVisible","_createTextVNode","_component_el_sub_menu","_hoisted_4","$options","addName","addStuID","addPhone","_hoisted_5","_hoisted_6","_component_el_input","modelValue","input3","placeholder","append","_component_el_button","changeTitle","_hoisted_7","_hoisted_8","input2","changeDescription","_component_Link","settingDialogVisible","_component_setting","_component_el_container","_component_el_main","_hoisted_9","_hoisted_10","_toDisplayString","description","undefined","_hoisted_11","_hoisted_12","_Fragment","_renderList","questions","item","_createBlock","_component_el_row","onMouseover","hoverItem","_component_el_col","span","_hoisted_13","must","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_component_el_radio","value","_hoisted_18","imgList","i","index","offset","_component_el_image","src","url","length","_hoisted_19","videoList","width","height","transparentatstart","animationatstart","autostart","autosize","volume","displaysize","showdisplay","showstatusbar","showcontrols","showaudiocontrols","showtracker","showpositioncontrols","balance","_hoisted_20","options","ans","hasNumLimit","_hoisted_21","supply","consume","_component_el_checkbox","_hoisted_22","row","_mergeProps","ref_for","_hoisted_23","_component_el_rate","max","score","isLogic","last_question","_hoisted_24","relatedQs","_component_el_button_group","_component_el_tooltip","effect","content","placement","edit","_component_EditPen","logic","copy","_component_DocumentCopy","del_pre","_component_Delete","up","_component_ArrowUp","down","_component_ArrowDown","_component_el_dialog","qsEditDialogTitle","cancel_pre","_component_el_form","ref","model","_component_el_form_item","_component_el_select","disabled","selectDisAble","onChange","typeChange","allType","_component_el_option","_hoisted_25","_hoisted_26","plain","deleteOption","_component_el_input_number","addOption","rows","resize","min","_component_el_upload","action","_ctx","uploadImgUrl","multiple","upLoadImage","beforeImageUpload","limit","size","_hoisted_27","uploadVideoUrl","upLoadVideo","beforeVideoUpload","_hoisted_28","_hoisted_29","dialogConfirm","qsLinkDialogVisible","qsLinkDialogTitle","_hoisted_30","_hoisted_31","linkShare","copyToClip","downloadQrcode","genCodeAgain","_hoisted_32","finish","editWrongMsgVisible","editWrongMsg","_hoisted_33","qsLogicDialogTitle","qsLogicDialogVisible","cancel_pre_logic","_hoisted_34","logicIndex","willAddLogic","question_id","questionsFilter","idTitle","option_id","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","logicConfirm","settingDialogTitle","_component_el_date_picker","timeFrame","formatTime","_component_el_switch","hasRecycleLimit","max_recycling","closeGlobalLogic","_hoisted_40","_hoisted_41","_hoisted_42","settingSuccess"],"sources":["E:\\mytest\\src\\views\\qn-createpane\\qnEdit.vue"],"sourcesContent":["<template>\r\n    <div class=\"form\">\r\n        <div class=\"qnBoard\" :style=\"{\r\n            boxShadow: `var(--el-box-shadow-light)`,\r\n        }\">\r\n            <!-- <el-tabs :tab-position=\"'left'\" style=\"height: 700px;\" type=\"border-card\" class=\"demo-tabs\" stretch=\"true\">\r\n            <el-tab-pane style=\"padding: 140px\">\r\n                <template #label>\r\n                    <span class=\"custom-tabs-label\">\r\n                        <el-icon>\r\n                            <Edit />\r\n                        </el-icon>\r\n                        <span>Edit</span>\r\n                    </span>\r\n                </template>\r\n\r\n</el-tab-pane>\r\n<el-tab-pane label=\"Config\">Config</el-tab-pane>\r\n<el-tab-pane label=\"Role\">Role</el-tab-pane>\r\n<el-tab-pane label=\"Task\">Task</el-tab-pane>\r\n</el-tabs> -->\r\n            <el-tabs type=\"card\" stretch=\"true\" class=\"qn-tabs\">\r\n                <el-tab-pane label=\"编辑问卷\">\r\n                    <el-menu class=\"el-menu-vertical-demo\" style=\"position: relative; width: 190px;\">\r\n                        <template #title>\r\n                            <el-icon>\r\n                                <Edit />\r\n                            </el-icon>\r\n                            <span>问卷题目</span>\r\n                        </template>\r\n                        <el-menu-item-group>\r\n                            <template #title><span>题目</span></template>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'radio'; qsEditDialogVisible = true\">单选题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'checkbox'; qsEditDialogVisible = true\">多选题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'text'; qsEditDialogVisible = true\">填空题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'mark'; qsEditDialogVisible = true\">评分题</el-menu-item>\r\n                        </el-menu-item-group>\r\n                        <el-menu-item-group title=\"预设题目\">\r\n                            <el-sub-menu>\r\n                                <template #title><span>个人信息</span></template>\r\n                                <el-menu-item @click=\"addName\">姓名</el-menu-item>\r\n                                <el-menu-item @click=\"addStuID\">学号</el-menu-item>\r\n                                <el-menu-item @click=\"addPhone\">电话号码</el-menu-item>\r\n                            </el-sub-menu>\r\n                        </el-menu-item-group>\r\n\r\n                    </el-menu>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"问卷相关\">\r\n                    <span>问卷标题：</span>\r\n                    <div class=\"mt-4\">\r\n                        <el-input v-model=\"input3\" style=\"max-width: 600px\" placeholder=\"标题\"\r\n                            class=\"input-with-select\">\r\n                            \r\n                            <template #append>\r\n                                <el-button @click=\"changeTitle(input3)\">设置</el-button>\r\n                            </template>\r\n                        </el-input>\r\n                    </div>\r\n                    <span>问卷简介：</span>\r\n                    <div class=\"mt-4\">\r\n                        <el-input v-model=\"input2\" style=\"max-width: 600px\" placeholder=\"简介\"\r\n                            class=\"input-with-select\">\r\n                            \r\n                            <template #append>\r\n                                <el-button @click=\"changeDescription(input2)\">设置</el-button>\r\n                            </template>\r\n                        </el-input>\r\n                    </div>\r\n                    <el-menu class=\"el-menu-vertical-demo\" style=\"position: relative; width: 190.5px;\">\r\n                        <el-menu-item>\r\n                            <el-icon>\r\n                                <Link />\r\n                            </el-icon>\r\n                            <template #title>问卷逻辑</template>\r\n                        </el-menu-item>\r\n                        <el-menu-item @click=\"this.settingDialogVisible = true\">\r\n                            <el-icon>\r\n                                <setting />\r\n                            </el-icon>\r\n                            <template #title>问卷设置</template>\r\n                        </el-menu-item>\r\n                    </el-menu>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n\r\n        </div>\r\n        <el-container>\r\n            <el-main class=\"qnMain\" :style=\"{\r\n                boxShadow: `var(--el-box-shadow-light)`,\r\n                borderRadius: `var(--el-border-radius-round)`,\r\n            }\">\r\n                <div class=\"ques\">\r\n\r\n                    <div class=\"title\">\r\n                        {{ title }}\r\n                    </div>\r\n                    <div class=\"description\"\r\n                        v-if=\"this.description !== '' && this.description !== null && this.description !== undefined\">\r\n                        &emsp;&emsp;{{ description }}\r\n                    </div>\r\n                    <div class=\"content\">\r\n                        <el-row class=\"ques-block\" v-for=\"item in questions\" :key=\"item.id\"\r\n                            @mouseover.enter=\"hoverItem = item.id\" :style=\"{\r\n\r\n                                borderRadius: `var(--el-border-radius-round)`,\r\n                            }\">\r\n\r\n                            <el-col :span=\"16\" class=\"block-content\">\r\n                                <div class=\"block-title\">\r\n                                    {{ item.id }}. {{ item.title }} <span class=\"must\" v-if=\"item.must\">(必填)</span>\r\n                                </div>\r\n\r\n                                <div class=\"block-info\" v-if=\"item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school'\r\n                                    || item.type === 'phone' || item.type === 'email'\">\r\n                                    <el-input placeholder=\"请输入内容\" style=\"margin-left: 10px\">\r\n                                    </el-input>\r\n                                </div>\r\n\r\n                                <div class=\"block-choice\" v-if=\"item.type === 'sex'\">\r\n                                    <div style=\"padding-bottom: 10px\"><el-radio value=\"0\">男</el-radio></div>\r\n                                    <div><el-radio value=\"0\">女</el-radio></div>\r\n                                </div>\r\n\r\n                                <div class=\"block-description\"\r\n                                    v-if=\"item.description !== '' && item.description !== null && item.description !== undefined\">\r\n                                    {{ item.description }}\r\n                                </div>\r\n\r\n                                <!--                  图片-->\r\n                                <el-row class=\"block-img\" v-for=\"(i, index) in item.imgList\" :key=\"i.index\">\r\n                                    <el-col :offset=\"2\" :span=\"10\" class=\"demo-image__preview\" v-if=\"index % 2 === 0\">\r\n                                        <el-image style=\"width: 200px; height: 200px\" :src=\"i.url\"\r\n                                            :preview-src-list=\"[i.url]\">\r\n                                        </el-image>\r\n                                    </el-col>\r\n                                    <el-col :span=\"10\" class=\"demo-image__preview\"\r\n                                        v-if=\"index % 2 === 0 && index + 1 <= item.imgList.length - 1\">\r\n                                        <el-image style=\"width: 200px; height: 200px\" :src=\"item.imgList[index + 1].url\"\r\n                                            :preview-src-list=\"[item.imgList[index + 1].url]\">\r\n                                        </el-image>\r\n                                    </el-col>\r\n                                </el-row>\r\n                                <span style=\"color: #9b9ea0;font-size: x-small\"\r\n                                    v-if=\"item.imgList.length !== 0\">（点击图片查看大图）</span>\r\n\r\n\r\n                                <!--                视频-->\r\n                                <el-row class=\"block-img\" v-for=\"i in item.videoList\" :key=\"i.index\">\r\n                                    <embed width=400 height=230 transparentatstart=true animationatstart=false\r\n                                        autostart=true autosize=false volume=100 displaysize=0 showdisplay=true\r\n                                        showstatusbar=true showcontrols=true showaudiocontrols=true showtracker=true\r\n                                        showpositioncontrols=true balance=true :src=\"i.url\">\r\n                                </el-row>\r\n\r\n\r\n                                <div class=\"block-choice\" v-for=\"ans in item.options\" :key=\"ans.id\">\r\n\r\n                                    <!--                  单选-->\r\n                                    <el-radio v-if=\"item.type === 'radio'\" value=\"0\">\r\n                                        {{ ans.title }}<span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\"\r\n                                            v-if=\"ans.hasNumLimit\">剩余{{\r\n                                                ans.supply - ans.consume }}&emsp;总计{{ ans.supply }}</span>\r\n                                    </el-radio>\r\n\r\n                                    <!--                  多选-->\r\n                                    <el-checkbox v-if=\"item.type === 'checkbox'\" value=\"0\">\r\n                                        {{ ans.title }}\r\n                                        <span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\"\r\n                                            v-if=\"ans.hasNumLimit\">剩余{{\r\n                                                ans.supply -\r\n                                                ans.consume }}&emsp;总计{{ ans.supply }}</span>\r\n                                    </el-checkbox>\r\n\r\n                                    <!--                  填空-->\r\n                                    <el-input v-if=\"item.type === 'text' && item.row > 1\" type=\"textarea\"\r\n                                        placeholder=\"请输入内容\" v-bind=\"ans.title\">\r\n                                    </el-input>\r\n                                    <el-input v-if=\"item.type === 'text' && item.row === 1\" placeholder=\"请输入内容\"\r\n                                        v-bind=\"ans.title\">\r\n                                    </el-input>\r\n                                </div>\r\n\r\n                                <div class=\"block-choice\" v-if=\"item.type === 'mark'\">\r\n                                    <!--                  评分-->\r\n                                    <el-rate value=\"0\" :max=\"item.score\"></el-rate>\r\n                                </div>\r\n\r\n                                <!--                 关联信息-->\r\n                                <div class=\"block-relation\" v-if=\"isLogic && item.last_question !== 0\">\r\n                                    <div>{{ relatedQs(item) }}</div>\r\n                                </div>\r\n                            </el-col>\r\n\r\n                            <el-col :span=\"8\" class=\"block-button\" style=\"text-align: right\"\r\n                                v-if=\"hoverItem === item.id\">\r\n                                <el-button-group>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"编辑\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"edit(item.id)\"><el-icon>\r\n                                                <EditPen />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" v-if=\"isLogic\" effect=\"light\" content=\"添加关联逻辑\"\r\n                                        placement=\"bottom\" open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"logic(item.id)\"><el-icon>\r\n                                                <Link />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"复制\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"copy(item.id)\"><el-icon>\r\n                                                <DocumentCopy />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"删除\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"del_pre(item.id)\"><el-icon>\r\n                                                <Delete />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"上移\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"up(item.id)\"><el-icon>\r\n                                                <ArrowUp />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"下移\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"down(item.id)\"><el-icon>\r\n                                                <ArrowDown />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                </el-button-group>\r\n                            </el-col>\r\n\r\n                        </el-row>\r\n                    </div>\r\n\r\n                </div>\r\n            </el-main>\r\n        </el-container>\r\n        <el-dialog :title=\"qsEditDialogTitle\" v-model=\"qsEditDialogVisible\" :before-close=\"cancel_pre\" class=\"dialog\"\r\n            width=\"1100px\">\r\n            <el-form ref=\"form\" :model=\"willAddQuestion\" label-width=\"100px\">\r\n                <el-form-item label=\"题目类型\">\r\n                    <el-select :disabled=\"selectDisAble\" v-model=\"willAddQuestion.type\" placeholder=\"请选择题目类型\"\r\n                        @change=\"typeChange\">\r\n                        <el-option v-for=\"item in allType\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <div class=\"is-info\" v-if=\"willAddQuestion.type === 'name'\r\n                    || willAddQuestion.type === 'stuId'\r\n                    || willAddQuestion.type === 'class'\r\n                    || willAddQuestion.type === 'school'\r\n                    || willAddQuestion.type === 'phone'\r\n                    || willAddQuestion.type === 'email'\r\n                    || willAddQuestion.type === 'sex'\">\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'name'\">\r\n                        <el-input value=\"姓名\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'stuId'\">\r\n                        <el-input value=\"学号\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'school'\">\r\n                        <el-input value=\"学校\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'sex'\">\r\n                        <el-input value=\"性别\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'phone'\">\r\n                        <el-input value=\"手机号\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'email'\">\r\n                        <el-input value=\"邮箱\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"是否必填\">\r\n                        <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n                    </el-form-item>\r\n                </div>\r\n                <div v-else class=\"non-pre\">\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.title\" placeholder=\"请输入标题\" style=\"width: 800px\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"题目描述\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.description\" placeholder=\"请输入题目描述\"\r\n                            style=\"width: 800px\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"是否必填\">\r\n                        <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n                    </el-form-item>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'radio' || willAddQuestion.type === 'checkbox'\">\r\n                        <el-form-item :label=\"'选项' + (index + 1)\" v-for=\"(item, index) in willAddQuestion.options\"\r\n                            :key=\"index\">\r\n                            <el-row>\r\n                                <el-col :span=\"12\">\r\n                                    <el-input v-model=\"item.title\" placeholder=\"请输入选项名\"></el-input>\r\n                                </el-col>\r\n                                <el-col :span=\"12\">\r\n                                    <el-button type=\"danger\" plain class=\"deleteOptionButton\"\r\n                                        @click=\"deleteOption(index)\">删除选项</el-button>\r\n                                    <el-button type=\"success\" plain style=\"margin-right: 8px\" v-if=\"!item.hasNumLimit\"\r\n                                        @click=\"item.hasNumLimit = true\">添加库存限制</el-button>\r\n                                    <el-button type=\"info\" plain style=\"margin-right: 8px\" v-if=\"item.hasNumLimit\"\r\n                                        @click=\"item.hasNumLimit = false\">取消库存限制</el-button>\r\n                                    <el-input-number v-model=\"item.supply\" v-if=\"item.hasNumLimit\"></el-input-number>\r\n                                </el-col>\r\n                            </el-row>\r\n\r\n                        </el-form-item>\r\n                        <el-button type=\"primary\" plain class=\"addOptionButton\" @click=\"addOption\">新增选项</el-button>\r\n                    </template>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'text'\">\r\n                        <el-form-item label=\"填空\">\r\n                            <el-input type=\"textarea\" class=\"my-input\" :rows=\"willAddQuestion.row\" resize=\"none\">\r\n                            </el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"行数\">\r\n                            <el-input-number v-model=\"willAddQuestion.row\" :min=\"1\" :max=\"10\"></el-input-number>\r\n                        </el-form-item>\r\n                    </template>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'mark'\">\r\n                        <el-form-item label=\"最大分数\">\r\n                            <el-input-number v-model=\"willAddQuestion.score\" :min=\"3\" :max=\"10\"></el-input-number>\r\n                        </el-form-item>\r\n                    </template>\r\n                    <el-form-item label=\"上传图片\">\r\n                        <el-upload class=\"upload-img\" :action=uploadImgUrl multiple :http-request=\"upLoadImage\"\r\n                            :before-upload=\"beforeImageUpload\" :file-list=\"willAddQuestion.imgList\" :limit=\"6\">\r\n                            <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n                            <span class=\"el-upload__tip\">&emsp;只能上传jpg/png文件，且不超过5mb</span>\r\n                        </el-upload>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"上传视频\">\r\n                        <el-upload class=\"upload-video\" :action=uploadVideoUrl :http-request=\"upLoadVideo\"\r\n                            :before-upload=\"beforeVideoUpload\" :file-list=\"willAddQuestion.videoList\" :limit=\"1\">\r\n                            <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n                            <span class=\"el-upload__tip\">&emsp;只能上传mp4/mkv文件，且不超过10mb</span>\r\n                        </el-upload>\r\n                    </el-form-item>\r\n                </div>\r\n            </el-form>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"primary\" @click=\"dialogConfirm\">确定</el-button>\r\n                    &emsp;\r\n                    <el-button :span=\"6\" @click=\"cancel_pre\">取消</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog v-model=\"qsLinkDialogVisible\" :title=\"qsLinkDialogTitle\" class=\"linkDialog\" :show-close=\"false\"\r\n            width=\"800px\">\r\n            <el-row>\r\n                <el-col span=\"8\" style=\"text-align: center\">\r\n                    <el-row>\r\n                        <div id=\"qrcode_2\" style=\"height:200px; width:200px; margin-left: 22px;\"></div>\r\n                    </el-row>\r\n                </el-col>\r\n                <el-col span=\"16\">\r\n                    <el-row>\r\n                        <h2>链接与二维码</h2>\r\n                    </el-row>\r\n                    <el-row style=\"margin-top:15px\">\r\n                        <el-col :span=\"16\" style=\"margin-right: 5px\">\r\n                            <el-input :placeholder=linkShare v-model=\"linkShare\" id=\"copyText\" :disabled=\"true\">\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-button type=\"info\" plain id=\"copyBtn\" @click=\"copyToClip\">复制链接</el-button></el-row>\r\n                    <el-row style=\"margin-top: 25px\">\r\n                        <el-button type=\"primary\" plain @click=\"downloadQrcode\">下载二维码</el-button>\r\n                        <el-button type=\"primary\" @click=\"genCodeAgain\" style=\"margin-left: 30px\">重新生成链接</el-button>\r\n                    </el-row>\r\n                </el-col>\r\n            </el-row>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"success\" style=\"width: 80px\" @click=\"finish\">完 成</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog v-model=\"editWrongMsgVisible\" class=\"linkDialog\" :show-close=\"false\" :close-on-click-modal=\"false\"\r\n            width=\"300px\">\r\n            <span>{{ editWrongMsg }}</span>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"danger\" style=\"width: 80px\"\r\n                        @click=\"editWrongMsgVisible = false\">知道了</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <!--    关联问题弹框-->\r\n        <el-dialog :title=\"qsLogicDialogTitle\" v-model=\"qsLogicDialogVisible\" :before-close=\"cancel_pre_logic\"\r\n            class=\"dialog\">\r\n            <el-form v-if=\"questions.length !== 0\" class=\"logic-form\" ref=\"form\" label-width=\"80px\">\r\n\r\n                <div class=\"logic-title\">\r\n                    当前题目：{{ questions[logicIndex].id }}. {{ questions[logicIndex].title }}\r\n                </div>\r\n\r\n                <el-form-item label=\"关联题目\">\r\n                    <el-select v-model=\"willAddLogic.question_id\" placeholder=\"请选择关联题目\">\r\n                        <el-option v-for=\"item in questionsFilter\" :key=\"item.id\" :label=\"idTitle(item)\"\r\n                            :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"关联选项\" v-if=\"willAddLogic.question_id !== 0\">\r\n                    <el-select v-model=\"willAddLogic.option_id\" placeholder=\"请选择关联选项\">\r\n                        <el-option v-for=\"item in questions[willAddLogic.question_id - 1].options\" :key=\"item.id\"\r\n                            :label=\"item.title\" :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <div class=\"logic-info\" v-if=\"willAddLogic.question_id !== 0\">\r\n                    <!--          保存加入后选项id记得减一-->\r\n                    当题目<span style=\"color: #1687fd\"> \"{{ idTitle(questions[willAddLogic.question_id - 1]) }}\"\r\n                    </span>选择选项<span style=\"color: #1687fd\"> \"{{ questions[willAddLogic.question_id -\r\n                        1].options[willAddLogic.option_id -\r\n                        1].title\r\n                        }}\"\r\n                    </span>时此题才会显示\r\n                </div>\r\n                <div class=\"logic-info\" v-if=\"questionsFilter.length === 1\">\r\n                    题目之前不存在单（多）选题，无法设置关联题目\r\n                </div>\r\n\r\n                <div class=\"logic-bt\">\r\n                    <el-button type=\"primary\" @click=\"logicConfirm(logicIndex)\">确定</el-button>\r\n                </div>\r\n\r\n            </el-form>\r\n        </el-dialog>\r\n        <el-dialog :title=\"settingDialogTitle\" v-model=\"settingDialogVisible\" class=\"settingDialog\" width=\"30%\">\r\n            <el-form>\r\n                <el-form-item class=\"timeBlock\" label=\"截止时间\">\r\n                    <el-date-picker style=\"margin-left: 100px\" v-model=\"timeFrame\" @change=\"formatTime\" type=\"datetime\"\r\n                        value-format=\"yyyy-MM-dd HH:mm\" placeholder=\"选择结束时间\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item label=\"是否限制回收量\" class=\"recycleBlock\">\r\n                    <el-row>\r\n                        <el-switch v-model=\"hasRecycleLimit\" active-color=\"#13ce66\" inactive-color=\"grey\"\r\n                            active-text=\"是\" inactive-text=\"否\">\r\n                        </el-switch>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <el-input-number v-model=\"max_recycling\" :min=\"1\" v-if=\"hasRecycleLimit\"\r\n                            style=\"margin-left: 120px;height: 40px;margin-top: 10px\">\r\n                        </el-input-number>\r\n                    </el-row>\r\n                </el-form-item>\r\n                <el-form-item label=\"题目关联逻辑开关\">\r\n                    <el-switch v-model=\"isLogic\" active-text=\"开\" inactive-text=\"关\" @change=\"closeGlobalLogic\">\r\n                    </el-switch>\r\n                </el-form-item>\r\n\r\n                <div class=\"logic-description\">\r\n                    题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】\r\n                </div>\r\n\r\n                <div class=\"logic-description important\" v-if=\"isLogic\">\r\n                    为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑\r\n                </div>\r\n            </el-form>\r\n\r\n            <div class=\"setting-bt\">\r\n                <el-button type=\"primary\" @click=\"settingSuccess\">完成</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n//import editHeader from \"@/components/header/editPageHeader\";\r\nimport QRCode from \"qrcodejs2\";\r\nimport getDataApi from \"@/utils/getDataApi\";\r\nimport saveDataApi from \"@/utils/saveDataApi\";\r\nimport qrcodeApi from \"@/utils/qrcodeApi\";\r\nimport user from \"@/storage/user\";\r\n\r\nexport default {\r\n    mixins: [getDataApi, saveDataApi, qrcodeApi],\r\n    data() {\r\n        return {\r\n            logicQuestionState: 0,  // 用于判断用户是否更改关联问题设置\r\n            logicOptionState: 0,    // 用于判断用户是否更改关联选项设置\r\n\r\n            //uploadImgUrl: this.GLOBAL.backUrl + 'upload/image',\r\n            //uploadVideoUrl: this.GLOBAL.backUrl + 'upload/video',\r\n\r\n            timer: '',\r\n            value: '',\r\n            qrcode: null,\r\n            timeFrame: '',\r\n            linkShare: '',\r\n            editWrongMsg: \"\",\r\n            editWrongMsgVisible: false,\r\n            qsLinkDialogVisible: false,\r\n            dialogVisibleAsso: false,\r\n            qsLinkDialogTitle: \"发布成功！\",\r\n            settingDialogTitle: \"高级设置\",   // 高级设置弹框的标题\r\n            settingDialogVisible: false,     // 高级设置对话框可见性\r\n            closingDate: null,   // 高级设置中问卷回收的截止日期\r\n            isLogic: true,      // 问卷是否引入关联逻辑\r\n            isReleased: false,   // 是否发布\r\n            hasRecycleLimit: false,\r\n            max_recycling: 10000,\r\n            editIndex: 0,\r\n            logicIndex: 0,          // 当前添加题目逻辑的问题ID\r\n            selectDisAble: false,\r\n            hoverItem: 0,\r\n            activeName: 'first',\r\n            title: '',\r\n            description: '',\r\n            input3: '',\r\n            input2: '', \r\n            defaultProps: {\r\n                children: 'children',\r\n                label: 'label'\r\n            },\r\n            type: 1,\r\n            questions: [],\r\n            outline: [],\r\n            pid: this.$route.query.pid,\r\n            qsEditDialogVisible: false,\r\n            qsEditDialogTitle: \"新建题目\",\r\n            qsLogicDialogVisible: false,\r\n            qsLogicDialogTitle: \"关联逻辑设置\",\r\n            willAddQuestion: {\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        hasNumLimit: false,  // 是否添加库存限制\r\n                        title: '', // 选项标题\r\n                        id: 1, // 选项id\r\n                        supply: 1,  // 库存\r\n                        consume: 0, // 已消耗库存（已选）\r\n                    }\r\n                ],\r\n                row: 1, // 填空题区域显示行数\r\n                score: 5, // 评分题的最大评分\r\n                imgList: [],\r\n                videoList: [],\r\n            },\r\n            willAddLogic: {\r\n                question_id: 0,\r\n                option_id: 1,\r\n            },\r\n            allType: [\r\n                {\r\n                    value: 'radio',\r\n                    label: '单选题',\r\n                },\r\n                {\r\n                    value: 'checkbox',\r\n                    label: '多选题',\r\n                },\r\n                {\r\n                    value: 'text',\r\n                    label: '填空题',\r\n                }, {\r\n                    value: 'mark',\r\n                    label: '评分题',\r\n                }, {\r\n                    value: 'name',\r\n                    label: '姓名'\r\n                },\r\n                {\r\n                    value: 'stuId',\r\n                    label: '学号'\r\n                },\r\n                {\r\n                    value: 'phone',\r\n                    label: '手机号'\r\n                },\r\n                {\r\n                    value: 'school',\r\n                    label: '学校'\r\n                },\r\n                {\r\n                    value: 'sex',\r\n                    label: '性别'\r\n                },\r\n                {\r\n                    value: 'email',\r\n                    label: '邮箱'\r\n                },\r\n            ],\r\n\r\n            xiaoxueqi_questions: [\r\n                {\r\n                    id: 1,\r\n                    type: 'radio',\r\n                    title: '这是一个什么网站？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '问卷系统',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '出版系统',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    type: 'checkbox',\r\n                    title: '软工小学期助教都有谁？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: 'ZYH',\r\n                    }, {\r\n                        id: 2,\r\n                        title: 'LKW',\r\n                    }, {\r\n                        id: 3,\r\n                        title: 'ZXH',\r\n                    }, {\r\n                        id: 4,\r\n                        title: 'HZH',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    type: 'radio',\r\n                    title: '软工小学期累不累',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '累',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '非常累',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 4,\r\n                    type: 'text',\r\n                    title: '您对小学期的评价如何？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 0,\r\n                        title: '',\r\n                    }],\r\n                    row: 3,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 5,\r\n                    type: 'mark',\r\n                    title: '给小学期打个分吧~',\r\n                    description: '请考虑妥当后填写',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 0,\r\n                        title: '',\r\n                    }],\r\n                    row: 0,\r\n                    score: 10,\r\n                },\r\n            ],\r\n            xiaoxueqi_outline: [\r\n                {\r\n                    id: 1,\r\n                    label: '1. 这是一个什么网站？',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    label: '2. 软工小学期助教都有谁？',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    label: '3. 软工小学期累不累',\r\n                },\r\n                {\r\n                    id: 4,\r\n                    label: '4. 您对小学期的评价如何？',\r\n                },\r\n                {\r\n                    id: 5,\r\n                    label: '5. 给小学期打个分吧~',\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    // components: {\r\n    //     editHeader,\r\n    // },\r\n    methods: {\r\n        //---------------------------Image and video--------------------------------//\r\n        upLoadImage(file) {\r\n            const formData = new FormData();\r\n            formData.append('image', file.file);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: this.uploadImgUrl,\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status_code) {\r\n                        case 1:\r\n                            var name = res.data.name;\r\n                            var url = res.data.url;\r\n                            this.willAddQuestion.imgList.push({\r\n                                name: name,\r\n                                url: url\r\n                            });\r\n                            console.log(this.willAddQuestion.imgList);\r\n                            break;\r\n                        case 2:\r\n                            // this.$message.error(\"上传文件格式错误！\");\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"操作失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        upLoadVideo(file) {\r\n            const formData = new FormData();\r\n            formData.append('video', file.file);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: this.uploadVideoUrl,\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status_code) {\r\n                        case 1:\r\n                            var name = res.data.name;\r\n                            var url = res.data.url;\r\n                            this.willAddQuestion.videoList.push({\r\n                                name: name,\r\n                                url: url\r\n                            });\r\n                            console.log(this.willAddQuestion.videoList);\r\n                            break;\r\n                        case 2:\r\n                            // this.$message.error(\"上传文件格式错误！\");\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"操作失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        beforeImageUpload(file) {\r\n            const isJPG = file.type === 'image/jpeg';\r\n            const isPNG = file.type === 'image/png';\r\n            const isLt5M = file.size / 1024 / 1024 < 10;\r\n\r\n            if (!isJPG && !isPNG) {\r\n                this.$message.error('上传头像图片只能是 JPG/PNG 格式!');\r\n            } else if (!isLt5M) {\r\n                this.$message.error('上传头像图片大小不能超过 5MB!');\r\n            }\r\n            return (isJPG || isPNG) && isLt5M;\r\n        },\r\n        beforeVideoUpload(file) {\r\n            const filename = file.name;\r\n            var suffix = '';\r\n            var isVideo = false;\r\n            const isLt2M = file.size / 1024 / 1024 < 30;\r\n            try {\r\n                var flieArr = filename.split('.');\r\n                suffix = flieArr[flieArr.length - 1];\r\n            } catch (err) {\r\n                suffix = '';\r\n            }\r\n            var videoList = ['mp4', 'mkv'];\r\n            var judge = videoList.some(function (item) {\r\n                return item === suffix;\r\n            });\r\n            if (judge) {\r\n                isVideo = true;\r\n            }\r\n            if (!isVideo) {\r\n                this.$message.error('上传视频文件只能是 MP4/MKV 格式!');\r\n            } else if (!isLt2M) {\r\n                this.$message.error('上传视频文件大小不能超过 10MB!');\r\n            }\r\n            return isLt2M && isVideo;\r\n        },\r\n        beforeRemove(file, fileList) {\r\n            console.log(file, fileList);\r\n            return this.$confirm(`确定移除 ${file.name}？`);\r\n        },\r\n        handleRemove(file, fileList) {\r\n            console.log(file, fileList);\r\n            this.$message(\"移除成功\")\r\n        },\r\n        //--------------------------------------------------------------------------//\r\n        recycleLimit() {\r\n            if (this.hasRecycleLimit === false) this.max_recycling = 10000;\r\n        },\r\n        autoSave() {\r\n            this.saveQnInfo('autosave', '4');\r\n        },\r\n        share() {\r\n            this.publish();\r\n        },\r\n        genCodeAgain() {\r\n            this.makeCodeAgain(\"4\");\r\n        },\r\n        formatTime(time) {\r\n            this.timeFrame = time;\r\n        },\r\n        addName() {\r\n            this.willAddQuestion.type = \"name\";\r\n            this.willAddQuestion.title = \"姓名\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addSex() {\r\n            this.willAddQuestion.type = \"sex\";\r\n            this.willAddQuestion.title = \"性别\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addStuID() {\r\n            this.willAddQuestion.type = \"stuId\";\r\n            this.willAddQuestion.title = \"学号\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addSchool() {\r\n            this.willAddQuestion.type = \"school\";\r\n            this.willAddQuestion.title = \"学校\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addPhone() {\r\n            this.willAddQuestion.type = \"phone\";\r\n            this.willAddQuestion.title = \"手机号\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addEmail() {\r\n            this.willAddQuestion.type = \"email\";\r\n            this.willAddQuestion.title = \"邮箱\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        finish() {\r\n            this.qsLinkDialogVisible = false;\r\n            this.$router.push('/index')// 跳转到问卷中心？\r\n        },\r\n        publishSuccess: function () {\r\n            this.qsLinkDialogVisible = true;\r\n        },\r\n        edit: function (index) {\r\n            index--;\r\n            this.willAddQuestion = {\r\n                question_id: this.questions[index].question_id,\r\n                id: this.questions[index].id,\r\n                type: this.questions[index].type,\r\n                title: this.questions[index].title,\r\n                must: this.questions[index].must,\r\n                description: this.questions[index].description,\r\n                options: JSON.parse(JSON.stringify(this.questions[index].options)),\r\n                row: this.questions[index].row,\r\n                score: this.questions[index].score,\r\n                is_shown: this.questions[index].is_shown,\r\n                last_question: this.questions[index].last_question,\r\n                last_option: this.questions[index].last_option,\r\n                imgList: JSON.parse(JSON.stringify(this.questions[index].imgList)),\r\n                videoList: JSON.parse(JSON.stringify(this.questions[index].videoList)),\r\n            };\r\n            this.editIndex = index;\r\n            this.selectDisAble = true;\r\n            this.qsEditDialogTitle = \"编辑题目\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        isExistEmptyOption: function () {\r\n            for (let i = 0; i < this.willAddQuestion.options.length; i++) {\r\n                if (this.willAddQuestion.options[i].title === '') return true;\r\n            }\r\n            return false;\r\n        },\r\n        isExistSameOption: function () {\r\n            for (let i = 0; i < this.willAddQuestion.options.length; i++) {\r\n                for (let j = 0; j < this.willAddQuestion.options.length; j++) {\r\n                    if (i !== j && this.willAddQuestion.options[i].title === this.willAddQuestion.options[j].title) return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        dialogConfirm() {\r\n            let index = this.editIndex;\r\n            if (this.qsEditDialogTitle === \"编辑题目\") {\r\n                if (this.willAddQuestion.title === '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '标题不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能重复!'\r\n                    });\r\n                }\r\n                else {\r\n                    this.questions[index].id = this.willAddQuestion.id;\r\n                    this.questions[index].row = this.willAddQuestion.row;\r\n                    this.questions[index].must = this.willAddQuestion.must;\r\n                    this.questions[index].description = this.willAddQuestion.description;\r\n                    this.questions[index].title = this.willAddQuestion.title;\r\n                    this.questions[index].options = this.willAddQuestion.options;\r\n                    this.questions[index].score = this.willAddQuestion.score;\r\n                    this.questions[index].is_shown = this.willAddQuestion.is_shown;\r\n                    this.questions[index].last_question = this.willAddQuestion.last_question;\r\n                    this.questions[index].last_option = this.willAddQuestion.last_option;\r\n                    this.questions[index].options = JSON.parse(JSON.stringify(this.willAddQuestion.options));\r\n                    this.questions[index].imgList = JSON.parse(JSON.stringify(this.willAddQuestion.imgList));\r\n                    this.questions[index].videoList = JSON.parse(JSON.stringify(this.willAddQuestion.videoList));\r\n                    // 大纲更新\r\n                    this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                    this.qsEditDialogTitle = \"\";\r\n                    this.qsEditDialogVisible = false;\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '修改成功!'\r\n                    });\r\n                    // 重置\r\n                    this.resetWillAdd();\r\n                    this.selectDisAble = false;\r\n                }\r\n            }\r\n            else {\r\n                if (this.willAddQuestion.title === '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '标题不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能重复!'\r\n                    });\r\n                }\r\n                else {\r\n                    this.qsEditDialogVisible = false;\r\n                    this.willAddQuestion.id = this.questions.length + 1;\r\n                    // 大纲更新\r\n                    this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                    this.questions.push(this.willAddQuestion);\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '添加成功!'\r\n                    });\r\n                    // 重置\r\n                    this.resetWillAdd();\r\n                }\r\n            }\r\n        },\r\n        resetWillAdd() {\r\n            this.willAddQuestion = {\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 1,// 选项id\r\n                        hasNumLimit: false,\r\n                        supply: 1,\r\n                        consume: 0,\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 5, // 最大评分\r\n                imgList: [],\r\n                videoList: []\r\n            }\r\n        },\r\n        dialogCancel: function () {\r\n            this.qsEditDialogTitle = \"新建题目\";\r\n            this.resetWillAdd();\r\n            this.qsEditDialogVisible = false;\r\n            this.selectDisAble = false;\r\n        },\r\n        cancel_pre: function () {\r\n            this.$confirm('已编辑的题目信息将不会保存,确认关闭？', '提示', {\r\n                confirmButtonText: '确认',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                this.dialogCancel();\r\n            }).catch(() => {\r\n            });\r\n        },\r\n        LogicDialogCancel: function () {\r\n            this.qsLogicDialogVisible = false;\r\n            this.resetLogic();\r\n        },\r\n        cancel_pre_logic: function () {\r\n            this.$confirm('已编辑的题目关联逻辑将不会保存,确认关闭？', '提示', {\r\n                confirmButtonText: '确认',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                this.LogicDialogCancel();\r\n            }).catch(() => {\r\n            });\r\n        },\r\n        logicConfirm: function (index) {\r\n            console.log(this.questions);\r\n            let questions = this.questions;\r\n            let willAddLogic = this.willAddLogic;\r\n            questions[index].last_question = willAddLogic.question_id;\r\n            questions[index].last_option = willAddLogic.option_id;\r\n            questions[index].is_shown = willAddLogic.question_id === 0;\r\n            if (this.willAddLogic.question_id !== this.logicQuestionState || this.willAddLogic.option_id !== this.logicOptionState) {\r\n                this.$message({\r\n                    type: 'success',\r\n                    message: '问题关联设置成功'\r\n                });\r\n            }\r\n            this.qsLogicDialogVisible = false;\r\n            this.resetLogic();\r\n        },\r\n        logic: function (index) {\r\n            this.logicIndex = index - 1;\r\n            this.willAddLogic.question_id = this.questions[index - 1].last_question;\r\n            if (this.questions[index - 1].last_option !== 0) { this.willAddLogic.option_id = this.questions[index - 1].last_option; }\r\n            else this.willAddLogic.option_id = 1;\r\n            console.log(this.questions);\r\n            this.qsLogicDialogVisible = true;\r\n            this.logicQuestionState = this.willAddLogic.question_id;\r\n            this.logicOptionState = this.willAddLogic.option_id;\r\n        },\r\n        resetLogic() {\r\n            this.willAddLogic = {\r\n                question_id: 0,\r\n                option_id: 1,\r\n            };\r\n            this.logicIndex = 0;\r\n        },\r\n        typeChange(value) {\r\n            this.willAddQuestion.type = value;\r\n        },\r\n        addOption() {\r\n            // 问题关联检查\r\n            if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\r\n                this.$message({\r\n                    type: 'warning',\r\n                    message: '此问题已被关联，无法新增选项，请删除关联信息后再试'\r\n                });\r\n                return;\r\n            }\r\n            this.willAddQuestion.options.push({\r\n                hasNumLimit: false,\r\n                title: '', // 选项标题\r\n                id: this.willAddQuestion.options.length + 1,\r\n                supply: 1,\r\n                consume: 0,\r\n            });\r\n        },\r\n        deleteOption(index) {\r\n            if (this.willAddQuestion.options.length === 1) {\r\n                this.$message({\r\n                    type: \"error\",\r\n                    message: \"至少需要设置一个选项！\"\r\n                })\r\n            }\r\n            else {\r\n                // 问题关联检查\r\n                if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\r\n                    this.$message({\r\n                        type: 'warning',\r\n                        message: '此问题已被关联，无法删除选项，请删除关联信息后再试'\r\n                    });\r\n                    return;\r\n                }\r\n                // id重排\r\n                for (let i = index + 1; i < this.willAddQuestion.options.length; i++) {\r\n                    this.willAddQuestion.options[i].id--;\r\n                }\r\n                this.willAddQuestion.options.splice(index, 1);\r\n            }\r\n        },\r\n        changeTitle: function (value) {\r\n            this.title = value;\r\n        },\r\n        changeDescription: function (value) {\r\n            this.description = value;\r\n        },\r\n        openSetting: function () {\r\n            this.settingDialogVisible = true;\r\n        },\r\n        settingSuccess: function () {\r\n            this.settingDialogVisible = false;\r\n            this.$message({\r\n                type: 'success',\r\n                message: '设置已生效'\r\n            });\r\n        },\r\n        publish() {\r\n            if (this.questions.length === 0) {\r\n                this.$message.error(\"题目为空，无法发布！\");\r\n                return;\r\n            }\r\n\r\n            this.$confirm('确认发布？', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'success'\r\n            }).then(() => {\r\n                let loadingIns = this.$loading({ fullscreen: true, text: '拼命加载中' });\r\n                this.publishSuccess();\r\n                var new_questions = JSON.parse(JSON.stringify(this.questions));\r\n                let url = '/sm/save/qn/deploy';\r\n                const userInfo = user.getters.getUser(user.state());\r\n                var param = {\r\n                    username: userInfo.user.username,\r\n                    title: this.title,\r\n                    finished_time: this.timeFrame,\r\n                    description: this.description,\r\n                    type: this.type,\r\n                    max_recycling: this.max_recycling,\r\n                    qn_id: this.$route.query.pid,\r\n                    questions: new_questions\r\n                };\r\n                var paramer = JSON.stringify(param, { questions: 'brackets' })\r\n                this.$axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: paramer,\r\n                })\r\n                    .then(res => {\r\n                        loadingIns.close();\r\n                        if (res.data.status_code === 1) {\r\n                            this.linkShare = this.GLOBAL.baseUrl + '/fill_form?mode=1&code=' + res.data.code;\r\n\r\n                            if (this.qrcode == null) {\r\n                                this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n                                    width: 200, //生成的二维码的宽度\r\n                                    height: 200, //生成的二维码的高度\r\n                                    colorDark: \"#000000\", // 生成的二维码的深色部分\r\n                                    colorLight: \"#ffffff\", //生成二维码的浅色部分\r\n                                    correctLevel: QRCode.CorrectLevel.H\r\n                                });\r\n                            }\r\n                            this.qrcode.clear();\r\n                            this.qrcode.makeCode(this.linkShare);\r\n                        }\r\n                        else if (res.data.status_code === 2) {\r\n                            this.$message.error(\"题目为空，无法发布！\");\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            }).catch(() => {\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: '取消发布'\r\n                });\r\n            });\r\n        },\r\n        saveinfo(tag) {\r\n            this.saveQnInfo(tag, \"4\");\r\n        },\r\n        save() {\r\n            this.saveinfo('save');\r\n        },\r\n        preview() {\r\n            this.saveinfo('preview');\r\n        },\r\n        up: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            if (index !== 0) {\r\n                // 非法移动\r\n                if (questions[index].last_question === index) {\r\n                    this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n                    return;\r\n                }\r\n                // 关联维护\r\n                let arr = this.sonGroup(index);\r\n                let willSubtract = [];\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        willSubtract.push(arr[j].id - 1);\r\n                    }\r\n                }\r\n                arr = this.sonGroup(index - 1);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        questions[arr[j].id - 1].last_question++;\r\n                    }\r\n                }\r\n                for (let i = 0; i < willSubtract.length; i++) {\r\n                    questions[willSubtract[i]].last_question--;\r\n                }\r\n                // 题序维护\r\n                questions[index].id--;\r\n                questions[index - 1].id++;\r\n                let temp = questions[index];\r\n                questions[index] = questions[index - 1];\r\n                questions[index - 1] = temp;\r\n                // 大纲维护\r\n                this.updateOutline(index, questions[index - 1].title);\r\n                this.updateOutline(index + 1, questions[index].title);\r\n            }\r\n        },\r\n        down: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            if (index !== questions.length - 1) {\r\n                // 非法移动\r\n                if (questions[index + 1].last_question === index + 1) {\r\n                    this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n                    return;\r\n                }\r\n                // 关联维护\r\n                let arr = this.sonGroup(index);\r\n                let willAdd = [];\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        willAdd.push(arr[j].id - 1);\r\n                    }\r\n                }\r\n                arr = this.sonGroup(index + 1);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        questions[arr[j].id - 1].last_question--;\r\n                    }\r\n                }\r\n                for (let i = 0; i < willAdd.length; i++) {\r\n                    questions[willAdd[i]].last_question++;\r\n                }\r\n                // 题序维护\r\n                questions[index].id++;\r\n                questions[index + 1].id--;\r\n                let temp = questions[index];\r\n                questions[index] = questions[index + 1];\r\n                questions[index + 1] = temp;\r\n                // 大纲维护\r\n                this.updateOutline(index + 1, questions[index].title);\r\n                this.updateOutline(index + 2, questions[index + 1].title);\r\n            }\r\n        },\r\n        del_pre: function (index) {\r\n            // 问题关联检查\r\n            if (this.sonGroup(index - 1).length !== 0) {\r\n                this.$confirm('该问题已被关联，删除此问题会删除所有相关关联信息', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.del_relation(index);\r\n                    this.del(index)\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '问题及关联信息已成功删除'\r\n                    });\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '取消删除题目及关联'\r\n                    });\r\n                });\r\n            } else {\r\n                this.$confirm('确认删除（不可恢复）？', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.del(index)\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '删除成功'\r\n                    });\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '取消删除'\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        del: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            let outline = this.outline;\r\n            // 维护关联关系\r\n            for (let i = index + 1; i < questions.length; i++) {\r\n                let arr = this.sonGroup(i);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        if (questions[arr[j].id - 1] !== index) {\r\n                            questions[arr[j].id - 1].last_question--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // 维护题序\r\n            for (let i = index + 1; i < questions.length; i++) {\r\n                questions[i].id--;\r\n            }\r\n            outline.splice(index, 1);\r\n            questions.splice(index, 1);\r\n            // 维护大纲\r\n            for (let num = index; num < outline.length; num++) {\r\n                this.updateOutline(num + 1, questions[num].title);\r\n            }\r\n        },\r\n        copy: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            // 大纲更新\r\n            this.updateOutline(this.outline.length + 1, questions[index].title);\r\n            // 问卷更新\r\n            let temp = this.deepClone(questions[index]);\r\n            temp.id = questions.length + 1;\r\n            temp.question_id = 0;\r\n            questions.push(temp);\r\n            this.$message.success(\"问题复制成功，已粘贴至问卷末尾\");\r\n        },\r\n        deepClone: function (initialObj) {\r\n            let obj = {};\r\n            try {\r\n                obj = JSON.parse(JSON.stringify(initialObj));\r\n                // eslint-disable-next-line no-empty\r\n            } finally { }\r\n            return obj;\r\n        },    // 深拷贝\r\n        updateOutline: function (id, label) {\r\n            if (label.length > 12) {\r\n                label = id + '. ' + label.substring(0, 11) + '...';\r\n            } else {\r\n                label = id + '. ' + label;\r\n            }\r\n            if (id <= this.questions.length) {\r\n                this.outline[id - 1].id = id;\r\n                this.outline[id - 1].label = label;\r\n            } else {\r\n                this.outline.push({\r\n                    id: id,\r\n                    label: label,\r\n                })\r\n            }\r\n        },\r\n        updateQuestions: function (start, end) {\r\n            let offset = end - start;\r\n            if (offset > 0) {\r\n                for (let i = 0; i < offset; i++) {\r\n                    this.down(start + i);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < offset * -1; i++) {\r\n                    this.up(start - i);\r\n                }\r\n            }\r\n        },  // good\r\n        toFillQn: function (value) {\r\n            this.$router.push({\r\n                name: 'FillQn',\r\n                query: {\r\n                    mode: value,\r\n                    title: this.title,\r\n                }\r\n            });\r\n        },\r\n        InitOutline() {\r\n            for (var i = 0; i < this.questions.length; i++) {\r\n                this.outline.push({\r\n                    id: this.questions[i].id,\r\n                    label: (i + 1) + \". \" + this.questions[i].title\r\n                })\r\n            }\r\n        },\r\n        copyToClip(message) {\r\n            var aux = document.createElement(\"input\");\r\n            aux.setAttribute(\"value\", this.linkShare);\r\n            document.body.appendChild(aux);\r\n            aux.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(aux);\r\n            if (message !== null) {\r\n                this.$message.success(\"复制成功\");\r\n            } else {\r\n                this.$message.error(\"复制失败\");\r\n            }\r\n        },\r\n        // 大纲拖拽处理函数(下3个)\r\n        handleDrop(draggingNode, dropNode, dropType) {\r\n            console.log('tree drop: ', draggingNode.key, dropNode.key, dropType);\r\n            if (this.isRightRelation(draggingNode.key, dropNode.key)) {\r\n                this.updateQuestions(draggingNode.key, dropNode.key);\r\n            } else {\r\n                this.outline.splice(0, this.outline.length);\r\n                this.InitOutline();\r\n                this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n            }\r\n        },\r\n        allowDrop(draggingNode, dropNode, type) {\r\n            if (draggingNode.key > dropNode.key) {\r\n                return type === 'prev';\r\n            } else {\r\n                return type === 'next';\r\n            }\r\n        },\r\n        isRightRelation: function (index1, index2) {\r\n            console.log(index1, index2);\r\n            index1--;\r\n            index2--;\r\n            let questions = this.questions;\r\n            if (index1 < index2) {\r\n                for (let i = index1 + 1; i <= index2; i++) {\r\n                    if (questions[i].last_question === index1 + 1) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            } else {\r\n                for (let i = index1 - 1; i >= index2; i--) {\r\n                    if (questions[index1].last_question === i + 1) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        },\r\n        idTitle: function (item) {\r\n            if (item.id === 0) {\r\n                return item.title;\r\n            } else {\r\n                return item.id + \". \" + item.title;\r\n            }\r\n        },\r\n        relatedQs: function (item) {\r\n            return \"关联问题：\" + this.questions[item.last_question - 1].id + \".\" + this.questions[item.last_question - 1].title + \"(\" + this.questions[item.last_question - 1].options[item.last_option - 1].title + \")\";\r\n        },\r\n        // 遍历得爸爸\r\n        fatherIndex: function (qs_id) {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].question_id === qs_id) {\r\n                    return i;\r\n                }\r\n            }\r\n        },\r\n        // 遍历得儿子\r\n        sonGroup: function (index) {\r\n            let arr = [];\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].last_question === this.questions[index].id) {\r\n                    arr.push(this.questions[i]);\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n        // 连带删除关联信息\r\n        del_relation: function (index) {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                // 保存加入后,下面需修改id为question_id\r\n                if (this.questions[i].last_question === this.questions[index - 1].id) {\r\n                    this.questions[i].last_option = 0;\r\n                    this.questions[i].last_question = 0;\r\n                    this.questions[i].is_shown = true;\r\n                }\r\n            }\r\n        },\r\n        // 关联信息存在性判断\r\n        isExistRelation: function () {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].last_question !== 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        // 监听：全局删除关联信息\r\n        closeGlobalLogic: function (state) {\r\n            if (!state && this.isExistRelation()) {\r\n                this.$confirm('检测到您已为题目添加关联，关闭设置将会删除所有关联信息，是否继续？', '提示', {\r\n                    confirmButtonText: '确认',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.deleteGlobalRelation();\r\n                    this.$message.info(\"关联信息已全部删除\");\r\n                }).catch(() => {\r\n                    this.isLogic = true;\r\n                    this.$message.info(\"取消操作\");\r\n                });\r\n            }\r\n        },\r\n        // 删除全局关联信息\r\n        deleteGlobalRelation: function () {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                this.questions[i].last_question = 0;\r\n                this.questions[i].last_option = 0;\r\n                this.questions[i].is_shown = true;\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n        questionsFilter: function () {\r\n            let questions = this.questions;\r\n            let arr = [{\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '不设置关联题目',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 0 // 选项id\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 5, // 最大评分\r\n            }];\r\n            for (let i = 0; i < this.logicIndex; i++) {\r\n                if (questions[i].type === \"radio\" || questions[i].type === \"checkbox\") {\r\n                    arr.push(questions[i]);\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n    },\r\n    created() {\r\n        //this.getQnDataSelf();\r\n    },\r\n    mounted() {\r\n        //this.timer = setInterval(this.autoSave, 60000);\r\n    },\r\n    beforeUnmount() {\r\n        //clearInterval(this.timer);\r\n    },\r\n    watch: {\r\n        //hasRecycleLimit:\"recycleLimit\",\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form {\r\n    position: relative;\r\n}\r\n\r\n.qnBoard {\r\n    display: flex;\r\n    position: relative;\r\n    width: 190px;\r\n    max-height: 1000px;\r\n    left: 20px;\r\n    top: 80px;\r\n    background-color: white;\r\n}\r\n\r\n.qnMain {\r\n    display: flex;\r\n    position: absolute;\r\n    left: 15%;\r\n    width: 1300px;\r\n    height: 700px;\r\n    top: 80px;\r\n    background: #FFFFFF;\r\n}\r\n\r\n.qnBoard .demo-tabs>.el-tabs__content {\r\n    padding: px;\r\n    color: #4fef0f;\r\n    font-size: 32px;\r\n    font-weight: 600;\r\n}\r\n\r\n.qnBoard .demo-tabs .custom-tabs-label {\r\n    font-size: 20px;\r\n}\r\n\r\n.form .linkDialog {\r\n    text-align: left;\r\n}\r\n\r\n.form .edit {\r\n    margin-top: 0;\r\n    overflow: auto;\r\n    height: 550px;\r\n}\r\n\r\n.form .outline {\r\n    overflow: auto;\r\n    height: 550px;\r\n}\r\n\r\n.form .ques-type {\r\n    padding: 15px 0;\r\n    font-size: 16px;\r\n    border-bottom: dashed #e3e3e3 1px;\r\n}\r\n\r\n.form .type-icon {\r\n    color: #1687fd;\r\n    display: inline-block;\r\n}\r\n\r\n.form .type-icon:hover {\r\n    color: #409EFF;\r\n    cursor: pointer;\r\n}\r\n\r\n.form .el-tabs__nav-scroll {\r\n    text-align: center;\r\n    height: 60px;\r\n    margin: 0 60px;\r\n}\r\n\r\n.form .el-tabs__item {\r\n    font-weight: bold;\r\n    padding: 0 20px;\r\n    height: 60px;\r\n    box-sizing: border-box;\r\n    line-height: 60px;\r\n    display: inline-block;\r\n    list-style: none;\r\n    font-size: 16px;\r\n    color: black;\r\n    position: relative;\r\n}\r\n\r\n.form .el-tabs__header {\r\n    margin: 0;\r\n}\r\n\r\n.form .el-tree-node__content {\r\n    padding-left: 10px !important;\r\n    height: 40px;\r\n}\r\n\r\n.form .qnMain .ques {\r\n    width: 96%;\r\n    margin-left: 2%;\r\n    /* margin-top: 50px; */\r\n    margin-bottom: 2%;\r\n}\r\n\r\n.form .qnMain .ques .title {\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    padding-top: 10px;\r\n    padding-bottom: 26px;\r\n}\r\n\r\n.form .qnMain .ques .description {\r\n    text-align: left;\r\n    font-size: 18px;\r\n    padding-bottom: 30px;\r\n    color: black;\r\n    line-height: 30px;\r\n}\r\n\r\n.form .qnMain .ques-block {\r\n    margin-bottom: 10px;\r\n    padding-bottom: 10px;\r\n    border: solid #e3e3e3 1px;\r\n}\r\n\r\n.form .qnMain .ques-block:hover {\r\n    background: #f5f5f5;\r\n    transition: .3s;\r\n}\r\n\r\n.form .qnMain .ques-block .must {\r\n    font-weight: normal;\r\n    color: crimson;\r\n}\r\n\r\n.form .qnMain .block-title {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 20px 10px 10px;\r\n    font-weight: bold;\r\n}\r\n\r\n.form .qnMain .block-description {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 5px;\r\n    padding-bottom: 15px;\r\n    padding-left: 10px;\r\n    color: #969696;\r\n}\r\n\r\n.form .qnMain .block-choice {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 5px 10px 10px;\r\n}\r\n\r\n.form .el-button-group>.el-button:first-child {\r\n    border-radius: 0 0 0 8px;\r\n}\r\n\r\n.form .el-button-group>.el-button:last-child {\r\n    border-radius: 0 0 8px 0;\r\n}\r\n\r\n.form .block-button .el-button {\r\n    background: #b9b9b9;\r\n    border: transparent;\r\n    right: 15px;\r\n}\r\n\r\n.form .block-button .el-button:hover {\r\n    background: #989898;\r\n    border: transparent;\r\n}\r\n\r\n.form .bt {\r\n    color: white;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n}\r\n\r\n.form .block-choice .el-textarea__inner {\r\n    max-height: 100px;\r\n}\r\n\r\n.form .dialog {\r\n    text-align: left;\r\n    font-size: large;\r\n}\r\n\r\n.form .addOptionButton {\r\n    display: inline-block;\r\n    margin-left: 100px;\r\n}\r\n\r\n.form .deleteOptionButton {\r\n    margin-left: 20px;\r\n}\r\n\r\n.form .logic-description {\r\n    margin-top: -15px;\r\n    margin-bottom: 30px;\r\n    text-align: left;\r\n    padding-left: 6px;\r\n    font-size: 14px;\r\n    color: #aaaaaa;\r\n}\r\n\r\n.form .important {\r\n    color: crimson;\r\n}\r\n\r\n.form .logic-title {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    padding-left: 12px;\r\n    padding-bottom: 30px;\r\n}\r\n\r\n.form .logic-bt {\r\n    text-align: center;\r\n}\r\n\r\n.form .logic-form .el-input--suffix .el-input__inner {\r\n    width: 620px;\r\n}\r\n\r\n.form .sideTitle {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 10px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.form .easyChoose {\r\n    font-size: medium;\r\n    margin-top: 10px;\r\n}\r\n\r\n.form .chooseLabel {\r\n    margin-right: 10px;\r\n    margin-left: 5px;\r\n}\r\n\r\n.form .setting-item {\r\n    text-align: left;\r\n}\r\n\r\n.form .setting-bt {\r\n    margin-top: 28px;\r\n}\r\n\r\n.form .settingDialog .el-dialog__header {\r\n    text-align: left;\r\n}\r\n\r\n.form .settingDialog .item-title {\r\n    padding-right: 20px;\r\n}\r\n\r\n.form .logic-info {\r\n    color: #aaaaaa;\r\n    padding-top: 2px;\r\n    padding-left: 12px;\r\n    padding-bottom: 25px;\r\n}\r\n\r\n.form .block-relation {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #1687fd;\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAM;gEA2BOC,mBAAA,CAAiB,cAAX,MAAI;gEAGOA,mBAAA,CAAe,cAAT,IAAE;gEAYJA,mBAAA,CAAiB,cAAX,MAAI;gEAUvCA,mBAAA,CAAkB,cAAZ,OAAK;;EACND,KAAK,EAAC;AAAM;gEASjBC,mBAAA,CAAkB,cAAZ,OAAK;;EACND,KAAK,EAAC;AAAM;;EAgChBA,KAAK,EAAC;AAAM;;EAERA,KAAK,EAAC;AAAO;;EAlGtCE,GAAA;EAqGyBF,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAS;;EAQHA,KAAK,EAAC;AAAa;;EAjHxDE,GAAA;EAkH0EF,KAAK,EAAC;;;EAlHhFE,GAAA;EAqHqCF,KAAK,EAAC;;;EArH3CE,GAAA;EA2HqCF,KAAK,EAAC;;;EACFG,KAA4B,EAA5B;IAAA;EAAA;AAA4B;;EA5HrED,GAAA;EAgIqCF,KAAK,EAAC;;;EAhI3CE,GAAA;EAmJsCC,KAAyC,EAAzC;IAAA;IAAA;EAAA;;oBAnJtC;;EAAAD,GAAA;EAoK6DC,KAAyD,EAAzD;IAAA;IAAA;IAAA;EAAA;;;EApK7DD,GAAA;EA4K8CC,KAAyD,EAAzD;IAAA;IAAA;IAAA;EAAA;;;EA5K9CD,GAAA;EA2LqCF,KAAK,EAAC;;;EA3L3CE,GAAA;EAiMqCF,KAAK,EAAC;;;EAjM3CE,GAAA;EAgQqBF,KAAK,EAAC;;;EAhQ3BE,GAAA;EA6R4BF,KAAK,EAAC;;iEAuDNC,mBAAA,CAA+D;EAAzDD,KAAK,EAAC;AAAgB,GAAC,wBAA2B;iEAQxDC,mBAAA,CAAgE;EAA1DD,KAAK,EAAC;AAAgB,GAAC,yBAA4B;;EAKnEA,KAAK,EAAC,eAAe;EAACG,KAA0B,EAA1B;IAAA;EAAA;;iEAahBF,mBAAA,CAA+E;EAA1EG,EAAE,EAAC,UAAU;EAACD,KAAqD,EAArD;IAAA;IAAA;IAAA;EAAA;;iEAKnBF,mBAAA,CAAe,YAAX,QAAM;;EAchBD,KAAK,EAAC,eAAe;EAACG,KAA0B,EAA1B;IAAA;EAAA;;;EAStBH,KAAK,EAAC,eAAe;EAACG,KAA0B,EAA1B;IAAA;EAAA;;;EAYnBH,KAAK,EAAC;AAAa;;EAtZxCE,GAAA;EA0aqBF,KAAK,EAAC;;;EAEEG,KAAsB,EAAtB;IAAA;EAAA;AAAsB;;EACdA,KAAsB,EAAtB;IAAA;EAAA;AAAsB;;EA7a3DD,GAAA;EAmbqBF,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAU;iEA8BrBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAmB,GAAC,qDAE/B;;EAvdhBE,GAAA;EAydqBF,KAAK,EAAC;;;EAKVA,KAAK,EAAC;AAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBA7d/BK,mBAAA,CAieM,OAjeNC,UAieM,GAheFL,mBAAA,CAwFM;IAxFDD,KAAK,EAAC,SAAS;IAAEG,KAAK,EAFnCI,eAAA,CAEqC;;KAE5B;MACGC,mBAAA,4qBAeE,EACFC,YAAA,CAmEUC,kBAAA;IAnEDC,IAAI,EAAC,MAAM;IAACC,OAAO,EAAC,MAAM;IAACZ,KAAK,EAAC;;IArBtDa,OAAA,EAAAC,QAAA,CAsBgB,MA6Bc,CA7BdL,YAAA,CA6BcM,sBAAA;MA7BDC,KAAK,EAAC;IAAM;MAtBzCH,OAAA,EAAAC,QAAA,CAuBoB,MA2BU,CA3BVL,YAAA,CA2BUQ,kBAAA;QA3BDjB,KAAK,EAAC,uBAAuB;QAACG,KAAyC,EAAzC;UAAA;UAAA;QAAA;;QACxBe,KAAK,EAAAJ,QAAA,CACZ,MAEU,CAFVL,YAAA,CAEUU,kBAAA;UA3BtCN,OAAA,EAAAC,QAAA,CA0BgC,MAAQ,CAARL,YAAA,CAAQW,eAAA,E;UA1BxCC,CAAA;YA4B4BC,UAAiB,C;QA5B7CT,OAAA,EAAAC,QAAA,CA8BwB,MAUqB,CAVrBL,YAAA,CAUqBc,6BAAA;UATNL,KAAK,EAAAJ,QAAA,CAAC,MAAe,CAAfU,UAAe,C;UA/B5DX,OAAA,EAAAC,QAAA,CAgC4B,MAC0F,CAD1FL,YAAA,CAC0FgB,uBAAA;YAArFC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA;cAAEC,KAAA,CAAAC,eAAe,CAACnB,IAAI;cAAYkB,KAAA,CAAAE,mBAAmB;YAAA;;YAjC3FlB,OAAA,EAAAC,QAAA,CAiCoG,MAAG,CAjCvGkB,gBAAA,CAiCoG,KAAG,E;YAjCvGX,CAAA;cAkC4BZ,YAAA,CAC6FgB,uBAAA;YAAxFC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA;cAAEC,KAAA,CAAAC,eAAe,CAACnB,IAAI;cAAekB,KAAA,CAAAE,mBAAmB;YAAA;;YAnC9FlB,OAAA,EAAAC,QAAA,CAmCuG,MAAG,CAnC1GkB,gBAAA,CAmCuG,KAAG,E;YAnC1GX,CAAA;cAoC4BZ,YAAA,CACyFgB,uBAAA;YAApFC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA;cAAEC,KAAA,CAAAC,eAAe,CAACnB,IAAI;cAAWkB,KAAA,CAAAE,mBAAmB;YAAA;;YArC1FlB,OAAA,EAAAC,QAAA,CAqCmG,MAAG,CArCtGkB,gBAAA,CAqCmG,KAAG,E;YArCtGX,CAAA;cAsC4BZ,YAAA,CACyFgB,uBAAA;YAApFC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA;cAAEC,KAAA,CAAAC,eAAe,CAACnB,IAAI;cAAWkB,KAAA,CAAAE,mBAAmB;YAAA;;YAvC1FlB,OAAA,EAAAC,QAAA,CAuCmG,MAAG,CAvCtGkB,gBAAA,CAuCmG,KAAG,E;YAvCtGX,CAAA;;UAAAA,CAAA;YAyCwBZ,YAAA,CAOqBc,6BAAA;UAPDL,KAAK,EAAC;QAAM;UAzCxDL,OAAA,EAAAC,QAAA,CA0C4B,MAKc,CALdL,YAAA,CAKcwB,sBAAA;YAJCf,KAAK,EAAAJ,QAAA,CAAC,MAAiB,CAAjBoB,UAAiB,C;YA3ClErB,OAAA,EAAAC,QAAA,CA4CgC,MAAgD,CAAhDL,YAAA,CAAgDgB,uBAAA;cAAjCC,OAAK,EAAES,QAAA,CAAAC;YAAO;cA5C7DvB,OAAA,EAAAC,QAAA,CA4C+D,MAAE,CA5CjEkB,gBAAA,CA4C+D,IAAE,E;cA5CjEX,CAAA;4CA6CgCZ,YAAA,CAAiDgB,uBAAA;cAAlCC,OAAK,EAAES,QAAA,CAAAE;YAAQ;cA7C9DxB,OAAA,EAAAC,QAAA,CA6CgE,MAAE,CA7ClEkB,gBAAA,CA6CgE,IAAE,E;cA7ClEX,CAAA;4CA8CgCZ,YAAA,CAAmDgB,uBAAA;cAApCC,OAAK,EAAES,QAAA,CAAAG;YAAQ;cA9C9DzB,OAAA,EAAAC,QAAA,CA8CgE,MAAI,CA9CpEkB,gBAAA,CA8CgE,MAAI,E;cA9CpEX,CAAA;;YAAAA,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAoDgBZ,YAAA,CAmCcM,sBAAA;MAnCDC,KAAK,EAAC;IAAM;MApDzCH,OAAA,EAAAC,QAAA,CAqDoB,MAAkB,CAAlByB,UAAkB,EAClBtC,mBAAA,CAQM,OARNuC,UAQM,GAPF/B,YAAA,CAMWgC,mBAAA;QA7DnCC,UAAA,EAuD2Cb,KAAA,CAAAc,MAAM;QAvDjD,uBAAAhB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAuD2CC,KAAA,CAAAc,MAAM,GAAAf,MAAA;QAAEzB,KAAwB,EAAxB;UAAA;QAAA,CAAwB;QAACyC,WAAW,EAAC,IAAI;QAChE5C,KAAK,EAAC;;QAEK6C,MAAM,EAAA/B,QAAA,CACb,MAAsD,CAAtDL,YAAA,CAAsDqC,oBAAA;UAA1CpB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEO,QAAA,CAAAY,WAAW,CAAClB,KAAA,CAAAc,MAAM;;UA3DrE9B,OAAA,EAAAC,QAAA,CA2DwE,MAAE,CA3D1EkB,gBAAA,CA2DwE,IAAE,E;UA3D1EX,CAAA;;QAAAA,CAAA;2CA+DoB2B,UAAkB,EAClB/C,mBAAA,CAQM,OARNgD,UAQM,GAPFxC,YAAA,CAMWgC,mBAAA;QAvEnCC,UAAA,EAiE2Cb,KAAA,CAAAqB,MAAM;QAjEjD,uBAAAvB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiE2CC,KAAA,CAAAqB,MAAM,GAAAtB,MAAA;QAAEzB,KAAwB,EAAxB;UAAA;QAAA,CAAwB;QAACyC,WAAW,EAAC,IAAI;QAChE5C,KAAK,EAAC;;QAEK6C,MAAM,EAAA/B,QAAA,CACb,MAA4D,CAA5DL,YAAA,CAA4DqC,oBAAA;UAAhDpB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEO,QAAA,CAAAgB,iBAAiB,CAACtB,KAAA,CAAAqB,MAAM;;UArE3ErC,OAAA,EAAAC,QAAA,CAqE8E,MAAE,CArEhFkB,gBAAA,CAqE8E,IAAE,E;UArEhFX,CAAA;;QAAAA,CAAA;2CAyEoBZ,YAAA,CAaUQ,kBAAA;QAbDjB,KAAK,EAAC,uBAAuB;QAACG,KAA2C,EAA3C;UAAA;UAAA;QAAA;;QAzE3DU,OAAA,EAAAC,QAAA,CA0EwB,MAKe,CALfL,YAAA,CAKegB,uBAAA;UADAP,KAAK,EAAAJ,QAAA,CAAC,MAAI,CA9EjDkB,gBAAA,CA8E6C,MAAI,E;UA9EjDnB,OAAA,EAAAC,QAAA,CA2E4B,MAEU,CAFVL,YAAA,CAEUU,kBAAA;YA7EtCN,OAAA,EAAAC,QAAA,CA4EgC,MAAQ,CAARL,YAAA,CAAQ2C,eAAA,E;YA5ExC/B,CAAA;;UAAAA,CAAA;YAgFwBZ,YAAA,CAKegB,uBAAA;UALAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAAOyB,oBAAoB;;UAIhCnC,KAAK,EAAAJ,QAAA,CAAC,MAAI,CApFjDkB,gBAAA,CAoF6C,MAAI,E;UApFjDnB,OAAA,EAAAC,QAAA,CAiF4B,MAEU,CAFVL,YAAA,CAEUU,kBAAA;YAnFtCN,OAAA,EAAAC,QAAA,CAkFgC,MAAW,CAAXL,YAAA,CAAW6C,kBAAA,E;YAlF3CjC,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;uBA2FQZ,YAAA,CA0Je8C,uBAAA;IArPvB1C,OAAA,EAAAC,QAAA,CA4FY,MAwJU,CAxJVL,YAAA,CAwJU+C,kBAAA;MAxJDxD,KAAK,EAAC,QAAQ;MAAEG,KAAK,EA5F1CI,eAAA,CA4F4C;;;OAG/B;;MA/FbM,OAAA,EAAAC,QAAA,CAgGgB,MAmJM,CAnJNb,mBAAA,CAmJM,OAnJNwD,UAmJM,GAjJFxD,mBAAA,CAEM,OAFNyD,WAEM,EAAAC,gBAAA,CADC9B,KAAA,CAAAX,KAAK,kB,KAGG0C,WAAW,gBAAgBA,WAAW,kBAAkBA,WAAW,KAAKC,SAAS,I,cADhGxD,mBAAA,CAGM,OAHNyD,WAGM,EAF4F,KAClF,GAAAH,gBAAA,CAAG9B,KAAA,CAAA+B,WAAW,oBAvGlDpD,mBAAA,gBAyGoBP,mBAAA,CAwIM,OAxIN8D,WAwIM,I,kBAvIF1D,mBAAA,CAsIS2D,SAAA,QAhPjCC,WAAA,CA0GkEpC,KAAA,CAAAqC,SAAS,EAAjBC,IAAI;6BAAtCC,YAAA,CAsISC,iBAAA;UAtIDrE,KAAK,EAAC,YAAY;UAA4BE,GAAG,EAAEiE,IAAI,CAAC/D,EAAE;UAC7DkE,WAAS,EAAA1C,MAAA,IAAQC,KAAA,CAAA0C,SAAS,GAAGJ,IAAI,CAAC/D,EAAE;UAAGD,KAAK,EA3GzEI,eAAA,CA2G2E;;WAG9C;;UA9G7BM,OAAA,EAAAC,QAAA,CAgH4B,MAoFS,CApFTL,YAAA,CAoFS+D,iBAAA;YApFAC,IAAI,EAAE,EAAE;YAAEzE,KAAK,EAAC;;YAhHrDa,OAAA,EAAAC,QAAA,CAiHgC,MAEM,CAFNb,mBAAA,CAEM,OAFNyE,WAEM,GAnHtC1C,gBAAA,CAAA2B,gBAAA,CAkHuCQ,IAAI,CAAC/D,EAAE,IAAG,IAAE,GAAAuD,gBAAA,CAAGQ,IAAI,CAACjD,KAAK,IAAG,GAAC,iBAAyBiD,IAAI,CAACQ,IAAI,I,cAAlCtE,mBAAA,CAA+C,QAA/CuE,WAA+C,EAAX,MAAI,KAlH5GpE,mBAAA,e,GAqH8D2D,IAAI,CAACxD,IAAI,eAAewD,IAAI,CAACxD,IAAI,gBAAgBwD,IAAI,CAACxD,IAAI,gBAAgBwD,IAAI,CAACxD,IAAI,iBAAsDwD,IAAI,CAACxD,IAAI,gBAAgBwD,IAAI,CAACxD,IAAI,gB,cAAzMN,mBAAA,CAIM,OAJNwE,WAIM,GAFFpE,YAAA,CACWgC,mBAAA;cADDG,WAAW,EAAC,OAAO;cAACzC,KAAyB,EAAzB;gBAAA;cAAA;oBAvHlEK,mBAAA,gBA2HgE2D,IAAI,CAACxD,IAAI,c,cAAzCN,mBAAA,CAGM,OAHNyE,WAGM,GAFF7E,mBAAA,CAAwE,OAAxE8E,WAAwE,GAAtCtE,YAAA,CAAgCuE,mBAAA;cAAtBC,KAAK,EAAC;YAAG;cA5HzFpE,OAAA,EAAAC,QAAA,CA4H0F,MAAC,CA5H3FkB,gBAAA,CA4H0F,GAAC,E;cA5H3FX,CAAA;kBA6HoCpB,mBAAA,CAA2C,cAAtCQ,YAAA,CAAgCuE,mBAAA;cAAtBC,KAAK,EAAC;YAAG;cA7H5DpE,OAAA,EAAAC,QAAA,CA6H6D,MAAC,CA7H9DkB,gBAAA,CA6H6D,GAAC,E;cA7H9DX,CAAA;sBAAAb,mBAAA,gBAiI0C2D,IAAI,CAACP,WAAW,WAAWO,IAAI,CAACP,WAAW,aAAaO,IAAI,CAACP,WAAW,KAAKC,SAAS,I,cADhGxD,mBAAA,CAGM,OAHN6E,WAGM,EAAAvB,gBAAA,CADCQ,IAAI,CAACP,WAAW,oBAlIvDpD,mBAAA,gBAqIgCA,mBAAA,wBAA2B,G,kBAC3BH,mBAAA,CAYS2D,SAAA,QAlJzCC,WAAA,CAsI+EE,IAAI,CAACgB,OAAO,EAtI3F,CAsIkEC,CAAC,EAAEC,KAAK;mCAA1CjB,YAAA,CAYSC,iBAAA;gBAZDrE,KAAK,EAAC,WAAW;gBAAqCE,GAAG,EAAEkF,CAAC,CAACC;;gBAtIrGxE,OAAA,EAAAC,QAAA,CAuIoC,MAIS,CAJwDuE,KAAK,c,cAAtEjB,YAAA,CAISI,iBAAA;kBA3I7CtE,GAAA;kBAuI6CoF,MAAM,EAAE,CAAC;kBAAGb,IAAI,EAAE,EAAE;kBAAEzE,KAAK,EAAC;;kBAvIzEa,OAAA,EAAAC,QAAA,CAwIwC,MAEW,CAFXL,YAAA,CAEW8E,mBAAA;oBAFDpF,KAAmC,EAAnC;sBAAA;sBAAA;oBAAA,CAAmC;oBAAEqF,GAAG,EAAEJ,CAAC,CAACK,GAAG;oBACpD,kBAAgB,GAAGL,CAAC,CAACK,GAAG;;kBAzIrEpE,CAAA;gDAAAb,mBAAA,gBA6I8C6E,KAAK,cAAcA,KAAK,QAAQlB,IAAI,CAACgB,OAAO,CAACO,MAAM,Q,cAD7DtB,YAAA,CAKSI,iBAAA;kBAjJ7CtE,GAAA;kBA4I6CuE,IAAI,EAAE,EAAE;kBAAEzE,KAAK,EAAC;;kBA5I7Da,OAAA,EAAAC,QAAA,CA8IwC,MAEW,CAFXL,YAAA,CAEW8E,mBAAA;oBAFDpF,KAAmC,EAAnC;sBAAA;sBAAA;oBAAA,CAAmC;oBAAEqF,GAAG,EAAErB,IAAI,CAACgB,OAAO,CAACE,KAAK,MAAMI,GAAG;oBAC1E,kBAAgB,GAAGtB,IAAI,CAACgB,OAAO,CAACE,KAAK,MAAMI,GAAG;;kBA/I3FpE,CAAA;gDAAAb,mBAAA,e;gBAAAa,CAAA;;4CAoJ0C8C,IAAI,CAACgB,OAAO,CAACO,MAAM,U,cAD7BrF,mBAAA,CACsD,QADtDsF,WACsD,EAAjB,YAAU,KApJ/EnF,mBAAA,gBAuJgCA,mBAAA,sBAAyB,G,kBACzBH,mBAAA,CAKS2D,SAAA,QA7JzCC,WAAA,CAwJsEE,IAAI,CAACyB,SAAS,EAAnBR,CAAC;mCAAlChB,YAAA,CAKSC,iBAAA;gBALDrE,KAAK,EAAC,WAAW;gBAA8BE,GAAG,EAAEkF,CAAC,CAACC;;gBAxJ9FxE,OAAA,EAAAC,QAAA,CAyJoC,MAGwD,CAHxDb,mBAAA,CAGwD;kBAHjD4F,KAAK,EAAC,KAAG;kBAACC,MAAM,EAAC,KAAG;kBAACC,kBAAkB,EAAC,MAAI;kBAACC,gBAAgB,EAAC,OAAK;kBACtEC,SAAS,EAAC,MAAI;kBAACC,QAAQ,EAAC,OAAK;kBAACC,MAAM,EAAC,KAAG;kBAACC,WAAW,EAAC,GAAC;kBAACC,WAAW,EAAC,MAAI;kBACvEC,aAAa,EAAC,MAAI;kBAACC,YAAY,EAAC,MAAI;kBAACC,iBAAiB,EAAC,MAAI;kBAACC,WAAW,EAAC,MAAI;kBAC5EC,oBAAoB,EAAC,MAAI;kBAACC,OAAO,EAAC,MAAI;kBAAEnB,GAAG,EAAEJ,CAAC,CAACK;wCA5JvFmB,WAAA,E;gBAAAvF,CAAA;;+DAgKgChB,mBAAA,CAyBM2D,SAAA,QAzLtCC,WAAA,CAgKwEE,IAAI,CAAC0C,OAAO,EAAnBC,GAAG;mCAApCzG,mBAAA,CAyBM;gBAzBDL,KAAK,EAAC,cAAc;gBAA8BE,GAAG,EAAE4G,GAAG,CAAC1G;kBAE5DI,mBAAA,wBAA2B,EACX2D,IAAI,CAACxD,IAAI,gB,cAAzByD,YAAA,CAIWY,mBAAA;gBAvK/C9E,GAAA;gBAmK2E+E,KAAK,EAAC;;gBAnKjFpE,OAAA,EAAAC,QAAA,CAoKwC,MAAe,CApKvDkB,gBAAA,CAAA2B,gBAAA,CAoK2CmD,GAAG,CAAC5F,KAAK,kBACF4F,GAAG,CAACC,WAAW,I,cADV1G,mBAAA,CAEmD,QAFnD2G,WAEmD,EADvC,IAAE,GAAArD,gBAAA,CACrBmD,GAAG,CAACG,MAAM,GAAGH,GAAG,CAACI,OAAO,IAAG,KAAQ,GAAAvD,gBAAA,CAAGmD,GAAG,CAACG,MAAM,oBAtKhGzG,mBAAA,e;gBAAAa,CAAA;8CAAAb,mBAAA,gBAyKoCA,mBAAA,wBAA2B,EACR2D,IAAI,CAACxD,IAAI,mB,cAA5ByD,YAAA,CAMc+C,sBAAA;gBAhLlDjH,GAAA;gBA0KiF+E,KAAK,EAAC;;gBA1KvFpE,OAAA,EAAAC,QAAA,CA2KwC,MAAe,CA3KvDkB,gBAAA,CAAA2B,gBAAA,CA2K2CmD,GAAG,CAAC5F,KAAK,IAAG,GACf,iBACU4F,GAAG,CAACC,WAAW,I,cADzB1G,mBAAA,CAGqD,QAHrD+G,WAGqD,EAF1B,IAAE,GAAAzD,gBAAA,CACrBmD,GAAG,CAACG,MAAM,GAAoDH,GAAG,CAACI,OAAO,IAC3D,KAAQ,GAAAvD,gBAAA,CAAGmD,GAAG,CAACG,MAAM,oBA/KnFzG,mBAAA,e;gBAAAa,CAAA;8CAAAb,mBAAA,gBAkLoCA,mBAAA,wBAA2B,EACX2D,IAAI,CAACxD,IAAI,eAAewD,IAAI,CAACkD,GAAG,Q,cAAhDjD,YAAA,CAEW3B,mBAAA,EAFX6E,WAAA,CAEW;gBArL/CpH,GAAA;gBAmL0FS,IAAI,EAAC,UAAU;gBACjEiC,WAAW,EAAC,OAAO;gBApL3D2E,OAAA;iBAoLoET,GAAG,CAAC5F,KAAK,iCApL7EV,mBAAA,gBAsLoD2D,IAAI,CAACxD,IAAI,eAAewD,IAAI,CAACkD,GAAG,U,cAAhDjD,YAAA,CAEW3B,mBAAA,EAFX6E,WAAA,CAEW;gBAxL/CpH,GAAA;gBAsL4F0C,WAAW,EAAC,OAAO;gBAtL/G2E,OAAA;iBAuLgDT,GAAG,CAAC5F,KAAK,iCAvLzDV,mBAAA,e;4CA2LgE2D,IAAI,CAACxD,IAAI,e,cAAzCN,mBAAA,CAGM,OAHNmH,WAGM,GAFFhH,mBAAA,wBAA2B,EAC3BC,YAAA,CAA+CgH,kBAAA;cAAtCxC,KAAK,EAAC,GAAG;cAAEyC,GAAG,EAAEvD,IAAI,CAACwD;kDA7LlEnH,mBAAA,gBAgMgCA,mBAAA,yBAA4B,EACMqB,KAAA,CAAA+F,OAAO,IAAIzD,IAAI,CAAC0D,aAAa,U,cAA/DxH,mBAAA,CAEM,OAFNyH,WAEM,GADF7H,mBAAA,CAAgC,aAAA0D,gBAAA,CAAxBxB,QAAA,CAAA4F,SAAS,CAAC5D,IAAI,kB,KAlM1D3D,mBAAA,e;YAAAa,CAAA;wCAuMsCQ,KAAA,CAAA0C,SAAS,KAAKJ,IAAI,CAAC/D,EAAE,I,cAD/BgE,YAAA,CAwCSI,iBAAA;YA9OrCtE,GAAA;YAsMqCuE,IAAI,EAAE,CAAC;YAAEzE,KAAK,EAAC,cAAc;YAACG,KAAyB,EAAzB;cAAA;YAAA;;YAtMnEU,OAAA,EAAAC,QAAA,CAwMgC,MAqCkB,CArClBL,YAAA,CAqCkBuH,0BAAA;cA7OlDnH,OAAA,EAAAC,QAAA,CAyMoC,MAKa,CALbL,YAAA,CAKawH,qBAAA;gBALDjI,KAAK,EAAC,MAAM;gBAACkI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBACnE,YAAU,EAAC;;gBA1MnDvH,OAAA,EAAAC,QAAA,CA2MwC,MAE0B,CAF1BL,YAAA,CAE0BqC,oBAAA;kBAFf9C,KAAK,EAAC,IAAI;kBAACW,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAAkG,IAAI,CAAClE,IAAI,CAAC/D,EAAE;;kBA3MjGS,OAAA,EAAAC,QAAA,CA2MoG,MAE9C,CAF8CL,YAAA,CAE9CU,kBAAA;oBA7MtDN,OAAA,EAAAC,QAAA,CA4MgD,MAAW,CAAXL,YAAA,CAAW6H,kBAAA,E;oBA5M3DjH,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;4CA+MmEQ,KAAA,CAAA+F,OAAO,I,cAAtCxD,YAAA,CAKa6D,qBAAA;gBApNjD/H,GAAA;gBA+MgDF,KAAK,EAAC,MAAM;gBAAgBkI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,QAAQ;gBACnEC,SAAS,EAAC,QAAQ;gBAAC,YAAU,EAAC;;gBAhNtEvH,OAAA,EAAAC,QAAA,CAiNwC,MAE0B,CAF1BL,YAAA,CAE0BqC,oBAAA;kBAFf9C,KAAK,EAAC,IAAI;kBAACW,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAAoG,KAAK,CAACpE,IAAI,CAAC/D,EAAE;;kBAjNlGS,OAAA,EAAAC,QAAA,CAiNqG,MAE/C,CAF+CL,YAAA,CAE/CU,kBAAA;oBAnNtDN,OAAA,EAAAC,QAAA,CAkNgD,MAAQ,CAARL,YAAA,CAAQ2C,eAAA,E;oBAlNxD/B,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;8CAAAb,mBAAA,gBAqNoCC,YAAA,CAKawH,qBAAA;gBALDjI,KAAK,EAAC,MAAM;gBAACkI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBACnE,YAAU,EAAC;;gBAtNnDvH,OAAA,EAAAC,QAAA,CAuNwC,MAE0B,CAF1BL,YAAA,CAE0BqC,oBAAA;kBAFf9C,KAAK,EAAC,IAAI;kBAACW,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAAqG,IAAI,CAACrE,IAAI,CAAC/D,EAAE;;kBAvNjGS,OAAA,EAAAC,QAAA,CAuNoG,MAE9C,CAF8CL,YAAA,CAE9CU,kBAAA;oBAzNtDN,OAAA,EAAAC,QAAA,CAwNgD,MAAgB,CAAhBL,YAAA,CAAgBgI,uBAAA,E;oBAxNhEpH,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;4CA2NoCZ,YAAA,CAKawH,qBAAA;gBALDjI,KAAK,EAAC,MAAM;gBAACkI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBACnE,YAAU,EAAC;;gBA5NnDvH,OAAA,EAAAC,QAAA,CA6NwC,MAE0B,CAF1BL,YAAA,CAE0BqC,oBAAA;kBAFf9C,KAAK,EAAC,IAAI;kBAACW,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAAuG,OAAO,CAACvE,IAAI,CAAC/D,EAAE;;kBA7NpGS,OAAA,EAAAC,QAAA,CA6NuG,MAEjD,CAFiDL,YAAA,CAEjDU,kBAAA;oBA/NtDN,OAAA,EAAAC,QAAA,CA8NgD,MAAU,CAAVL,YAAA,CAAUkI,iBAAA,E;oBA9N1DtH,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;4CAiOoCZ,YAAA,CAKawH,qBAAA;gBALDjI,KAAK,EAAC,MAAM;gBAACkI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBACnE,YAAU,EAAC;;gBAlOnDvH,OAAA,EAAAC,QAAA,CAmOwC,MAE0B,CAF1BL,YAAA,CAE0BqC,oBAAA;kBAFf9C,KAAK,EAAC,IAAI;kBAACW,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAAyG,EAAE,CAACzE,IAAI,CAAC/D,EAAE;;kBAnO/FS,OAAA,EAAAC,QAAA,CAmOkG,MAE5C,CAF4CL,YAAA,CAE5CU,kBAAA;oBArOtDN,OAAA,EAAAC,QAAA,CAoOgD,MAAW,CAAXL,YAAA,CAAWoI,kBAAA,E;oBApO3DxH,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;4CAuOoCZ,YAAA,CAKawH,qBAAA;gBALDjI,KAAK,EAAC,MAAM;gBAACkI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBACnE,YAAU,EAAC;;gBAxOnDvH,OAAA,EAAAC,QAAA,CAyOwC,MAE0B,CAF1BL,YAAA,CAE0BqC,oBAAA;kBAFf9C,KAAK,EAAC,IAAI;kBAACW,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAA2G,IAAI,CAAC3E,IAAI,CAAC/D,EAAE;;kBAzOjGS,OAAA,EAAAC,QAAA,CAyOoG,MAE9C,CAF8CL,YAAA,CAE9CU,kBAAA;oBA3OtDN,OAAA,EAAAC,QAAA,CA0OgD,MAAa,CAAbL,YAAA,CAAasI,oBAAA,E;oBA1O7D1H,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;;cAAAA,CAAA;;YAAAA,CAAA;0CAAAb,mBAAA,e;UAAAa,CAAA;;;MAAAA,CAAA;;IAAAA,CAAA;MAsPQZ,YAAA,CAkHYuI,oBAAA;IAlHA9H,KAAK,EAAEW,KAAA,CAAAoH,iBAAiB;IAtP5CvG,UAAA,EAsPuDb,KAAA,CAAAE,mBAAmB;IAtP1E,uBAAAJ,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAsPuDC,KAAA,CAAAE,mBAAmB,GAAAH,MAAA;IAAG,cAAY,EAAEO,QAAA,CAAA+G,UAAU;IAAElJ,KAAK,EAAC,QAAQ;IACzG6F,KAAK,EAAC;;IAvPlBhF,OAAA,EAAAC,QAAA,CAwPY,MAwGU,CAxGVL,YAAA,CAwGU0I,kBAAA;MAxGDC,GAAG,EAAC,MAAM;MAAEC,KAAK,EAAExH,KAAA,CAAAC,eAAe;MAAE,aAAW,EAAC;;MAxPrEjB,OAAA,EAAAC,QAAA,CAyPgB,MAMe,CANfL,YAAA,CAMe6I,uBAAA;QANDtI,KAAK,EAAC;MAAM;QAzP1CH,OAAA,EAAAC,QAAA,CA0PoB,MAIY,CAJZL,YAAA,CAIY8I,oBAAA;UAJAC,QAAQ,EAAE3H,KAAA,CAAA4H,aAAa;UA1PvD/G,UAAA,EA0PkEb,KAAA,CAAAC,eAAe,CAACnB,IAAI;UA1PtF,uBAAAgB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA0PkEC,KAAA,CAAAC,eAAe,CAACnB,IAAI,GAAAiB,MAAA;UAAEgB,WAAW,EAAC,SAAS;UACpF8G,QAAM,EAAEvH,QAAA,CAAAwH;;UA3PjC9I,OAAA,EAAAC,QAAA,CA4PmC,MAAuB,E,kBAAlCT,mBAAA,CACY2D,SAAA,QA7PpCC,WAAA,CA4PkDpC,KAAA,CAAA+H,OAAO,EAAfzF,IAAI;iCAAtBC,YAAA,CACYyF,oBAAA;cADwB3J,GAAG,EAAEiE,IAAI,CAACc,KAAK;cAAGjE,KAAK,EAAEmD,IAAI,CAACnD,KAAK;cAAGiE,KAAK,EAAEd,IAAI,CAACc;;;UA5P9G5D,CAAA;;QAAAA,CAAA;UAgQ2CQ,KAAA,CAAAC,eAAe,CAACnB,IAAI,eAAoCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,gBAAqCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,gBAAqCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,iBAAsCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,gBAAqCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,gBAAqCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,c,cAArYN,mBAAA,CA4BM,OA5BNyJ,WA4BM,GArBoDjI,KAAA,CAAAC,eAAe,CAACnB,IAAI,e,cAA1EyD,YAAA,CAEekF,uBAAA;QAzQnCpJ,GAAA;QAuQkCc,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QAvQ/CU,OAAA,EAAAC,QAAA,CAwQwB,MAAyC,CAAzCL,YAAA,CAAyCgC,mBAAA;UAA/BwC,KAAK,EAAC,IAAI;UAACuE,QAAQ,EAAR;;QAxQ7CnI,CAAA;YAAAb,mBAAA,gBA0Q0EqB,KAAA,CAAAC,eAAe,CAACnB,IAAI,gB,cAA1EyD,YAAA,CAEekF,uBAAA;QA5QnCpJ,GAAA;QA0QkCc,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QA1Q/CU,OAAA,EAAAC,QAAA,CA2QwB,MAAyC,CAAzCL,YAAA,CAAyCgC,mBAAA;UAA/BwC,KAAK,EAAC,IAAI;UAACuE,QAAQ,EAAR;;QA3Q7CnI,CAAA;YAAAb,mBAAA,gBA6Q0EqB,KAAA,CAAAC,eAAe,CAACnB,IAAI,iB,cAA1EyD,YAAA,CAEekF,uBAAA;QA/QnCpJ,GAAA;QA6QkCc,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QA7Q/CU,OAAA,EAAAC,QAAA,CA8QwB,MAAyC,CAAzCL,YAAA,CAAyCgC,mBAAA;UAA/BwC,KAAK,EAAC,IAAI;UAACuE,QAAQ,EAAR;;QA9Q7CnI,CAAA;YAAAb,mBAAA,gBAgR0EqB,KAAA,CAAAC,eAAe,CAACnB,IAAI,c,cAA1EyD,YAAA,CAEekF,uBAAA;QAlRnCpJ,GAAA;QAgRkCc,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QAhR/CU,OAAA,EAAAC,QAAA,CAiRwB,MAAyC,CAAzCL,YAAA,CAAyCgC,mBAAA;UAA/BwC,KAAK,EAAC,IAAI;UAACuE,QAAQ,EAAR;;QAjR7CnI,CAAA;YAAAb,mBAAA,gBAmR0EqB,KAAA,CAAAC,eAAe,CAACnB,IAAI,gB,cAA1EyD,YAAA,CAEekF,uBAAA;QArRnCpJ,GAAA;QAmRkCc,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QAnR/CU,OAAA,EAAAC,QAAA,CAoRwB,MAA0C,CAA1CL,YAAA,CAA0CgC,mBAAA;UAAhCwC,KAAK,EAAC,KAAK;UAACuE,QAAQ,EAAR;;QApR9CnI,CAAA;YAAAb,mBAAA,gBAsR0EqB,KAAA,CAAAC,eAAe,CAACnB,IAAI,gB,cAA1EyD,YAAA,CAEekF,uBAAA;QAxRnCpJ,GAAA;QAsRkCc,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QAtR/CU,OAAA,EAAAC,QAAA,CAuRwB,MAAyC,CAAzCL,YAAA,CAAyCgC,mBAAA;UAA/BwC,KAAK,EAAC,IAAI;UAACuE,QAAQ,EAAR;;QAvR7CnI,CAAA;YAAAb,mBAAA,gBAyRoBC,YAAA,CAEe6I,uBAAA;QAFDtI,KAAK,EAAC;MAAM;QAzR9CH,OAAA,EAAAC,QAAA,CA0RwB,MAA4D,CAA5DL,YAAA,CAA4D0G,sBAAA;UA1RpFzE,UAAA,EA0R8Cb,KAAA,CAAAC,eAAe,CAAC6C,IAAI;UA1RlE,uBAAAhD,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA0R8CC,KAAA,CAAAC,eAAe,CAAC6C,IAAI,GAAA/C,MAAA;;UA1RlEf,OAAA,EAAAC,QAAA,CA0RoE,MAAE,CA1RtEkB,gBAAA,CA0RoE,IAAE,E;UA1RtEX,CAAA;;QAAAA,CAAA;6BA6RgBhB,mBAAA,CAkEM,OAlEN0J,WAkEM,GAjEFtJ,YAAA,CAEe6I,uBAAA;QAFDtI,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QA9R/CU,OAAA,EAAAC,QAAA,CA+RwB,MAA8F,CAA9FL,YAAA,CAA8FgC,mBAAA;UA/RtHC,UAAA,EA+R2Cb,KAAA,CAAAC,eAAe,CAACZ,KAAK;UA/RhE,uBAAAS,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA+R2CC,KAAA,CAAAC,eAAe,CAACZ,KAAK,GAAAU,MAAA;UAAEgB,WAAW,EAAC,OAAO;UAACzC,KAAoB,EAApB;YAAA;UAAA;;QA/RtFkB,CAAA;UAkSoBZ,YAAA,CAGe6I,uBAAA;QAHDtI,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QAlS/CU,OAAA,EAAAC,QAAA,CAmSwB,MACoC,CADpCL,YAAA,CACoCgC,mBAAA;UApS5DC,UAAA,EAmS2Cb,KAAA,CAAAC,eAAe,CAAC8B,WAAW;UAnStE,uBAAAjC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAmS2CC,KAAA,CAAAC,eAAe,CAAC8B,WAAW,GAAAhC,MAAA;UAAEgB,WAAW,EAAC,SAAS;UACjEzC,KAAoB,EAApB;YAAA;UAAA;;QApS5BkB,CAAA;UAuSoBZ,YAAA,CAEe6I,uBAAA;QAFDtI,KAAK,EAAC;MAAM;QAvS9CH,OAAA,EAAAC,QAAA,CAwSwB,MAA4D,CAA5DL,YAAA,CAA4D0G,sBAAA;UAxSpFzE,UAAA,EAwS8Cb,KAAA,CAAAC,eAAe,CAAC6C,IAAI;UAxSlE,uBAAAhD,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAwS8CC,KAAA,CAAAC,eAAe,CAAC6C,IAAI,GAAA/C,MAAA;;UAxSlEf,OAAA,EAAAC,QAAA,CAwSoE,MAAE,CAxStEkB,gBAAA,CAwSoE,IAAE,E;UAxStEX,CAAA;;QAAAA,CAAA;UA2SoCQ,KAAA,CAAAC,eAAe,CAACnB,IAAI,gBAAgBkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,mB,cAAxEN,mBAAA,CAoBW2D,SAAA;QA/T/B9D,GAAA;MAAA,K,kBA4SwBG,mBAAA,CAiBe2D,SAAA,QA7TvCC,WAAA,CA4S0FpC,KAAA,CAAAC,eAAe,CAAC+E,OAAO,EA5SjH,CA4S0E1C,IAAI,EAAEkB,KAAK;6BAA7DjB,YAAA,CAiBekF,uBAAA;UAjBAtI,KAAK,UAAUqE,KAAK;UAC9BnF,GAAG,EAAEmF;;UA7SlCxE,OAAA,EAAAC,QAAA,CA8S4B,MAaS,CAbTL,YAAA,CAaS4D,iBAAA;YA3TrCxD,OAAA,EAAAC,QAAA,CA+SgC,MAES,CAFTL,YAAA,CAES+D,iBAAA;cAFAC,IAAI,EAAE;YAAE;cA/SjD5D,OAAA,EAAAC,QAAA,CAgToC,MAA+D,CAA/DL,YAAA,CAA+DgC,mBAAA;gBAhTnGC,UAAA,EAgTuDyB,IAAI,CAACjD,KAAK;gBAhTjE,uBAAAU,MAAA,IAgTuDuC,IAAI,CAACjD,KAAK,GAAAU,MAAA;gBAAEgB,WAAW,EAAC;;cAhT/EvB,CAAA;0CAkTgCZ,YAAA,CAQS+D,iBAAA;cARAC,IAAI,EAAE;YAAE;cAlTjD5D,OAAA,EAAAC,QAAA,CAmToC,MACiD,CADjDL,YAAA,CACiDqC,oBAAA;gBADtCnC,IAAI,EAAC,QAAQ;gBAACqJ,KAAK,EAAL,EAAK;gBAAChK,KAAK,EAAC,oBAAoB;gBACpD0B,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAA8H,YAAY,CAAC5E,KAAK;;gBApTlExE,OAAA,EAAAC,QAAA,CAoTqE,MAAI,CApTzEkB,gBAAA,CAoTqE,MAAI,E;gBApTzEX,CAAA;iEAqTqG8C,IAAI,CAAC4C,WAAW,I,cAAjF3C,YAAA,CACuDtB,oBAAA;gBAtT3F5C,GAAA;gBAqT+CS,IAAI,EAAC,SAAS;gBAACqJ,KAAK,EAAL,EAAK;gBAAC7J,KAAyB,EAAzB;kBAAA;gBAAA,CAAyB;gBACpDuB,OAAK,EAAAE,MAAA,IAAEuC,IAAI,CAAC4C,WAAW;;gBAtThElG,OAAA,EAAAC,QAAA,CAsTyE,MAAM,CAtT/EkB,gBAAA,CAsTyE,QAAM,E;gBAtT/EX,CAAA;kEAAAb,mBAAA,gBAuTiG2D,IAAI,CAAC4C,WAAW,I,cAA7E3C,YAAA,CACwDtB,oBAAA;gBAxT5F5C,GAAA;gBAuT+CS,IAAI,EAAC,MAAM;gBAACqJ,KAAK,EAAL,EAAK;gBAAC7J,KAAyB,EAAzB;kBAAA;gBAAA,CAAyB;gBACjDuB,OAAK,EAAAE,MAAA,IAAEuC,IAAI,CAAC4C,WAAW;;gBAxThElG,OAAA,EAAAC,QAAA,CAwT0E,MAAM,CAxThFkB,gBAAA,CAwT0E,QAAM,E;gBAxThFX,CAAA;kEAAAb,mBAAA,gBAyTiF2D,IAAI,CAAC4C,WAAW,I,cAA7D3C,YAAA,CAAiF8F,0BAAA;gBAzTrHhK,GAAA;gBAAAwC,UAAA,EAyT8DyB,IAAI,CAAC8C,MAAM;gBAzTzE,uBAAArF,MAAA,IAyT8DuC,IAAI,CAAC8C,MAAM,GAAArF;gFAzTzEpB,mBAAA,e;cAAAa,CAAA;;YAAAA,CAAA;;UAAAA,CAAA;;sCA8TwBZ,YAAA,CAA2FqC,oBAAA;QAAhFnC,IAAI,EAAC,SAAS;QAACqJ,KAAK,EAAL,EAAK;QAAChK,KAAK,EAAC,iBAAiB;QAAE0B,OAAK,EAAES,QAAA,CAAAgI;;QA9TxFtJ,OAAA,EAAAC,QAAA,CA8TmG,MAAI,CA9TvGkB,gBAAA,CA8TmG,MAAI,E;QA9TvGX,CAAA;oEAAAb,mBAAA,gBAiUoCqB,KAAA,CAAAC,eAAe,CAACnB,IAAI,e,cAApCN,mBAAA,CAQW2D,SAAA;QAzU/B9D,GAAA;MAAA,IAkUwBO,YAAA,CAGe6I,uBAAA;QAHDtI,KAAK,EAAC;MAAI;QAlUhDH,OAAA,EAAAC,QAAA,CAmU4B,MACW,CADXL,YAAA,CACWgC,mBAAA;UADD9B,IAAI,EAAC,UAAU;UAACX,KAAK,EAAC,UAAU;UAAEoK,IAAI,EAAEvI,KAAA,CAAAC,eAAe,CAACuF,GAAG;UAAEgD,MAAM,EAAC;;QAnU1GhJ,CAAA;UAsUwBZ,YAAA,CAEe6I,uBAAA;QAFDtI,KAAK,EAAC;MAAI;QAtUhDH,OAAA,EAAAC,QAAA,CAuU4B,MAAoF,CAApFL,YAAA,CAAoFyJ,0BAAA;UAvUhHxH,UAAA,EAuUsDb,KAAA,CAAAC,eAAe,CAACuF,GAAG;UAvUzE,uBAAA1F,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAuUsDC,KAAA,CAAAC,eAAe,CAACuF,GAAG,GAAAzF,MAAA;UAAG0I,GAAG,EAAE,CAAC;UAAG5C,GAAG,EAAE;;QAvU1FrG,CAAA;wCAAAb,mBAAA,gBA2UoCqB,KAAA,CAAAC,eAAe,CAACnB,IAAI,e,cAChCyD,YAAA,CAEekF,uBAAA;QA9UvCpJ,GAAA;QA4UsCc,KAAK,EAAC;;QA5U5CH,OAAA,EAAAC,QAAA,CA6U4B,MAAsF,CAAtFL,YAAA,CAAsFyJ,0BAAA;UA7UlHxH,UAAA,EA6UsDb,KAAA,CAAAC,eAAe,CAAC6F,KAAK;UA7U3E,uBAAAhG,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA6UsDC,KAAA,CAAAC,eAAe,CAAC6F,KAAK,GAAA/F,MAAA;UAAG0I,GAAG,EAAE,CAAC;UAAG5C,GAAG,EAAE;;QA7U5FrG,CAAA;YAAAb,mBAAA,gBAgVoBC,YAAA,CAMe6I,uBAAA;QANDtI,KAAK,EAAC;MAAM;QAhV9CH,OAAA,EAAAC,QAAA,CAiVwB,MAIY,CAJZL,YAAA,CAIY8J,oBAAA;UAJDvK,KAAK,EAAC,YAAY;UAAEwK,MAAM,EAACC,IAAA,CAAAC,YAAY;UAACC,QAAQ,EAAR,EAAQ;UAAE,cAAY,EAAExI,QAAA,CAAAyI,WAAW;UACjF,eAAa,EAAEzI,QAAA,CAAA0I,iBAAiB;UAAG,WAAS,EAAEhJ,KAAA,CAAAC,eAAe,CAACqD,OAAO;UAAG2F,KAAK,EAAE;;UAlV5GjK,OAAA,EAAAC,QAAA,CAmV4B,MAAmE,CAAnEL,YAAA,CAAmEqC,oBAAA;YAAxDiI,IAAI,EAAC,OAAO;YAACf,KAAK,EAAL,EAAK;YAAC7J,KAAoB,EAApB;cAAA;YAAA;;YAnV1DU,OAAA,EAAAC,QAAA,CAmV+E,MAAI,CAnVnFkB,gBAAA,CAmV+E,MAAI,E;YAnVnFX,CAAA;cAoV4B2J,WAA+D,C;UApV3F3J,CAAA;;QAAAA,CAAA;UAwVoBZ,YAAA,CAMe6I,uBAAA;QANDtI,KAAK,EAAC;MAAM;QAxV9CH,OAAA,EAAAC,QAAA,CAyVwB,MAIY,CAJZL,YAAA,CAIY8J,oBAAA;UAJDvK,KAAK,EAAC,cAAc;UAAEwK,MAAM,EAACC,IAAA,CAAAQ,cAAc;UAAE,cAAY,EAAE9I,QAAA,CAAA+I,WAAW;UAC5E,eAAa,EAAE/I,QAAA,CAAAgJ,iBAAiB;UAAG,WAAS,EAAEtJ,KAAA,CAAAC,eAAe,CAAC8D,SAAS;UAAGkF,KAAK,EAAE;;UA1V9GjK,OAAA,EAAAC,QAAA,CA2V4B,MAAmE,CAAnEL,YAAA,CAAmEqC,oBAAA;YAAxDiI,IAAI,EAAC,OAAO;YAACf,KAAK,EAAL,EAAK;YAAC7J,KAAoB,EAApB;cAAA;YAAA;;YA3V1DU,OAAA,EAAAC,QAAA,CA2V+E,MAAI,CA3VnFkB,gBAAA,CA2V+E,MAAI,E;YA3VnFX,CAAA;cA4V4B+J,WAAgE,C;UA5V5F/J,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;kCAiWYpB,mBAAA,CAMO,QANPoL,WAMO,GALH5K,YAAA,CAIS4D,iBAAA;MAtWzBxD,OAAA,EAAAC,QAAA,CAmWoB,MAAyE,CAAzEL,YAAA,CAAyEqC,oBAAA;QAA7D2B,IAAI,EAAE,CAAC;QAAE9D,IAAI,EAAC,SAAS;QAAEe,OAAK,EAAES,QAAA,CAAAmJ;;QAnWhEzK,OAAA,EAAAC,QAAA,CAmW+E,MAAE,CAnWjFkB,gBAAA,CAmW+E,IAAE,E;QAnWjFX,CAAA;sCAAAW,gBAAA,CAmW6F,KAEzE,GAAAvB,YAAA,CAAuDqC,oBAAA;QAA3C2B,IAAI,EAAE,CAAC;QAAG/C,OAAK,EAAES,QAAA,CAAA+G;;QArWjDrI,OAAA,EAAAC,QAAA,CAqW6D,MAAE,CArW/DkB,gBAAA,CAqW6D,IAAE,E;QArW/DX,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;8DAyWQZ,YAAA,CA6BYuI,oBAAA;IAtYpBtG,UAAA,EAyW4Bb,KAAA,CAAA0J,mBAAmB;IAzW/C,uBAAA5J,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAyW4BC,KAAA,CAAA0J,mBAAmB,GAAA3J,MAAA;IAAGV,KAAK,EAAEW,KAAA,CAAA2J,iBAAiB;IAAExL,KAAK,EAAC,YAAY;IAAE,YAAU,EAAE,KAAK;IACrG6F,KAAK,EAAC;;IA1WlBhF,OAAA,EAAAC,QAAA,CA2WY,MAqBS,CArBTL,YAAA,CAqBS4D,iBAAA;MAhYrBxD,OAAA,EAAAC,QAAA,CA4WgB,MAIS,CAJTL,YAAA,CAIS+D,iBAAA;QAJDC,IAAI,EAAC,GAAG;QAACtE,KAA0B,EAA1B;UAAA;QAAA;;QA5WjCU,OAAA,EAAAC,QAAA,CA6WoB,MAES,CAFTL,YAAA,CAES4D,iBAAA;UA/W7BxD,OAAA,EAAAC,QAAA,CA8WwB,MAA+E,CAA/E2K,WAA+E,C;UA9WvGpK,CAAA;;QAAAA,CAAA;UAiXgBZ,YAAA,CAcS+D,iBAAA;QAdDC,IAAI,EAAC;MAAI;QAjXjC5D,OAAA,EAAAC,QAAA,CAkXoB,MAES,CAFTL,YAAA,CAES4D,iBAAA;UApX7BxD,OAAA,EAAAC,QAAA,CAmXwB,MAAe,CAAf4K,WAAe,C;UAnXvCrK,CAAA;YAqXoBZ,YAAA,CAK2F4D,iBAAA;UALnFlE,KAAuB,EAAvB;YAAA;UAAA;QAAuB;UArXnDU,OAAA,EAAAC,QAAA,CAsXwB,MAGS,CAHTL,YAAA,CAGS+D,iBAAA;YAHAC,IAAI,EAAE,EAAE;YAAEtE,KAAyB,EAAzB;cAAA;YAAA;;YAtX3CU,OAAA,EAAAC,QAAA,CAuX4B,MACW,CADXL,YAAA,CACWgC,mBAAA;cADAG,WAAW,EAACf,KAAA,CAAA8J,SAAS;cAvX5DjJ,UAAA,EAuXsEb,KAAA,CAAA8J,SAAS;cAvX/E,uBAAAhK,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAuXsEC,KAAA,CAAA8J,SAAS,GAAA/J,MAAA;cAAExB,EAAE,EAAC,UAAU;cAAEoJ,QAAQ,EAAE;;YAvX1GnI,CAAA;cA0XwBZ,YAAA,CAA8EqC,oBAAA;YAAnEnC,IAAI,EAAC,MAAM;YAACqJ,KAAK,EAAL,EAAK;YAAC5J,EAAE,EAAC,SAAS;YAAEsB,OAAK,EAAES,QAAA,CAAAyJ;;YA1X1E/K,OAAA,EAAAC,QAAA,CA0XsF,MAAI,CA1X1FkB,gBAAA,CA0XsF,MAAI,E;YA1X1FX,CAAA;;UAAAA,CAAA;YA2XoBZ,YAAA,CAGS4D,iBAAA;UAHDlE,KAAwB,EAAxB;YAAA;UAAA;QAAwB;UA3XpDU,OAAA,EAAAC,QAAA,CA4XwB,MAAyE,CAAzEL,YAAA,CAAyEqC,oBAAA;YAA9DnC,IAAI,EAAC,SAAS;YAACqJ,KAAK,EAAL,EAAK;YAAEtI,OAAK,EAAE+I,IAAA,CAAAoB;;YA5XhEhL,OAAA,EAAAC,QAAA,CA4XgF,MAAK,CA5XrFkB,gBAAA,CA4XgF,OAAK,E;YA5XrFX,CAAA;0CA6XwBZ,YAAA,CAA4FqC,oBAAA;YAAjFnC,IAAI,EAAC,SAAS;YAAEe,OAAK,EAAES,QAAA,CAAA2J,YAAY;YAAE3L,KAAyB,EAAzB;cAAA;YAAA;;YA7XxEU,OAAA,EAAAC,QAAA,CA6XkG,MAAM,CA7XxGkB,gBAAA,CA6XkG,QAAM,E;YA7XxGX,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAiYYpB,mBAAA,CAIO,QAJP8L,WAIO,GAHHtL,YAAA,CAES4D,iBAAA;MApYzBxD,OAAA,EAAAC,QAAA,CAmYoB,MAAuF,CAAvFL,YAAA,CAAuFqC,oBAAA;QAA3E2B,IAAI,EAAE,CAAC;QAAE9D,IAAI,EAAC,SAAS;QAACR,KAAmB,EAAnB;UAAA;QAAA,CAAmB;QAAEuB,OAAK,EAAES,QAAA,CAAA6J;;QAnYpFnL,OAAA,EAAAC,QAAA,CAmY4F,MAAG,CAnY/FkB,gBAAA,CAmY4F,KAAG,E;QAnY/FX,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;8CAuYQZ,YAAA,CASYuI,oBAAA;IAhZpBtG,UAAA,EAuY4Bb,KAAA,CAAAoK,mBAAmB;IAvY/C,uBAAAtK,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAuY4BC,KAAA,CAAAoK,mBAAmB,GAAArK,MAAA;IAAE5B,KAAK,EAAC,YAAY;IAAE,YAAU,EAAE,KAAK;IAAG,sBAAoB,EAAE,KAAK;IACxG6F,KAAK,EAAC;;IAxYlBhF,OAAA,EAAAC,QAAA,CAyYY,MAA+B,CAA/Bb,mBAAA,CAA+B,cAAA0D,gBAAA,CAAtB9B,KAAA,CAAAqK,YAAY,kBACrBjM,mBAAA,CAKO,QALPkM,WAKO,GAJH1L,YAAA,CAGS4D,iBAAA;MA9YzBxD,OAAA,EAAAC,QAAA,CA4YoB,MACwD,CADxDL,YAAA,CACwDqC,oBAAA;QAD5C2B,IAAI,EAAE,CAAC;QAAE9D,IAAI,EAAC,QAAQ;QAACR,KAAmB,EAAnB;UAAA;QAAA,CAAmB;QACjDuB,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAAEC,KAAA,CAAAoK,mBAAmB;;QA7YnDpL,OAAA,EAAAC,QAAA,CA6Y6D,MAAG,CA7YhEkB,gBAAA,CA6Y6D,KAAG,E;QA7YhEX,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;qCAiZQb,mBAAA,cAAiB,EACjBC,YAAA,CA0CYuI,oBAAA;IA1CA9H,KAAK,EAAEW,KAAA,CAAAuK,kBAAkB;IAlZ7C1J,UAAA,EAkZwDb,KAAA,CAAAwK,oBAAoB;IAlZ5E,uBAAA1K,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAkZwDC,KAAA,CAAAwK,oBAAoB,GAAAzK,MAAA;IAAG,cAAY,EAAEO,QAAA,CAAAmK,gBAAgB;IACjGtM,KAAK,EAAC;;IAnZlBa,OAAA,EAAAC,QAAA,CAoZY,MAuCU,CAvCKe,KAAA,CAAAqC,SAAS,CAACwB,MAAM,U,cAA/BtB,YAAA,CAuCU+E,kBAAA;MA3btBjJ,GAAA;MAoZmDF,KAAK,EAAC,YAAY;MAACoJ,GAAG,EAAC,MAAM;MAAC,aAAW,EAAC;;MApZ7FvI,OAAA,EAAAC,QAAA,CAsZgB,MAEM,CAFNb,mBAAA,CAEM,OAFNsM,WAEM,EAFmB,QAChB,GAAA5I,gBAAA,CAAG9B,KAAA,CAAAqC,SAAS,CAACrC,KAAA,CAAA2K,UAAU,EAAEpM,EAAE,IAAG,IAAE,GAAAuD,gBAAA,CAAG9B,KAAA,CAAAqC,SAAS,CAACrC,KAAA,CAAA2K,UAAU,EAAEtL,KAAK,kBAGvET,YAAA,CAMe6I,uBAAA;QANDtI,KAAK,EAAC;MAAM;QA1Z1CH,OAAA,EAAAC,QAAA,CA2ZoB,MAIY,CAJZL,YAAA,CAIY8I,oBAAA;UA/ZhC7G,UAAA,EA2ZwCb,KAAA,CAAA4K,YAAY,CAACC,WAAW;UA3ZhE,uBAAA/K,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA2ZwCC,KAAA,CAAA4K,YAAY,CAACC,WAAW,GAAA9K,MAAA;UAAEgB,WAAW,EAAC;;UA3Z9E/B,OAAA,EAAAC,QAAA,CA4ZmC,MAA+B,E,kBAA1CT,mBAAA,CAEY2D,SAAA,QA9ZpCC,WAAA,CA4ZkD9B,QAAA,CAAAwK,eAAe,EAAvBxI,IAAI;iCAAtBC,YAAA,CAEYyF,oBAAA;cAFgC3J,GAAG,EAAEiE,IAAI,CAAC/D,EAAE;cAAGY,KAAK,EAAEmB,QAAA,CAAAyK,OAAO,CAACzI,IAAI;cACzEc,KAAK,EAAEd,IAAI,CAAC/D;;;UA7ZzCiB,CAAA;;QAAAA,CAAA;UAkaiDQ,KAAA,CAAA4K,YAAY,CAACC,WAAW,U,cAAzDtI,YAAA,CAMekF,uBAAA;QAxa/BpJ,GAAA;QAka8Bc,KAAK,EAAC;;QAlapCH,OAAA,EAAAC,QAAA,CAmaoB,MAIY,CAJZL,YAAA,CAIY8I,oBAAA;UAvahC7G,UAAA,EAmawCb,KAAA,CAAA4K,YAAY,CAACI,SAAS;UAna9D,uBAAAlL,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAmawCC,KAAA,CAAA4K,YAAY,CAACI,SAAS,GAAAjL,MAAA;UAAEgB,WAAW,EAAC;;UAna5E/B,OAAA,EAAAC,QAAA,CAoamC,MAA+D,E,kBAA1ET,mBAAA,CAEY2D,SAAA,QAtapCC,WAAA,CAoakDpC,KAAA,CAAAqC,SAAS,CAACrC,KAAA,CAAA4K,YAAY,CAACC,WAAW,MAAM7F,OAAO,EAAvD1C,IAAI;iCAAtBC,YAAA,CAEYyF,oBAAA;cAFgE3J,GAAG,EAAEiE,IAAI,CAAC/D,EAAE;cACnFY,KAAK,EAAEmD,IAAI,CAACjD,KAAK;cAAG+D,KAAK,EAAEd,IAAI,CAAC/D;;;UAra7DiB,CAAA;;QAAAA,CAAA;YAAAb,mBAAA,gBA0a8CqB,KAAA,CAAA4K,YAAY,CAACC,WAAW,U,cAAtDrM,mBAAA,CAQM,OARNyM,WAQM,GAPFtM,mBAAA,2BAA8B,EA3alDwB,gBAAA,CA2akD,MAC3B,GAAA/B,mBAAA,CACI,QADJ8M,WACI,EADyB,KAAE,GAAApJ,gBAAA,CAAGxB,QAAA,CAAAyK,OAAO,CAAC/K,KAAA,CAAAqC,SAAS,CAACrC,KAAA,CAAA4K,YAAY,CAACC,WAAW,UAAS,KACxF,iBA7apB1K,gBAAA,CA6a2B,MAAI,GAAA/B,mBAAA,CAIJ,QAJI+M,WAIJ,EAJiC,KAAE,GAAArJ,gBAAA,CAAG9B,KAAA,CAAAqC,SAAS,CAACrC,KAAA,CAAA4K,YAAY,CAACC,WAAW,G,GAA+B7F,OAAO,CAAChF,KAAA,CAAA4K,YAAY,CAACI,SAAS,G,GAA+B3L,KAAK,IAG1K,KACN,iBAjbpBc,gBAAA,CAib2B,UACX,E,KAlbhBxB,mBAAA,gBAmb8C2B,QAAA,CAAAwK,eAAe,CAACjH,MAAM,U,cAApDrF,mBAAA,CAEM,OAFN4M,WAEM,EAFsD,0BAE5D,KArbhBzM,mBAAA,gBAubgBP,mBAAA,CAEM,OAFNiN,WAEM,GADFzM,YAAA,CAA0EqC,oBAAA;QAA/DnC,IAAI,EAAC,SAAS;QAAEe,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAAEO,QAAA,CAAAgL,YAAY,CAACtL,KAAA,CAAA2K,UAAU;;QAxb7E3L,OAAA,EAAAC,QAAA,CAwbgF,MAAE,CAxblFkB,gBAAA,CAwbgF,IAAE,E;QAxblFX,CAAA;;MAAAA,CAAA;gCAAAb,mBAAA,e;IAAAa,CAAA;8DA6bQZ,YAAA,CAoCYuI,oBAAA;IApCA9H,KAAK,EAAEW,KAAA,CAAAuL,kBAAkB;IA7b7C1K,UAAA,EA6bwDb,KAAA,CAAAwB,oBAAoB;IA7b5E,uBAAA1B,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA6bwDC,KAAA,CAAAwB,oBAAoB,GAAAzB,MAAA;IAAE5B,KAAK,EAAC,eAAe;IAAC6F,KAAK,EAAC;;IA7b1GhF,OAAA,EAAAC,QAAA,CA8bY,MA8BU,CA9BVL,YAAA,CA8BU0I,kBAAA;MA5dtBtI,OAAA,EAAAC,QAAA,CA+bgB,MAIe,CAJfL,YAAA,CAIe6I,uBAAA;QAJDtJ,KAAK,EAAC,WAAW;QAACgB,KAAK,EAAC;;QA/btDH,OAAA,EAAAC,QAAA,CAgcoB,MAEiB,CAFjBL,YAAA,CAEiB4M,yBAAA;UAFDlN,KAA0B,EAA1B;YAAA;UAAA,CAA0B;UAhc9DuC,UAAA,EAgcwEb,KAAA,CAAAyL,SAAS;UAhcjF,uBAAA3L,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAgcwEC,KAAA,CAAAyL,SAAS,GAAA1L,MAAA;UAAG8H,QAAM,EAAEvH,QAAA,CAAAoL,UAAU;UAAE5M,IAAI,EAAC,UAAU;UAC/F,cAAY,EAAC,kBAAkB;UAACiC,WAAW,EAAC;;QAjcpEvB,CAAA;UAocgBZ,YAAA,CAWe6I,uBAAA;QAXDtI,KAAK,EAAC,SAAS;QAAChB,KAAK,EAAC;;QApcpDa,OAAA,EAAAC,QAAA,CAqcoB,MAIS,CAJTL,YAAA,CAIS4D,iBAAA;UAzc7BxD,OAAA,EAAAC,QAAA,CAscwB,MAEY,CAFZL,YAAA,CAEY+M,oBAAA;YAxcpC9K,UAAA,EAsc4Cb,KAAA,CAAA4L,eAAe;YAtc3D,uBAAA9L,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAsc4CC,KAAA,CAAA4L,eAAe,GAAA7L,MAAA;YAAE,cAAY,EAAC,SAAS;YAAC,gBAAc,EAAC,MAAM;YAC7E,aAAW,EAAC,GAAG;YAAC,eAAa,EAAC;;UAvc1DP,CAAA;YA0coBZ,YAAA,CAIS4D,iBAAA;UA9c7BxD,OAAA,EAAAC,QAAA,CA2cwB,MAEkB,CAFsCe,KAAA,CAAA4L,eAAe,I,cAAvErJ,YAAA,CAEkB8F,0BAAA;YA7c1ChK,GAAA;YAAAwC,UAAA,EA2ckDb,KAAA,CAAA6L,aAAa;YA3c/D,uBAAA/L,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA2ckDC,KAAA,CAAA6L,aAAa,GAAA9L,MAAA;YAAG0I,GAAG,EAAE,CAAC;YAC5CnK,KAAwD,EAAxD;cAAA;cAAA;cAAA;YAAA;qDA5c5BK,mBAAA,e;UAAAa,CAAA;;QAAAA,CAAA;UAgdgBZ,YAAA,CAGe6I,uBAAA;QAHDtI,KAAK,EAAC;MAAU;QAhd9CH,OAAA,EAAAC,QAAA,CAidoB,MACY,CADZL,YAAA,CACY+M,oBAAA;UAldhC9K,UAAA,EAidwCb,KAAA,CAAA+F,OAAO;UAjd/C,uBAAAjG,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAidwCC,KAAA,CAAA+F,OAAO,GAAAhG,MAAA;UAAE,aAAW,EAAC,GAAG;UAAC,eAAa,EAAC,GAAG;UAAE8H,QAAM,EAAEvH,QAAA,CAAAwL;;QAjd5FtM,CAAA;UAqdgBuM,WAEM,EAEyC/L,KAAA,CAAA+F,OAAO,I,cAAtDvH,mBAAA,CAEM,OAFNwN,WAEM,EAFkD,gCAExD,KA3dhBrN,mBAAA,e;MAAAa,CAAA;QA8dYpB,mBAAA,CAEM,OAFN6N,WAEM,GADFrN,YAAA,CAAgEqC,oBAAA;MAArDnC,IAAI,EAAC,SAAS;MAAEe,OAAK,EAAES,QAAA,CAAA4L;;MA/dlDlN,OAAA,EAAAC,QAAA,CA+dkE,MAAE,CA/dpEkB,gBAAA,CA+dkE,IAAE,E;MA/dpEX,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}