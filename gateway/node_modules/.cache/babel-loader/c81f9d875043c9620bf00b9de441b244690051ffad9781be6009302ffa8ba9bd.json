{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-deb9d2cc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 编辑模式下显示题目输入框 \"), $data.editMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    model: $data.editedQuestion,\n    \"label-width\": \"120px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"题目\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.editedQuestion.title,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editedQuestion.title = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"选项\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.editedQuestion.options, (option, index) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: index,\n          class: \"option-row\"\n        }, [_createVNode(_component_el_input, {\n          modelValue: $data.editedQuestion.options[index],\n          \"onUpdate:modelValue\": $event => $data.editedQuestion.options[index] = $event,\n          placeholder: \"点击此处编辑选项\",\n          class: \"option-input\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_button, {\n          onClick: $event => $options.removeOption(index),\n          type: \"danger\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"删除选项\")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]);\n      }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_el_button, {\n        onClick: $options.addOption,\n        type: \"primary\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"增加选项\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 预览模式下显示题目 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($data.editedQuestion.title), 1 /* TEXT */), _createVNode(_component_el_radio_group, {\n    modelValue: $data.selectedOption,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedOption = $event)\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.editedQuestion.options, (option, index) => {\n      return _openBlock(), _createBlock(_component_el_radio, {\n        label: index,\n        key: index\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(option), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" 根据编辑权限显示编辑按钮或者保存按钮 \"), $data.isOwner && !$data.editMode ? (_openBlock(), _createBlock(_component_el_button, {\n    key: 2,\n    onClick: $options.toggleEditMode\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"编辑题目\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])) : $data.isOwner && $data.editMode ? (_openBlock(), _createBlock(_component_el_button, {\n    key: 3,\n    onClick: $options.saveQuestion,\n    type: \"primary\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"保存题目\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createCommentVNode","$data","editMode","_hoisted_1","_createVNode","_component_el_form","model","editedQuestion","default","_withCtx","_component_el_form_item","label","_component_el_input","modelValue","title","_cache","$event","_","_Fragment","_renderList","options","option","index","class","placeholder","_component_el_button","onClick","$options","removeOption","type","_createTextVNode","addOption","_createElementVNode","_toDisplayString","_component_el_radio_group","selectedOption","_createBlock","_component_el_radio","isOwner","toggleEditMode","saveQuestion"],"sources":["E:\\mytest\\src\\views\\qn-createpane\\qn-problemset\\SingleChoice.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 编辑模式下显示题目输入框 -->\r\n    <div v-if=\"editMode\">\r\n      <el-form :model=\"editedQuestion\" label-width=\"120px\">\r\n        <el-form-item label=\"题目\">\r\n          <el-input v-model=\"editedQuestion.title\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"选项\">\r\n          <div v-for=\"(option, index) in editedQuestion.options\" :key=\"index\" class=\"option-row\">\r\n            <el-input v-model=\"editedQuestion.options[index]\" placeholder=\"点击此处编辑选项\" class=\"option-input\"></el-input>\r\n            <el-button @click=\"removeOption(index)\" type=\"danger\">删除选项</el-button>\r\n          </div>\r\n          <el-button @click=\"addOption\" type=\"primary\">增加选项</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!-- 预览模式下显示题目 -->\r\n    <div v-else>\r\n      <h2>{{ editedQuestion.title }}</h2>\r\n      <el-radio-group v-model=\"selectedOption\">\r\n        <el-radio :label=\"index\" v-for=\"(option, index) in editedQuestion.options\" :key=\"index\">\r\n          {{ option }}\r\n        </el-radio>\r\n      </el-radio-group>\r\n    </div>\r\n\r\n    <!-- 根据编辑权限显示编辑按钮或者保存按钮 -->\r\n    <el-button v-if=\"isOwner && !editMode\" @click=\"toggleEditMode\">编辑题目</el-button>\r\n    <el-button v-else-if=\"isOwner && editMode\" @click=\"saveQuestion\" type=\"primary\">保存题目</el-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      originalQuestion: {\r\n        title: '时代少年团我们喜欢你！',\r\n        options: ['选项1', '选项2', '选项3']\r\n      },\r\n      editedQuestion: {}, // 用于编辑的题目对象\r\n      isOwner: true, // 假设当前用户是发布者\r\n      editMode: false, // 是否处于编辑模式\r\n      selectedOption: null // 已选择的选项索引\r\n    };\r\n  },\r\n  created() {\r\n    // 初始化编辑模式下的题目对象\r\n    this.editedQuestion = { ...this.originalQuestion };\r\n  },\r\n  methods: {\r\n    toggleEditMode() {\r\n      // 切换编辑模式\r\n      this.editMode = !this.editMode;\r\n      // 编辑模式下，将原始题目内容复制到编辑题目对象中\r\n      if (this.editMode) {\r\n        this.editedQuestion = { ...this.originalQuestion };\r\n      }\r\n    },\r\n    saveQuestion() {\r\n      // 保存编辑后的题目内容\r\n      this.originalQuestion = { ...this.editedQuestion };\r\n      this.editMode = false; // 退出编辑模式\r\n    },\r\n    addOption() {\r\n      // 添加选项\r\n      this.editedQuestion.options.push('点击此处编辑选项');\r\n    },\r\n    removeOption(index) {\r\n      // 删除选项\r\n      this.editedQuestion.options.splice(index, 1);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.option-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.option-input {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}