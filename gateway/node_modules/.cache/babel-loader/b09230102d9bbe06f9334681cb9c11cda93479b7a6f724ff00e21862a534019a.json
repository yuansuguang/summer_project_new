{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport retrieve from '../../util/retrieve';\nimport format from '../../util/format';\nimport BarsGeometry from '../../util/geometry/Bars3DGeometry';\nimport LabelsBuilder from '../../component/common/LabelsBuilder';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nvar vec3 = glmatrix.vec3;\nexport default echarts.ChartView.extend({\n  type: 'bar3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this._api = api;\n    this._labelsBuilder = new LabelsBuilder(256, 256, api);\n    var self = this;\n    this._labelsBuilder.getLabelPosition = function (dataIndex, position, distance) {\n      if (self._data) {\n        var layout = self._data.getItemLayout(dataIndex);\n        var start = layout[0];\n        var dir = layout[1];\n        var height = layout[2][1];\n        return vec3.scaleAndAdd([], start, dir, distance + height);\n      } else {\n        return [0, 0];\n      }\n    }; // Give a large render order.\n\n    this._labelsBuilder.getMesh().renderOrder = 100;\n  },\n  render: function (seriesModel, ecModel, api) {\n    // Swap barMesh\n    var tmp = this._prevBarMesh;\n    this._prevBarMesh = this._barMesh;\n    this._barMesh = tmp;\n    if (!this._barMesh) {\n      this._barMesh = new graphicGL.Mesh({\n        geometry: new BarsGeometry(),\n        shadowDepthMaterial: new graphicGL.Material({\n          shader: new graphicGL.Shader(graphicGL.Shader.source('ecgl.sm.depth.vertex'), graphicGL.Shader.source('ecgl.sm.depth.fragment'))\n        }),\n        // Only cartesian3D enable culling\n        // FIXME Performance\n        culling: seriesModel.coordinateSystem.type === 'cartesian3D',\n        // Render after axes\n        renderOrder: 10,\n        // Render normal in normal pass\n        renderNormal: true\n      });\n    }\n    this.groupGL.remove(this._prevBarMesh);\n    this.groupGL.add(this._barMesh);\n    this.groupGL.add(this._labelsBuilder.getMesh());\n    var coordSys = seriesModel.coordinateSystem;\n    this._doRender(seriesModel, api);\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n      var methodName = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n      this._barMesh.material[methodName]('fragment', 'SRGB_DECODE');\n    }\n    this._data = seriesModel.getData();\n    this._labelsBuilder.updateData(this._data);\n    this._labelsBuilder.updateLabels();\n    this._updateAnimation(seriesModel);\n  },\n  _updateAnimation: function (seriesModel) {\n    graphicGL.updateVertexAnimation([['prevPosition', 'position'], ['prevNormal', 'normal']], this._prevBarMesh, this._barMesh, seriesModel);\n  },\n  _doRender: function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var shading = seriesModel.get('shading');\n    var enableNormal = shading !== 'color';\n    var self = this;\n    var barMesh = this._barMesh;\n    var shadingPrefix = 'ecgl.' + shading;\n    if (!barMesh.material || barMesh.material.shader.name !== shadingPrefix) {\n      barMesh.material = graphicGL.createMaterial(shadingPrefix, ['VERTEX_COLOR']);\n    }\n    graphicGL.setMaterialFromModel(shading, barMesh.material, seriesModel, api);\n    barMesh.geometry.enableNormal = enableNormal;\n    barMesh.geometry.resetOffset(); // Bevel settings\n\n    var bevelSize = seriesModel.get('bevelSize');\n    var bevelSegments = seriesModel.get('bevelSmoothness');\n    barMesh.geometry.bevelSegments = bevelSegments;\n    barMesh.geometry.bevelSize = bevelSize;\n    var colorArr = [];\n    var vertexColors = new Float32Array(data.count() * 4);\n    var colorOffset = 0;\n    var barCount = 0;\n    var hasTransparent = false;\n    data.each(function (idx) {\n      if (!data.hasValue(idx)) {\n        return;\n      }\n      var color = getItemVisualColor(data, idx);\n      var opacity = getItemVisualOpacity(data, idx);\n      if (opacity == null) {\n        opacity = 1;\n      }\n      graphicGL.parseColor(color, colorArr);\n      colorArr[3] *= opacity;\n      vertexColors[colorOffset++] = colorArr[0];\n      vertexColors[colorOffset++] = colorArr[1];\n      vertexColors[colorOffset++] = colorArr[2];\n      vertexColors[colorOffset++] = colorArr[3];\n      if (colorArr[3] > 0) {\n        barCount++;\n        if (colorArr[3] < 0.99) {\n          hasTransparent = true;\n        }\n      }\n    });\n    barMesh.geometry.setBarCount(barCount);\n    var orient = data.getLayout('orient'); // Map of dataIndex and barIndex.\n\n    var barIndexOfData = this._barIndexOfData = new Int32Array(data.count());\n    var barCount = 0;\n    data.each(function (idx) {\n      if (!data.hasValue(idx)) {\n        barIndexOfData[idx] = -1;\n        return;\n      }\n      var layout = data.getItemLayout(idx);\n      var start = layout[0];\n      var dir = layout[1];\n      var size = layout[2];\n      var idx4 = idx * 4;\n      colorArr[0] = vertexColors[idx4++];\n      colorArr[1] = vertexColors[idx4++];\n      colorArr[2] = vertexColors[idx4++];\n      colorArr[3] = vertexColors[idx4++];\n      if (colorArr[3] > 0) {\n        self._barMesh.geometry.addBar(start, dir, orient, size, colorArr, idx);\n        barIndexOfData[idx] = barCount++;\n      }\n    });\n    barMesh.geometry.dirty();\n    barMesh.geometry.updateBoundingBox();\n    var material = barMesh.material;\n    material.transparent = hasTransparent;\n    material.depthMask = !hasTransparent;\n    barMesh.geometry.sortTriangles = hasTransparent;\n    this._initHandler(seriesModel, api);\n  },\n  _initHandler: function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var barMesh = this._barMesh;\n    var isCartesian3D = seriesModel.coordinateSystem.type === 'cartesian3D';\n    barMesh.seriesIndex = seriesModel.seriesIndex;\n    var lastDataIndex = -1;\n    barMesh.off('mousemove');\n    barMesh.off('mouseout');\n    barMesh.on('mousemove', function (e) {\n      var dataIndex = barMesh.geometry.getDataIndexOfVertex(e.triangle[0]);\n      if (dataIndex !== lastDataIndex) {\n        this._downplay(lastDataIndex);\n        this._highlight(dataIndex);\n        this._labelsBuilder.updateLabels([dataIndex]);\n        if (isCartesian3D) {\n          api.dispatchAction({\n            type: 'grid3DShowAxisPointer',\n            value: [data.get('x', dataIndex), data.get('y', dataIndex), data.get('z', dataIndex, true)]\n          });\n        }\n      }\n      lastDataIndex = dataIndex;\n      barMesh.dataIndex = dataIndex;\n    }, this);\n    barMesh.on('mouseout', function (e) {\n      this._downplay(lastDataIndex);\n      this._labelsBuilder.updateLabels();\n      lastDataIndex = -1;\n      barMesh.dataIndex = -1;\n      if (isCartesian3D) {\n        api.dispatchAction({\n          type: 'grid3DHideAxisPointer'\n        });\n      }\n    }, this);\n  },\n  _highlight: function (dataIndex) {\n    var data = this._data;\n    if (!data) {\n      return;\n    }\n    var barIndex = this._barIndexOfData[dataIndex];\n    if (barIndex < 0) {\n      return;\n    }\n    var itemModel = data.getItemModel(dataIndex);\n    var emphasisItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n    var emphasisColor = emphasisItemStyleModel.get('color');\n    var emphasisOpacity = emphasisItemStyleModel.get('opacity');\n    if (emphasisColor == null) {\n      var color = getItemVisualColor(data, dataIndex);\n      emphasisColor = echarts.color.lift(color, -0.4);\n    }\n    if (emphasisOpacity == null) {\n      emphasisOpacity = getItemVisualOpacity(data, dataIndex);\n    }\n    var colorArr = graphicGL.parseColor(emphasisColor);\n    colorArr[3] *= emphasisOpacity;\n    this._barMesh.geometry.setColor(barIndex, colorArr);\n    this._api.getZr().refresh();\n  },\n  _downplay: function (dataIndex) {\n    var data = this._data;\n    if (!data) {\n      return;\n    }\n    var barIndex = this._barIndexOfData[dataIndex];\n    if (barIndex < 0) {\n      return;\n    }\n    var color = getItemVisualColor(data, dataIndex);\n    var opacity = getItemVisualOpacity(data, dataIndex);\n    var colorArr = graphicGL.parseColor(color);\n    colorArr[3] *= opacity;\n    this._barMesh.geometry.setColor(barIndex, colorArr);\n    this._api.getZr().refresh();\n  },\n  highlight: function (seriesModel, ecModel, api, payload) {\n    this._toggleStatus('highlight', seriesModel, ecModel, api, payload);\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    this._toggleStatus('downplay', seriesModel, ecModel, api, payload);\n  },\n  _toggleStatus: function (status, seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = retrieve.queryDataIndex(data, payload);\n    var self = this;\n    if (dataIndex != null) {\n      echarts.util.each(format.normalizeToArray(dataIndex), function (dataIdx) {\n        status === 'highlight' ? this._highlight(dataIdx) : this._downplay(dataIdx);\n      }, this);\n    } else {\n      data.each(function (dataIdx) {\n        status === 'highlight' ? self._highlight(dataIdx) : self._downplay(dataIdx);\n      });\n    }\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  },\n  dispose: function () {\n    this._labelsBuilder.dispose();\n    this.groupGL.removeAll();\n  }\n});","map":{"version":3,"names":["echarts","graphicGL","retrieve","format","BarsGeometry","LabelsBuilder","glmatrix","getItemVisualColor","getItemVisualOpacity","vec3","ChartView","extend","type","__ecgl__","init","ecModel","api","groupGL","Node","_api","_labelsBuilder","self","getLabelPosition","dataIndex","position","distance","_data","layout","getItemLayout","start","dir","height","scaleAndAdd","getMesh","renderOrder","render","seriesModel","tmp","_prevBarMesh","_barMesh","Mesh","geometry","shadowDepthMaterial","Material","shader","Shader","source","culling","coordinateSystem","renderNormal","remove","add","coordSys","_doRender","viewGL","methodName","isLinearSpace","material","getData","updateData","updateLabels","_updateAnimation","updateVertexAnimation","data","shading","get","enableNormal","barMesh","shadingPrefix","name","createMaterial","setMaterialFromModel","resetOffset","bevelSize","bevelSegments","colorArr","vertexColors","Float32Array","count","colorOffset","barCount","hasTransparent","each","idx","hasValue","color","opacity","parseColor","setBarCount","orient","getLayout","barIndexOfData","_barIndexOfData","Int32Array","size","idx4","addBar","dirty","updateBoundingBox","transparent","depthMask","sortTriangles","_initHandler","isCartesian3D","seriesIndex","lastDataIndex","off","on","e","getDataIndexOfVertex","triangle","_downplay","_highlight","dispatchAction","value","barIndex","itemModel","getItemModel","emphasisItemStyleModel","getModel","emphasisColor","emphasisOpacity","lift","setColor","getZr","refresh","highlight","payload","_toggleStatus","downplay","status","queryDataIndex","util","normalizeToArray","dataIdx","removeAll","dispose"],"sources":["E:/mytest/node_modules/echarts-gl/lib/chart/bar3D/Bar3DView.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport retrieve from '../../util/retrieve';\nimport format from '../../util/format';\nimport BarsGeometry from '../../util/geometry/Bars3DGeometry';\nimport LabelsBuilder from '../../component/common/LabelsBuilder';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nvar vec3 = glmatrix.vec3;\nexport default echarts.ChartView.extend({\n  type: 'bar3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this._api = api;\n    this._labelsBuilder = new LabelsBuilder(256, 256, api);\n    var self = this;\n\n    this._labelsBuilder.getLabelPosition = function (dataIndex, position, distance) {\n      if (self._data) {\n        var layout = self._data.getItemLayout(dataIndex);\n\n        var start = layout[0];\n        var dir = layout[1];\n        var height = layout[2][1];\n        return vec3.scaleAndAdd([], start, dir, distance + height);\n      } else {\n        return [0, 0];\n      }\n    }; // Give a large render order.\n\n\n    this._labelsBuilder.getMesh().renderOrder = 100;\n  },\n  render: function (seriesModel, ecModel, api) {\n    // Swap barMesh\n    var tmp = this._prevBarMesh;\n    this._prevBarMesh = this._barMesh;\n    this._barMesh = tmp;\n\n    if (!this._barMesh) {\n      this._barMesh = new graphicGL.Mesh({\n        geometry: new BarsGeometry(),\n        shadowDepthMaterial: new graphicGL.Material({\n          shader: new graphicGL.Shader(graphicGL.Shader.source('ecgl.sm.depth.vertex'), graphicGL.Shader.source('ecgl.sm.depth.fragment'))\n        }),\n        // Only cartesian3D enable culling\n        // FIXME Performance\n        culling: seriesModel.coordinateSystem.type === 'cartesian3D',\n        // Render after axes\n        renderOrder: 10,\n        // Render normal in normal pass\n        renderNormal: true\n      });\n    }\n\n    this.groupGL.remove(this._prevBarMesh);\n    this.groupGL.add(this._barMesh);\n    this.groupGL.add(this._labelsBuilder.getMesh());\n    var coordSys = seriesModel.coordinateSystem;\n\n    this._doRender(seriesModel, api);\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n      var methodName = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n\n      this._barMesh.material[methodName]('fragment', 'SRGB_DECODE');\n    }\n\n    this._data = seriesModel.getData();\n\n    this._labelsBuilder.updateData(this._data);\n\n    this._labelsBuilder.updateLabels();\n\n    this._updateAnimation(seriesModel);\n  },\n  _updateAnimation: function (seriesModel) {\n    graphicGL.updateVertexAnimation([['prevPosition', 'position'], ['prevNormal', 'normal']], this._prevBarMesh, this._barMesh, seriesModel);\n  },\n  _doRender: function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var shading = seriesModel.get('shading');\n    var enableNormal = shading !== 'color';\n    var self = this;\n    var barMesh = this._barMesh;\n    var shadingPrefix = 'ecgl.' + shading;\n\n    if (!barMesh.material || barMesh.material.shader.name !== shadingPrefix) {\n      barMesh.material = graphicGL.createMaterial(shadingPrefix, ['VERTEX_COLOR']);\n    }\n\n    graphicGL.setMaterialFromModel(shading, barMesh.material, seriesModel, api);\n    barMesh.geometry.enableNormal = enableNormal;\n    barMesh.geometry.resetOffset(); // Bevel settings\n\n    var bevelSize = seriesModel.get('bevelSize');\n    var bevelSegments = seriesModel.get('bevelSmoothness');\n    barMesh.geometry.bevelSegments = bevelSegments;\n    barMesh.geometry.bevelSize = bevelSize;\n    var colorArr = [];\n    var vertexColors = new Float32Array(data.count() * 4);\n    var colorOffset = 0;\n    var barCount = 0;\n    var hasTransparent = false;\n    data.each(function (idx) {\n      if (!data.hasValue(idx)) {\n        return;\n      }\n\n      var color = getItemVisualColor(data, idx);\n      var opacity = getItemVisualOpacity(data, idx);\n\n      if (opacity == null) {\n        opacity = 1;\n      }\n\n      graphicGL.parseColor(color, colorArr);\n      colorArr[3] *= opacity;\n      vertexColors[colorOffset++] = colorArr[0];\n      vertexColors[colorOffset++] = colorArr[1];\n      vertexColors[colorOffset++] = colorArr[2];\n      vertexColors[colorOffset++] = colorArr[3];\n\n      if (colorArr[3] > 0) {\n        barCount++;\n\n        if (colorArr[3] < 0.99) {\n          hasTransparent = true;\n        }\n      }\n    });\n    barMesh.geometry.setBarCount(barCount);\n    var orient = data.getLayout('orient'); // Map of dataIndex and barIndex.\n\n    var barIndexOfData = this._barIndexOfData = new Int32Array(data.count());\n    var barCount = 0;\n    data.each(function (idx) {\n      if (!data.hasValue(idx)) {\n        barIndexOfData[idx] = -1;\n        return;\n      }\n\n      var layout = data.getItemLayout(idx);\n      var start = layout[0];\n      var dir = layout[1];\n      var size = layout[2];\n      var idx4 = idx * 4;\n      colorArr[0] = vertexColors[idx4++];\n      colorArr[1] = vertexColors[idx4++];\n      colorArr[2] = vertexColors[idx4++];\n      colorArr[3] = vertexColors[idx4++];\n\n      if (colorArr[3] > 0) {\n        self._barMesh.geometry.addBar(start, dir, orient, size, colorArr, idx);\n\n        barIndexOfData[idx] = barCount++;\n      }\n    });\n    barMesh.geometry.dirty();\n    barMesh.geometry.updateBoundingBox();\n    var material = barMesh.material;\n    material.transparent = hasTransparent;\n    material.depthMask = !hasTransparent;\n    barMesh.geometry.sortTriangles = hasTransparent;\n\n    this._initHandler(seriesModel, api);\n  },\n  _initHandler: function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var barMesh = this._barMesh;\n    var isCartesian3D = seriesModel.coordinateSystem.type === 'cartesian3D';\n    barMesh.seriesIndex = seriesModel.seriesIndex;\n    var lastDataIndex = -1;\n    barMesh.off('mousemove');\n    barMesh.off('mouseout');\n    barMesh.on('mousemove', function (e) {\n      var dataIndex = barMesh.geometry.getDataIndexOfVertex(e.triangle[0]);\n\n      if (dataIndex !== lastDataIndex) {\n        this._downplay(lastDataIndex);\n\n        this._highlight(dataIndex);\n\n        this._labelsBuilder.updateLabels([dataIndex]);\n\n        if (isCartesian3D) {\n          api.dispatchAction({\n            type: 'grid3DShowAxisPointer',\n            value: [data.get('x', dataIndex), data.get('y', dataIndex), data.get('z', dataIndex, true)]\n          });\n        }\n      }\n\n      lastDataIndex = dataIndex;\n      barMesh.dataIndex = dataIndex;\n    }, this);\n    barMesh.on('mouseout', function (e) {\n      this._downplay(lastDataIndex);\n\n      this._labelsBuilder.updateLabels();\n\n      lastDataIndex = -1;\n      barMesh.dataIndex = -1;\n\n      if (isCartesian3D) {\n        api.dispatchAction({\n          type: 'grid3DHideAxisPointer'\n        });\n      }\n    }, this);\n  },\n  _highlight: function (dataIndex) {\n    var data = this._data;\n\n    if (!data) {\n      return;\n    }\n\n    var barIndex = this._barIndexOfData[dataIndex];\n\n    if (barIndex < 0) {\n      return;\n    }\n\n    var itemModel = data.getItemModel(dataIndex);\n    var emphasisItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n    var emphasisColor = emphasisItemStyleModel.get('color');\n    var emphasisOpacity = emphasisItemStyleModel.get('opacity');\n\n    if (emphasisColor == null) {\n      var color = getItemVisualColor(data, dataIndex);\n      emphasisColor = echarts.color.lift(color, -0.4);\n    }\n\n    if (emphasisOpacity == null) {\n      emphasisOpacity = getItemVisualOpacity(data, dataIndex);\n    }\n\n    var colorArr = graphicGL.parseColor(emphasisColor);\n    colorArr[3] *= emphasisOpacity;\n\n    this._barMesh.geometry.setColor(barIndex, colorArr);\n\n    this._api.getZr().refresh();\n  },\n  _downplay: function (dataIndex) {\n    var data = this._data;\n\n    if (!data) {\n      return;\n    }\n\n    var barIndex = this._barIndexOfData[dataIndex];\n\n    if (barIndex < 0) {\n      return;\n    }\n\n    var color = getItemVisualColor(data, dataIndex);\n    var opacity = getItemVisualOpacity(data, dataIndex);\n    var colorArr = graphicGL.parseColor(color);\n    colorArr[3] *= opacity;\n\n    this._barMesh.geometry.setColor(barIndex, colorArr);\n\n    this._api.getZr().refresh();\n  },\n  highlight: function (seriesModel, ecModel, api, payload) {\n    this._toggleStatus('highlight', seriesModel, ecModel, api, payload);\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    this._toggleStatus('downplay', seriesModel, ecModel, api, payload);\n  },\n  _toggleStatus: function (status, seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = retrieve.queryDataIndex(data, payload);\n    var self = this;\n\n    if (dataIndex != null) {\n      echarts.util.each(format.normalizeToArray(dataIndex), function (dataIdx) {\n        status === 'highlight' ? this._highlight(dataIdx) : this._downplay(dataIdx);\n      }, this);\n    } else {\n      data.each(function (dataIdx) {\n        status === 'highlight' ? self._highlight(dataIdx) : self._downplay(dataIdx);\n      });\n    }\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  },\n  dispose: function () {\n    this._labelsBuilder.dispose();\n\n    this.groupGL.removeAll();\n  }\n});"],"mappings":";;;;;;AAAA,OAAO,KAAKA,OAAO,MAAM,qBAAqB;AAC9C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,YAAY,MAAM,oCAAoC;AAC7D,OAAOC,aAAa,MAAM,sCAAsC;AAChE,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAASC,kBAAkB,EAAEC,oBAAoB,QAAQ,mBAAmB;AAC5E,IAAIC,IAAI,GAAGH,QAAQ,CAACG,IAAI;AACxB,eAAeT,OAAO,CAACU,SAAS,CAACC,MAAM,CAAC;EACtCC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,IAAI;EACdC,IAAI,EAAE,SAAAA,CAAUC,OAAO,EAAEC,GAAG,EAAE;IAC5B,IAAI,CAACC,OAAO,GAAG,IAAIhB,SAAS,CAACiB,IAAI,CAAC,CAAC;IACnC,IAAI,CAACC,IAAI,GAAGH,GAAG;IACf,IAAI,CAACI,cAAc,GAAG,IAAIf,aAAa,CAAC,GAAG,EAAE,GAAG,EAAEW,GAAG,CAAC;IACtD,IAAIK,IAAI,GAAG,IAAI;IAEf,IAAI,CAACD,cAAc,CAACE,gBAAgB,GAAG,UAAUC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MAC9E,IAAIJ,IAAI,CAACK,KAAK,EAAE;QACd,IAAIC,MAAM,GAAGN,IAAI,CAACK,KAAK,CAACE,aAAa,CAACL,SAAS,CAAC;QAEhD,IAAIM,KAAK,GAAGF,MAAM,CAAC,CAAC,CAAC;QACrB,IAAIG,GAAG,GAAGH,MAAM,CAAC,CAAC,CAAC;QACnB,IAAII,MAAM,GAAGJ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,OAAOlB,IAAI,CAACuB,WAAW,CAAC,EAAE,EAAEH,KAAK,EAAEC,GAAG,EAAEL,QAAQ,GAAGM,MAAM,CAAC;MAC5D,CAAC,MAAM;QACL,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;MACf;IACF,CAAC,CAAC,CAAC;;IAGH,IAAI,CAACX,cAAc,CAACa,OAAO,CAAC,CAAC,CAACC,WAAW,GAAG,GAAG;EACjD,CAAC;EACDC,MAAM,EAAE,SAAAA,CAAUC,WAAW,EAAErB,OAAO,EAAEC,GAAG,EAAE;IAC3C;IACA,IAAIqB,GAAG,GAAG,IAAI,CAACC,YAAY;IAC3B,IAAI,CAACA,YAAY,GAAG,IAAI,CAACC,QAAQ;IACjC,IAAI,CAACA,QAAQ,GAAGF,GAAG;IAEnB,IAAI,CAAC,IAAI,CAACE,QAAQ,EAAE;MAClB,IAAI,CAACA,QAAQ,GAAG,IAAItC,SAAS,CAACuC,IAAI,CAAC;QACjCC,QAAQ,EAAE,IAAIrC,YAAY,CAAC,CAAC;QAC5BsC,mBAAmB,EAAE,IAAIzC,SAAS,CAAC0C,QAAQ,CAAC;UAC1CC,MAAM,EAAE,IAAI3C,SAAS,CAAC4C,MAAM,CAAC5C,SAAS,CAAC4C,MAAM,CAACC,MAAM,CAAC,sBAAsB,CAAC,EAAE7C,SAAS,CAAC4C,MAAM,CAACC,MAAM,CAAC,wBAAwB,CAAC;QACjI,CAAC,CAAC;QACF;QACA;QACAC,OAAO,EAAEX,WAAW,CAACY,gBAAgB,CAACpC,IAAI,KAAK,aAAa;QAC5D;QACAsB,WAAW,EAAE,EAAE;QACf;QACAe,YAAY,EAAE;MAChB,CAAC,CAAC;IACJ;IAEA,IAAI,CAAChC,OAAO,CAACiC,MAAM,CAAC,IAAI,CAACZ,YAAY,CAAC;IACtC,IAAI,CAACrB,OAAO,CAACkC,GAAG,CAAC,IAAI,CAACZ,QAAQ,CAAC;IAC/B,IAAI,CAACtB,OAAO,CAACkC,GAAG,CAAC,IAAI,CAAC/B,cAAc,CAACa,OAAO,CAAC,CAAC,CAAC;IAC/C,IAAImB,QAAQ,GAAGhB,WAAW,CAACY,gBAAgB;IAE3C,IAAI,CAACK,SAAS,CAACjB,WAAW,EAAEpB,GAAG,CAAC;IAEhC,IAAIoC,QAAQ,IAAIA,QAAQ,CAACE,MAAM,EAAE;MAC/BF,QAAQ,CAACE,MAAM,CAACH,GAAG,CAAC,IAAI,CAAClC,OAAO,CAAC;MACjC,IAAIsC,UAAU,GAAGH,QAAQ,CAACE,MAAM,CAACE,aAAa,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAU;MAExE,IAAI,CAACjB,QAAQ,CAACkB,QAAQ,CAACF,UAAU,CAAC,CAAC,UAAU,EAAE,aAAa,CAAC;IAC/D;IAEA,IAAI,CAAC7B,KAAK,GAAGU,WAAW,CAACsB,OAAO,CAAC,CAAC;IAElC,IAAI,CAACtC,cAAc,CAACuC,UAAU,CAAC,IAAI,CAACjC,KAAK,CAAC;IAE1C,IAAI,CAACN,cAAc,CAACwC,YAAY,CAAC,CAAC;IAElC,IAAI,CAACC,gBAAgB,CAACzB,WAAW,CAAC;EACpC,CAAC;EACDyB,gBAAgB,EAAE,SAAAA,CAAUzB,WAAW,EAAE;IACvCnC,SAAS,CAAC6D,qBAAqB,CAAC,CAAC,CAAC,cAAc,EAAE,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACxB,YAAY,EAAE,IAAI,CAACC,QAAQ,EAAEH,WAAW,CAAC;EAC1I,CAAC;EACDiB,SAAS,EAAE,SAAAA,CAAUjB,WAAW,EAAEpB,GAAG,EAAE;IACrC,IAAI+C,IAAI,GAAG3B,WAAW,CAACsB,OAAO,CAAC,CAAC;IAChC,IAAIM,OAAO,GAAG5B,WAAW,CAAC6B,GAAG,CAAC,SAAS,CAAC;IACxC,IAAIC,YAAY,GAAGF,OAAO,KAAK,OAAO;IACtC,IAAI3C,IAAI,GAAG,IAAI;IACf,IAAI8C,OAAO,GAAG,IAAI,CAAC5B,QAAQ;IAC3B,IAAI6B,aAAa,GAAG,OAAO,GAAGJ,OAAO;IAErC,IAAI,CAACG,OAAO,CAACV,QAAQ,IAAIU,OAAO,CAACV,QAAQ,CAACb,MAAM,CAACyB,IAAI,KAAKD,aAAa,EAAE;MACvED,OAAO,CAACV,QAAQ,GAAGxD,SAAS,CAACqE,cAAc,CAACF,aAAa,EAAE,CAAC,cAAc,CAAC,CAAC;IAC9E;IAEAnE,SAAS,CAACsE,oBAAoB,CAACP,OAAO,EAAEG,OAAO,CAACV,QAAQ,EAAErB,WAAW,EAAEpB,GAAG,CAAC;IAC3EmD,OAAO,CAAC1B,QAAQ,CAACyB,YAAY,GAAGA,YAAY;IAC5CC,OAAO,CAAC1B,QAAQ,CAAC+B,WAAW,CAAC,CAAC,CAAC,CAAC;;IAEhC,IAAIC,SAAS,GAAGrC,WAAW,CAAC6B,GAAG,CAAC,WAAW,CAAC;IAC5C,IAAIS,aAAa,GAAGtC,WAAW,CAAC6B,GAAG,CAAC,iBAAiB,CAAC;IACtDE,OAAO,CAAC1B,QAAQ,CAACiC,aAAa,GAAGA,aAAa;IAC9CP,OAAO,CAAC1B,QAAQ,CAACgC,SAAS,GAAGA,SAAS;IACtC,IAAIE,QAAQ,GAAG,EAAE;IACjB,IAAIC,YAAY,GAAG,IAAIC,YAAY,CAACd,IAAI,CAACe,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;IACrD,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,cAAc,GAAG,KAAK;IAC1BlB,IAAI,CAACmB,IAAI,CAAC,UAAUC,GAAG,EAAE;MACvB,IAAI,CAACpB,IAAI,CAACqB,QAAQ,CAACD,GAAG,CAAC,EAAE;QACvB;MACF;MAEA,IAAIE,KAAK,GAAG9E,kBAAkB,CAACwD,IAAI,EAAEoB,GAAG,CAAC;MACzC,IAAIG,OAAO,GAAG9E,oBAAoB,CAACuD,IAAI,EAAEoB,GAAG,CAAC;MAE7C,IAAIG,OAAO,IAAI,IAAI,EAAE;QACnBA,OAAO,GAAG,CAAC;MACb;MAEArF,SAAS,CAACsF,UAAU,CAACF,KAAK,EAAEV,QAAQ,CAAC;MACrCA,QAAQ,CAAC,CAAC,CAAC,IAAIW,OAAO;MACtBV,YAAY,CAACG,WAAW,EAAE,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;MACzCC,YAAY,CAACG,WAAW,EAAE,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;MACzCC,YAAY,CAACG,WAAW,EAAE,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;MACzCC,YAAY,CAACG,WAAW,EAAE,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;MAEzC,IAAIA,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACnBK,QAAQ,EAAE;QAEV,IAAIL,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;UACtBM,cAAc,GAAG,IAAI;QACvB;MACF;IACF,CAAC,CAAC;IACFd,OAAO,CAAC1B,QAAQ,CAAC+C,WAAW,CAACR,QAAQ,CAAC;IACtC,IAAIS,MAAM,GAAG1B,IAAI,CAAC2B,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAEvC,IAAIC,cAAc,GAAG,IAAI,CAACC,eAAe,GAAG,IAAIC,UAAU,CAAC9B,IAAI,CAACe,KAAK,CAAC,CAAC,CAAC;IACxE,IAAIE,QAAQ,GAAG,CAAC;IAChBjB,IAAI,CAACmB,IAAI,CAAC,UAAUC,GAAG,EAAE;MACvB,IAAI,CAACpB,IAAI,CAACqB,QAAQ,CAACD,GAAG,CAAC,EAAE;QACvBQ,cAAc,CAACR,GAAG,CAAC,GAAG,CAAC,CAAC;QACxB;MACF;MAEA,IAAIxD,MAAM,GAAGoC,IAAI,CAACnC,aAAa,CAACuD,GAAG,CAAC;MACpC,IAAItD,KAAK,GAAGF,MAAM,CAAC,CAAC,CAAC;MACrB,IAAIG,GAAG,GAAGH,MAAM,CAAC,CAAC,CAAC;MACnB,IAAImE,IAAI,GAAGnE,MAAM,CAAC,CAAC,CAAC;MACpB,IAAIoE,IAAI,GAAGZ,GAAG,GAAG,CAAC;MAClBR,QAAQ,CAAC,CAAC,CAAC,GAAGC,YAAY,CAACmB,IAAI,EAAE,CAAC;MAClCpB,QAAQ,CAAC,CAAC,CAAC,GAAGC,YAAY,CAACmB,IAAI,EAAE,CAAC;MAClCpB,QAAQ,CAAC,CAAC,CAAC,GAAGC,YAAY,CAACmB,IAAI,EAAE,CAAC;MAClCpB,QAAQ,CAAC,CAAC,CAAC,GAAGC,YAAY,CAACmB,IAAI,EAAE,CAAC;MAElC,IAAIpB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACnBtD,IAAI,CAACkB,QAAQ,CAACE,QAAQ,CAACuD,MAAM,CAACnE,KAAK,EAAEC,GAAG,EAAE2D,MAAM,EAAEK,IAAI,EAAEnB,QAAQ,EAAEQ,GAAG,CAAC;QAEtEQ,cAAc,CAACR,GAAG,CAAC,GAAGH,QAAQ,EAAE;MAClC;IACF,CAAC,CAAC;IACFb,OAAO,CAAC1B,QAAQ,CAACwD,KAAK,CAAC,CAAC;IACxB9B,OAAO,CAAC1B,QAAQ,CAACyD,iBAAiB,CAAC,CAAC;IACpC,IAAIzC,QAAQ,GAAGU,OAAO,CAACV,QAAQ;IAC/BA,QAAQ,CAAC0C,WAAW,GAAGlB,cAAc;IACrCxB,QAAQ,CAAC2C,SAAS,GAAG,CAACnB,cAAc;IACpCd,OAAO,CAAC1B,QAAQ,CAAC4D,aAAa,GAAGpB,cAAc;IAE/C,IAAI,CAACqB,YAAY,CAAClE,WAAW,EAAEpB,GAAG,CAAC;EACrC,CAAC;EACDsF,YAAY,EAAE,SAAAA,CAAUlE,WAAW,EAAEpB,GAAG,EAAE;IACxC,IAAI+C,IAAI,GAAG3B,WAAW,CAACsB,OAAO,CAAC,CAAC;IAChC,IAAIS,OAAO,GAAG,IAAI,CAAC5B,QAAQ;IAC3B,IAAIgE,aAAa,GAAGnE,WAAW,CAACY,gBAAgB,CAACpC,IAAI,KAAK,aAAa;IACvEuD,OAAO,CAACqC,WAAW,GAAGpE,WAAW,CAACoE,WAAW;IAC7C,IAAIC,aAAa,GAAG,CAAC,CAAC;IACtBtC,OAAO,CAACuC,GAAG,CAAC,WAAW,CAAC;IACxBvC,OAAO,CAACuC,GAAG,CAAC,UAAU,CAAC;IACvBvC,OAAO,CAACwC,EAAE,CAAC,WAAW,EAAE,UAAUC,CAAC,EAAE;MACnC,IAAIrF,SAAS,GAAG4C,OAAO,CAAC1B,QAAQ,CAACoE,oBAAoB,CAACD,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;MAEpE,IAAIvF,SAAS,KAAKkF,aAAa,EAAE;QAC/B,IAAI,CAACM,SAAS,CAACN,aAAa,CAAC;QAE7B,IAAI,CAACO,UAAU,CAACzF,SAAS,CAAC;QAE1B,IAAI,CAACH,cAAc,CAACwC,YAAY,CAAC,CAACrC,SAAS,CAAC,CAAC;QAE7C,IAAIgF,aAAa,EAAE;UACjBvF,GAAG,CAACiG,cAAc,CAAC;YACjBrG,IAAI,EAAE,uBAAuB;YAC7BsG,KAAK,EAAE,CAACnD,IAAI,CAACE,GAAG,CAAC,GAAG,EAAE1C,SAAS,CAAC,EAAEwC,IAAI,CAACE,GAAG,CAAC,GAAG,EAAE1C,SAAS,CAAC,EAAEwC,IAAI,CAACE,GAAG,CAAC,GAAG,EAAE1C,SAAS,EAAE,IAAI,CAAC;UAC5F,CAAC,CAAC;QACJ;MACF;MAEAkF,aAAa,GAAGlF,SAAS;MACzB4C,OAAO,CAAC5C,SAAS,GAAGA,SAAS;IAC/B,CAAC,EAAE,IAAI,CAAC;IACR4C,OAAO,CAACwC,EAAE,CAAC,UAAU,EAAE,UAAUC,CAAC,EAAE;MAClC,IAAI,CAACG,SAAS,CAACN,aAAa,CAAC;MAE7B,IAAI,CAACrF,cAAc,CAACwC,YAAY,CAAC,CAAC;MAElC6C,aAAa,GAAG,CAAC,CAAC;MAClBtC,OAAO,CAAC5C,SAAS,GAAG,CAAC,CAAC;MAEtB,IAAIgF,aAAa,EAAE;QACjBvF,GAAG,CAACiG,cAAc,CAAC;UACjBrG,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EACDoG,UAAU,EAAE,SAAAA,CAAUzF,SAAS,EAAE;IAC/B,IAAIwC,IAAI,GAAG,IAAI,CAACrC,KAAK;IAErB,IAAI,CAACqC,IAAI,EAAE;MACT;IACF;IAEA,IAAIoD,QAAQ,GAAG,IAAI,CAACvB,eAAe,CAACrE,SAAS,CAAC;IAE9C,IAAI4F,QAAQ,GAAG,CAAC,EAAE;MAChB;IACF;IAEA,IAAIC,SAAS,GAAGrD,IAAI,CAACsD,YAAY,CAAC9F,SAAS,CAAC;IAC5C,IAAI+F,sBAAsB,GAAGF,SAAS,CAACG,QAAQ,CAAC,oBAAoB,CAAC;IACrE,IAAIC,aAAa,GAAGF,sBAAsB,CAACrD,GAAG,CAAC,OAAO,CAAC;IACvD,IAAIwD,eAAe,GAAGH,sBAAsB,CAACrD,GAAG,CAAC,SAAS,CAAC;IAE3D,IAAIuD,aAAa,IAAI,IAAI,EAAE;MACzB,IAAInC,KAAK,GAAG9E,kBAAkB,CAACwD,IAAI,EAAExC,SAAS,CAAC;MAC/CiG,aAAa,GAAGxH,OAAO,CAACqF,KAAK,CAACqC,IAAI,CAACrC,KAAK,EAAE,CAAC,GAAG,CAAC;IACjD;IAEA,IAAIoC,eAAe,IAAI,IAAI,EAAE;MAC3BA,eAAe,GAAGjH,oBAAoB,CAACuD,IAAI,EAAExC,SAAS,CAAC;IACzD;IAEA,IAAIoD,QAAQ,GAAG1E,SAAS,CAACsF,UAAU,CAACiC,aAAa,CAAC;IAClD7C,QAAQ,CAAC,CAAC,CAAC,IAAI8C,eAAe;IAE9B,IAAI,CAAClF,QAAQ,CAACE,QAAQ,CAACkF,QAAQ,CAACR,QAAQ,EAAExC,QAAQ,CAAC;IAEnD,IAAI,CAACxD,IAAI,CAACyG,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAC7B,CAAC;EACDd,SAAS,EAAE,SAAAA,CAAUxF,SAAS,EAAE;IAC9B,IAAIwC,IAAI,GAAG,IAAI,CAACrC,KAAK;IAErB,IAAI,CAACqC,IAAI,EAAE;MACT;IACF;IAEA,IAAIoD,QAAQ,GAAG,IAAI,CAACvB,eAAe,CAACrE,SAAS,CAAC;IAE9C,IAAI4F,QAAQ,GAAG,CAAC,EAAE;MAChB;IACF;IAEA,IAAI9B,KAAK,GAAG9E,kBAAkB,CAACwD,IAAI,EAAExC,SAAS,CAAC;IAC/C,IAAI+D,OAAO,GAAG9E,oBAAoB,CAACuD,IAAI,EAAExC,SAAS,CAAC;IACnD,IAAIoD,QAAQ,GAAG1E,SAAS,CAACsF,UAAU,CAACF,KAAK,CAAC;IAC1CV,QAAQ,CAAC,CAAC,CAAC,IAAIW,OAAO;IAEtB,IAAI,CAAC/C,QAAQ,CAACE,QAAQ,CAACkF,QAAQ,CAACR,QAAQ,EAAExC,QAAQ,CAAC;IAEnD,IAAI,CAACxD,IAAI,CAACyG,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAC7B,CAAC;EACDC,SAAS,EAAE,SAAAA,CAAU1F,WAAW,EAAErB,OAAO,EAAEC,GAAG,EAAE+G,OAAO,EAAE;IACvD,IAAI,CAACC,aAAa,CAAC,WAAW,EAAE5F,WAAW,EAAErB,OAAO,EAAEC,GAAG,EAAE+G,OAAO,CAAC;EACrE,CAAC;EACDE,QAAQ,EAAE,SAAAA,CAAU7F,WAAW,EAAErB,OAAO,EAAEC,GAAG,EAAE+G,OAAO,EAAE;IACtD,IAAI,CAACC,aAAa,CAAC,UAAU,EAAE5F,WAAW,EAAErB,OAAO,EAAEC,GAAG,EAAE+G,OAAO,CAAC;EACpE,CAAC;EACDC,aAAa,EAAE,SAAAA,CAAUE,MAAM,EAAE9F,WAAW,EAAErB,OAAO,EAAEC,GAAG,EAAE+G,OAAO,EAAE;IACnE,IAAIhE,IAAI,GAAG3B,WAAW,CAACsB,OAAO,CAAC,CAAC;IAChC,IAAInC,SAAS,GAAGrB,QAAQ,CAACiI,cAAc,CAACpE,IAAI,EAAEgE,OAAO,CAAC;IACtD,IAAI1G,IAAI,GAAG,IAAI;IAEf,IAAIE,SAAS,IAAI,IAAI,EAAE;MACrBvB,OAAO,CAACoI,IAAI,CAAClD,IAAI,CAAC/E,MAAM,CAACkI,gBAAgB,CAAC9G,SAAS,CAAC,EAAE,UAAU+G,OAAO,EAAE;QACvEJ,MAAM,KAAK,WAAW,GAAG,IAAI,CAAClB,UAAU,CAACsB,OAAO,CAAC,GAAG,IAAI,CAACvB,SAAS,CAACuB,OAAO,CAAC;MAC7E,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLvE,IAAI,CAACmB,IAAI,CAAC,UAAUoD,OAAO,EAAE;QAC3BJ,MAAM,KAAK,WAAW,GAAG7G,IAAI,CAAC2F,UAAU,CAACsB,OAAO,CAAC,GAAGjH,IAAI,CAAC0F,SAAS,CAACuB,OAAO,CAAC;MAC7E,CAAC,CAAC;IACJ;EACF,CAAC;EACDpF,MAAM,EAAE,SAAAA,CAAA,EAAY;IAClB,IAAI,CAACjC,OAAO,CAACsH,SAAS,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE,SAAAA,CAAA,EAAY;IACnB,IAAI,CAACpH,cAAc,CAACoH,OAAO,CAAC,CAAC;IAE7B,IAAI,CAACvH,OAAO,CAACsH,SAAS,CAAC,CAAC;EAC1B;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}