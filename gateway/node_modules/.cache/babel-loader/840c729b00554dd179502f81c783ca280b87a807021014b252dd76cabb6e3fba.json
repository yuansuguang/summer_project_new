{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nimport axisDefault from './axis3DDefault';\nimport OrdinalMeta from 'echarts/lib/data/OrdinalMeta';\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {} registers\n * @param {string} dim 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nexport default function (registers, dim, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  AXIS_TYPES.forEach(function (axisType) {\n    var AxisModel = BaseAxisModelClass.extend({\n      type: dim + 'Axis3D.' + axisType,\n      /**\n       * @type readOnly\n       */\n      __ordinalMeta: null,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var themeModel = ecModel.getTheme();\n        echarts.util.merge(option, themeModel.get(axisType + 'Axis3D'));\n        echarts.util.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(dim, option);\n      },\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n      getCategories: function () {\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: echarts.util.merge(echarts.util.clone(axisDefault[axisType + 'Axis3D']), extraDefaultOption || {}, true)\n    });\n    registers.registerComponentModel(AxisModel);\n  }); // TODO\n\n  registers.registerSubTypeDefaulter(dim + 'Axis3D', echarts.util.curry(axisTypeDefaulter, dim));\n}\n;","map":{"version":3,"names":["echarts","axisDefault","OrdinalMeta","AXIS_TYPES","registers","dim","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","forEach","axisType","AxisModel","extend","type","__ordinalMeta","mergeDefaultAndTheme","option","ecModel","themeModel","getTheme","util","merge","get","getDefaultOption","optionUpdated","thisOption","createByAxisModel","getCategories","categories","getOrdinalMeta","defaultOption","clone","registerComponentModel","registerSubTypeDefaulter","curry"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/component/grid3D/createAxis3DModel.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport axisDefault from './axis3DDefault';\nimport OrdinalMeta from 'echarts/lib/data/OrdinalMeta';\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {} registers\n * @param {string} dim 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nexport default function (registers, dim, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  AXIS_TYPES.forEach(function (axisType) {\n    var AxisModel = BaseAxisModelClass.extend({\n      type: dim + 'Axis3D.' + axisType,\n\n      /**\n       * @type readOnly\n       */\n      __ordinalMeta: null,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var themeModel = ecModel.getTheme();\n        echarts.util.merge(option, themeModel.get(axisType + 'Axis3D'));\n        echarts.util.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(dim, option);\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n      getCategories: function () {\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: echarts.util.merge(echarts.util.clone(axisDefault[axisType + 'Axis3D']), extraDefaultOption || {}, true)\n    });\n    registers.registerComponentModel(AxisModel);\n  }); // TODO\n\n  registers.registerSubTypeDefaulter(dim + 'Axis3D', echarts.util.curry(axisTypeDefaulter, dim));\n}\n;"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,qBAAqB;AAC9C,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,WAAW,MAAM,8BAA8B;AACtD,IAAIC,UAAU,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,UAAUC,SAAS,EAAEC,GAAG,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,kBAAkB,EAAE;EAClGL,UAAU,CAACM,OAAO,CAAC,UAAUC,QAAQ,EAAE;IACrC,IAAIC,SAAS,GAAGL,kBAAkB,CAACM,MAAM,CAAC;MACxCC,IAAI,EAAER,GAAG,GAAG,SAAS,GAAGK,QAAQ;MAEhC;AACN;AACA;MACMI,aAAa,EAAE,IAAI;MACnBC,oBAAoB,EAAE,SAAAA,CAAUC,MAAM,EAAEC,OAAO,EAAE;QAC/C,IAAIC,UAAU,GAAGD,OAAO,CAACE,QAAQ,CAAC,CAAC;QACnCnB,OAAO,CAACoB,IAAI,CAACC,KAAK,CAACL,MAAM,EAAEE,UAAU,CAACI,GAAG,CAACZ,QAAQ,GAAG,QAAQ,CAAC,CAAC;QAC/DV,OAAO,CAACoB,IAAI,CAACC,KAAK,CAACL,MAAM,EAAE,IAAI,CAACO,gBAAgB,CAAC,CAAC,CAAC;QACnDP,MAAM,CAACH,IAAI,GAAGN,iBAAiB,CAACF,GAAG,EAAEW,MAAM,CAAC;MAC9C,CAAC;MAED;AACN;AACA;MACMQ,aAAa,EAAE,SAAAA,CAAA,EAAY;QACzB,IAAIC,UAAU,GAAG,IAAI,CAACT,MAAM;QAE5B,IAAIS,UAAU,CAACZ,IAAI,KAAK,UAAU,EAAE;UAClC,IAAI,CAACC,aAAa,GAAGZ,WAAW,CAACwB,iBAAiB,CAAC,IAAI,CAAC;QAC1D;MACF,CAAC;MACDC,aAAa,EAAE,SAAAA,CAAA,EAAY;QACzB,IAAI,IAAI,CAACX,MAAM,CAACH,IAAI,KAAK,UAAU,EAAE;UACnC,OAAO,IAAI,CAACC,aAAa,CAACc,UAAU;QACtC;MACF,CAAC;MACDC,cAAc,EAAE,SAAAA,CAAA,EAAY;QAC1B,OAAO,IAAI,CAACf,aAAa;MAC3B,CAAC;MACDgB,aAAa,EAAE9B,OAAO,CAACoB,IAAI,CAACC,KAAK,CAACrB,OAAO,CAACoB,IAAI,CAACW,KAAK,CAAC9B,WAAW,CAACS,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAEF,kBAAkB,IAAI,CAAC,CAAC,EAAE,IAAI;IACxH,CAAC,CAAC;IACFJ,SAAS,CAAC4B,sBAAsB,CAACrB,SAAS,CAAC;EAC7C,CAAC,CAAC,CAAC,CAAC;;EAEJP,SAAS,CAAC6B,wBAAwB,CAAC5B,GAAG,GAAG,QAAQ,EAAEL,OAAO,CAACoB,IAAI,CAACc,KAAK,CAAC3B,iBAAiB,EAAEF,GAAG,CAAC,CAAC;AAChG;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}