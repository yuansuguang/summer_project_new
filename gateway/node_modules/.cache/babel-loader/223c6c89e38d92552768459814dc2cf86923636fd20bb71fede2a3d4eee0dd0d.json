{"ast":null,"code":"export default {\n  data() {\n    return {\n      deletedQuestionnaires: [\n        // 示例已删除问卷数据\n        // { id: 1, name: '问卷1', publishTime: '2024-05-01', answersCount: 20 },\n        // { id: 2, name: '问卷2', publishTime: '2024-05-10', answersCount: 15 }\n      ]\n    };\n  },\n  methods: {\n    highlightButton() {\n      // 高亮清空回收站按钮\n      document.querySelector('.clear-btn').style.fontWeight = 'bold';\n      document.querySelector('.clear-btn').style.color = 'blue';\n    },\n    unhighlightButton() {\n      // 取消清空回收站按钮高亮\n      document.querySelector('.clear-btn').style.fontWeight = 'normal';\n      document.querySelector('.clear-btn').style.color = 'black';\n    },\n    clearRecycleBin() {\n      // 清空回收站操作\n      console.log('清空回收站');\n    },\n    clearData(questionnaire) {\n      // 清空问卷数据操作\n      // questionnaire.answersCount = 0;\n      const formData = new FormData();\n      formData.append('survey_id', questionnaire.questionnaireId);\n      this.$axios({\n        method: 'post',\n        url: '/submit/api/clear_survey',\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            console.log(\"success on cleaning questionnaire\");\n            break;\n          case 2:\n            console.log(\"error 2\");\n            break;\n          case 3:\n            console.log(\"error 3\");\n            break;\n          case -1:\n            console.log(res.data.status_code);\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      this.fetchDeleted();\n    },\n    restoreQuestionnaire(questionnaire) {\n      // 恢复问卷操作\n      const formData = new FormData();\n      formData.append('survey_id', questionnaire.questionnaireId);\n      this.$axios({\n        method: 'post',\n        url: '/surveymanage/api/recoversurvey',\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            console.log(\"success on recovering questionnaire\");\n            break;\n          case 2:\n            console.log(\"error 2\");\n            break;\n          case 3:\n            console.log(\"error 3\");\n            break;\n          case -1:\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      this.fetchDeleted();\n    },\n    deletePermanently(questionnaire) {\n      // 彻底删除问卷操作\n      const formData = new FormData();\n      formData.append('survey_id', questionnaire.questionnaireId);\n      console.log(questionnaire.questionnaireId);\n      this.$axios({\n        method: 'post',\n        url: '/surveymanage/api/deletesurvey',\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            console.log(\"success on deleting questionnaire\");\n            break;\n          case 2:\n            console.log(\"error 2\");\n            break;\n          case 3:\n            console.log(\"error 3\");\n            break;\n          case -1:\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      this.fetchDeleted();\n    },\n    fetchDeleted() {\n      const formData = new FormData();\n      // formData.append(\"survey_keyword\", this.loginForm.user);\n      // if (this.notRealeaseChecked == true)\n      //   formData.append(\"is_released\", 1);\n      // else if (this.notRealeaseChecked == false)\n      //   formData.append(\"is_released\", 2);\n      // else\n      formData.append(\"is_deleted\", 1);\n      formData.append(\"is_released\", 0);\n      this.$axios({\n        method: 'post',\n        url: '/survey/api/list',\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            this.deletedQuestionnaires = JSON.parse(res.data.data);\n            console.log(this.deletedQuestionnaires);\n            // for (var i = 0; i < this.questionnaires.length; i++) {\n            //   this.questionnaires[i].previewVisible = false;\n            //   if (this.questionnaires[i].questionType == '1')\n            //     this.questionnaires[i].questionType = '普通问卷'\n            //   else if (this.questionnaires[i].questionType == '2')\n            //     this.questionnaires[i].questionType = '投票问卷'\n            //   else if (this.questionnaires[i].questionType == '3')\n            //     this.questionnaires[i].questionType = '考试问卷'\n            //   else\n            //     this.questionnaires[i].questionType = '报名问卷'\n            // }\n            console.log(\"success on fetching questionnaires\");\n            break;\n          case 2:\n            console.log(\"error 2\");\n            break;\n          case 3:\n            console.log(\"error 3\");\n            break;\n          case 4:\n            console.log(\"error 4\");\n            break;\n          case 5:\n            console.log(\"error 5\");\n            break;\n          case -1:\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  created() {\n    // 假设从后端获取问卷实例数据的方法为 fetchQuestionnaires()\n    this.fetchDeleted();\n  }\n};","map":{"version":3,"names":["data","deletedQuestionnaires","methods","highlightButton","document","querySelector","style","fontWeight","color","unhighlightButton","clearRecycleBin","console","log","clearData","questionnaire","formData","FormData","append","questionnaireId","$axios","method","url","then","res","status_code","catch","err","fetchDeleted","restoreQuestionnaire","deletePermanently","JSON","parse","created"],"sources":["E:\\mytest\\src\\views\\qn-manage\\qnRecycle.vue"],"sourcesContent":["<template>\r\n    <div class=\"questionnaire-management\">\r\n      <!-- 提示信息：如果用户没有被删除的问卷 -->\r\n      <div v-if=\"!deletedQuestionnaires.length\" class=\"blue-text\">\r\n        <p>如果您想释放上传文件题的空间，请点击“清空数据”，数据清空后将无法恢复，请谨慎操作！</p>\r\n        <button class=\"clear-btn\" @mouseover=\"highlightButton\" @mouseleave=\"unhighlightButton\" @click=\"clearRecycleBin\">清空回收站</button>\r\n      </div>\r\n      \r\n      <!-- 提示信息：您还没有删除过的问卷 -->\r\n      <div v-if=\"!deletedQuestionnaires.length\" class=\"white-board\">\r\n        <h3>您还没有删除过的问卷</h3>\r\n      </div>\r\n      \r\n  \r\n      <!-- 已删除问卷列表 -->\r\n      <div v-else class=\"white-board\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>问卷名</th>\r\n              <th>发布时间</th>\r\n              <th>答卷数</th>\r\n              <th>清空数据</th>\r\n              <th>恢复</th>\r\n              <th>彻底删除</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"questionnaire in deletedQuestionnaires\" :key=\"questionnaire.id\">\r\n              <td>{{ questionnaire.questionnaireName }}</td>\r\n              <td>{{ questionnaire.creationDate }}</td>\r\n              <td>{{ questionnaire.answersCount }}</td>\r\n              <td><button @click=\"clearData(questionnaire)\">清空数据</button></td>\r\n              <td><button @click=\"restoreQuestionnaire(questionnaire)\">恢复</button></td>\r\n              <td><button @click=\"deletePermanently(questionnaire)\">彻底删除</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <p class=\"red-text\">被删除的问卷保留6个月后将被彻底删除，无法再恢复运行！</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        deletedQuestionnaires: [\r\n          // 示例已删除问卷数据\r\n          // { id: 1, name: '问卷1', publishTime: '2024-05-01', answersCount: 20 },\r\n          // { id: 2, name: '问卷2', publishTime: '2024-05-10', answersCount: 15 }\r\n        ]\r\n      };\r\n    },\r\n    methods: {\r\n      highlightButton() {\r\n        // 高亮清空回收站按钮\r\n        document.querySelector('.clear-btn').style.fontWeight = 'bold';\r\n        document.querySelector('.clear-btn').style.color = 'blue';\r\n      },\r\n      unhighlightButton() {\r\n        // 取消清空回收站按钮高亮\r\n        document.querySelector('.clear-btn').style.fontWeight = 'normal';\r\n        document.querySelector('.clear-btn').style.color = 'black';\r\n      },\r\n      clearRecycleBin() {\r\n        // 清空回收站操作\r\n        console.log('清空回收站');\r\n      },\r\n      clearData(questionnaire) {\r\n        // 清空问卷数据操作\r\n        // questionnaire.answersCount = 0;\r\n        const formData = new FormData();\r\n        formData.append('survey_id', questionnaire.questionnaireId);\r\n        this.$axios({\r\n        method: 'post',\r\n        url: '/submit/api/clear_survey',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            console.log(\"success on cleaning questionnaire\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case -1:\r\n            console.log(res.data.status_code);\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      this.fetchDeleted();\r\n      },\r\n      restoreQuestionnaire(questionnaire) {\r\n        // 恢复问卷操作\r\n        const formData = new FormData();\r\n        formData.append('survey_id', questionnaire.questionnaireId);\r\n        this.$axios({\r\n        method: 'post',\r\n        url: '/surveymanage/api/recoversurvey',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            console.log(\"success on recovering questionnaire\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      this.fetchDeleted();\r\n      },\r\n      deletePermanently(questionnaire) {\r\n        // 彻底删除问卷操作\r\n        const formData = new FormData();\r\n        formData.append('survey_id', questionnaire.questionnaireId);\r\n        console.log(questionnaire.questionnaireId);\r\n        this.$axios({\r\n        method: 'post',\r\n        url: '/surveymanage/api/deletesurvey',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            console.log(\"success on deleting questionnaire\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      this.fetchDeleted();\r\n      },\r\n      fetchDeleted() {\r\n        const formData = new FormData();\r\n      // formData.append(\"survey_keyword\", this.loginForm.user);\r\n      // if (this.notRealeaseChecked == true)\r\n      //   formData.append(\"is_released\", 1);\r\n      // else if (this.notRealeaseChecked == false)\r\n      //   formData.append(\"is_released\", 2);\r\n      // else\r\n      formData.append(\"is_deleted\", 1);\r\n      formData.append(\"is_released\", 0);\r\n      this.$axios({\r\n        method: 'post',\r\n        url: '/survey/api/list',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            this.deletedQuestionnaires = JSON.parse(res.data.data);\r\n            console.log(this.deletedQuestionnaires);\r\n            // for (var i = 0; i < this.questionnaires.length; i++) {\r\n            //   this.questionnaires[i].previewVisible = false;\r\n            //   if (this.questionnaires[i].questionType == '1')\r\n            //     this.questionnaires[i].questionType = '普通问卷'\r\n            //   else if (this.questionnaires[i].questionType == '2')\r\n            //     this.questionnaires[i].questionType = '投票问卷'\r\n            //   else if (this.questionnaires[i].questionType == '3')\r\n            //     this.questionnaires[i].questionType = '考试问卷'\r\n            //   else\r\n            //     this.questionnaires[i].questionType = '报名问卷'\r\n            // }\r\n            console.log(\"success on fetching questionnaires\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case 4:\r\n            console.log(\"error 4\");\r\n            break;\r\n          case 5:\r\n            console.log(\"error 5\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      },\r\n    },\r\n    created() {\r\n    // 假设从后端获取问卷实例数据的方法为 fetchQuestionnaires()\r\n    this.fetchDeleted();\r\n  },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* 样式 */\r\n  .blue-text {\r\n    color: blue;\r\n  }\r\n  \r\n  .red-text {\r\n    color: red;\r\n  }\r\n  \r\n  .white-board {\r\n    background-color: white;\r\n    border: 1px solid black;\r\n    padding: 20px;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .clear-btn {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .clear-btn:hover {\r\n    font-weight: bold;\r\n    color: blue;\r\n  }\r\n  \r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid black;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}