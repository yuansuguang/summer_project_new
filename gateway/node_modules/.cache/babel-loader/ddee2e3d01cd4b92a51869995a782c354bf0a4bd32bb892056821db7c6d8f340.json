{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Base from '../core/Base';\nimport OrthoCamera from '../camera/Orthographic';\nimport Plane from '../geometry/Plane';\nimport Shader from '../Shader';\nimport Material from '../Material';\nimport Mesh from '../Mesh';\nimport glenum from '../core/glenum';\nimport vertexGlsl from '../shader/source/compositor/vertex.glsl.js';\nShader['import'](vertexGlsl);\nvar planeGeo = new Plane();\nvar mesh = new Mesh({\n  geometry: planeGeo,\n  frustumCulling: false\n});\nvar camera = new OrthoCamera();\n\n/**\n * @constructor clay.compositor.Pass\n * @extends clay.core.Base\n */\nvar Pass = Base.extend(function () {\n  return /** @lends clay.compositor.Pass# */{\n    /**\n     * Fragment shader string\n     * @type {string}\n     */\n    // PENDING shader or fragment ?\n    fragment: '',\n    /**\n     * @type {Object}\n     */\n    outputs: null,\n    /**\n     * @type {clay.Material}\n     */\n    material: null,\n    /**\n     * @type {Boolean}\n     */\n    blendWithPrevious: false,\n    /**\n     * @type {Boolean}\n     */\n    clearColor: false,\n    /**\n     * @type {Boolean}\n     */\n    clearDepth: true\n  };\n}, function () {\n  var shader = new Shader(Shader.source('clay.compositor.vertex'), this.fragment);\n  var material = new Material({\n    shader: shader\n  });\n  material.enableTexturesAll();\n  this.material = material;\n}, /** @lends clay.compositor.Pass.prototype */\n{\n  /**\n   * @param {string} name\n   * @param {} value\n   */\n  setUniform: function (name, value) {\n    this.material.setUniform(name, value);\n  },\n  /**\n   * @param  {string} name\n   * @return {}\n   */\n  getUniform: function (name) {\n    var uniform = this.material.uniforms[name];\n    if (uniform) {\n      return uniform.value;\n    }\n  },\n  /**\n   * @param  {clay.Texture} texture\n   * @param  {number} attachment\n   */\n  attachOutput: function (texture, attachment) {\n    if (!this.outputs) {\n      this.outputs = {};\n    }\n    attachment = attachment || glenum.COLOR_ATTACHMENT0;\n    this.outputs[attachment] = texture;\n  },\n  /**\n   * @param  {clay.Texture} texture\n   */\n  detachOutput: function (texture) {\n    for (var attachment in this.outputs) {\n      if (this.outputs[attachment] === texture) {\n        this.outputs[attachment] = null;\n      }\n    }\n  },\n  bind: function (renderer, frameBuffer) {\n    if (this.outputs) {\n      for (var attachment in this.outputs) {\n        var texture = this.outputs[attachment];\n        if (texture) {\n          frameBuffer.attach(texture, attachment);\n        }\n      }\n    }\n    if (frameBuffer) {\n      frameBuffer.bind(renderer);\n    }\n  },\n  unbind: function (renderer, frameBuffer) {\n    frameBuffer.unbind(renderer);\n  },\n  /**\n   * @param  {clay.Renderer} renderer\n   * @param  {clay.FrameBuffer} [frameBuffer]\n   */\n  render: function (renderer, frameBuffer) {\n    var _gl = renderer.gl;\n    if (frameBuffer) {\n      this.bind(renderer, frameBuffer);\n      // MRT Support in chrome\n      // https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/ext-draw-buffers.html\n      var ext = renderer.getGLExtension('EXT_draw_buffers');\n      if (ext && this.outputs) {\n        var bufs = [];\n        for (var attachment in this.outputs) {\n          attachment = +attachment;\n          if (attachment >= _gl.COLOR_ATTACHMENT0 && attachment <= _gl.COLOR_ATTACHMENT0 + 8) {\n            bufs.push(attachment);\n          }\n        }\n        ext.drawBuffersEXT(bufs);\n      }\n    }\n    this.trigger('beforerender', this, renderer);\n\n    // FIXME Don't clear in each pass in default, let the color overwrite the buffer\n    // FIXME pixels may be discard\n    var clearBit = this.clearDepth ? _gl.DEPTH_BUFFER_BIT : 0;\n    _gl.depthMask(true);\n    if (this.clearColor) {\n      clearBit = clearBit | _gl.COLOR_BUFFER_BIT;\n      _gl.colorMask(true, true, true, true);\n      var cc = this.clearColor;\n      if (Array.isArray(cc)) {\n        _gl.clearColor(cc[0], cc[1], cc[2], cc[3]);\n      }\n    }\n    _gl.clear(clearBit);\n    if (this.blendWithPrevious) {\n      // Blend with previous rendered scene in the final output\n      // FIXME Configure blend.\n      // FIXME It will cause screen blinkï¼Ÿ\n      _gl.enable(_gl.BLEND);\n      this.material.transparent = true;\n    } else {\n      _gl.disable(_gl.BLEND);\n      this.material.transparent = false;\n    }\n    this.renderQuad(renderer);\n    this.trigger('afterrender', this, renderer);\n    if (frameBuffer) {\n      this.unbind(renderer, frameBuffer);\n    }\n  },\n  /**\n   * Simply do quad rendering\n   */\n  renderQuad: function (renderer) {\n    mesh.material = this.material;\n    renderer.renderPass([mesh], camera);\n  },\n  /**\n   * @param  {clay.Renderer} renderer\n   */\n  dispose: function (renderer) {}\n});\nexport default Pass;","map":{"version":3,"names":["Base","OrthoCamera","Plane","Shader","Material","Mesh","glenum","vertexGlsl","planeGeo","mesh","geometry","frustumCulling","camera","Pass","extend","fragment","outputs","material","blendWithPrevious","clearColor","clearDepth","shader","source","enableTexturesAll","setUniform","name","value","getUniform","uniform","uniforms","attachOutput","texture","attachment","COLOR_ATTACHMENT0","detachOutput","bind","renderer","frameBuffer","attach","unbind","render","_gl","gl","ext","getGLExtension","bufs","push","drawBuffersEXT","trigger","clearBit","DEPTH_BUFFER_BIT","depthMask","COLOR_BUFFER_BIT","colorMask","cc","Array","isArray","clear","enable","BLEND","transparent","disable","renderQuad","renderPass","dispose"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/claygl/src/compositor/Pass.js"],"sourcesContent":["import Base from '../core/Base';\nimport OrthoCamera from '../camera/Orthographic';\nimport Plane from '../geometry/Plane';\nimport Shader from '../Shader';\nimport Material from '../Material';\nimport Mesh from '../Mesh';\nimport glenum from '../core/glenum';\nimport vertexGlsl from '../shader/source/compositor/vertex.glsl.js';\n\nShader['import'](vertexGlsl);\n\nvar planeGeo = new Plane();\nvar mesh = new Mesh({\n    geometry: planeGeo,\n    frustumCulling: false\n});\nvar camera = new OrthoCamera();\n\n/**\n * @constructor clay.compositor.Pass\n * @extends clay.core.Base\n */\nvar Pass = Base.extend(function () {\n    return /** @lends clay.compositor.Pass# */ {\n        /**\n         * Fragment shader string\n         * @type {string}\n         */\n        // PENDING shader or fragment ?\n        fragment: '',\n\n        /**\n         * @type {Object}\n         */\n        outputs: null,\n\n        /**\n         * @type {clay.Material}\n         */\n        material: null,\n\n        /**\n         * @type {Boolean}\n         */\n        blendWithPrevious: false,\n\n        /**\n         * @type {Boolean}\n         */\n        clearColor: false,\n\n        /**\n         * @type {Boolean}\n         */\n        clearDepth: true\n    };\n}, function() {\n\n    var shader = new Shader(Shader.source('clay.compositor.vertex'), this.fragment);\n    var material = new Material({\n        shader: shader\n    });\n    material.enableTexturesAll();\n\n    this.material = material;\n\n},\n/** @lends clay.compositor.Pass.prototype */\n{\n    /**\n     * @param {string} name\n     * @param {} value\n     */\n    setUniform: function(name, value) {\n        this.material.setUniform(name, value);\n    },\n    /**\n     * @param  {string} name\n     * @return {}\n     */\n    getUniform: function(name) {\n        var uniform = this.material.uniforms[name];\n        if (uniform) {\n            return uniform.value;\n        }\n    },\n    /**\n     * @param  {clay.Texture} texture\n     * @param  {number} attachment\n     */\n    attachOutput: function(texture, attachment) {\n        if (!this.outputs) {\n            this.outputs = {};\n        }\n        attachment = attachment || glenum.COLOR_ATTACHMENT0;\n        this.outputs[attachment] = texture;\n    },\n    /**\n     * @param  {clay.Texture} texture\n     */\n    detachOutput: function(texture) {\n        for (var attachment in this.outputs) {\n            if (this.outputs[attachment] === texture) {\n                this.outputs[attachment] = null;\n            }\n        }\n    },\n\n    bind: function(renderer, frameBuffer) {\n\n        if (this.outputs) {\n            for (var attachment in this.outputs) {\n                var texture = this.outputs[attachment];\n                if (texture) {\n                    frameBuffer.attach(texture, attachment);\n                }\n            }\n        }\n\n        if (frameBuffer) {\n            frameBuffer.bind(renderer);\n        }\n    },\n\n    unbind: function(renderer, frameBuffer) {\n        frameBuffer.unbind(renderer);\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     * @param  {clay.FrameBuffer} [frameBuffer]\n     */\n    render: function(renderer, frameBuffer) {\n\n        var _gl = renderer.gl;\n\n        if (frameBuffer) {\n            this.bind(renderer, frameBuffer);\n            // MRT Support in chrome\n            // https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/ext-draw-buffers.html\n            var ext = renderer.getGLExtension('EXT_draw_buffers');\n            if (ext && this.outputs) {\n                var bufs = [];\n                for (var attachment in this.outputs) {\n                    attachment = +attachment;\n                    if (attachment >= _gl.COLOR_ATTACHMENT0 && attachment <= _gl.COLOR_ATTACHMENT0 + 8) {\n                        bufs.push(attachment);\n                    }\n                }\n                ext.drawBuffersEXT(bufs);\n            }\n        }\n\n        this.trigger('beforerender', this, renderer);\n\n        // FIXME Don't clear in each pass in default, let the color overwrite the buffer\n        // FIXME pixels may be discard\n        var clearBit = this.clearDepth ? _gl.DEPTH_BUFFER_BIT : 0;\n        _gl.depthMask(true);\n        if (this.clearColor) {\n            clearBit = clearBit | _gl.COLOR_BUFFER_BIT;\n            _gl.colorMask(true, true, true, true);\n            var cc = this.clearColor;\n            if (Array.isArray(cc)) {\n                _gl.clearColor(cc[0], cc[1], cc[2], cc[3]);\n            }\n        }\n        _gl.clear(clearBit);\n\n        if (this.blendWithPrevious) {\n            // Blend with previous rendered scene in the final output\n            // FIXME Configure blend.\n            // FIXME It will cause screen blinkï¼Ÿ\n            _gl.enable(_gl.BLEND);\n            this.material.transparent = true;\n        }\n        else {\n            _gl.disable(_gl.BLEND);\n            this.material.transparent = false;\n        }\n\n        this.renderQuad(renderer);\n\n        this.trigger('afterrender', this, renderer);\n\n        if (frameBuffer) {\n            this.unbind(renderer, frameBuffer);\n        }\n    },\n\n    /**\n     * Simply do quad rendering\n     */\n    renderQuad: function (renderer) {\n        mesh.material = this.material;\n        renderer.renderPass([mesh], camera);\n    },\n\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {}\n});\n\nexport default Pass;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}