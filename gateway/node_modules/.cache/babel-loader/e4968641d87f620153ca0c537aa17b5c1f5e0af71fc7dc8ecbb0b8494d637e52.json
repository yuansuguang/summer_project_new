{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * Surface texture in the 3D scene.\n * Provide management and rendering of zrender shapes and groups\n *\n * @module echarts-gl/util/EChartsSurface\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Texture2D from 'claygl/src/Texture2D';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector2 from 'claygl/src/math/Vector2';\nvar events = ['mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'click', 'dblclick', 'contextmenu'];\nfunction makeHandlerName(eventName) {\n  return '_on' + eventName;\n}\n/**\n * @constructor\n * @alias echarts-gl/util/EChartsSurface\n * @param {module:echarts~ECharts} chart\n */\n\nvar EChartsSurface = function (chart) {\n  var self = this;\n  this._texture = new Texture2D({\n    anisotropic: 32,\n    flipY: false,\n    surface: this,\n    dispose: function (renderer) {\n      self.dispose();\n      Texture2D.prototype.dispose.call(this, renderer);\n    }\n  });\n  events.forEach(function (eventName) {\n    this[makeHandlerName(eventName)] = function (eveObj) {\n      if (!eveObj.triangle) {\n        return;\n      }\n      this._meshes.forEach(function (mesh) {\n        this.dispatchEvent(eventName, mesh, eveObj.triangle, eveObj.point);\n      }, this);\n    };\n  }, this);\n  this._meshes = [];\n  if (chart) {\n    this.setECharts(chart);\n  } // Texture updated callback;\n\n  this.onupdate = null;\n};\nEChartsSurface.prototype = {\n  constructor: EChartsSurface,\n  getTexture: function () {\n    return this._texture;\n  },\n  setECharts: function (chart) {\n    this._chart = chart;\n    var canvas = chart.getDom();\n    if (!(canvas instanceof HTMLCanvasElement)) {\n      console.error('ECharts must init on canvas if it is used as texture.'); // Use an empty canvas\n\n      canvas = document.createElement('canvas');\n    } else {\n      var self = this; // Wrap refreshImmediately\n\n      var zr = chart.getZr();\n      var oldRefreshImmediately = zr.__oldRefreshImmediately || zr.refreshImmediately;\n      zr.refreshImmediately = function () {\n        oldRefreshImmediately.call(this);\n        self._texture.dirty();\n        self.onupdate && self.onupdate();\n      };\n      zr.__oldRefreshImmediately = oldRefreshImmediately;\n    }\n    this._texture.image = canvas;\n    this._texture.dirty();\n    this.onupdate && this.onupdate();\n  },\n  /**\n   * @method\n   * @param {clay.Mesh} attachedMesh\n   * @param {Array.<number>} triangle Triangle indices\n   * @param {clay.math.Vector3} point\n   */\n  dispatchEvent: function () {\n    var p0 = new Vector3();\n    var p1 = new Vector3();\n    var p2 = new Vector3();\n    var uv0 = new Vector2();\n    var uv1 = new Vector2();\n    var uv2 = new Vector2();\n    var uv = new Vector2();\n    var vCross = new Vector3();\n    return function (eventName, attachedMesh, triangle, point) {\n      var geo = attachedMesh.geometry;\n      var position = geo.attributes.position;\n      var texcoord = geo.attributes.texcoord0;\n      var dot = Vector3.dot;\n      var cross = Vector3.cross;\n      position.get(triangle[0], p0.array);\n      position.get(triangle[1], p1.array);\n      position.get(triangle[2], p2.array);\n      texcoord.get(triangle[0], uv0.array);\n      texcoord.get(triangle[1], uv1.array);\n      texcoord.get(triangle[2], uv2.array);\n      cross(vCross, p1, p2);\n      var det = dot(p0, vCross);\n      var t = dot(point, vCross) / det;\n      cross(vCross, p2, p0);\n      var u = dot(point, vCross) / det;\n      cross(vCross, p0, p1);\n      var v = dot(point, vCross) / det;\n      Vector2.scale(uv, uv0, t);\n      Vector2.scaleAndAdd(uv, uv, uv1, u);\n      Vector2.scaleAndAdd(uv, uv, uv2, v);\n      var x = uv.x * this._chart.getWidth();\n      var y = uv.y * this._chart.getHeight();\n      this._chart.getZr().handler.dispatch(eventName, {\n        zrX: x,\n        zrY: y\n      });\n    };\n  }(),\n  attachToMesh: function (mesh) {\n    if (this._meshes.indexOf(mesh) >= 0) {\n      return;\n    }\n    events.forEach(function (eventName) {\n      mesh.on(eventName, this[makeHandlerName(eventName)], this);\n    }, this);\n    this._meshes.push(mesh);\n  },\n  detachFromMesh: function (mesh) {\n    var idx = this._meshes.indexOf(mesh);\n    if (idx >= 0) {\n      this._meshes.splice(idx, 1);\n    }\n    events.forEach(function (eventName) {\n      mesh.off(eventName, this[makeHandlerName(eventName)]);\n    }, this);\n  },\n  dispose: function () {\n    this._meshes.forEach(function (mesh) {\n      this.detachFromMesh(mesh);\n    }, this);\n  }\n};\nexport default EChartsSurface;","map":{"version":3,"names":["Texture2D","Vector3","Vector2","events","makeHandlerName","eventName","EChartsSurface","chart","self","_texture","anisotropic","flipY","surface","dispose","renderer","prototype","call","forEach","eveObj","triangle","_meshes","mesh","dispatchEvent","point","setECharts","onupdate","constructor","getTexture","_chart","canvas","getDom","HTMLCanvasElement","console","error","document","createElement","zr","getZr","oldRefreshImmediately","__oldRefreshImmediately","refreshImmediately","dirty","image","p0","p1","p2","uv0","uv1","uv2","uv","vCross","attachedMesh","geo","geometry","position","attributes","texcoord","texcoord0","dot","cross","get","array","det","t","u","v","scale","scaleAndAdd","x","getWidth","y","getHeight","handler","dispatch","zrX","zrY","attachToMesh","indexOf","on","push","detachFromMesh","idx","splice","off"],"sources":["E:/mytest/node_modules/echarts-gl/lib/util/EChartsSurface.js"],"sourcesContent":["/**\n * Surface texture in the 3D scene.\n * Provide management and rendering of zrender shapes and groups\n *\n * @module echarts-gl/util/EChartsSurface\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Texture2D from 'claygl/src/Texture2D';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector2 from 'claygl/src/math/Vector2';\nvar events = ['mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'click', 'dblclick', 'contextmenu'];\n\nfunction makeHandlerName(eventName) {\n  return '_on' + eventName;\n}\n/**\n * @constructor\n * @alias echarts-gl/util/EChartsSurface\n * @param {module:echarts~ECharts} chart\n */\n\n\nvar EChartsSurface = function (chart) {\n  var self = this;\n  this._texture = new Texture2D({\n    anisotropic: 32,\n    flipY: false,\n    surface: this,\n    dispose: function (renderer) {\n      self.dispose();\n      Texture2D.prototype.dispose.call(this, renderer);\n    }\n  });\n  events.forEach(function (eventName) {\n    this[makeHandlerName(eventName)] = function (eveObj) {\n      if (!eveObj.triangle) {\n        return;\n      }\n\n      this._meshes.forEach(function (mesh) {\n        this.dispatchEvent(eventName, mesh, eveObj.triangle, eveObj.point);\n      }, this);\n    };\n  }, this);\n  this._meshes = [];\n\n  if (chart) {\n    this.setECharts(chart);\n  } // Texture updated callback;\n\n\n  this.onupdate = null;\n};\n\nEChartsSurface.prototype = {\n  constructor: EChartsSurface,\n  getTexture: function () {\n    return this._texture;\n  },\n  setECharts: function (chart) {\n    this._chart = chart;\n    var canvas = chart.getDom();\n\n    if (!(canvas instanceof HTMLCanvasElement)) {\n      console.error('ECharts must init on canvas if it is used as texture.'); // Use an empty canvas\n\n      canvas = document.createElement('canvas');\n    } else {\n      var self = this; // Wrap refreshImmediately\n\n      var zr = chart.getZr();\n      var oldRefreshImmediately = zr.__oldRefreshImmediately || zr.refreshImmediately;\n\n      zr.refreshImmediately = function () {\n        oldRefreshImmediately.call(this);\n\n        self._texture.dirty();\n\n        self.onupdate && self.onupdate();\n      };\n\n      zr.__oldRefreshImmediately = oldRefreshImmediately;\n    }\n\n    this._texture.image = canvas;\n\n    this._texture.dirty();\n\n    this.onupdate && this.onupdate();\n  },\n\n  /**\n   * @method\n   * @param {clay.Mesh} attachedMesh\n   * @param {Array.<number>} triangle Triangle indices\n   * @param {clay.math.Vector3} point\n   */\n  dispatchEvent: function () {\n    var p0 = new Vector3();\n    var p1 = new Vector3();\n    var p2 = new Vector3();\n    var uv0 = new Vector2();\n    var uv1 = new Vector2();\n    var uv2 = new Vector2();\n    var uv = new Vector2();\n    var vCross = new Vector3();\n    return function (eventName, attachedMesh, triangle, point) {\n      var geo = attachedMesh.geometry;\n      var position = geo.attributes.position;\n      var texcoord = geo.attributes.texcoord0;\n      var dot = Vector3.dot;\n      var cross = Vector3.cross;\n      position.get(triangle[0], p0.array);\n      position.get(triangle[1], p1.array);\n      position.get(triangle[2], p2.array);\n      texcoord.get(triangle[0], uv0.array);\n      texcoord.get(triangle[1], uv1.array);\n      texcoord.get(triangle[2], uv2.array);\n      cross(vCross, p1, p2);\n      var det = dot(p0, vCross);\n      var t = dot(point, vCross) / det;\n      cross(vCross, p2, p0);\n      var u = dot(point, vCross) / det;\n      cross(vCross, p0, p1);\n      var v = dot(point, vCross) / det;\n      Vector2.scale(uv, uv0, t);\n      Vector2.scaleAndAdd(uv, uv, uv1, u);\n      Vector2.scaleAndAdd(uv, uv, uv2, v);\n\n      var x = uv.x * this._chart.getWidth();\n\n      var y = uv.y * this._chart.getHeight();\n\n      this._chart.getZr().handler.dispatch(eventName, {\n        zrX: x,\n        zrY: y\n      });\n    };\n  }(),\n  attachToMesh: function (mesh) {\n    if (this._meshes.indexOf(mesh) >= 0) {\n      return;\n    }\n\n    events.forEach(function (eventName) {\n      mesh.on(eventName, this[makeHandlerName(eventName)], this);\n    }, this);\n\n    this._meshes.push(mesh);\n  },\n  detachFromMesh: function (mesh) {\n    var idx = this._meshes.indexOf(mesh);\n\n    if (idx >= 0) {\n      this._meshes.splice(idx, 1);\n    }\n\n    events.forEach(function (eventName) {\n      mesh.off(eventName, this[makeHandlerName(eventName)]);\n    }, this);\n  },\n  dispose: function () {\n    this._meshes.forEach(function (mesh) {\n      this.detachFromMesh(mesh);\n    }, this);\n  }\n};\nexport default EChartsSurface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}