{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-34021c93\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"history-management\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"white-board\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"您还没有填写过的问卷\", -1 /* HOISTED */));\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = {\n  class: \"white-board\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"问卷名\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"发布时间\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"答卷数\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"是否发布\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"清空数据\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"取消收藏\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"继续填写\")])], -1 /* HOISTED */));\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 提示信息：如果用户没有收藏的问卷 \"), !$data.favoriteQuestionnaires.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [..._hoisted_4])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 已收藏问卷列表 \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"table\", null, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.favoriteQuestionnaires, questionnaire => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: questionnaire.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(questionnaire.questionnaireName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(questionnaire.creationDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(questionnaire.answersCount), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(questionnaire.isPublished), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.clearData(questionnaire)\n    }, \"清空数据\", 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.removeFromFavorites(questionnaire)\n    }, \"取消收藏\", 8 /* PROPS */, _hoisted_8)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.continueWrite(questionnaire)\n    }, \"继续填写\", 8 /* PROPS */, _hoisted_9)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_1","_createCommentVNode","$data","favoriteQuestionnaires","length","_hoisted_2","_hoisted_4","_Fragment","_hoisted_5","_hoisted_6","_renderList","questionnaire","id","_toDisplayString","questionnaireName","creationDate","answersCount","isPublished","onClick","$event","$options","clearData","_hoisted_7","removeFromFavorites","_hoisted_8","continueWrite","_hoisted_9"],"sources":["E:\\mytest\\src\\views\\qn-manage\\qnHistory.vue"],"sourcesContent":["<template>\r\n    <div class=\"history-management\">\r\n      <!-- 提示信息：如果用户没有收藏的问卷 -->\r\n      <div v-if=\"!favoriteQuestionnaires.length\" class=\"white-board\">\r\n        <h3>您还没有填写过的问卷</h3>\r\n      </div>\r\n      \r\n      <!-- 已收藏问卷列表 -->\r\n      <div v-else class=\"white-board\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>问卷名</th>\r\n              <th>发布时间</th>\r\n              <th>答卷数</th>\r\n              <th>是否发布</th>\r\n              <th>清空数据</th>\r\n              <th>取消收藏</th>\r\n              <th>继续填写</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"questionnaire in favoriteQuestionnaires\" :key=\"questionnaire.id\">\r\n              <td>{{ questionnaire.questionnaireName }}</td>\r\n              <td>{{ questionnaire.creationDate }}</td>\r\n              <td>{{ questionnaire.answersCount }}</td>\r\n              <td>{{ questionnaire.isPublished }}</td>\r\n              <td><button @click=\"clearData(questionnaire)\">清空数据</button></td>\r\n              <td><button @click=\"removeFromFavorites(questionnaire)\">取消收藏</button></td>\r\n              <td><button @click=\"continueWrite(questionnaire)\">继续填写</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        favoriteQuestionnaires: [\r\n        {\r\n            questionnaireName: '问卷1',\r\n            questionnaireId: '123',\r\n            id:1,\r\n            isPublished: true,\r\n            questionType: '普通问卷',\r\n            answersCount: 50,\r\n            creationDate: '2024-05-20',\r\n            isFavorited: true,\r\n            isPaused: true,\r\n            isEditing: false,\r\n          },\r\n          {\r\n            questionnaireName: '问卷2',\r\n            questionnaireId: '456',\r\n            id:2,\r\n            isPublished: false,\r\n            questionType: '考试问卷',\r\n            answersCount: 30,\r\n            creationDate: '2024-05-21',\r\n            isFavorited: false,\r\n            isPaused: false,\r\n            isEditing: false,\r\n          },\r\n          {\r\n            questionnaireName: '问卷3',\r\n            questionnaireId: '789',\r\n            isPublished: false,\r\n            id:3,\r\n            questionType: '投票问卷',\r\n            answersCount: 50,\r\n            creationDate: '2024-05-22',\r\n            isFavorited: true,\r\n            isPaused: false,\r\n            isEditing: false,\r\n          },\r\n          {\r\n            questionnaireName: '问卷4',\r\n            questionnaireId: '789',\r\n            isPublished: false,\r\n            id:4,\r\n            questionType: '报名问卷',\r\n            answersCount: 50,\r\n            creationDate: '2024-05-23',\r\n            isFavorited: true,\r\n            isPaused: false,\r\n            isEditing: false,\r\n          },\r\n          {\r\n            questionnaireName: '问卷5',\r\n            questionnaireId: '789',\r\n            isPublished: false,\r\n            id:5,\r\n            questionType: '其他问卷',\r\n            answersCount: 50,\r\n            creationDate: '2024-05-24',\r\n            isFavorited: true,\r\n            isPaused: false,\r\n            isEditing: false,\r\n          },\r\n          {\r\n            questionnaireName: '问卷6',\r\n            questionnaireId: '789',\r\n            id:6,\r\n            isPublished: false,\r\n            questionType: '其他问卷',\r\n            answersCount: 50,\r\n            creationDate: '2024-05-25',\r\n            isFavorited: true,\r\n            isPaused: true,\r\n            isEditing: false,\r\n          },\r\n        ]\r\n      };\r\n    },\r\n    methods: {\r\n      clearData(questionnaire) {\r\n        // 清空问卷数据操作\r\n        // questionnaire.answersCount = 0;\r\n        const formData = new FormData();\r\n        formData.append('survey_id', questionnaire.questionnaireId);\r\n        this.$axios({\r\n        method: 'post',\r\n        url: '/submit/api/clear_survey',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            console.log(\"success on cleaning questionnaire\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      this.fetchFavorite();\r\n      },\r\n      removeFromFavorites(questionnaire) {\r\n        // 取消收藏操作\r\n        const formData = new FormData();\r\n      formData.append('survey_id', questionnaire.questionnaireId);\r\n      this.$axios({\r\n        method: 'post',\r\n        url: '/surveymanage/api/collectsurvey',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            console.log(\"success on collecting/uncollecting questionnaire\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      this.fetchFavorite();\r\n      },\r\n      continueWrite(){\r\n        \r\n      },\r\n      fetchFavorite() {\r\n        const formData = new FormData();\r\n      // formData.append(\"survey_keyword\", this.loginForm.user);\r\n      // if (this.notRealeaseChecked == true)\r\n      //   formData.append(\"is_released\", 1);\r\n      // else if (this.notRealeaseChecked == false)\r\n      //   formData.append(\"is_released\", 2);\r\n      // else\r\n      formData.append(\"is_collected\", 1);\r\n      formData.append(\"is_released\", 0);\r\n      this.$axios({\r\n        method: 'post',\r\n        url: '/survey/api/list',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            this.favoriteQuestionnaires = JSON.parse(res.data.data);\r\n            console.log(this.favoriteQuestionnaires);\r\n            // for (var i = 0; i < this.questionnaires.length; i++) {\r\n            //   this.questionnaires[i].previewVisible = false;\r\n            //   if (this.questionnaires[i].questionType == '1')\r\n            //     this.questionnaires[i].questionType = '普通问卷'\r\n            //   else if (this.questionnaires[i].questionType == '2')\r\n            //     this.questionnaires[i].questionType = '投票问卷'\r\n            //   else if (this.questionnaires[i].questionType == '3')\r\n            //     this.questionnaires[i].questionType = '考试问卷'\r\n            //   else\r\n            //     this.questionnaires[i].questionType = '报名问卷'\r\n            // }\r\n            console.log(\"success on fetching questionnaires\");\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case 4:\r\n            console.log(\"error 4\");\r\n            break;\r\n          case 5:\r\n            console.log(\"error 5\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      },\r\n    },\r\n    created() {\r\n    // 假设从后端获取问卷实例数据的方法为 fetchQuestionnaires()\r\n    this.fetchFavorite();\r\n  },\r\n  };\r\n  </script>\r\n\r\n  <style scoped>\r\n  /* 样式 */\r\n  .history-management{\r\n    padding-top: 4%;\r\n  }\r\n  .white-board {\r\n    background-color: white;\r\n    border: 1px solid black;\r\n    padding: 20px;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid black;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAoB;;EADnCC,GAAA;EAGiDD,KAAK,EAAC;;gEAC/CE,mBAAA,CAAmB,YAAf,YAAU;oBAAdC,UAAmB,C;;EAITH,KAAK,EAAC;AAAa;gEAE3BE,mBAAA,CAUQ,gB,aATNA,mBAAA,CAQK,a,aAPHA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,E;mBAlBtB;mBAAA;mBAAA;;uBACIE,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJC,mBAAA,sBAAyB,E,CACbC,KAAA,CAAAC,sBAAsB,CAACC,MAAM,I,cAAzCL,mBAAA,CAEM,OAFNM,UAEM,EALZ,IAAAC,UAAA,O,cAQMP,mBAAA,CAyBMQ,SAAA;IAjCZX,GAAA;EAAA,IAOMK,mBAAA,aAAgB,EAChBJ,mBAAA,CAyBM,OAzBNW,UAyBM,GAxBJX,mBAAA,CAuBQ,gBAtBNY,UAUQ,EACRZ,mBAAA,CAUQ,iB,kBATNE,mBAAA,CAQKQ,SAAA,QA9BjBG,WAAA,CAsBwCR,KAAA,CAAAC,sBAAsB,EAAvCQ,aAAa;yBAAxBZ,mBAAA,CAQK;MARgDH,GAAG,EAAEe,aAAa,CAACC;QACtEf,mBAAA,CAA8C,YAAAgB,gBAAA,CAAvCF,aAAa,CAACG,iBAAiB,kBACtCjB,mBAAA,CAAyC,YAAAgB,gBAAA,CAAlCF,aAAa,CAACI,YAAY,kBACjClB,mBAAA,CAAyC,YAAAgB,gBAAA,CAAlCF,aAAa,CAACK,YAAY,kBACjCnB,mBAAA,CAAwC,YAAAgB,gBAAA,CAAjCF,aAAa,CAACM,WAAW,kBAChCpB,mBAAA,CAAgE,aAA5DA,mBAAA,CAAuD;MAA9CqB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACV,aAAa;OAAG,MAAI,iBA3BhEW,UAAA,E,GA4BczB,mBAAA,CAA0E,aAAtEA,mBAAA,CAAiE;MAAxDqB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAG,mBAAmB,CAACZ,aAAa;OAAG,MAAI,iBA5B1Ea,UAAA,E,GA6Bc3B,mBAAA,CAAoE,aAAhEA,mBAAA,CAA2D;MAAlDqB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAK,aAAa,CAACd,aAAa;OAAG,MAAI,iBA7BpEe,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}