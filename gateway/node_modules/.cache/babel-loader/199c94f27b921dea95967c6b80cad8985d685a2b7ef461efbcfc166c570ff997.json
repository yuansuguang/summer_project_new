{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nvar formatUtil = {};\nformatUtil.getFormattedLabel = function (seriesModel, dataIndex, status, dataType, dimIndex) {\n  status = status || 'normal';\n  var data = seriesModel.getData(dataType);\n  var itemModel = data.getItemModel(dataIndex);\n  var params = seriesModel.getDataParams(dataIndex, dataType);\n  if (dimIndex != null && params.value instanceof Array) {\n    params.value = params.value[dimIndex];\n  }\n  var formatter = itemModel.get(status === 'normal' ? ['label', 'formatter'] : ['emphasis', 'label', 'formatter']);\n  if (formatter == null) {\n    formatter = itemModel.get(['label', 'formatter']);\n  }\n  var text;\n  if (typeof formatter === 'function') {\n    params.status = status;\n    text = formatter(params);\n  } else if (typeof formatter === 'string') {\n    text = echarts.format.formatTpl(formatter, params);\n  }\n  return text;\n};\n/**\n * If value is not array, then convert it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nformatUtil.normalizeToArray = function (value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n};\nexport default formatUtil;","map":{"version":3,"names":["echarts","formatUtil","getFormattedLabel","seriesModel","dataIndex","status","dataType","dimIndex","data","getData","itemModel","getItemModel","params","getDataParams","value","Array","formatter","get","text","format","formatTpl","normalizeToArray"],"sources":["E:/mytest/node_modules/echarts-gl/lib/util/format.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nvar formatUtil = {};\n\nformatUtil.getFormattedLabel = function (seriesModel, dataIndex, status, dataType, dimIndex) {\n  status = status || 'normal';\n  var data = seriesModel.getData(dataType);\n  var itemModel = data.getItemModel(dataIndex);\n  var params = seriesModel.getDataParams(dataIndex, dataType);\n\n  if (dimIndex != null && params.value instanceof Array) {\n    params.value = params.value[dimIndex];\n  }\n\n  var formatter = itemModel.get(status === 'normal' ? ['label', 'formatter'] : ['emphasis', 'label', 'formatter']);\n\n  if (formatter == null) {\n    formatter = itemModel.get(['label', 'formatter']);\n  }\n\n  var text;\n\n  if (typeof formatter === 'function') {\n    params.status = status;\n    text = formatter(params);\n  } else if (typeof formatter === 'string') {\n    text = echarts.format.formatTpl(formatter, params);\n  }\n\n  return text;\n};\n/**\n * If value is not array, then convert it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\n\nformatUtil.normalizeToArray = function (value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n};\n\nexport default formatUtil;"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,qBAAqB;AAC9C,IAAIC,UAAU,GAAG,CAAC,CAAC;AAEnBA,UAAU,CAACC,iBAAiB,GAAG,UAAUC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EAC3FF,MAAM,GAAGA,MAAM,IAAI,QAAQ;EAC3B,IAAIG,IAAI,GAAGL,WAAW,CAACM,OAAO,CAACH,QAAQ,CAAC;EACxC,IAAII,SAAS,GAAGF,IAAI,CAACG,YAAY,CAACP,SAAS,CAAC;EAC5C,IAAIQ,MAAM,GAAGT,WAAW,CAACU,aAAa,CAACT,SAAS,EAAEE,QAAQ,CAAC;EAE3D,IAAIC,QAAQ,IAAI,IAAI,IAAIK,MAAM,CAACE,KAAK,YAAYC,KAAK,EAAE;IACrDH,MAAM,CAACE,KAAK,GAAGF,MAAM,CAACE,KAAK,CAACP,QAAQ,CAAC;EACvC;EAEA,IAAIS,SAAS,GAAGN,SAAS,CAACO,GAAG,CAACZ,MAAM,KAAK,QAAQ,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;EAEhH,IAAIW,SAAS,IAAI,IAAI,EAAE;IACrBA,SAAS,GAAGN,SAAS,CAACO,GAAG,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;EACnD;EAEA,IAAIC,IAAI;EAER,IAAI,OAAOF,SAAS,KAAK,UAAU,EAAE;IACnCJ,MAAM,CAACP,MAAM,GAAGA,MAAM;IACtBa,IAAI,GAAGF,SAAS,CAACJ,MAAM,CAAC;EAC1B,CAAC,MAAM,IAAI,OAAOI,SAAS,KAAK,QAAQ,EAAE;IACxCE,IAAI,GAAGlB,OAAO,CAACmB,MAAM,CAACC,SAAS,CAACJ,SAAS,EAAEJ,MAAM,CAAC;EACpD;EAEA,OAAOM,IAAI;AACb,CAAC;AACD;AACA;AACA;AACA;AACA;;AAGAjB,UAAU,CAACoB,gBAAgB,GAAG,UAAUP,KAAK,EAAE;EAC7C,OAAOA,KAAK,YAAYC,KAAK,GAAGD,KAAK,GAAGA,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,CAACA,KAAK,CAAC;AACtE,CAAC;AAED,eAAeb,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}