{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e676b9fe\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"times\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"num\"\n};\nconst _hoisted_5 = {\n  class: \"num\"\n};\nconst _hoisted_6 = {\n  class: \"num\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"end\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.isEnd ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createTextVNode(\" 距离考试结束还有\"), _hoisted_3, _createElementVNode(\"span\", _hoisted_4, _toDisplayString($data.hour), 1 /* TEXT */), _createTextVNode(\"时 \"), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($data.minute), 1 /* TEXT */), _createTextVNode(\"分 \"), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($data.second), 1 /* TEXT */), _createTextVNode(\"秒 \")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \" 考试已结束 \"))]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","$data","isEnd","_hoisted_2","_createTextVNode","_hoisted_3","_hoisted_4","_toDisplayString","hour","_hoisted_5","minute","_hoisted_6","second","_hoisted_7"],"sources":["E:\\mytest\\src\\views\\qn-fillpane\\components\\ddl.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"times\" v-if=\"!isEnd\">\r\n            距离考试结束还有<br>\r\n            <span class=\"num\">{{ hour }}</span>时\r\n            <span class=\"num\">{{ minute }}</span>分\r\n            <span class=\"num\">{{ second }}</span>秒\r\n        </div>\r\n        <div class=\"end\" v-else>\r\n            考试已结束\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'DeadTime',\r\n    props: {\r\n        endTime: Date // 修改 props 的类型为 Date\r\n    },\r\n    data() {\r\n        return {\r\n            currentTime: new Date(),\r\n            ms: 1,\r\n            hour: 1,\r\n            minute: 1,\r\n            second: 1,\r\n            isEnd: false,\r\n        };\r\n    },\r\n    methods: {\r\n        change() {\r\n            this.currentTime = new Date();\r\n            this.ms = this.endTime - this.currentTime;\r\n            if (this.ms <= 0) this.isEnd = true;\r\n            this.hour = Math.floor(this.ms / 1000 / 60 / 60);\r\n            this.minute = Math.floor((this.ms - this.hour * 1000 * 60 * 60) / 1000 / 60);\r\n            this.second = Math.floor((this.ms - this.hour * 1000 * 60 * 60 - this.minute * 1000 * 60) / 1000);\r\n        }\r\n    },\r\n    mounted() {\r\n        let _this = this;\r\n        this.timer = setInterval(() => {\r\n            _this.change();\r\n        }, 500)\r\n    },\r\n    beforeUnmount() {\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@media screen and (min-width: 600px) {\r\n    .times {\r\n        color: #ffffff;\r\n        font-size: 16px;\r\n        text-align: center;\r\n    }\r\n\r\n    .times .num {\r\n        color: #ffffff;\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n        margin-right: 5px;\r\n    }\r\n\r\n    .container {\r\n        position: fixed;\r\n        right: 3%;\r\n        top: 10px;\r\n        margin: auto;\r\n        background-color: #ec5e66;\r\n        border-radius: 0 0 15px 15px;\r\n        padding-top: 10px;\r\n        padding-bottom: 10px;\r\n        padding-right: 15px;\r\n        padding-left: 15px;\r\n    }\r\n\r\n    .end {\r\n        color: #ffffff;\r\n        font-size: 20px;\r\n        text-align: center;\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 600px) {/*手机端显示*/ \r\n    .times {\r\n        color: #ffffff;\r\n        font-size: 16px;\r\n        text-align: center;\r\n    }\r\n\r\n    .times .num {\r\n        color: #ffffff;\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n        margin-right: 5px;\r\n    }\r\n\r\n    .container {\r\n        position: fixed;\r\n        right: 3%;\r\n        top: 10px;\r\n        margin: auto;\r\n        background-color: #ec5e66;\r\n        border-radius: 0 0 15px 15px;\r\n        padding-top: 10px;\r\n        padding-bottom: 10px;\r\n        padding-right: 15px;\r\n        padding-left: 15px;\r\n        z-index: 9999;\r\n    }\r\n\r\n    .end {\r\n        color: #ffffff;\r\n        font-size: 20px;\r\n        text-align: center;\r\n    }\r\n}\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAW;;EAD1BC,GAAA;EAEaD,KAAK,EAAC;;gEACCE,mBAAA,CAAI;;EACNF,KAAK,EAAC;AAAK;;EACXA,KAAK,EAAC;AAAK;;EACXA,KAAK,EAAC;AAAK;;EAN7BC,GAAA;EAQaD,KAAK,EAAC;;;uBAPfG,mBAAA,CAUM,OAVNC,UAUM,G,CATwBC,KAAA,CAAAC,KAAK,I,cAA/BH,mBAAA,CAKM,OALNI,UAKM,GAPdC,gBAAA,CAEyC,WACrB,GAAAC,UAAI,EACZP,mBAAA,CAAmC,QAAnCQ,UAAmC,EAAAC,gBAAA,CAAdN,KAAA,CAAAO,IAAI,kBAJrCJ,gBAAA,CAI+C,IACnC,GAAAN,mBAAA,CAAqC,QAArCW,UAAqC,EAAAF,gBAAA,CAAhBN,KAAA,CAAAS,MAAM,kBALvCN,gBAAA,CAKiD,IACrC,GAAAN,mBAAA,CAAqC,QAArCa,UAAqC,EAAAJ,gBAAA,CAAhBN,KAAA,CAAAW,MAAM,kBANvCR,gBAAA,CAMiD,IACzC,E,oBACAL,mBAAA,CAEM,OAFNc,UAEM,EAFkB,SAExB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}