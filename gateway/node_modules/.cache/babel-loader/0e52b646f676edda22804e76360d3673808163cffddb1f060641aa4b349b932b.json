{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nimport Maptalks3DLayer from './Maptalks3DLayer';\nimport SceneHelper from '../common/SceneHelper';\nimport graphicGL from '../../util/graphicGL';\nimport displayShadowGLSL from '../../util/shader/displayShadow.glsl.js';\ngraphicGL.Shader.import(displayShadowGLSL);\nexport default echarts.ComponentView.extend({\n  type: 'maptalks3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this._groundMesh = new graphicGL.Mesh({\n      geometry: new graphicGL.PlaneGeometry(),\n      material: new graphicGL.Material({\n        shader: new graphicGL.Shader({\n          vertex: graphicGL.Shader.source('ecgl.displayShadow.vertex'),\n          fragment: graphicGL.Shader.source('ecgl.displayShadow.fragment')\n        }),\n        depthMask: false\n      }),\n      // Render first\n      renderOrder: -100,\n      culling: false,\n      castShadow: false,\n      $ignorePicking: true,\n      renderNormal: true\n    });\n  },\n  _initMaptalksLayer: function (mapbox3DModel, api) {\n    var zr = api.getZr();\n    this._zrLayer = new Maptalks3DLayer('maptalks3D', zr, mapbox3DModel.get('center'), mapbox3DModel.get('zoom'));\n    zr.painter.insertLayer(-1000, this._zrLayer);\n    this._lightRoot = new graphicGL.Node();\n    this._sceneHelper = new SceneHelper(this._lightRoot);\n    this._sceneHelper.initLight(this._lightRoot);\n    var maptalks = this._zrLayer.getMaptalks();\n    var dispatchInteractAction = this._dispatchInteractAction.bind(this, api, maptalks); // PENDING\n\n    ['zoomend', 'zooming', 'zoomstart', 'dragrotating', 'pitch', 'pitchend', 'movestart', 'moving', 'moveend', 'resize', 'touchstart', 'touchmove', 'touchend', 'animating'].forEach(function (eName) {\n      maptalks.on(eName, dispatchInteractAction);\n    });\n  },\n  render: function (maptalks3DModel, ecModel, api) {\n    if (!this._zrLayer) {\n      this._initMaptalksLayer(maptalks3DModel, api);\n    }\n    var mtks = this._zrLayer.getMaptalks();\n    var urlTemplate = maptalks3DModel.get('urlTemplate');\n    var baseLayer = mtks.getBaseLayer();\n    if (urlTemplate !== this._oldUrlTemplate) {\n      if (!baseLayer) {\n        baseLayer = new maptalks.TileLayer('maptalks-echarts-gl-baselayer', {\n          urlTemplate: urlTemplate,\n          // used sequentially to help with browser parallel requests per domain limitation\n          subdomains: ['a', 'b', 'c'],\n          attribution: maptalks3DModel.get('attribution')\n        });\n        mtks.setBaseLayer(baseLayer);\n      } else {\n        // PENDING setOptions may not work?\n        baseLayer.setOptions({\n          urlTemplate: urlTemplate,\n          attribution: maptalks3DModel.get('attribution')\n        });\n      }\n    }\n    this._oldUrlTemplate = urlTemplate;\n    mtks.setCenter(maptalks3DModel.get('center'));\n    mtks.setZoom(maptalks3DModel.get('zoom'), {\n      animation: false\n    });\n    mtks.setPitch(maptalks3DModel.get('pitch'));\n    mtks.setBearing(maptalks3DModel.get('bearing'));\n    maptalks3DModel.setMaptalks(mtks);\n    var coordSys = maptalks3DModel.coordinateSystem; // Not add to rootNode. Or light direction will be stretched by rootNode scale\n\n    coordSys.viewGL.scene.add(this._lightRoot);\n    coordSys.viewGL.add(this._groundMesh);\n    this._updateGroundMesh(); // Update lights\n\n    this._sceneHelper.setScene(coordSys.viewGL.scene);\n    this._sceneHelper.updateLight(maptalks3DModel); // Update post effects\n\n    coordSys.viewGL.setPostEffect(maptalks3DModel.getModel('postEffect'), api);\n    coordSys.viewGL.setTemporalSuperSampling(maptalks3DModel.getModel('temporalSuperSampling'));\n    this._maptalks3DModel = maptalks3DModel;\n  },\n  afterRender: function (maptalks3DModel, ecModel, api, layerGL) {\n    var renderer = layerGL.renderer;\n    this._sceneHelper.updateAmbientCubemap(renderer, maptalks3DModel, api);\n    this._sceneHelper.updateSkybox(renderer, maptalks3DModel, api); // FIXME If other series changes coordinate system.\n    // FIXME When doing progressive rendering.\n\n    maptalks3DModel.coordinateSystem.viewGL.scene.traverse(function (mesh) {\n      if (mesh.material) {\n        mesh.material.define('fragment', 'NORMAL_UP_AXIS', 2);\n        mesh.material.define('fragment', 'NORMAL_FRONT_AXIS', 1);\n      }\n    });\n  },\n  updateCamera: function (maptalks3DModel, ecModel, api, payload) {\n    maptalks3DModel.coordinateSystem.setCameraOption(payload);\n    this._updateGroundMesh();\n    api.getZr().refresh();\n  },\n  _dispatchInteractAction: function (api, maptalks, maptalks3DModel) {\n    api.dispatchAction({\n      type: 'maptalks3DChangeCamera',\n      pitch: maptalks.getPitch(),\n      zoom: getMapboxZoom(maptalks.getResolution()) + 1,\n      center: maptalks.getCenter().toArray(),\n      bearing: maptalks.getBearing(),\n      maptalks3DId: this._maptalks3DModel && this._maptalks3DModel.id\n    });\n  },\n  _updateGroundMesh: function () {\n    if (this._maptalks3DModel) {\n      var coordSys = this._maptalks3DModel.coordinateSystem;\n      var pt = coordSys.dataToPoint(coordSys.center);\n      this._groundMesh.position.set(pt[0], pt[1], -0.001);\n      var plane = new graphicGL.Plane(new graphicGL.Vector3(0, 0, 1), 0);\n      var ray1 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(-1, -1));\n      var ray2 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(1, 1));\n      var pos0 = ray1.intersectPlane(plane);\n      var pos1 = ray2.intersectPlane(plane);\n      var scale = pos0.dist(pos1) / coordSys.viewGL.rootNode.scale.x;\n      this._groundMesh.scale.set(scale, scale, 1);\n    }\n  },\n  dispose: function (ecModel, api) {\n    if (this._zrLayer) {\n      this._zrLayer.dispose();\n    }\n    api.getZr().painter.delLayer(-1000);\n  }\n});\nconst MAX_RES = 2 * 6378137 * Math.PI / (256 * Math.pow(2, 20));\nfunction getMapboxZoom(res) {\n  return 19 - Math.log(res / MAX_RES) / Math.LN2;\n}","map":{"version":3,"names":["echarts","Maptalks3DLayer","SceneHelper","graphicGL","displayShadowGLSL","Shader","import","ComponentView","extend","type","__ecgl__","init","ecModel","api","_groundMesh","Mesh","geometry","PlaneGeometry","material","Material","shader","vertex","source","fragment","depthMask","renderOrder","culling","castShadow","$ignorePicking","renderNormal","_initMaptalksLayer","mapbox3DModel","zr","getZr","_zrLayer","get","painter","insertLayer","_lightRoot","Node","_sceneHelper","initLight","maptalks","getMaptalks","dispatchInteractAction","_dispatchInteractAction","bind","forEach","eName","on","render","maptalks3DModel","mtks","urlTemplate","baseLayer","getBaseLayer","_oldUrlTemplate","TileLayer","subdomains","attribution","setBaseLayer","setOptions","setCenter","setZoom","animation","setPitch","setBearing","setMaptalks","coordSys","coordinateSystem","viewGL","scene","add","_updateGroundMesh","setScene","updateLight","setPostEffect","getModel","setTemporalSuperSampling","_maptalks3DModel","afterRender","layerGL","renderer","updateAmbientCubemap","updateSkybox","traverse","mesh","define","updateCamera","payload","setCameraOption","refresh","dispatchAction","pitch","getPitch","zoom","getMapboxZoom","getResolution","center","getCenter","toArray","bearing","getBearing","maptalks3DId","id","pt","dataToPoint","position","set","plane","Plane","Vector3","ray1","camera","castRay","Vector2","ray2","pos0","intersectPlane","pos1","scale","dist","rootNode","x","dispose","delLayer","MAX_RES","Math","PI","pow","res","log","LN2"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/component/maptalks3D/Maptalks3DView.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport Maptalks3DLayer from './Maptalks3DLayer';\nimport SceneHelper from '../common/SceneHelper';\nimport graphicGL from '../../util/graphicGL';\nimport displayShadowGLSL from '../../util/shader/displayShadow.glsl.js';\ngraphicGL.Shader.import(displayShadowGLSL);\nexport default echarts.ComponentView.extend({\n  type: 'maptalks3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this._groundMesh = new graphicGL.Mesh({\n      geometry: new graphicGL.PlaneGeometry(),\n      material: new graphicGL.Material({\n        shader: new graphicGL.Shader({\n          vertex: graphicGL.Shader.source('ecgl.displayShadow.vertex'),\n          fragment: graphicGL.Shader.source('ecgl.displayShadow.fragment')\n        }),\n        depthMask: false\n      }),\n      // Render first\n      renderOrder: -100,\n      culling: false,\n      castShadow: false,\n      $ignorePicking: true,\n      renderNormal: true\n    });\n  },\n  _initMaptalksLayer: function (mapbox3DModel, api) {\n    var zr = api.getZr();\n    this._zrLayer = new Maptalks3DLayer('maptalks3D', zr, mapbox3DModel.get('center'), mapbox3DModel.get('zoom'));\n    zr.painter.insertLayer(-1000, this._zrLayer);\n    this._lightRoot = new graphicGL.Node();\n    this._sceneHelper = new SceneHelper(this._lightRoot);\n\n    this._sceneHelper.initLight(this._lightRoot);\n\n    var maptalks = this._zrLayer.getMaptalks();\n\n    var dispatchInteractAction = this._dispatchInteractAction.bind(this, api, maptalks); // PENDING\n\n\n    ['zoomend', 'zooming', 'zoomstart', 'dragrotating', 'pitch', 'pitchend', 'movestart', 'moving', 'moveend', 'resize', 'touchstart', 'touchmove', 'touchend', 'animating'].forEach(function (eName) {\n      maptalks.on(eName, dispatchInteractAction);\n    });\n  },\n  render: function (maptalks3DModel, ecModel, api) {\n    if (!this._zrLayer) {\n      this._initMaptalksLayer(maptalks3DModel, api);\n    }\n\n    var mtks = this._zrLayer.getMaptalks();\n\n    var urlTemplate = maptalks3DModel.get('urlTemplate');\n    var baseLayer = mtks.getBaseLayer();\n\n    if (urlTemplate !== this._oldUrlTemplate) {\n      if (!baseLayer) {\n        baseLayer = new maptalks.TileLayer('maptalks-echarts-gl-baselayer', {\n          urlTemplate: urlTemplate,\n          // used sequentially to help with browser parallel requests per domain limitation\n          subdomains: ['a', 'b', 'c'],\n          attribution: maptalks3DModel.get('attribution')\n        });\n        mtks.setBaseLayer(baseLayer);\n      } else {\n        // PENDING setOptions may not work?\n        baseLayer.setOptions({\n          urlTemplate: urlTemplate,\n          attribution: maptalks3DModel.get('attribution')\n        });\n      }\n    }\n\n    this._oldUrlTemplate = urlTemplate;\n    mtks.setCenter(maptalks3DModel.get('center'));\n    mtks.setZoom(maptalks3DModel.get('zoom'), {\n      animation: false\n    });\n    mtks.setPitch(maptalks3DModel.get('pitch'));\n    mtks.setBearing(maptalks3DModel.get('bearing'));\n    maptalks3DModel.setMaptalks(mtks);\n    var coordSys = maptalks3DModel.coordinateSystem; // Not add to rootNode. Or light direction will be stretched by rootNode scale\n\n    coordSys.viewGL.scene.add(this._lightRoot);\n    coordSys.viewGL.add(this._groundMesh);\n\n    this._updateGroundMesh(); // Update lights\n\n\n    this._sceneHelper.setScene(coordSys.viewGL.scene);\n\n    this._sceneHelper.updateLight(maptalks3DModel); // Update post effects\n\n\n    coordSys.viewGL.setPostEffect(maptalks3DModel.getModel('postEffect'), api);\n    coordSys.viewGL.setTemporalSuperSampling(maptalks3DModel.getModel('temporalSuperSampling'));\n    this._maptalks3DModel = maptalks3DModel;\n  },\n  afterRender: function (maptalks3DModel, ecModel, api, layerGL) {\n    var renderer = layerGL.renderer;\n\n    this._sceneHelper.updateAmbientCubemap(renderer, maptalks3DModel, api);\n\n    this._sceneHelper.updateSkybox(renderer, maptalks3DModel, api); // FIXME If other series changes coordinate system.\n    // FIXME When doing progressive rendering.\n\n\n    maptalks3DModel.coordinateSystem.viewGL.scene.traverse(function (mesh) {\n      if (mesh.material) {\n        mesh.material.define('fragment', 'NORMAL_UP_AXIS', 2);\n        mesh.material.define('fragment', 'NORMAL_FRONT_AXIS', 1);\n      }\n    });\n  },\n  updateCamera: function (maptalks3DModel, ecModel, api, payload) {\n    maptalks3DModel.coordinateSystem.setCameraOption(payload);\n\n    this._updateGroundMesh();\n\n    api.getZr().refresh();\n  },\n  _dispatchInteractAction: function (api, maptalks, maptalks3DModel) {\n    api.dispatchAction({\n      type: 'maptalks3DChangeCamera',\n      pitch: maptalks.getPitch(),\n      zoom: getMapboxZoom(maptalks.getResolution()) + 1,\n      center: maptalks.getCenter().toArray(),\n      bearing: maptalks.getBearing(),\n      maptalks3DId: this._maptalks3DModel && this._maptalks3DModel.id\n    });\n  },\n  _updateGroundMesh: function () {\n    if (this._maptalks3DModel) {\n      var coordSys = this._maptalks3DModel.coordinateSystem;\n      var pt = coordSys.dataToPoint(coordSys.center);\n\n      this._groundMesh.position.set(pt[0], pt[1], -0.001);\n\n      var plane = new graphicGL.Plane(new graphicGL.Vector3(0, 0, 1), 0);\n      var ray1 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(-1, -1));\n      var ray2 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(1, 1));\n      var pos0 = ray1.intersectPlane(plane);\n      var pos1 = ray2.intersectPlane(plane);\n      var scale = pos0.dist(pos1) / coordSys.viewGL.rootNode.scale.x;\n\n      this._groundMesh.scale.set(scale, scale, 1);\n    }\n  },\n  dispose: function (ecModel, api) {\n    if (this._zrLayer) {\n      this._zrLayer.dispose();\n    }\n\n    api.getZr().painter.delLayer(-1000);\n  }\n});\nconst MAX_RES = 2 * 6378137 * Math.PI / (256 * Math.pow(2, 20));\n\nfunction getMapboxZoom(res) {\n  return 19 - Math.log(res / MAX_RES) / Math.LN2;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}