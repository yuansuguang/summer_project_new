{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e50543ae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"favorite-management\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"white-board\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"您还没有收藏的问卷\", -1 /* HOISTED */));\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = {\n  key: 1,\n  class: \"white-board\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.favoriteQuestionnaires.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [..._hoisted_4])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.goBack,\n    style: {\n      \"margin-bottom\": \"1%\"\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"返回\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_table, {\n    data: $data.favoriteQuestionnaires,\n    stripe: \"\",\n    style: {\n      \"width\": \"50%\",\n      \"margin-left\": \"25%\"\n    },\n    \"max-height\": \"700\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"questionnaireName\",\n      label: \"问卷名\",\n      width: \"212px\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"creationDate\",\n      label: \"发布时间\",\n      width: \"150px\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"answersCount\",\n      label: \"答卷数\",\n      width: \"100px\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"isPublished\",\n      label: \"是否发布\",\n      width: \"100px\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"span\", null, _toDisplayString(row.isPublished ? '是' : '否'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"280px\",\n      fixed: \"right\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_button, {\n        size: \"small\",\n        type: \"danger\",\n        onClick: $event => $options.clearData(row)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"清空数据\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        size: \"small\",\n        type: \"warning\",\n        onClick: $event => $options.removeFromFavorites(row)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"取消收藏\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        size: \"small\",\n        type: \"success  \",\n        onClick: $event => $options.continueWrite(row)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"继续填写\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])]))]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_1","$data","favoriteQuestionnaires","length","_hoisted_2","_hoisted_4","_hoisted_5","_createVNode","_component_el_button","type","onClick","$options","goBack","style","default","_withCtx","_createTextVNode","_","_component_el_table","data","stripe","_component_el_table_column","prop","label","width","row","_toDisplayString","isPublished","fixed","size","$event","clearData","removeFromFavorites","continueWrite"],"sources":["E:\\QuestionairePlanet_Fronted\\mytest\\src\\views\\qn-manage\\qnCollect.vue"],"sourcesContent":["<template>\r\n  <div class=\"favorite-management\">\r\n    <div v-if=\"!favoriteQuestionnaires.length\" class=\"white-board\">\r\n      <h3>您还没有收藏的问卷</h3>\r\n    </div>\r\n    \r\n    <div v-else class=\"white-board\">\r\n      <el-button type=\"primary\" @click=\"goBack\" style=\"margin-bottom: 1%;\">返回</el-button>\r\n      <el-table :data=\"favoriteQuestionnaires\" stripe style=\"width: 50%; margin-left: 25%;\" max-height=\"700\">\r\n        <el-table-column prop=\"questionnaireName\" label=\"问卷名\" width=\"212px\"></el-table-column>\r\n        <el-table-column prop=\"creationDate\" label=\"发布时间\" width=\"150px\"></el-table-column>\r\n        <el-table-column prop=\"answersCount\" label=\"答卷数\" width=\"100px\"></el-table-column>\r\n        <el-table-column prop=\"isPublished\" label=\"是否发布\" width=\"100px\">\r\n          <template #default=\"{ row }\">\r\n            <span>{{ row.isPublished ? '是' : '否' }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"280px\" fixed=\"right\">\r\n          <template #default=\"{ row }\">\r\n            <el-button size=\"small\" type=\"danger\" @click=\"clearData(row)\">清空数据</el-button>\r\n            <el-button size=\"small\" type=\"warning\" @click=\"removeFromFavorites(row)\">取消收藏</el-button>\r\n            <el-button size=\"small\" type=\"success  \" @click=\"continueWrite(row)\">继续填写</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      favoriteQuestionnaires: [\r\n      {\r\n          questionnaireName: '问卷1',\r\n          questionnaireId: '123',\r\n          id:1,\r\n          isPublished: true,\r\n          questionType: '普通问卷',\r\n          answersCount: 50,\r\n          creationDate: '2024-05-20',\r\n          isFavorited: true,\r\n          isPaused: true,\r\n          isEditing: false,\r\n        },\r\n        {\r\n          questionnaireName: '问卷2',\r\n          questionnaireId: '456',\r\n          id:2,\r\n          isPublished: false,\r\n          questionType: '考试问卷',\r\n          answersCount: 30,\r\n          creationDate: '2024-05-21',\r\n          isFavorited: false,\r\n          isPaused: false,\r\n          isEditing: false,\r\n        },\r\n        {\r\n          questionnaireName: '问卷3',\r\n          questionnaireId: '789',\r\n          isPublished: false,\r\n          id:3,\r\n          questionType: '投票问卷',\r\n          answersCount: 50,\r\n          creationDate: '2024-05-22',\r\n          isFavorited: true,\r\n          isPaused: false,\r\n          isEditing: false,\r\n        },\r\n        {\r\n          questionnaireName: '问卷4',\r\n          questionnaireId: '789',\r\n          isPublished: false,\r\n          id:4,\r\n          questionType: '报名问卷',\r\n          answersCount: 50,\r\n          creationDate: '2024-05-23',\r\n          isFavorited: true,\r\n          isPaused: false,\r\n          isEditing: false,\r\n        },\r\n        {\r\n          questionnaireName: '问卷5',\r\n          questionnaireId: '789',\r\n          isPublished: false,\r\n          id:5,\r\n          questionType: '其他问卷',\r\n          answersCount: 50,\r\n          creationDate: '2024-05-24',\r\n          isFavorited: true,\r\n          isPaused: false,\r\n          isEditing: false,\r\n        },\r\n        {\r\n          questionnaireName: '问卷6',\r\n          questionnaireId: '789',\r\n          id:6,\r\n          isPublished: false,\r\n          questionType: '其他问卷',\r\n          answersCount: 50,\r\n          creationDate: '2024-05-25',\r\n          isFavorited: true,\r\n          isPaused: true,\r\n          isEditing: false,\r\n        },\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    goBack(){\r\n      this.$router.push('/questionairemanage');\r\n    },\r\n    clearData(questionnaire) {\r\n      // 清空问卷数据操作\r\n      // questionnaire.answersCount = 0;\r\n      const formData = new FormData();\r\n      formData.append('survey_id', questionnaire.questionnaireId);\r\n      this.$axios({\r\n      method: 'post',\r\n      url: '/submit/api/clear_survey',\r\n      data: formData,\r\n    }).then(res => {\r\n      switch (res.data.status_code) {\r\n        case 1:\r\n          console.log(\"success on cleaning questionnaire\");\r\n          break;\r\n        case 2:\r\n          console.log(\"error 2\");\r\n          break;\r\n        case 3:\r\n          console.log(\"error 3\");\r\n          break;\r\n        case -1:\r\n          break;\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n    this.fetchFavorite();\r\n    },\r\n    removeFromFavorites(questionnaire) {\r\n      // 取消收藏操作\r\n      const formData = new FormData();\r\n    formData.append('survey_id', questionnaire.questionnaireId);\r\n    this.$axios({\r\n      method: 'post',\r\n      url: '/surveymanage/api/collectsurvey',\r\n      data: formData,\r\n    }).then(res => {\r\n      switch (res.data.status_code) {\r\n        case 1:\r\n          console.log(\"success on collecting/uncollecting questionnaire\");\r\n          break;\r\n        case 2:\r\n          console.log(\"error 2\");\r\n          break;\r\n        case 3:\r\n          console.log(\"error 3\");\r\n          break;\r\n        case -1:\r\n          break;\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n    this.fetchFavorite();\r\n    },\r\n    continueWrite(){\r\n      \r\n    },\r\n    fetchFavorite() {\r\n      const formData = new FormData();\r\n    // formData.append(\"survey_keyword\", this.loginForm.user);\r\n    // if (this.notRealeaseChecked == true)\r\n    //   formData.append(\"is_released\", 1);\r\n    // else if (this.notRealeaseChecked == false)\r\n    //   formData.append(\"is_released\", 2);\r\n    // else\r\n    formData.append(\"is_collected\", 1);\r\n    formData.append(\"is_released\", 0);\r\n    this.$axios({\r\n      method: 'post',\r\n      url: '/survey/api/list',\r\n      data: formData,\r\n    }).then(res => {\r\n      switch (res.data.status_code) {\r\n        case 1:\r\n          this.favoriteQuestionnaires = JSON.parse(res.data.data);\r\n          console.log(this.favoriteQuestionnaires);\r\n          // for (var i = 0; i < this.questionnaires.length; i++) {\r\n          //   this.questionnaires[i].previewVisible = false;\r\n          //   if (this.questionnaires[i].questionType == '1')\r\n          //     this.questionnaires[i].questionType = '普通问卷'\r\n          //   else if (this.questionnaires[i].questionType == '2')\r\n          //     this.questionnaires[i].questionType = '投票问卷'\r\n          //   else if (this.questionnaires[i].questionType == '3')\r\n          //     this.questionnaires[i].questionType = '考试问卷'\r\n          //   else\r\n          //     this.questionnaires[i].questionType = '报名问卷'\r\n          // }\r\n          console.log(\"success on fetching questionnaires\");\r\n          break;\r\n        case 2:\r\n          console.log(\"error 2\");\r\n          break;\r\n        case 3:\r\n          console.log(\"error 3\");\r\n          break;\r\n        case 4:\r\n          console.log(\"error 4\");\r\n          break;\r\n        case 5:\r\n          console.log(\"error 5\");\r\n          break;\r\n        case -1:\r\n          break;\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n    },\r\n  },\r\n  created() {\r\n  // 假设从后端获取问卷实例数据的方法为 fetchQuestionnaires()\r\n  this.fetchFavorite();\r\n},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.favorite-management {\r\n  padding-top: 6%;\r\n}\r\n\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAqB;;EADlCC,GAAA;EAE+CD,KAAK,EAAC;;gEAC/CE,mBAAA,CAAkB,YAAd,WAAS;oBAAbC,UAAkB,C;;EAHxBF,GAAA;EAMgBD,KAAK,EAAC;;;;;;uBALpBI,mBAAA,CAyBM,OAzBNC,UAyBM,G,CAxBQC,KAAA,CAAAC,sBAAsB,CAACC,MAAM,I,cAAzCJ,mBAAA,CAEM,OAFNK,UAEM,EAJV,IAAAC,UAAA,O,cAMIN,mBAAA,CAmBM,OAnBNO,UAmBM,GAlBJC,YAAA,CAAmFC,oBAAA;IAAxEC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAEC,QAAA,CAAAC,MAAM;IAAEC,KAA0B,EAA1B;MAAA;IAAA;;IAPhDC,OAAA,EAAAC,QAAA,CAO2E,MAAE,CAP7EC,gBAAA,CAO2E,IAAE,E;IAP7EC,CAAA;kCAQMV,YAAA,CAgBWW,mBAAA;IAhBAC,IAAI,EAAElB,KAAA,CAAAC,sBAAsB;IAAEkB,MAAM,EAAN,EAAM;IAACP,KAAqC,EAArC;MAAA;MAAA;IAAA,CAAqC;IAAC,YAAU,EAAC;;IARvGC,OAAA,EAAAC,QAAA,CASQ,MAAsF,CAAtFR,YAAA,CAAsFc,0BAAA;MAArEC,IAAI,EAAC,mBAAmB;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC;QAC5DjB,YAAA,CAAkFc,0BAAA;MAAjEC,IAAI,EAAC,cAAc;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;QACxDjB,YAAA,CAAiFc,0BAAA;MAAhEC,IAAI,EAAC,cAAc;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC;QACvDjB,YAAA,CAIkBc,0BAAA;MAJDC,IAAI,EAAC,aAAa;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;;MAC1CV,OAAO,EAAAC,QAAA,CAChB,CAA8C;QAD1BU;MAAG,OACvB5B,mBAAA,CAA8C,cAAA6B,gBAAA,CAArCD,GAAG,CAACE,WAAW,6B;MAdpCV,CAAA;QAiBQV,YAAA,CAMkBc,0BAAA;MANDE,KAAK,EAAC,IAAI;MAACC,KAAK,EAAC,OAAO;MAACI,KAAK,EAAC;;MACnCd,OAAO,EAAAC,QAAA,CAChB,CAA8E;QAD1DU;MAAG,OACvBlB,YAAA,CAA8EC,oBAAA;QAAnEqB,IAAI,EAAC,OAAO;QAACpB,IAAI,EAAC,QAAQ;QAAEC,OAAK,EAAAoB,MAAA,IAAEnB,QAAA,CAAAoB,SAAS,CAACN,GAAG;;QAnBvEX,OAAA,EAAAC,QAAA,CAmB0E,MAAI,CAnB9EC,gBAAA,CAmB0E,MAAI,E;QAnB9EC,CAAA;wDAoBYV,YAAA,CAAyFC,oBAAA;QAA9EqB,IAAI,EAAC,OAAO;QAACpB,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAAoB,MAAA,IAAEnB,QAAA,CAAAqB,mBAAmB,CAACP,GAAG;;QApBlFX,OAAA,EAAAC,QAAA,CAoBqF,MAAI,CApBzFC,gBAAA,CAoBqF,MAAI,E;QApBzFC,CAAA;wDAqBYV,YAAA,CAAqFC,oBAAA;QAA1EqB,IAAI,EAAC,OAAO;QAACpB,IAAI,EAAC,WAAW;QAAEC,OAAK,EAAAoB,MAAA,IAAEnB,QAAA,CAAAsB,aAAa,CAACR,GAAG;;QArB9EX,OAAA,EAAAC,QAAA,CAqBiF,MAAI,CArBrFC,gBAAA,CAqBiF,MAAI,E;QArBrFC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}