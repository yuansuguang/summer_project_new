{"ast":null,"code":"import Light from '../Light';\n\n/**\n * @constructor clay.light.Point\n * @extends clay.Light\n */\nvar PointLight = Light.extend( /** @lends clay.light.Point# */{\n  /**\n   * @type {number}\n   */\n  range: 100,\n  /**\n   * @type {number}\n   */\n  castShadow: false\n}, {\n  type: 'POINT_LIGHT',\n  uniformTemplates: {\n    pointLightPosition: {\n      type: '3f',\n      value: function (instance) {\n        return instance.getWorldPosition().array;\n      }\n    },\n    pointLightRange: {\n      type: '1f',\n      value: function (instance) {\n        return instance.range;\n      }\n    },\n    pointLightColor: {\n      type: '3f',\n      value: function (instance) {\n        var color = instance.color;\n        var intensity = instance.intensity;\n        return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n      }\n    }\n  },\n  /**\n   * @return {clay.light.Point}\n   * @memberOf clay.light.Point.prototype\n   */\n  clone: function () {\n    var light = Light.prototype.clone.call(this);\n    light.range = this.range;\n    return light;\n  }\n});\nexport default PointLight;","map":{"version":3,"names":["Light","PointLight","extend","range","castShadow","type","uniformTemplates","pointLightPosition","value","instance","getWorldPosition","array","pointLightRange","pointLightColor","color","intensity","clone","light","prototype","call"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/claygl/src/light/Point.js"],"sourcesContent":["import Light from '../Light';\n\n/**\n * @constructor clay.light.Point\n * @extends clay.Light\n */\nvar PointLight = Light.extend(/** @lends clay.light.Point# */ {\n    /**\n     * @type {number}\n     */\n    range: 100,\n\n    /**\n     * @type {number}\n     */\n    castShadow: false\n}, {\n\n    type: 'POINT_LIGHT',\n\n    uniformTemplates: {\n        pointLightPosition: {\n            type: '3f',\n            value: function(instance) {\n                return instance.getWorldPosition().array;\n            }\n        },\n        pointLightRange: {\n            type: '1f',\n            value: function(instance) {\n                return instance.range;\n            }\n        },\n        pointLightColor: {\n            type: '3f',\n            value: function(instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        }\n    },\n    /**\n     * @return {clay.light.Point}\n     * @memberOf clay.light.Point.prototype\n     */\n    clone: function() {\n        var light = Light.prototype.clone.call(this);\n        light.range = this.range;\n        return light;\n    }\n});\n\nexport default PointLight;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,UAAU;;AAE5B;AACA;AACA;AACA;AACA,IAAIC,UAAU,GAAGD,KAAK,CAACE,MAAM,EAAC,+BAAgC;EAC1D;AACJ;AACA;EACIC,KAAK,EAAE,GAAG;EAEV;AACJ;AACA;EACIC,UAAU,EAAE;AAChB,CAAC,EAAE;EAECC,IAAI,EAAE,aAAa;EAEnBC,gBAAgB,EAAE;IACdC,kBAAkB,EAAE;MAChBF,IAAI,EAAE,IAAI;MACVG,KAAK,EAAE,SAAAA,CAASC,QAAQ,EAAE;QACtB,OAAOA,QAAQ,CAACC,gBAAgB,CAAC,CAAC,CAACC,KAAK;MAC5C;IACJ,CAAC;IACDC,eAAe,EAAE;MACbP,IAAI,EAAE,IAAI;MACVG,KAAK,EAAE,SAAAA,CAASC,QAAQ,EAAE;QACtB,OAAOA,QAAQ,CAACN,KAAK;MACzB;IACJ,CAAC;IACDU,eAAe,EAAE;MACbR,IAAI,EAAE,IAAI;MACVG,KAAK,EAAE,SAAAA,CAASC,QAAQ,EAAE;QACtB,IAAIK,KAAK,GAAGL,QAAQ,CAACK,KAAK;QAC1B,IAAIC,SAAS,GAAGN,QAAQ,CAACM,SAAS;QAClC,OAAO,CAACD,KAAK,CAAC,CAAC,CAAC,GAAGC,SAAS,EAAED,KAAK,CAAC,CAAC,CAAC,GAAGC,SAAS,EAAED,KAAK,CAAC,CAAC,CAAC,GAAGC,SAAS,CAAC;MAC7E;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;EACIC,KAAK,EAAE,SAAAA,CAAA,EAAW;IACd,IAAIC,KAAK,GAAGjB,KAAK,CAACkB,SAAS,CAACF,KAAK,CAACG,IAAI,CAAC,IAAI,CAAC;IAC5CF,KAAK,CAACd,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,OAAOc,KAAK;EAChB;AACJ,CAAC,CAAC;AAEF,eAAehB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}