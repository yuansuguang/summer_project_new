{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from 'echarts/lib/echarts';\nimport componentViewControlMixin from '../../component/common/componentViewControlMixin';\nimport componentPostEffectMixin from '../../component/common/componentPostEffectMixin';\nimport componentLightMixin from '../../component/common/componentLightMixin';\nimport componentShadingMixin from '../../component/common/componentShadingMixin';\nimport geo3DModelMixin from '../../coord/geo3D/geo3DModelMixin';\nimport formatUtil from '../../util/format';\nimport formatTooltip from '../common/formatTooltip';\nimport geo3DCreator from '../../coord/geo3DCreator';\nfunction transformPolygon(mapbox3DCoordSys, poly) {\n  var newPoly = [];\n  for (var k = 0; k < poly.length; k++) {\n    newPoly.push(mapbox3DCoordSys.dataToPoint(poly[k]));\n  }\n  return newPoly;\n}\nvar Map3DSeries = echarts.SeriesModel.extend({\n  type: 'series.map3D',\n  layoutMode: 'box',\n  coordinateSystem: null,\n  visualStyleAccessPath: 'itemStyle',\n  optionUpdated: function (newOpt) {\n    newOpt = newOpt || {};\n    var coordSysType = this.get('coordinateSystem');\n    if (coordSysType == null || coordSysType === 'geo3D') {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      var propsNeedToCheck = ['left', 'top', 'width', 'height', 'boxWidth', 'boxDepth', 'boxHeight', 'light', 'viewControl', 'postEffect', 'temporalSuperSampling', 'environment', 'groundPlane'];\n      var ignoredProperties = [];\n      propsNeedToCheck.forEach(function (propName) {\n        if (newOpt[propName] != null) {\n          ignoredProperties.push(propName);\n        }\n      });\n      if (ignoredProperties.length) {\n        console.warn('Property %s in map3D series will be ignored if coordinate system is %s', ignoredProperties.join(', '), coordSysType);\n      }\n    }\n    if (this.get('groundPlane.show')) {\n      // Force disable groundPlane if map3D has other coordinate systems.\n      this.option.groundPlane.show = false;\n    } // Reset geo.\n\n    this._geo = null;\n  },\n  getInitialData: function (option) {\n    option.data = this.getFilledRegions(option.data, option.map);\n    var dimensions = echarts.helper.createDimensions(option.data, {\n      coordDimensions: ['value']\n    });\n    var list = new echarts.List(dimensions, this);\n    list.initData(option.data);\n    var regionModelMap = {};\n    list.each(function (idx) {\n      var name = list.getName(idx);\n      var itemModel = list.getItemModel(idx);\n      regionModelMap[name] = itemModel;\n    });\n    this._regionModelMap = regionModelMap;\n    return list;\n  },\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  getRegionModel: function (idx) {\n    var name = this.getData().getName(idx);\n    return this._regionModelMap[name] || new echarts.Model(null, this);\n  },\n  getRegionPolygonCoords: function (idx) {\n    var coordSys = this.coordinateSystem;\n    var name = this.getData().getName(idx);\n    if (coordSys.transform) {\n      var region = coordSys.getRegion(name);\n      return region ? region.geometries : [];\n    } else {\n      if (!this._geo) {\n        this._geo = geo3DCreator.createGeo3D(this);\n      }\n      var region = this._geo.getRegion(name);\n      var ret = [];\n      for (var k = 0; k < region.geometries.length; k++) {\n        var geo = region.geometries[k];\n        var interiors = [];\n        var exterior = transformPolygon(coordSys, geo.exterior);\n        if (interiors && interiors.length) {\n          for (var m = 0; m < geo.interiors.length; m++) {\n            interiors.push(transformPolygon(coordSys, interiors[m]));\n          }\n        }\n        ret.push({\n          interiors: interiors,\n          exterior: exterior\n        });\n      }\n      return ret;\n    }\n  },\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status) {\n    var text = formatUtil.getFormattedLabel(this, dataIndex, status);\n    if (text == null) {\n      text = this.getData().getName(dataIndex);\n    }\n    return text;\n  },\n  defaultOption: {\n    // Support geo3D, mapbox, maptalks3D\n    coordinateSystem: 'geo3D',\n    // itemStyle: {},\n    // height,\n    // label: {}\n    data: null\n  }\n});\necharts.util.merge(Map3DSeries.prototype, geo3DModelMixin);\necharts.util.merge(Map3DSeries.prototype, componentViewControlMixin);\necharts.util.merge(Map3DSeries.prototype, componentPostEffectMixin);\necharts.util.merge(Map3DSeries.prototype, componentLightMixin);\necharts.util.merge(Map3DSeries.prototype, componentShadingMixin);\nexport default Map3DSeries;","map":{"version":3,"names":["echarts","componentViewControlMixin","componentPostEffectMixin","componentLightMixin","componentShadingMixin","geo3DModelMixin","formatUtil","formatTooltip","geo3DCreator","transformPolygon","mapbox3DCoordSys","poly","newPoly","k","length","push","dataToPoint","Map3DSeries","SeriesModel","extend","type","layoutMode","coordinateSystem","visualStyleAccessPath","optionUpdated","newOpt","coordSysType","get","process","env","NODE_ENV","propsNeedToCheck","ignoredProperties","forEach","propName","console","warn","join","option","groundPlane","show","_geo","getInitialData","data","getFilledRegions","map","dimensions","helper","createDimensions","coordDimensions","list","List","initData","regionModelMap","each","idx","name","getName","itemModel","getItemModel","_regionModelMap","dataIndex","getRegionModel","getData","Model","getRegionPolygonCoords","coordSys","transform","region","getRegion","geometries","createGeo3D","ret","geo","interiors","exterior","m","getFormattedLabel","status","text","defaultOption","util","merge","prototype"],"sources":["E:/mytest/node_modules/echarts-gl/lib/chart/map3D/Map3DSeries.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport componentViewControlMixin from '../../component/common/componentViewControlMixin';\nimport componentPostEffectMixin from '../../component/common/componentPostEffectMixin';\nimport componentLightMixin from '../../component/common/componentLightMixin';\nimport componentShadingMixin from '../../component/common/componentShadingMixin';\nimport geo3DModelMixin from '../../coord/geo3D/geo3DModelMixin';\nimport formatUtil from '../../util/format';\nimport formatTooltip from '../common/formatTooltip';\nimport geo3DCreator from '../../coord/geo3DCreator';\n\nfunction transformPolygon(mapbox3DCoordSys, poly) {\n  var newPoly = [];\n\n  for (var k = 0; k < poly.length; k++) {\n    newPoly.push(mapbox3DCoordSys.dataToPoint(poly[k]));\n  }\n\n  return newPoly;\n}\n\nvar Map3DSeries = echarts.SeriesModel.extend({\n  type: 'series.map3D',\n  layoutMode: 'box',\n  coordinateSystem: null,\n  visualStyleAccessPath: 'itemStyle',\n  optionUpdated: function (newOpt) {\n    newOpt = newOpt || {};\n    var coordSysType = this.get('coordinateSystem');\n\n    if (coordSysType == null || coordSysType === 'geo3D') {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var propsNeedToCheck = ['left', 'top', 'width', 'height', 'boxWidth', 'boxDepth', 'boxHeight', 'light', 'viewControl', 'postEffect', 'temporalSuperSampling', 'environment', 'groundPlane'];\n      var ignoredProperties = [];\n      propsNeedToCheck.forEach(function (propName) {\n        if (newOpt[propName] != null) {\n          ignoredProperties.push(propName);\n        }\n      });\n\n      if (ignoredProperties.length) {\n        console.warn('Property %s in map3D series will be ignored if coordinate system is %s', ignoredProperties.join(', '), coordSysType);\n      }\n    }\n\n    if (this.get('groundPlane.show')) {\n      // Force disable groundPlane if map3D has other coordinate systems.\n      this.option.groundPlane.show = false;\n    } // Reset geo.\n\n\n    this._geo = null;\n  },\n  getInitialData: function (option) {\n    option.data = this.getFilledRegions(option.data, option.map);\n    var dimensions = echarts.helper.createDimensions(option.data, {\n      coordDimensions: ['value']\n    });\n    var list = new echarts.List(dimensions, this);\n    list.initData(option.data);\n    var regionModelMap = {};\n    list.each(function (idx) {\n      var name = list.getName(idx);\n      var itemModel = list.getItemModel(idx);\n      regionModelMap[name] = itemModel;\n    });\n    this._regionModelMap = regionModelMap;\n    return list;\n  },\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  getRegionModel: function (idx) {\n    var name = this.getData().getName(idx);\n    return this._regionModelMap[name] || new echarts.Model(null, this);\n  },\n  getRegionPolygonCoords: function (idx) {\n    var coordSys = this.coordinateSystem;\n    var name = this.getData().getName(idx);\n\n    if (coordSys.transform) {\n      var region = coordSys.getRegion(name);\n      return region ? region.geometries : [];\n    } else {\n      if (!this._geo) {\n        this._geo = geo3DCreator.createGeo3D(this);\n      }\n\n      var region = this._geo.getRegion(name);\n\n      var ret = [];\n\n      for (var k = 0; k < region.geometries.length; k++) {\n        var geo = region.geometries[k];\n        var interiors = [];\n        var exterior = transformPolygon(coordSys, geo.exterior);\n\n        if (interiors && interiors.length) {\n          for (var m = 0; m < geo.interiors.length; m++) {\n            interiors.push(transformPolygon(coordSys, interiors[m]));\n          }\n        }\n\n        ret.push({\n          interiors: interiors,\n          exterior: exterior\n        });\n      }\n\n      return ret;\n    }\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status) {\n    var text = formatUtil.getFormattedLabel(this, dataIndex, status);\n\n    if (text == null) {\n      text = this.getData().getName(dataIndex);\n    }\n\n    return text;\n  },\n  defaultOption: {\n    // Support geo3D, mapbox, maptalks3D\n    coordinateSystem: 'geo3D',\n    // itemStyle: {},\n    // height,\n    // label: {}\n    data: null\n  }\n});\necharts.util.merge(Map3DSeries.prototype, geo3DModelMixin);\necharts.util.merge(Map3DSeries.prototype, componentViewControlMixin);\necharts.util.merge(Map3DSeries.prototype, componentPostEffectMixin);\necharts.util.merge(Map3DSeries.prototype, componentLightMixin);\necharts.util.merge(Map3DSeries.prototype, componentShadingMixin);\nexport default Map3DSeries;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}