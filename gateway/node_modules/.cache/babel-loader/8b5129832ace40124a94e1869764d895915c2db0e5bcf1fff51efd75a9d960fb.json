{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, mergeProps as _mergeProps, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-25e4c2bc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"form\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"问卷题目\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"题目\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"个人信息\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"font-size\": \"14px\"\n  }\n}, \" 问卷标题：\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"mt-4\",\n  style: {\n    \"width\": \"180px\",\n    \"left\": \"5px\",\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"font-size\": \"14px\"\n  }\n}, \" 问卷简介：\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"mt-4\",\n  style: {\n    \"width\": \"180px\",\n    \"left\": \"5px\",\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_9 = {\n  class: \"ques\"\n};\nconst _hoisted_10 = {\n  class: \"title\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"description\"\n};\nconst _hoisted_12 = {\n  class: \"content\"\n};\nconst _hoisted_13 = {\n  class: \"block-title\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"must\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"block-info\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"block-choice\"\n};\nconst _hoisted_17 = {\n  style: {\n    \"padding-bottom\": \"10px\"\n  }\n};\nconst _hoisted_18 = {\n  key: 2,\n  class: \"block-description\"\n};\nconst _hoisted_19 = {\n  key: 3,\n  style: {\n    \"color\": \"#9b9ea0\",\n    \"font-size\": \"x-small\"\n  }\n};\nconst _hoisted_20 = [\"src\"];\nconst _hoisted_21 = {\n  key: 0,\n  style: {\n    \"color\": \"#aaaaaa\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"15px\"\n  }\n};\nconst _hoisted_22 = {\n  key: 0,\n  style: {\n    \"color\": \"#aaaaaa\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"15px\"\n  }\n};\nconst _hoisted_23 = {\n  key: 4,\n  class: \"block-choice\"\n};\nconst _hoisted_24 = {\n  key: 5,\n  class: \"block-relation\"\n};\nconst _hoisted_25 = {\n  key: 6\n};\nconst _hoisted_26 = {\n  key: 0,\n  class: \"block-point\"\n};\nconst _hoisted_27 = {\n  key: 0\n};\nconst _hoisted_28 = {\n  key: 1\n};\nconst _hoisted_29 = {\n  key: 1,\n  class: \"block-refer\"\n};\nconst _hoisted_30 = {\n  key: 0\n};\nconst _hoisted_31 = {\n  key: 1\n};\nconst _hoisted_32 = {\n  class: \"outline\"\n};\nconst _hoisted_33 = {\n  key: 0,\n  class: \"is-info\"\n};\nconst _hoisted_34 = {\n  key: 1,\n  class: \"non-pre\"\n};\nconst _hoisted_35 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \" \", -1 /* HOISTED */));\nconst _hoisted_36 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"el-upload__tip\"\n}, \" 只能上传jpg/png文件，且不超过5mb\", -1 /* HOISTED */));\nconst _hoisted_37 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"el-upload__tip\"\n}, \" 只能上传mp4/mkv文件，且不超过10mb\", -1 /* HOISTED */));\nconst _hoisted_38 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_39 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"qrcode_2\",\n  style: {\n    \"height\": \"200px\",\n    \"width\": \"200px\",\n    \"margin-left\": \"22px\"\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_40 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"链接与二维码\", -1 /* HOISTED */));\nconst _hoisted_41 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_42 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_43 = {\n  class: \"logic-title\"\n};\nconst _hoisted_44 = {\n  key: 1,\n  class: \"logic-info\"\n};\nconst _hoisted_45 = {\n  style: {\n    \"color\": \"#1687fd\"\n  }\n};\nconst _hoisted_46 = {\n  style: {\n    \"color\": \"#1687fd\"\n  }\n};\nconst _hoisted_47 = {\n  key: 2,\n  class: \"logic-info\"\n};\nconst _hoisted_48 = {\n  class: \"logic-bt\"\n};\nconst _hoisted_49 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"logic-description\"\n}, \" 题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】 \", -1 /* HOISTED */));\nconst _hoisted_50 = {\n  key: 0,\n  class: \"logic-description important\"\n};\nconst _hoisted_51 = {\n  class: \"setting-bt\"\n};\nconst _hoisted_52 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"bottom\": \"300px\",\n    \"left\": \"20px\"\n  }\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache) {\n  const _component_Edit = _resolveComponent(\"Edit\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_menu_item_group = _resolveComponent(\"el-menu-item-group\");\n  const _component_el_sub_menu = _resolveComponent(\"el-sub-menu\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_span = _resolveComponent(\"el-span\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_Link = _resolveComponent(\"Link\");\n  const _component_setting = _resolveComponent(\"setting\");\n  const _component_el_button_group = _resolveComponent(\"el-button-group\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_rate = _resolveComponent(\"el-rate\");\n  const _component_EditPen = _resolveComponent(\"EditPen\");\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  const _component_DocumentCopy = _resolveComponent(\"DocumentCopy\");\n  const _component_Delete = _resolveComponent(\"Delete\");\n  const _component_ArrowUp = _resolveComponent(\"ArrowUp\");\n  const _component_ArrowDown = _resolveComponent(\"ArrowDown\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"qnBoard\",\n    style: _normalizeStyle({\n      boxShadow: `var(--el-box-shadow-light)`\n    })\n  }, [_createCommentVNode(\" <el-tabs :tab-position=\\\"'left'\\\" style=\\\"height: 700px;\\\" type=\\\"border-card\\\" class=\\\"demo-tabs\\\" stretch=\\\"true\\\">\\r\\n            <el-tab-pane style=\\\"padding: 140px\\\">\\r\\n                <template #label>\\r\\n                    <span class=\\\"custom-tabs-label\\\">\\r\\n                        <el-icon>\\r\\n                            <Edit />\\r\\n                        </el-icon>\\r\\n                        <span>Edit</span>\\r\\n                    </span>\\r\\n                </template>\\r\\n\\r\\n</el-tab-pane>\\r\\n<el-tab-pane label=\\\"Config\\\">Config</el-tab-pane>\\r\\n<el-tab-pane label=\\\"Role\\\">Role</el-tab-pane>\\r\\n<el-tab-pane label=\\\"Task\\\">Task</el-tab-pane>\\r\\n</el-tabs> \"), _createVNode(_component_el_tabs, {\n    type: \"card\",\n    stretch: \"true\",\n    class: \"qn-tabs\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"编辑问卷\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_menu, {\n        class: \"el-menu-vertical-demo\",\n        style: {\n          \"position\": \"relative\",\n          \"width\": \"190px\"\n        }\n      }, {\n        title: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Edit)]),\n          _: 1 /* STABLE */\n        }), _hoisted_2]),\n        default: _withCtx(() => [_createVNode(_component_el_menu_item_group, null, {\n          title: _withCtx(() => [_hoisted_3]),\n          default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n            onClick: _cache[0] || (_cache[0] = $event => {\n              _ctx.willAddQuestion.type = 'radio';\n              _ctx.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"单选题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, {\n            onClick: _cache[1] || (_cache[1] = $event => {\n              _ctx.willAddQuestion.type = 'checkbox';\n              _ctx.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"多选题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, {\n            onClick: _cache[2] || (_cache[2] = $event => {\n              _ctx.willAddQuestion.type = 'text';\n              _ctx.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"填空题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, {\n            onClick: _cache[3] || (_cache[3] = $event => {\n              _ctx.willAddQuestion.type = 'mark';\n              _ctx.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"评分题\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item_group, {\n          title: \"预设题目\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_sub_menu, null, {\n            title: _withCtx(() => [_hoisted_4]),\n            default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n              onClick: _ctx.addName\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"姓名\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_menu_item, {\n              onClick: _ctx.addStuID\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"学号\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_menu_item, {\n              onClick: _ctx.addPhone\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"电话号码\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"问卷相关\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_hoisted_5]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_span, null, {\n          default: _withCtx(() => [_createTextVNode(\" \")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_input, {\n        modelValue: _ctx.input3,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.input3 = $event),\n        style: {\n          \"max-width\": \"600px\"\n        },\n        placeholder: \"标题\",\n        class: \"input-with-select\"\n      }, {\n        append: _withCtx(() => [_createVNode(_component_el_button, {\n          onClick: _cache[4] || (_cache[4] = $event => _ctx.changeTitle(_ctx.input3))\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"设置\")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_span, null, {\n          default: _withCtx(() => [_createTextVNode(\" \")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_hoisted_7]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_span, null, {\n          default: _withCtx(() => [_createTextVNode(\" \")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_input, {\n        modelValue: _ctx.input2,\n        \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.input2 = $event),\n        style: {\n          \"max-width\": \"600px\"\n        },\n        placeholder: \"简介\",\n        class: \"input-with-select\"\n      }, {\n        append: _withCtx(() => [_createVNode(_component_el_button, {\n          onClick: _cache[6] || (_cache[6] = $event => _ctx.changeDescription(_ctx.input2))\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"设置\")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]), _createVNode(_component_el_divider), _createVNode(_component_el_menu, {\n        class: \"el-menu-vertical-demo\",\n        style: {\n          \"position\": \"relative\",\n          \"width\": \"190.5px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n          onClick: _cache[8] || (_cache[8] = $event => this.qsOutLineDialogVisible = true)\n        }, {\n          title: _withCtx(() => [_createTextVNode(\"问卷逻辑\")]),\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode(_component_Link)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item, {\n          onClick: _cache[9] || (_cache[9] = $event => this.settingDialogVisible = true)\n        }, {\n          title: _withCtx(() => [_createTextVNode(\"问卷设置\")]),\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode(_component_setting)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_divider, {\n        \"border-style\": \"dashed\"\n      }), _createVNode(_component_el_button_group, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          size: \"default\",\n          onClick: _cache[10] || (_cache[10] = $event => _ctx.savetoserver())\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"保存问卷\")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_button, {\n          type: \"primary\",\n          size: \"default\",\n          onClick: _cache[11] || (_cache[11] = $event => _ctx.publish())\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"发布问卷\")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_span, null, {\n          default: _withCtx(() => [_createTextVNode(\" \")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })], 4 /* STYLE */), _createVNode(_component_el_container, null, {\n    default: _withCtx(() => [_createVNode(_component_el_main, {\n      class: \"qnMain\",\n      style: _normalizeStyle({\n        boxShadow: `var(--el-box-shadow-light)`,\n        borderRadius: `var(--el-border-radius-round)`\n      })\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString(_ctx.title), 1 /* TEXT */), this.description !== '' && this.description !== null && this.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"   \" + _toDisplayString(_ctx.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.questions, item => {\n        return _openBlock(), _createBlock(_component_el_row, {\n          class: \"ques-block\",\n          key: item.id,\n          onMouseover: $event => _ctx.hoverItem = item.id,\n          style: _normalizeStyle({\n            borderRadius: `var(--el-border-radius-round)`\n          })\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 16,\n            class: \"block-content\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_13, [_createTextVNode(_toDisplayString(item.id) + \". \" + _toDisplayString(item.title) + \" \", 1 /* TEXT */), item.must ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, \"(必填)\")) : _createCommentVNode(\"v-if\", true)]), item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school' || item.type === 'phone' || item.type === 'email' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createVNode(_component_el_input, {\n              placeholder: \"请输入内容\",\n              style: {\n                \"margin-left\": \"10px\"\n              }\n            })])) : _createCommentVNode(\"v-if\", true), item.type === 'sex' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createVNode(_component_el_radio, {\n              value: \"0\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"男\")]),\n              _: 1 /* STABLE */\n            })]), _createElementVNode(\"div\", null, [_createVNode(_component_el_radio, {\n              value: \"0\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"女\")]),\n              _: 1 /* STABLE */\n            })])])) : _createCommentVNode(\"v-if\", true), item.description !== '' && item.description !== null && item.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, _toDisplayString(item.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  图片\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.imgList, (i, index) => {\n              return _openBlock(), _createBlock(_component_el_row, {\n                class: \"block-img\",\n                key: i.index\n              }, {\n                default: _withCtx(() => [index % 2 === 0 ? (_openBlock(), _createBlock(_component_el_col, {\n                  key: 0,\n                  offset: 2,\n                  span: 10,\n                  class: \"demo-image__preview\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_image, {\n                    style: {\n                      \"width\": \"200px\",\n                      \"height\": \"200px\"\n                    },\n                    src: i.url,\n                    \"preview-src-list\": [i.url]\n                  }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), index % 2 === 0 && index + 1 <= item.imgList.length - 1 ? (_openBlock(), _createBlock(_component_el_col, {\n                  key: 1,\n                  span: 10,\n                  class: \"demo-image__preview\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_image, {\n                    style: {\n                      \"width\": \"200px\",\n                      \"height\": \"200px\"\n                    },\n                    src: item.imgList[index + 1].url,\n                    \"preview-src-list\": [item.imgList[index + 1].url]\n                  }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 128 /* KEYED_FRAGMENT */)), item.imgList.length !== 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_19, \"（点击图片查看大图）\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                视频\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.videoList, i => {\n              return _openBlock(), _createBlock(_component_el_row, {\n                class: \"block-img\",\n                key: i.index\n              }, {\n                default: _withCtx(() => [_createElementVNode(\"embed\", {\n                  width: \"400\",\n                  height: \"230\",\n                  transparentatstart: \"true\",\n                  animationatstart: \"false\",\n                  autostart: \"true\",\n                  autosize: \"false\",\n                  volume: \"100\",\n                  displaysize: \"0\",\n                  showdisplay: \"true\",\n                  showstatusbar: \"true\",\n                  showcontrols: \"true\",\n                  showaudiocontrols: \"true\",\n                  showtracker: \"true\",\n                  showpositioncontrols: \"true\",\n                  balance: \"true\",\n                  src: i.url\n                }, null, 8 /* PROPS */, _hoisted_20)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.options, ans => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                class: \"block-choice\",\n                key: ans.id\n              }, [_createCommentVNode(\"                  单选\"), item.type === 'radio' ? (_openBlock(), _createBlock(_component_el_radio, {\n                key: 0,\n                value: \"0\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(ans.title), 1 /* TEXT */), ans.hasNumLimit ? (_openBlock(), _createElementBlock(\"span\", _hoisted_21, \"剩余\" + _toDisplayString(ans.supply - ans.consume) + \" 总计\" + _toDisplayString(ans.supply), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  多选\"), item.type === 'checkbox' ? (_openBlock(), _createBlock(_component_el_checkbox, {\n                key: 1,\n                value: \"0\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(ans.title) + \" \", 1 /* TEXT */), ans.hasNumLimit ? (_openBlock(), _createElementBlock(\"span\", _hoisted_22, \"剩余\" + _toDisplayString(ans.supply - ans.consume) + \" 总计\" + _toDisplayString(ans.supply), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  填空\"), item.type === 'text' && item.row > 1 ? (_openBlock(), _createBlock(_component_el_input, _mergeProps({\n                key: 2,\n                type: \"textarea\",\n                placeholder: \"请输入内容\",\n                ref_for: true\n              }, ans.title), null, 16 /* FULL_PROPS */)) : _createCommentVNode(\"v-if\", true), item.type === 'text' && item.row === 1 ? (_openBlock(), _createBlock(_component_el_input, _mergeProps({\n                key: 3,\n                placeholder: \"请输入内容\",\n                ref_for: true\n              }, ans.title), null, 16 /* FULL_PROPS */)) : _createCommentVNode(\"v-if\", true)]);\n            }), 128 /* KEYED_FRAGMENT */)), item.type === 'mark' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createCommentVNode(\"                  评分\"), _createVNode(_component_el_rate, {\n              value: \"0\",\n              max: item.score\n            }, null, 8 /* PROPS */, [\"max\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                 关联信息\"), _ctx.isLogic && item.last_question !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createElementVNode(\"div\", null, _toDisplayString(_ctx.关联待更新), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), item.type !== 'name' && item.type !== 'stuId' && item.type !== 'class' && item.type !== 'school' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_ctx.scoringMode !== false && item.point !== null && item.point !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [item.point === '' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, \"分值：0\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_28, \"分值：\" + _toDisplayString(item.point), 1 /* TEXT */))])) : _createCommentVNode(\"v-if\", true), item.refer !== null && item.refer !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [item.refer === '' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, \"答案：无\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_31, \"参考答案：\" + _toDisplayString(item.refer), 1 /* TEXT */))])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _ctx.hoverItem === item.id ? (_openBlock(), _createBlock(_component_el_col, {\n            key: 0,\n            span: 8,\n            class: \"block-button\",\n            style: {\n              \"text-align\": \"right\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button_group, null, {\n              default: _withCtx(() => [_createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"编辑\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => _ctx.edit(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_EditPen)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _ctx.isLogic ? (_openBlock(), _createBlock(_component_el_tooltip, {\n                key: 0,\n                class: \"item\",\n                effect: \"light\",\n                content: \"添加关联逻辑\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => _ctx.logic(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_Link)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"复制\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => _ctx.copy(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_DocumentCopy)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"删除\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => _ctx.del_pre(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_Delete)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"上移\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => _ctx.up(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_ArrowUp)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"下移\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => _ctx.down(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_ArrowDown)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onMouseover\", \"style\"]);\n      }), 128 /* KEYED_FRAGMENT */))])])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"style\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_dialog, {\n    title: _ctx.发布链接,\n    modelValue: _ctx.publishDialogVisible,\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => _ctx.publishDialogVisible = $event),\n    class: \"dialog\",\n    style: {\n      \"min-width\": \"400px\",\n      \"display\": \"flex\",\n      \"align-items\": \"center\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createElementVNode(\"span\", null, \"发布链接：\" + _toDisplayString(_ctx.linkShare), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"]), _createVNode(_component_el_dialog, {\n    title: _ctx.模板库,\n    modelValue: _ctx.qsModelDialogVisible,\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => _ctx.qsModelDialogVisible = $event),\n    class: \"dialog\",\n    width: \"800px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"priamry\",\n      onClick: _cache[13] || (_cache[13] = $event => _ctx.setAMoedel()),\n      size: \"large\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"小学期模板\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"priamry\",\n      onClick: _cache[14] || (_cache[14] = $event => _ctx.setBMoedel()),\n      size: \"large\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"游戏评价模板\")]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"]), _createVNode(_component_el_dialog, {\n    title: _ctx.问卷逻辑,\n    modelValue: _ctx.qsOutLineDialogVisible,\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.qsOutLineDialogVisible = $event),\n    class: \"dialog\",\n    width: \"600px\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_32, [_createVNode(_component_el_tree, {\n      data: _ctx.outline,\n      \"node-key\": \"id\",\n      props: _ctx.defaultProps,\n      onNodeDrop: _ctx.handleDrop,\n      draggable: \"\",\n      \"allow-drop\": _ctx.allowDrop\n    }, null, 8 /* PROPS */, [\"data\", \"props\", \"onNodeDrop\", \"allow-drop\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"]), _createVNode(_component_el_dialog, {\n    title: _ctx.qsEditDialogTitle,\n    modelValue: _ctx.qsEditDialogVisible,\n    \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => _ctx.qsEditDialogVisible = $event),\n    \"before-close\": _ctx.cancel_pre,\n    class: \"dialog\",\n    width: \"600px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"form\",\n      model: _ctx.willAddQuestion,\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"题目类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          disabled: _ctx.selectDisAble,\n          modelValue: _ctx.willAddQuestion.type,\n          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => _ctx.willAddQuestion.type = $event),\n          placeholder: \"请选择题目类型\",\n          onChange: _ctx.typeChange\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.allType, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.value,\n              label: item.label,\n              value: item.value\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"disabled\", \"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _ctx.willAddQuestion.type === 'name' || _ctx.willAddQuestion.type === 'stuId' || _ctx.willAddQuestion.type === 'class' || _ctx.willAddQuestion.type === 'school' || _ctx.willAddQuestion.type === 'phone' || _ctx.willAddQuestion.type === 'email' || _ctx.willAddQuestion.type === 'sex' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [_ctx.willAddQuestion.type === 'name' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"姓名\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'stuId' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 1,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"学号\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'school' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"学校\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'sex' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 3,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"性别\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'phone' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 4,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"手机号\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'email' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 5,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"邮箱\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"是否必填\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          modelValue: _ctx.willAddQuestion.must,\n          \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => _ctx.willAddQuestion.must = $event)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"必填\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [_createVNode(_component_el_form_item, {\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.willAddQuestion.title,\n          \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => _ctx.willAddQuestion.title = $event),\n          placeholder: \"请输入标题\",\n          style: {\n            \"width\": \"600px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"题目描述\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.willAddQuestion.description,\n          \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => _ctx.willAddQuestion.description = $event),\n          placeholder: \"请输入题目描述\",\n          style: {\n            \"width\": \"600px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"是否必填\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          modelValue: _ctx.willAddQuestion.must,\n          \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => _ctx.willAddQuestion.must = $event)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"必填\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _ctx.willAddQuestion.type === 'radio' || _ctx.willAddQuestion.type === 'checkbox' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.willAddQuestion.options, (item, index) => {\n        return _openBlock(), _createBlock(_component_el_form_item, {\n          label: '选项' + (index + 1),\n          key: index\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_row, null, {\n            default: _withCtx(() => [_createVNode(_component_el_col, {\n              span: 8\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_input, {\n                modelValue: item.title,\n                \"onUpdate:modelValue\": $event => item.title = $event,\n                placeholder: \"请输入选项名\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_col, {\n              span: 16\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_button_group, null, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  type: \"danger\",\n                  plain: \"\",\n                  class: \"deleteOptionButton\",\n                  onClick: $event => _ctx.deleteOption(index)\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"删除选项\")]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), !item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_button, {\n                  key: 0,\n                  type: \"success\",\n                  plain: \"\",\n                  style: {\n                    \"margin-right\": \"8px\"\n                  },\n                  onClick: $event => item.hasNumLimit = true\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"添加库存限制\")]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_button, {\n                  key: 1,\n                  type: \"info\",\n                  plain: \"\",\n                  style: {\n                    \"margin-right\": \"8px\"\n                  },\n                  onClick: $event => item.hasNumLimit = false\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"取消库存限制\")]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_input_number, {\n                  key: 2,\n                  modelValue: item.supply,\n                  \"onUpdate:modelValue\": $event => item.supply = $event\n                }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n      }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 4\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            plain: \"\",\n            class: \"addOptionButton\",\n            onClick: _ctx.addOption\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"新增选项\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _hoisted_35, _ctx.willAddQuestion.type === 'text' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createVNode(_component_el_form_item, {\n        label: \"填空\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"textarea\",\n          class: \"my-input\",\n          rows: _ctx.willAddQuestion.row,\n          resize: \"none\"\n        }, null, 8 /* PROPS */, [\"rows\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"行数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: _ctx.willAddQuestion.row,\n          \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => _ctx.willAddQuestion.row = $event),\n          min: 1,\n          max: 10\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _ctx.willAddQuestion.type === 'mark' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"最大分数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: _ctx.willAddQuestion.score,\n          \"onUpdate:modelValue\": _cache[23] || (_cache[23] = $event => _ctx.willAddQuestion.score = $event),\n          min: 3,\n          max: 10\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"          填空答案设置\"), _ctx.willAddQuestion.type === 'text' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 3,\n        label: \"参考答案\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.willAddQuestion.refer,\n          \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => _ctx.willAddQuestion.refer = $event),\n          placeholder: \"请输入参考答案\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"          多选答案设置\"), _ctx.willAddQuestion.type === 'checkbox' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 4,\n        label: \"参考答案\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: _ctx.willAddQuestion.refer,\n          \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => _ctx.willAddQuestion.refer = $event),\n          multiple: \"\",\n          placeholder: \"请选择\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.willAddQuestion.options, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              value: item.title\n            }, null, 8 /* PROPS */, [\"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"          单选答案设置\"), _ctx.willAddQuestion.type === 'radio' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 5,\n        label: \"参考答案\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: _ctx.willAddQuestion.refer,\n          \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => _ctx.willAddQuestion.refer = $event),\n          onChange: _ctx.radioChange\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.willAddQuestion.options, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              value: item.title\n            }, null, 8 /* PROPS */, [\"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.scoringMode ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 6,\n        label: \"分值\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: _ctx.willAddQuestion.point,\n          \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => _ctx.willAddQuestion.point = $event),\n          min: 0,\n          max: 1000\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"上传图片\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          class: \"upload-img\",\n          action: _ctx.uploadImgUrl,\n          multiple: \"\",\n          \"http-request\": _ctx.upLoadImage,\n          \"before-upload\": _ctx.beforeImageUpload,\n          \"file-list\": _ctx.willAddQuestion.imgList,\n          limit: 6\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            plain: \"\",\n            style: {\n              \"width\": \"100px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1 /* STABLE */\n          }), _hoisted_36]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"action\", \"http-request\", \"before-upload\", \"file-list\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"上传视频\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          class: \"upload-video\",\n          action: _ctx.uploadVideoUrl,\n          \"http-request\": _ctx.upLoadVideo,\n          \"before-upload\": _ctx.beforeVideoUpload,\n          \"file-list\": _ctx.willAddQuestion.videoList,\n          limit: 1\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            plain: \"\",\n            style: {\n              \"width\": \"100px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1 /* STABLE */\n          }), _hoisted_37]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"action\", \"http-request\", \"before-upload\", \"file-list\"])]),\n        _: 1 /* STABLE */\n      })]))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"]), _createElementVNode(\"span\", _hoisted_38, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"primary\",\n        onClick: _ctx.dialogConfirm,\n        size: \"default\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"确定\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createTextVNode(\"   \"), _createVNode(_component_el_button, {\n        span: 6,\n        onClick: _ctx.cancel_pre,\n        size: \"default\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"取消\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\", \"before-close\"]), _createVNode(_component_el_dialog, {\n    modelValue: _ctx.qsLinkDialogVisible,\n    \"onUpdate:modelValue\": _cache[30] || (_cache[30] = $event => _ctx.qsLinkDialogVisible = $event),\n    title: _ctx.qsLinkDialogTitle,\n    class: \"linkDialog\",\n    \"show-close\": false,\n    width: \"800px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: \"8\",\n        style: {\n          \"text-align\": \"center\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_hoisted_39]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: \"16\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_hoisted_40]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, {\n          style: {\n            \"margin-top\": \"15px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 16,\n            style: {\n              \"margin-right\": \"5px\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              placeholder: _ctx.linkShare,\n              modelValue: _ctx.linkShare,\n              \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => _ctx.linkShare = $event),\n              id: \"copyText\",\n              disabled: true\n            }, null, 8 /* PROPS */, [\"placeholder\", \"modelValue\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_button, {\n            type: \"info\",\n            plain: \"\",\n            id: \"copyBtn\",\n            onClick: _ctx.copyToClip\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"复制链接\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, {\n          style: {\n            \"margin-top\": \"25px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            plain: \"\",\n            onClick: _ctx.downloadQrcode\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"下载二维码\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: _ctx.genCodeAgain,\n            style: {\n              \"margin-left\": \"30px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"重新生成链接\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"span\", _hoisted_41, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"success\",\n        style: {\n          \"width\": \"80px\"\n        },\n        onClick: _ctx.finish\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"完 成\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"title\"]), _createVNode(_component_el_dialog, {\n    modelValue: _ctx.editWrongMsgVisible,\n    \"onUpdate:modelValue\": _cache[32] || (_cache[32] = $event => _ctx.editWrongMsgVisible = $event),\n    class: \"linkDialog\",\n    \"show-close\": false,\n    \"close-on-click-modal\": false,\n    width: \"300px\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString(_ctx.editWrongMsg), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_42, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"danger\",\n        style: {\n          \"width\": \"80px\"\n        },\n        onClick: _cache[31] || (_cache[31] = $event => _ctx.editWrongMsgVisible = false)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"知道了\")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\"    关联问题弹框\"), _createVNode(_component_el_dialog, {\n    title: _ctx.qsLogicDialogTitle,\n    modelValue: _ctx.qsLogicDialogVisible,\n    \"onUpdate:modelValue\": _cache[36] || (_cache[36] = $event => _ctx.qsLogicDialogVisible = $event),\n    \"before-close\": _ctx.cancel_pre_logic,\n    class: \"dialog\"\n  }, {\n    default: _withCtx(() => [_ctx.questions.length !== 0 ? (_openBlock(), _createBlock(_component_el_form, {\n      key: 0,\n      class: \"logic-form\",\n      ref: \"form\",\n      \"label-width\": \"80px\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_43, \" 当前题目：\" + _toDisplayString(_ctx.questions[_ctx.logicIndex].id) + \". \" + _toDisplayString(_ctx.questions[_ctx.logicIndex].title), 1 /* TEXT */), _createVNode(_component_el_form_item, {\n        label: \"关联题目\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: _ctx.willAddLogic.question_id,\n          \"onUpdate:modelValue\": _cache[33] || (_cache[33] = $event => _ctx.willAddLogic.question_id = $event),\n          placeholder: \"请选择关联题目\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.questionsFilter, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: _ctx.idTitle(item),\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _ctx.willAddLogic.question_id !== 0 ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"关联选项\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: _ctx.willAddLogic.option_id,\n          \"onUpdate:modelValue\": _cache[34] || (_cache[34] = $event => _ctx.willAddLogic.option_id = $event),\n          placeholder: \"请选择关联选项\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.questions[_ctx.willAddLogic.question_id - 1].options, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: item.title,\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _ctx.willAddLogic.question_id !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_44, [_createCommentVNode(\"          保存加入后选项id记得减一\"), _createTextVNode(\" 当题目\"), _createElementVNode(\"span\", _hoisted_45, \" \\\"\" + _toDisplayString(_ctx.idTitle(_ctx.questions[_ctx.willAddLogic.question_id - 1])) + \"\\\" \", 1 /* TEXT */), _createTextVNode(\"选择选项\"), _createElementVNode(\"span\", _hoisted_46, \" \\\"\" + _toDisplayString(_ctx.questions[_ctx.willAddLogic.question_id - 1].options[_ctx.willAddLogic.option_id - 1].title) + \"\\\" \", 1 /* TEXT */), _createTextVNode(\"时此题才会显示 \")])) : _createCommentVNode(\"v-if\", true), _ctx.questionsFilter.length === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_47, \" 题目之前不存在单（多）选题，无法设置关联题目 \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_48, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[35] || (_cache[35] = $event => _ctx.logicConfirm(_ctx.logicIndex))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"确定\")]),\n        _: 1 /* STABLE */\n      })])]),\n      _: 1 /* STABLE */\n    }, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\", \"before-close\"]), _createVNode(_component_el_dialog, {\n    title: _ctx.settingDialogTitle,\n    modelValue: _ctx.settingDialogVisible,\n    \"onUpdate:modelValue\": _cache[42] || (_cache[42] = $event => _ctx.settingDialogVisible = $event),\n    class: \"settingDialog\",\n    width: \"30%\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, null, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        class: \"timeBlock\",\n        label: \"截止时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n          style: {\n            \"margin-left\": \"100px\"\n          },\n          modelValue: _ctx.timeFrame,\n          \"onUpdate:modelValue\": _cache[37] || (_cache[37] = $event => _ctx.timeFrame = $event),\n          onChange: _ctx.formatTime,\n          type: \"datetime\",\n          \"value-format\": \"yyyy-MM-dd HH:mm\",\n          placeholder: \"选择结束时间\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"是否限制回收量\",\n        class: \"recycleBlock\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_switch, {\n            modelValue: _ctx.hasRecycleLimit,\n            \"onUpdate:modelValue\": _cache[38] || (_cache[38] = $event => _ctx.hasRecycleLimit = $event),\n            \"active-color\": \"#13ce66\",\n            \"inactive-color\": \"grey\",\n            \"active-text\": \"是\",\n            \"inactive-text\": \"否\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _ctx.hasRecycleLimit ? (_openBlock(), _createBlock(_component_el_input_number, {\n            key: 0,\n            modelValue: _ctx.max_recycling,\n            \"onUpdate:modelValue\": _cache[39] || (_cache[39] = $event => _ctx.max_recycling = $event),\n            min: 1,\n            style: {\n              \"margin-left\": \"120px\",\n              \"height\": \"40px\",\n              \"margin-top\": \"10px\"\n            }\n          }, null, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"是否问题乱序展示\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_switch, {\n            modelValue: _ctx.isRandom,\n            \"onUpdate:modelValue\": _cache[40] || (_cache[40] = $event => _ctx.isRandom = $event),\n            \"active-color\": \"#13ce66\",\n            \"inactive-color\": \"grey\",\n            \"active-text\": \"是\",\n            \"inactive-text\": \"否\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"题目关联逻辑开关\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_switch, {\n          modelValue: _ctx.isLogic,\n          \"onUpdate:modelValue\": _cache[41] || (_cache[41] = $event => _ctx.isLogic = $event),\n          \"active-text\": \"开\",\n          \"inactive-text\": \"关\",\n          onChange: _ctx.closeGlobalLogic\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _hoisted_49, _ctx.isLogic ? (_openBlock(), _createElementBlock(\"div\", _hoisted_50, \" 为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑 \")) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_51, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _ctx.settingSuccess\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"完成\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"])]), _hoisted_52], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","style","key","id","_createElementBlock","_Fragment","_hoisted_1","_normalizeStyle","_createCommentVNode","_createVNode","_component_el_tabs","type","stretch","default","_withCtx","_component_el_tab_pane","label","_component_el_menu","title","_component_el_icon","_component_Edit","_","_hoisted_2","_component_el_menu_item_group","_hoisted_3","_component_el_menu_item","onClick","_cache","$event","_ctx","willAddQuestion","qsEditDialogVisible","_createTextVNode","_component_el_sub_menu","_hoisted_4","addName","addStuID","addPhone","_component_el_row","_hoisted_5","_component_el_span","_hoisted_6","_component_el_input","modelValue","input3","placeholder","append","_component_el_button","changeTitle","_hoisted_7","_hoisted_8","input2","changeDescription","_component_el_divider","qsOutLineDialogVisible","_component_Link","settingDialogVisible","_component_setting","_component_el_button_group","size","savetoserver","publish","_component_el_container","_component_el_main","_hoisted_9","_hoisted_10","_toDisplayString","description","undefined","_hoisted_11","_hoisted_12","_renderList","questions","item","_createBlock","onMouseover","hoverItem","_component_el_col","span","_hoisted_13","must","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_component_el_radio","value","_hoisted_18","imgList","i","index","offset","_component_el_image","src","url","length","_hoisted_19","videoList","width","height","transparentatstart","animationatstart","autostart","autosize","volume","displaysize","showdisplay","showstatusbar","showcontrols","showaudiocontrols","showtracker","showpositioncontrols","balance","_hoisted_20","options","ans","hasNumLimit","_hoisted_21","supply","consume","_component_el_checkbox","_hoisted_22","row","_mergeProps","ref_for","_hoisted_23","_component_el_rate","max","score","isLogic","last_question","_hoisted_24","关联待更新","_hoisted_25","scoringMode","point","_hoisted_26","_hoisted_27","_hoisted_28","refer","_hoisted_29","_hoisted_30","_hoisted_31","_component_el_tooltip","effect","content","placement","edit","_component_EditPen","logic","copy","_component_DocumentCopy","del_pre","_component_Delete","up","_component_ArrowUp","down","_component_ArrowDown","_component_el_dialog","发布链接","publishDialogVisible","linkShare","模板库","qsModelDialogVisible","setAMoedel","setBMoedel","问卷逻辑","_hoisted_32","_component_el_tree","data","outline","props","defaultProps","onNodeDrop","handleDrop","draggable","allowDrop","qsEditDialogTitle","cancel_pre","_component_el_form","ref","model","_component_el_form_item","_component_el_select","disabled","selectDisAble","onChange","typeChange","allType","_component_el_option","_hoisted_33","_hoisted_34","plain","deleteOption","_component_el_input_number","addOption","_hoisted_35","rows","resize","min","multiple","radioChange","_component_el_upload","action","uploadImgUrl","upLoadImage","beforeImageUpload","limit","_hoisted_36","uploadVideoUrl","upLoadVideo","beforeVideoUpload","_hoisted_37","_hoisted_38","dialogConfirm","qsLinkDialogVisible","qsLinkDialogTitle","_hoisted_39","_hoisted_40","copyToClip","downloadQrcode","genCodeAgain","_hoisted_41","finish","editWrongMsgVisible","editWrongMsg","_hoisted_42","qsLogicDialogTitle","qsLogicDialogVisible","cancel_pre_logic","_hoisted_43","logicIndex","willAddLogic","question_id","questionsFilter","idTitle","option_id","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","logicConfirm","settingDialogTitle","_component_el_date_picker","timeFrame","formatTime","_component_el_switch","hasRecycleLimit","max_recycling","isRandom","closeGlobalLogic","_hoisted_49","_hoisted_50","_hoisted_51","settingSuccess","_hoisted_52"],"sources":["E:\\mytest\\src\\views\\qn-createpane\\qn-modelPane\\qnEditTest.vue"],"sourcesContent":["<template>\r\n    <div class=\"form\">\r\n        <div class=\"qnBoard\" :style=\"{\r\n            boxShadow: `var(--el-box-shadow-light)`,\r\n        }\">\r\n            <!-- <el-tabs :tab-position=\"'left'\" style=\"height: 700px;\" type=\"border-card\" class=\"demo-tabs\" stretch=\"true\">\r\n            <el-tab-pane style=\"padding: 140px\">\r\n                <template #label>\r\n                    <span class=\"custom-tabs-label\">\r\n                        <el-icon>\r\n                            <Edit />\r\n                        </el-icon>\r\n                        <span>Edit</span>\r\n                    </span>\r\n                </template>\r\n\r\n</el-tab-pane>\r\n<el-tab-pane label=\"Config\">Config</el-tab-pane>\r\n<el-tab-pane label=\"Role\">Role</el-tab-pane>\r\n<el-tab-pane label=\"Task\">Task</el-tab-pane>\r\n</el-tabs> -->\r\n            <el-tabs type=\"card\" stretch=\"true\" class=\"qn-tabs\">\r\n                <el-tab-pane label=\"编辑问卷\">\r\n                    <el-menu class=\"el-menu-vertical-demo\" style=\"position: relative; width: 190px;\">\r\n                        <template #title>\r\n                            <el-icon>\r\n                                <Edit />\r\n                            </el-icon>\r\n                            <span>问卷题目</span>\r\n                        </template>\r\n                        <el-menu-item-group>\r\n                            <template #title><span>题目</span></template>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'radio'; qsEditDialogVisible = true\">单选题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'checkbox'; qsEditDialogVisible = true\">多选题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'text'; qsEditDialogVisible = true\">填空题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'mark'; qsEditDialogVisible = true\">评分题</el-menu-item>\r\n                        </el-menu-item-group>\r\n                        <el-menu-item-group title=\"预设题目\">\r\n                            <el-sub-menu>\r\n                                <template #title><span>个人信息</span></template>\r\n                                <el-menu-item @click=\"addName\">姓名</el-menu-item>\r\n                                <el-menu-item @click=\"addStuID\">学号</el-menu-item>\r\n                                <el-menu-item @click=\"addPhone\">电话号码</el-menu-item>\r\n                            </el-sub-menu>\r\n                        </el-menu-item-group>\r\n\r\n                    </el-menu>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"问卷相关\">\r\n                    <el-row>\r\n                        <span style=\"font-size: 14px\">&emsp;问卷标题：</span>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                    <div class=\"mt-4\" style=\"width: 180px; left: 5px; position: relative\">\r\n                        <el-input v-model=\"input3\" style=\"max-width: 600px\" placeholder=\"标题\" class=\"input-with-select\">\r\n\r\n                            <template #append>\r\n                                <el-button @click=\"changeTitle(input3)\">设置</el-button>\r\n                            </template>\r\n                        </el-input>\r\n                    </div>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <span style=\"font-size: 14px\">&emsp;问卷简介：</span>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                    <div class=\"mt-4\" style=\"width: 180px; left: 5px; position: relative\">\r\n                        <el-input v-model=\"input2\" style=\"max-width: 600px\" placeholder=\"简介\" class=\"input-with-select\">\r\n\r\n                            <template #append>\r\n                                <el-button @click=\"changeDescription(input2)\">设置</el-button>\r\n                            </template>\r\n                        </el-input>\r\n                    </div>\r\n                    <el-divider />\r\n                    <el-menu class=\"el-menu-vertical-demo\" style=\"position: relative; width: 190.5px;\">\r\n                        <el-menu-item @click=\"this.qsOutLineDialogVisible = true\">\r\n                            <el-icon>\r\n                                <Link />\r\n                            </el-icon>\r\n                            <template #title>问卷逻辑</template>\r\n                        </el-menu-item>\r\n                        <el-menu-item @click=\"this.settingDialogVisible = true\">\r\n                            <el-icon>\r\n                                <setting />\r\n                            </el-icon>\r\n                            <template #title>问卷设置</template>\r\n                        </el-menu-item>\r\n                    </el-menu>\r\n                    <el-divider border-style=\"dashed\" />\r\n                    <el-button-group>\r\n                        <el-button type=\"primary\" size=\"default\" @click=\"savetoserver()\">保存问卷</el-button>\r\n                        <el-button type=\"primary\" size=\"default\" @click=\"publish()\">发布问卷</el-button>\r\n                    </el-button-group>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n\r\n        </div>\r\n        <el-container>\r\n            <el-main class=\"qnMain\" :style=\"{\r\n                boxShadow: `var(--el-box-shadow-light)`,\r\n                borderRadius: `var(--el-border-radius-round)`,\r\n            }\">\r\n                <div class=\"ques\">\r\n\r\n                    <div class=\"title\">\r\n                        {{ title }}\r\n                    </div>\r\n                    <div class=\"description\"\r\n                        v-if=\"this.description !== '' && this.description !== null && this.description !== undefined\">\r\n                        &emsp;&emsp;{{ description }}\r\n                    </div>\r\n                    <div class=\"content\">\r\n                        <el-row class=\"ques-block\" v-for=\"item in questions\" :key=\"item.id\"\r\n                            @mouseover.enter=\"hoverItem = item.id\" :style=\"{\r\n\r\n                                borderRadius: `var(--el-border-radius-round)`,\r\n                            }\">\r\n\r\n                            <el-col :span=\"16\" class=\"block-content\">\r\n                                <div class=\"block-title\">\r\n                                    {{ item.id }}. {{ item.title }} <span class=\"must\" v-if=\"item.must\">(必填)</span>\r\n                                </div>\r\n\r\n                                <div class=\"block-info\" v-if=\"item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school'\r\n                                    || item.type === 'phone' || item.type === 'email'\">\r\n                                    <el-input placeholder=\"请输入内容\" style=\"margin-left: 10px\">\r\n                                    </el-input>\r\n                                </div>\r\n\r\n                                <div class=\"block-choice\" v-if=\"item.type === 'sex'\">\r\n                                    <div style=\"padding-bottom: 10px\"><el-radio value=\"0\">男</el-radio></div>\r\n                                    <div><el-radio value=\"0\">女</el-radio></div>\r\n                                </div>\r\n\r\n                                <div class=\"block-description\"\r\n                                    v-if=\"item.description !== '' && item.description !== null && item.description !== undefined\">\r\n                                    {{ item.description }}\r\n                                </div>\r\n\r\n                                <!--                  图片-->\r\n                                <el-row class=\"block-img\" v-for=\"(i, index) in item.imgList\" :key=\"i.index\">\r\n                                    <el-col :offset=\"2\" :span=\"10\" class=\"demo-image__preview\" v-if=\"index % 2 === 0\">\r\n                                        <el-image style=\"width: 200px; height: 200px\" :src=\"i.url\"\r\n                                            :preview-src-list=\"[i.url]\">\r\n                                        </el-image>\r\n                                    </el-col>\r\n                                    <el-col :span=\"10\" class=\"demo-image__preview\"\r\n                                        v-if=\"index % 2 === 0 && index + 1 <= item.imgList.length - 1\">\r\n                                        <el-image style=\"width: 200px; height: 200px\" :src=\"item.imgList[index + 1].url\"\r\n                                            :preview-src-list=\"[item.imgList[index + 1].url]\">\r\n                                        </el-image>\r\n                                    </el-col>\r\n                                </el-row>\r\n                                <span style=\"color: #9b9ea0;font-size: x-small\"\r\n                                    v-if=\"item.imgList.length !== 0\">（点击图片查看大图）</span>\r\n\r\n\r\n                                <!--                视频-->\r\n                                <el-row class=\"block-img\" v-for=\"i in item.videoList\" :key=\"i.index\">\r\n                                    <embed width=400 height=230 transparentatstart=true animationatstart=false\r\n                                        autostart=true autosize=false volume=100 displaysize=0 showdisplay=true\r\n                                        showstatusbar=true showcontrols=true showaudiocontrols=true showtracker=true\r\n                                        showpositioncontrols=true balance=true :src=\"i.url\">\r\n                                </el-row>\r\n\r\n\r\n                                <div class=\"block-choice\" v-for=\"ans in item.options\" :key=\"ans.id\">\r\n\r\n                                    <!--                  单选-->\r\n                                    <el-radio v-if=\"item.type === 'radio'\" value=\"0\">\r\n                                        {{ ans.title }}<span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\"\r\n                                            v-if=\"ans.hasNumLimit\">剩余{{\r\n                                                ans.supply - ans.consume }}&emsp;总计{{ ans.supply }}</span>\r\n                                    </el-radio>\r\n\r\n                                    <!--                  多选-->\r\n                                    <el-checkbox v-if=\"item.type === 'checkbox'\" value=\"0\">\r\n                                        {{ ans.title }}\r\n                                        <span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\"\r\n                                            v-if=\"ans.hasNumLimit\">剩余{{\r\n                                                ans.supply -\r\n                                                ans.consume }}&emsp;总计{{ ans.supply }}</span>\r\n                                    </el-checkbox>\r\n\r\n                                    <!--                  填空-->\r\n                                    <el-input v-if=\"item.type === 'text' && item.row > 1\" type=\"textarea\"\r\n                                        placeholder=\"请输入内容\" v-bind=\"ans.title\">\r\n                                    </el-input>\r\n                                    <el-input v-if=\"item.type === 'text' && item.row === 1\" placeholder=\"请输入内容\"\r\n                                        v-bind=\"ans.title\">\r\n                                    </el-input>\r\n                                </div>\r\n\r\n                                <div class=\"block-choice\" v-if=\"item.type === 'mark'\">\r\n                                    <!--                  评分-->\r\n                                    <el-rate value=\"0\" :max=\"item.score\"></el-rate>\r\n                                </div>\r\n\r\n                                <!--                 关联信息-->\r\n                                <div class=\"block-relation\" v-if=\"isLogic && item.last_question !== 0\">\r\n                                    <div>{{ 关联待更新 }}</div>\r\n                                </div>\r\n\r\n                                <div\r\n                                    v-if=\"item.type !== 'name' && item.type !== 'stuId' && item.type !== 'class' && item.type !== 'school'\">\r\n                                    <div class=\"block-point\"\r\n                                        v-if=\"scoringMode !== false && item.point !== null && item.point !== undefined\">\r\n                                        <div v-if=\"item.point === ''\">分值：0</div>\r\n                                        <div v-else>分值：{{ item.point }}</div>\r\n                                    </div>\r\n\r\n                                    <div class=\"block-refer\" v-if=\"item.refer !== null && item.refer !== undefined\">\r\n                                        <div v-if=\"item.refer === ''\">答案：无</div>\r\n                                        <div v-else>参考答案：{{ item.refer }}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </el-col>\r\n\r\n                            <el-col :span=\"8\" class=\"block-button\" style=\"text-align: right\"\r\n                                v-if=\"hoverItem === item.id\">\r\n                                <el-button-group>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"编辑\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"edit(item.id)\"><el-icon>\r\n                                                <EditPen />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" v-if=\"isLogic\" effect=\"light\" content=\"添加关联逻辑\"\r\n                                        placement=\"bottom\" open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"logic(item.id)\"><el-icon>\r\n                                                <Link />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"复制\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"copy(item.id)\"><el-icon>\r\n                                                <DocumentCopy />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"删除\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"del_pre(item.id)\"><el-icon>\r\n                                                <Delete />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"上移\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"up(item.id)\"><el-icon>\r\n                                                <ArrowUp />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"下移\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"down(item.id)\"><el-icon>\r\n                                                <ArrowDown />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                </el-button-group>\r\n                            </el-col>\r\n\r\n                        </el-row>\r\n                    </div>\r\n\r\n                </div>\r\n            </el-main>\r\n\r\n        </el-container>\r\n        <el-dialog :title=\"发布链接\" v-model=\"publishDialogVisible\" class=\"dialog\" style=\"min-width:400px; display: flex; align-items: center;\">\r\n            <el-row><span>发布链接：{{ linkShare }}</span></el-row>\r\n        </el-dialog>\r\n\r\n        <el-dialog :title=\"模板库\" v-model=\"qsModelDialogVisible\" class=\"dialog\" width=\"800px\">\r\n            <el-button type=\"priamry\" @click=\"setAMoedel()\" size=\"large\">小学期模板</el-button>\r\n            <el-button type=\"priamry\" @click=\"setBMoedel()\" size=\"large\">游戏评价模板</el-button>\r\n        </el-dialog>\r\n\r\n        <el-dialog :title=\"问卷逻辑\" v-model=\"qsOutLineDialogVisible\" class=\"dialog\" width=\"600px\">\r\n            <div class=\"outline\">\r\n                <el-tree :data=\"outline\" node-key=\"id\" :props=\"defaultProps\" @node-drop=\"handleDrop\" draggable\r\n                    :allow-drop=\"allowDrop\"></el-tree>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog :title=\"qsEditDialogTitle\" v-model=\"qsEditDialogVisible\" :before-close=\"cancel_pre\" class=\"dialog\"\r\n            width=\"600px\">\r\n            <el-form ref=\"form\" :model=\"willAddQuestion\" label-width=\"100px\">\r\n                <el-form-item label=\"题目类型\">\r\n                    <el-select :disabled=\"selectDisAble\" v-model=\"willAddQuestion.type\" placeholder=\"请选择题目类型\"\r\n                        @change=\"typeChange\">\r\n                        <el-option v-for=\"item in allType\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <div class=\"is-info\" v-if=\"willAddQuestion.type === 'name'\r\n                    || willAddQuestion.type === 'stuId'\r\n                    || willAddQuestion.type === 'class'\r\n                    || willAddQuestion.type === 'school'\r\n                    || willAddQuestion.type === 'phone'\r\n                    || willAddQuestion.type === 'email'\r\n                    || willAddQuestion.type === 'sex'\">\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'name'\">\r\n                        <el-input value=\"姓名\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'stuId'\">\r\n                        <el-input value=\"学号\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'school'\">\r\n                        <el-input value=\"学校\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'sex'\">\r\n                        <el-input value=\"性别\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'phone'\">\r\n                        <el-input value=\"手机号\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'email'\">\r\n                        <el-input value=\"邮箱\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"是否必填\">\r\n                        <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n                    </el-form-item>\r\n                </div>\r\n                <div v-else class=\"non-pre\">\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.title\" placeholder=\"请输入标题\" style=\"width: 600px\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"题目描述\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.description\" placeholder=\"请输入题目描述\"\r\n                            style=\"width: 600px\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"是否必填\">\r\n                        <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n                    </el-form-item>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'radio' || willAddQuestion.type === 'checkbox'\">\r\n                        <el-form-item :label=\"'选项' + (index + 1)\" v-for=\"(item, index) in willAddQuestion.options\"\r\n                            :key=\"index\">\r\n                            <el-row>\r\n                                <el-col :span=\"8\">\r\n                                    <el-input v-model=\"item.title\" placeholder=\"请输入选项名\"></el-input>\r\n                                </el-col>\r\n                                <el-col :span=\"16\">\r\n                                    <el-button-group>\r\n                                        <el-button type=\"danger\" plain class=\"deleteOptionButton\"\r\n                                            @click=\"deleteOption(index)\">删除选项</el-button>\r\n                                        <el-button type=\"success\" plain style=\"margin-right: 8px\"\r\n                                            v-if=\"!item.hasNumLimit\" @click=\"item.hasNumLimit = true\">添加库存限制</el-button>\r\n                                        <el-button type=\"info\" plain style=\"margin-right: 8px\" v-if=\"item.hasNumLimit\"\r\n                                            @click=\"item.hasNumLimit = false\">取消库存限制</el-button>\r\n                                        <el-input-number v-model=\"item.supply\"\r\n                                            v-if=\"item.hasNumLimit\"></el-input-number>\r\n                                    </el-button-group>\r\n                                </el-col>\r\n                            </el-row>\r\n\r\n                        </el-form-item>\r\n                        <el-row>\r\n                            <el-col :span=\"4\">\r\n                                <el-button type=\"primary\" plain class=\"addOptionButton\"\r\n                                    @click=\"addOption\">新增选项</el-button>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </template>\r\n                    <span>&emsp;</span>\r\n                    <template v-if=\"willAddQuestion.type === 'text'\">\r\n                        <el-form-item label=\"填空\">\r\n                            <el-input type=\"textarea\" class=\"my-input\" :rows=\"willAddQuestion.row\" resize=\"none\">\r\n                            </el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"行数\">\r\n                            <el-input-number v-model=\"willAddQuestion.row\" :min=\"1\" :max=\"10\"></el-input-number>\r\n                        </el-form-item>\r\n                    </template>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'mark'\">\r\n                        <el-form-item label=\"最大分数\">\r\n                            <el-input-number v-model=\"willAddQuestion.score\" :min=\"3\" :max=\"10\"></el-input-number>\r\n                        </el-form-item>\r\n                    </template>\r\n\r\n                    <!--          填空答案设置-->\r\n                    <el-form-item v-if=\"willAddQuestion.type === 'text'\" label=\"参考答案\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.refer\" placeholder=\"请输入参考答案\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <!--          多选答案设置-->\r\n                    <el-form-item v-if=\"willAddQuestion.type === 'checkbox'\" label=\"参考答案\" style=\"width: 100%;\">\r\n                        <el-select v-model=\"willAddQuestion.refer\" multiple placeholder=\"请选择\">\r\n                            <el-option v-for=\"item in willAddQuestion.options\" :key=\"item.id\" :value=\"item.title\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n\r\n                    <!--          单选答案设置-->\r\n                    <el-form-item v-if=\"willAddQuestion.type === 'radio'\" label=\"参考答案\" style=\"width: 100%;\">\r\n                        <el-select v-model=\"willAddQuestion.refer\" @change=\"radioChange\">\r\n                            <el-option v-for=\"item in willAddQuestion.options\" :key=\"item.id\" :value=\"item.title\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item v-if=\"scoringMode\" label=\"分值\" style=\"width: 100%;\">\r\n                        <el-input-number v-model=\"willAddQuestion.point\" :min=\"0\" :max=\"1000\"></el-input-number>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"上传图片\">\r\n                        <el-upload class=\"upload-img\" :action=uploadImgUrl multiple :http-request=\"upLoadImage\"\r\n                            :before-upload=\"beforeImageUpload\" :file-list=\"willAddQuestion.imgList\" :limit=\"6\">\r\n                            <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n                            <span class=\"el-upload__tip\">&emsp;只能上传jpg/png文件，且不超过5mb</span>\r\n                        </el-upload>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"上传视频\">\r\n                        <el-upload class=\"upload-video\" :action=uploadVideoUrl :http-request=\"upLoadVideo\"\r\n                            :before-upload=\"beforeVideoUpload\" :file-list=\"willAddQuestion.videoList\" :limit=\"1\">\r\n                            <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n                            <span class=\"el-upload__tip\">&emsp;只能上传mp4/mkv文件，且不超过10mb</span>\r\n                        </el-upload>\r\n                    </el-form-item>\r\n                </div>\r\n            </el-form>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"primary\" @click=\"dialogConfirm\" size=\"default\">确定</el-button>\r\n                    &emsp;\r\n                    <el-button :span=\"6\" @click=\"cancel_pre\" size=\"default\">取消</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog v-model=\"qsLinkDialogVisible\" :title=\"qsLinkDialogTitle\" class=\"linkDialog\" :show-close=\"false\"\r\n            width=\"800px\">\r\n            <el-row>\r\n                <el-col span=\"8\" style=\"text-align: center\">\r\n                    <el-row>\r\n                        <div id=\"qrcode_2\" style=\"height:200px; width:200px; margin-left: 22px;\"></div>\r\n                    </el-row>\r\n                </el-col>\r\n                <el-col span=\"16\">\r\n                    <el-row>\r\n                        <h2>链接与二维码</h2>\r\n                    </el-row>\r\n                    <el-row style=\"margin-top:15px\">\r\n                        <el-col :span=\"16\" style=\"margin-right: 5px\">\r\n                            <el-input :placeholder=linkShare v-model=\"linkShare\" id=\"copyText\" :disabled=\"true\">\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-button type=\"info\" plain id=\"copyBtn\" @click=\"copyToClip\">复制链接</el-button></el-row>\r\n                    <el-row style=\"margin-top: 25px\">\r\n                        <el-button type=\"primary\" plain @click=\"downloadQrcode\">下载二维码</el-button>\r\n                        <el-button type=\"primary\" @click=\"genCodeAgain\" style=\"margin-left: 30px\">重新生成链接</el-button>\r\n                    </el-row>\r\n                </el-col>\r\n            </el-row>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"success\" style=\"width: 80px\" @click=\"finish\">完 成</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog v-model=\"editWrongMsgVisible\" class=\"linkDialog\" :show-close=\"false\" :close-on-click-modal=\"false\"\r\n            width=\"300px\">\r\n            <span>{{ editWrongMsg }}</span>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"danger\" style=\"width: 80px\"\r\n                        @click=\"editWrongMsgVisible = false\">知道了</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <!--    关联问题弹框-->\r\n        <el-dialog :title=\"qsLogicDialogTitle\" v-model=\"qsLogicDialogVisible\" :before-close=\"cancel_pre_logic\"\r\n            class=\"dialog\">\r\n            <el-form v-if=\"questions.length !== 0\" class=\"logic-form\" ref=\"form\" label-width=\"80px\">\r\n\r\n                <div class=\"logic-title\">\r\n                    当前题目：{{ questions[logicIndex].id }}. {{ questions[logicIndex].title }}\r\n                </div>\r\n\r\n                <el-form-item label=\"关联题目\">\r\n                    <el-select v-model=\"willAddLogic.question_id\" placeholder=\"请选择关联题目\">\r\n                        <el-option v-for=\"item in questionsFilter\" :key=\"item.id\" :label=\"idTitle(item)\"\r\n                            :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"关联选项\" v-if=\"willAddLogic.question_id !== 0\">\r\n                    <el-select v-model=\"willAddLogic.option_id\" placeholder=\"请选择关联选项\">\r\n                        <el-option v-for=\"item in questions[willAddLogic.question_id - 1].options\" :key=\"item.id\"\r\n                            :label=\"item.title\" :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <div class=\"logic-info\" v-if=\"willAddLogic.question_id !== 0\">\r\n                    <!--          保存加入后选项id记得减一-->\r\n                    当题目<span style=\"color: #1687fd\"> \"{{ idTitle(questions[willAddLogic.question_id - 1]) }}\"\r\n                    </span>选择选项<span style=\"color: #1687fd\"> \"{{ questions[willAddLogic.question_id -\r\n                        1].options[willAddLogic.option_id -\r\n                        1].title\r\n                        }}\"\r\n                    </span>时此题才会显示\r\n                </div>\r\n                <div class=\"logic-info\" v-if=\"questionsFilter.length === 1\">\r\n                    题目之前不存在单（多）选题，无法设置关联题目\r\n                </div>\r\n\r\n                <div class=\"logic-bt\">\r\n                    <el-button type=\"primary\" @click=\"logicConfirm(logicIndex)\">确定</el-button>\r\n                </div>\r\n\r\n            </el-form>\r\n        </el-dialog>\r\n        <el-dialog :title=\"settingDialogTitle\" v-model=\"settingDialogVisible\" class=\"settingDialog\" width=\"30%\">\r\n            <el-form>\r\n                <el-form-item class=\"timeBlock\" label=\"截止时间\">\r\n                    <el-date-picker style=\"margin-left: 100px\" v-model=\"timeFrame\" @change=\"formatTime\" type=\"datetime\"\r\n                        value-format=\"yyyy-MM-dd HH:mm\" placeholder=\"选择结束时间\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item label=\"是否限制回收量\" class=\"recycleBlock\">\r\n                    <el-row>\r\n                        <el-switch v-model=\"hasRecycleLimit\" active-color=\"#13ce66\" inactive-color=\"grey\"\r\n                            active-text=\"是\" inactive-text=\"否\">\r\n                        </el-switch>\r\n                        <el-input-number v-model=\"max_recycling\" :min=\"1\" v-if=\"hasRecycleLimit\"\r\n                            style=\"margin-left: 120px;height: 40px;margin-top: 10px\">\r\n                        </el-input-number>\r\n                    </el-row>\r\n                    \r\n                </el-form-item>\r\n                <el-form-item label=\"是否问题乱序展示\">\r\n                    <el-row>\r\n                        <el-switch v-model=\"isRandom\" active-color=\"#13ce66\" inactive-color=\"grey\"\r\n                            active-text=\"是\" inactive-text=\"否\">\r\n                        </el-switch>\r\n                    </el-row>\r\n                </el-form-item>\r\n                <el-form-item label=\"题目关联逻辑开关\">\r\n                    <el-switch v-model=\"isLogic\" active-text=\"开\" inactive-text=\"关\" @change=\"closeGlobalLogic\">\r\n                    </el-switch>\r\n                </el-form-item>\r\n\r\n                <div class=\"logic-description\">\r\n                    题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】\r\n                </div>\r\n\r\n                <div class=\"logic-description important\" v-if=\"isLogic\">\r\n                    为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑\r\n                </div>\r\n            </el-form>\r\n\r\n            <div class=\"setting-bt\">\r\n                <el-button type=\"primary\" @click=\"settingSuccess\">完成</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n    <div style=\"bottom: 300px; left: 20px\">\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n//import editHeader from \"../../../components/header/editHeader\";\r\nimport QRCode from \"qrcodejs2\";\r\nimport getDataApi from \"@/utils/getDataApi\";\r\nimport saveDataApi from \"@/utils/saveDataApi\";\r\nimport user from \"@/storage/user\";\r\n\r\nexport default {\r\n    mixins: [getDataApi, saveDataApi],\r\n    data() {\r\n        return {\r\n            logicQuestionState: 0,  // 用于判断用户是否更改关联问题设置\r\n            logicOptionState: 0,    // 用于判断用户是否更改关联选项设置\r\n\r\n            //uploadImgUrl: this.GLOBAL.backUrl + 'upload/image',\r\n            //uploadVideoUrl: this.GLOBAL.backUrl + 'upload/video',\r\n\r\n            max_recycling: 10000,\r\n            hasRecycleLimit: false,\r\n            timer: '',\r\n            value: '',\r\n            qrcode: null,\r\n            timeFrame: '',\r\n            linkShare: '',\r\n            editWrongMsg: \"\",\r\n            editWrongMsgVisible: false,\r\n            qsLinkDialogVisible: false,\r\n            qsLinkDialogTitle: \"发布成功！\",\r\n            settingDialogTitle: \"高级设置\",   // 高级设置弹框的标题\r\n            settingDialogVisible: false,     // 高级设置对话框可见性\r\n            publishDialogVisible: false,\r\n            closingDate: null,   // 高级设置中问卷回收的截止日期\r\n            isLogic: true,      // 问卷是否引入关联逻辑\r\n            scoringMode: true,    // 评分模式（高级设置中开启后可为题目设置得分）\r\n            isReleased: false,   // 是否发布\r\n            editIndex: 0,\r\n            logicIndex: 0,          // 当前添加题目逻辑的问题ID\r\n            selectDisAble: false,\r\n            hoverItem: 0,\r\n            activeName: 'first',\r\n            title: '',\r\n            description: '',\r\n            input3: '',\r\n            input2: '',\r\n            defaultProps: {\r\n                children: 'children',\r\n                label: 'label'\r\n            },\r\n            type: \"1\",\r\n            questions: [],\r\n            outline: [],\r\n            pid: this.$route.query.pid,\r\n            qsEditDialogVisible: false,\r\n            qsEditDialogTitle: \"新建题目\",\r\n            qsLogicDialogVisible: false,\r\n            qsLogicDialogTitle: \"关联逻辑设置\",\r\n            qsOutLineDialogVisible: false,\r\n            qsModelDialogVisible: false,\r\n            modelA: false,\r\n            modelB: false,\r\n            isRandom: false,\r\n            willAddQuestion: {\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 1 // 选项id\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 10, // 最大评分\r\n                refer: '', // 参考答案\r\n                point: 0,  // 分值\r\n                imgList: [],\r\n                videoList: [],\r\n            },\r\n            willAddLogic: {\r\n                question_id: 0,\r\n                option_id: 1,\r\n            },\r\n            allType: [\r\n                {\r\n                    value: 'radio',\r\n                    label: '单选题',\r\n                },\r\n                {\r\n                    value: 'checkbox',\r\n                    label: '多选题',\r\n                },\r\n                {\r\n                    value: 'text',\r\n                    label: '填空题',\r\n                },\r\n                {\r\n                    value: 'judge',\r\n                    label: '判断题',\r\n                },\r\n                {\r\n                    value: 'name',\r\n                    label: '姓名'\r\n                },\r\n                {\r\n                    value: 'stuId',\r\n                    label: '学号'\r\n                },\r\n                {\r\n                    value: 'class',\r\n                    label: '班级'\r\n                },\r\n                {\r\n                    value: 'school',\r\n                    label: '学校'\r\n                },\r\n            ],\r\n\r\n            xiaoxueqi_questions: [\r\n                {\r\n                    id: 1,\r\n                    type: 'radio',\r\n                    title: '这是一个什么网站？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '问卷系统',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '出版系统',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    type: 'checkbox',\r\n                    title: '软工小学期助教都有谁？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: 'ZYH',\r\n                    }, {\r\n                        id: 2,\r\n                        title: 'LKW',\r\n                    }, {\r\n                        id: 3,\r\n                        title: 'ZXH',\r\n                    }, {\r\n                        id: 4,\r\n                        title: 'HZH',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    type: 'radio',\r\n                    title: '软工小学期累不累',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '累',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '非常累',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 4,\r\n                    type: 'text',\r\n                    title: '您对小学期的评价如何？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 0,\r\n                        title: '',\r\n                    }],\r\n                    row: 3,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 5,\r\n                    type: 'mark',\r\n                    title: '给小学期打个分吧~',\r\n                    description: '请考虑妥当后填写',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 0,\r\n                        title: '',\r\n                    }],\r\n                    row: 0,\r\n                    score: 10,\r\n                },\r\n            ],\r\n            xiaoxueqi_outline: [\r\n                {\r\n                    id: 1,\r\n                    label: '1. 这是一个什么网站？',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    label: '2. 软工小学期助教都有谁？',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    label: '3. 软工小学期累不累',\r\n                },\r\n                {\r\n                    id: 4,\r\n                    label: '4. 您对小学期的评价如何？',\r\n                },\r\n                {\r\n                    id: 5,\r\n                    label: '5. 给小学期打个分吧~',\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    //components: {\r\n    //editHeader,\r\n    //},\r\n    methods: {\r\n        //---------------------------Image and video--------------------------------//\r\n        upLoadImage(file) {\r\n            const formData = new FormData();\r\n            formData.append('image', file.file);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/image/api/upload_image',\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status_code) {\r\n                        case 1:\r\n                            var name = res.data.name;\r\n                            var url = res.data.url;\r\n                            this.willAddQuestion.imgList.push({\r\n                                name: name,\r\n                                url: url\r\n                            });\r\n                            console.log(this.willAddQuestion.imgList);\r\n                            break;\r\n                        case 2:\r\n                            this.$message.error(\"上传文件格式错误！\");\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"操作失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        upLoadVideo(file) {\r\n            const formData = new FormData();\r\n            formData.append('video', file.file);\r\n            this.$ajax({\r\n\r\n            })\r\n            this.$axios({\r\n                method: 'post',\r\n                url: this.uploadVideoUrl,\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status_code) {\r\n                        case 1:\r\n                            var name = res.data.name;\r\n                            var url = res.data.url;\r\n                            this.willAddQuestion.videoList.push({\r\n                                name: name,\r\n                                url: url\r\n                            });\r\n                            console.log(this.willAddQuestion.videoList);\r\n                            break;\r\n                        case 2:\r\n                            // this.$message.error(\"上传文件格式错误！\");\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"操作失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        beforeImageUpload(file) {\r\n            const isJPG = file.type === 'image/jpeg';\r\n            const isPNG = file.type === 'image/png';\r\n            const isLt5M = file.size / 1024 / 1024 < 10;\r\n\r\n            if (!isJPG && !isPNG) {\r\n                this.$message.error('上传头像图片只能是 JPG/PNG 格式!');\r\n            } else if (!isLt5M) {\r\n                this.$message.error('上传头像图片大小不能超过 5MB!');\r\n            }\r\n            return (isJPG || isPNG) && isLt5M;\r\n        },\r\n        beforeVideoUpload(file) {\r\n            const filename = file.name;\r\n            var suffix = '';\r\n            var isVideo = false;\r\n            const isLt2M = file.size / 1024 / 1024 < 30;\r\n            try {\r\n                var flieArr = filename.split('.');\r\n                suffix = flieArr[flieArr.length - 1];\r\n            } catch (err) {\r\n                suffix = '';\r\n            }\r\n            var videoList = ['mp4', 'mkv'];\r\n            var judge = videoList.some(function (item) {\r\n                return item === suffix;\r\n            });\r\n            if (judge) {\r\n                isVideo = true;\r\n            }\r\n            if (!isVideo) {\r\n                this.$message.error('上传视频文件只能是 MP4/MKV 格式!');\r\n            } else if (!isLt2M) {\r\n                this.$message.error('上传视频文件大小不能超过 10MB!');\r\n            }\r\n            return isLt2M && isVideo;\r\n        },\r\n        beforeRemove(file, fileList) {\r\n            console.log(file, fileList);\r\n            return this.$confirm(`确定移除 ${file.name}？`);\r\n        },\r\n        handleRemove(file, fileList) {\r\n            console.log(file, fileList);\r\n            this.$message(\"移除成功\")\r\n        },\r\n        //--------------------------------------------------------------------------//\r\n        autoSave() {\r\n            this.saveQnInfo('autosave', '2');\r\n        },\r\n        download() {\r\n            // 获取base64的图片节点\r\n            var img = document.getElementById('qrcode_2').getElementsByTagName('img')[0];\r\n            // 构建画布\r\n            var canvas = document.createElement('canvas');\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            canvas.getContext('2d').drawImage(img, 0, 0);\r\n            // 构造url\r\n            var url = canvas.toDataURL('image/png');\r\n            console.log(url);\r\n            // 构造a标签并模拟点击\r\n            var downloadLink = document.createElement('a');\r\n            downloadLink.download = '二维码.png';\r\n            downloadLink.href = url;\r\n            downloadLink.click();\r\n            downloadLink.remove();\r\n        },\r\n        formatTime(time) {\r\n            this.timeFrame = time;\r\n        },\r\n        finish() {\r\n            this.qsLinkDialogVisible = false;\r\n            this.$router.push('/index') // 跳转到问卷中心？\r\n        },\r\n        publishSuccess: function () {\r\n            this.qsLinkDialogVisible = true;\r\n        },\r\n        edit: function (index) {\r\n            index--;\r\n            this.willAddQuestion = {\r\n                question_id: this.questions[index].question_id,\r\n                id: this.questions[index].id,\r\n                type: this.questions[index].type,\r\n                title: this.questions[index].title,\r\n                must: this.questions[index].must,\r\n                description: this.questions[index].description,\r\n                options: JSON.parse(JSON.stringify(this.questions[index].options)),\r\n                row: this.questions[index].row,\r\n                score: this.questions[index].score,\r\n                refer: this.questions[index].refer,\r\n                point: this.questions[index].point,\r\n                is_shown: this.questions[index].is_shown,\r\n                last_question: this.questions[index].last_question,\r\n                last_option: this.questions[index].last_option,\r\n                imgList: JSON.parse(JSON.stringify(this.questions[index].imgList)),\r\n                videoList: JSON.parse(JSON.stringify(this.questions[index].videoList)),\r\n            };\r\n            this.editIndex = index;\r\n            this.selectDisAble = true;\r\n            this.qsEditDialogTitle = \"编辑题目\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        isExistEmptyOption: function () {\r\n            for (let i = 0; i < this.willAddQuestion.options.length; i++) {\r\n                if (this.willAddQuestion.options[i].title === '') return true;\r\n            }\r\n            return false;\r\n        },\r\n        isExistSameOption: function () {\r\n            for (let i = 0; i < this.willAddQuestion.options.length; i++) {\r\n                for (let j = 0; j < this.willAddQuestion.options.length; j++) {\r\n                    if (i !== j && this.willAddQuestion.options[i].title === this.willAddQuestion.options[j].title) return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        dialogConfirm() {\r\n            let index = this.editIndex;\r\n            // this.qsEditDialogVisible = false;\r\n            if (this.qsEditDialogTitle === \"编辑题目\") {\r\n                this.questions[index].id = this.willAddQuestion.id;\r\n                this.questions[index].row = this.willAddQuestion.row;\r\n                this.questions[index].must = this.willAddQuestion.must;\r\n                this.questions[index].description = this.willAddQuestion.description;\r\n                this.questions[index].title = this.willAddQuestion.title;\r\n                this.questions[index].options = this.willAddQuestion.options;\r\n                this.questions[index].score = this.willAddQuestion.score;\r\n                this.qsEditDialogTitle = \"\";\r\n                this.qsEditDialogVisible = false;\r\n                this.questions[index].refer = this.willAddQuestion.refer;\r\n                this.questions[index].point = this.willAddQuestion.point;\r\n                // 大纲更新\r\n                this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                if (this.willAddQuestion.title === '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '标题不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能重复!'\r\n                    });\r\n                }\r\n                else {\r\n                    this.questions[index].id = this.willAddQuestion.id;\r\n                    this.questions[index].row = this.willAddQuestion.row;\r\n                    this.questions[index].must = this.willAddQuestion.must;\r\n                    this.questions[index].description = this.willAddQuestion.description;\r\n                    this.questions[index].title = this.willAddQuestion.title;\r\n                    this.questions[index].options = this.willAddQuestion.options;\r\n                    this.questions[index].score = this.willAddQuestion.score;\r\n                    this.questions[index].is_shown = this.willAddQuestion.is_shown;\r\n                    this.questions[index].last_question = this.willAddQuestion.last_question;\r\n                    this.questions[index].last_option = this.willAddQuestion.last_option;\r\n                    this.questions[index].options = JSON.parse(JSON.stringify(this.willAddQuestion.options));\r\n                    this.questions[index].imgList = JSON.parse(JSON.stringify(this.willAddQuestion.imgList));\r\n                    this.questions[index].videoList = JSON.parse(JSON.stringify(this.willAddQuestion.videoList));\r\n                    // 大纲更新\r\n                    this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                    this.qsEditDialogTitle = \"\";\r\n                    this.qsEditDialogVisible = false;\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '修改成功!'\r\n                    });\r\n                    // 重置\r\n                    this.resetWillAdd();\r\n                    this.selectDisAble = false;\r\n                }\r\n                // 重置\r\n                this.willAddQuestion = {\r\n                    id: 0,\r\n                    type: '',\r\n                    title: '',\r\n                    must: false,\r\n                    description: '',\r\n                    options: [\r\n                        {\r\n                            title: '', //选项标题\r\n                            id: 1 //选项id\r\n                        }],\r\n                    row: 1,\r\n                    score: 10,\r\n                    refer: '',\r\n                    point: 0,  // 分值\r\n                };\r\n                this.selectDisAble = false;\r\n            }\r\n            else {\r\n                if (this.willAddQuestion.type === 'name') { this.willAddQuestion.title = '姓名'; this.willAddQuestion.refer = ''; }\r\n                if (this.willAddQuestion.type === 'stuId') { this.willAddQuestion.title = '学号'; this.willAddQuestion.refer = ''; }\r\n                if (this.willAddQuestion.type === 'class') { this.willAddQuestion.title = '班级'; this.willAddQuestion.refer = ''; }\r\n                if (this.willAddQuestion.type === 'school') { this.willAddQuestion.title = '学校'; this.willAddQuestion.refer = ''; }\r\n                if (this.willAddQuestion.title === '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '标题不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能重复!'\r\n                    });\r\n                }\r\n                else {\r\n                    this.qsEditDialogVisible = false;\r\n                    this.willAddQuestion.id = this.questions.length + 1;\r\n                    // 大纲更新\r\n                    this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                    if (this.willAddQuestion.type === 'judge') {\r\n                        this.willAddQuestion.options = [{ title: '对', id: 1 }, { title: '错', id: 2 }];\r\n                    }\r\n                    this.questions.push(this.willAddQuestion);\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '添加成功!'\r\n                    });\r\n                    // 重置\r\n                    this.resetWillAdd();\r\n                }\r\n            }\r\n        },\r\n        resetWillAdd() {\r\n            this.willAddQuestion = {\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 1 // 选项id\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 10, // 最大评分\r\n                refer: '', // 参考答案\r\n                point: 0,  // 分值\r\n                imgList: [],\r\n                videoList: []\r\n            }\r\n        },\r\n        dialogCancel: function () {\r\n            this.qsEditDialogTitle = \"新建题目\";\r\n            this.resetWillAdd();\r\n            this.qsEditDialogVisible = false;\r\n            this.selectDisAble = false;\r\n        },\r\n        cancel_pre: function () {\r\n            this.$confirm('已编辑的题目信息将不会保存,确认关闭？', '提示', {\r\n                confirmButtonText: '确认',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                this.dialogCancel();\r\n            }).catch(() => {\r\n            });\r\n        },\r\n        LogicDialogCancel: function () {\r\n            this.qsLogicDialogVisible = false;\r\n            this.resetLogic();\r\n        },\r\n        cancel_pre_logic: function () {\r\n            this.$confirm('已编辑的题目关联逻辑将不会保存,确认关闭？', '提示', {\r\n                confirmButtonText: '确认',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                this.LogicDialogCancel();\r\n            }).catch(() => {\r\n            });\r\n        },\r\n        logicConfirm: function (index) {\r\n            console.log(this.questions);\r\n            let questions = this.questions;\r\n            let willAddLogic = this.willAddLogic;\r\n            questions[index].last_question = willAddLogic.question_id;\r\n            questions[index].last_option = willAddLogic.option_id;\r\n            questions[index].is_shown = willAddLogic.question_id === 0;\r\n            if (this.willAddLogic.question_id !== this.logicQuestionState || this.willAddLogic.option_id !== this.logicOptionState) {\r\n                this.$message({\r\n                    type: 'success',\r\n                    message: '问题关联设置成功'\r\n                });\r\n            }\r\n            this.qsLogicDialogVisible = false;\r\n            this.resetLogic();\r\n        },\r\n        logic: function (index) {\r\n            this.logicIndex = index - 1;\r\n            this.willAddLogic.question_id = this.questions[index - 1].last_question;\r\n            if (this.questions[index - 1].last_option !== 0) { this.willAddLogic.option_id = this.questions[index - 1].last_option; }\r\n            else this.willAddLogic.option_id = 1;\r\n            console.log(this.questions);\r\n            this.qsLogicDialogVisible = true;\r\n            this.logicQuestionState = this.willAddLogic.question_id;\r\n            this.logicOptionState = this.willAddLogic.option_id;\r\n        },\r\n        resetLogic() {\r\n            this.willAddLogic = {\r\n                question_id: 0,\r\n                option_id: 1,\r\n            };\r\n            this.logicIndex = 0;\r\n        },\r\n        typeChange(value) {\r\n            this.willAddQuestion.type = value;\r\n        },\r\n        radioChange(value) {\r\n            this.willAddQuestion.refer = value;\r\n        },\r\n        judgeChange(value) {\r\n            this.willAddQuestion.refer = value;\r\n        },\r\n        addOption() {\r\n            // 问题关联检查\r\n            if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\r\n                this.$message({\r\n                    type: 'warning',\r\n                    message: '此问题已被关联，无法新增选项，请删除关联信息后再试'\r\n                });\r\n                return;\r\n            }\r\n            this.willAddQuestion.options.push({\r\n                title: '',\r\n                id: this.willAddQuestion.options.length + 1,\r\n            });\r\n        },\r\n        deleteOption(index) {\r\n            if (this.willAddQuestion.options.length === 1) {\r\n                this.$message({\r\n                    type: \"error\",\r\n                    message: \"至少需要设置一个选项！\"\r\n                })\r\n            }\r\n            else {\r\n                // 问题关联检查\r\n                if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\r\n                    this.$message({\r\n                        type: 'warning',\r\n                        message: '此问题已被关联，无法删除选项，请删除关联信息后再试'\r\n                    });\r\n                    return;\r\n                }\r\n                // id重排\r\n                for (let i = index + 1; i < this.willAddQuestion.options.length; i++) {\r\n                    this.willAddQuestion.options[i].id--;\r\n                }\r\n                this.willAddQuestion.options.splice(index, 1);\r\n            }\r\n        },\r\n        changeTitle: function (value) {\r\n            this.title = value;\r\n        },\r\n        changeDescription: function (value) {\r\n            this.description = value;\r\n        },\r\n        openSetting: function () {\r\n            this.settingDialogVisible = true;\r\n        },\r\n        settingSuccess: function () {\r\n            this.settingDialogVisible = false;\r\n            this.$message({\r\n                type: 'success',\r\n                message: '设置已生效'\r\n            });\r\n        },\r\n        genCodeAgain() {\r\n            const formData = new FormData();\r\n            formData.append(\"qn_id\", this.$route.query.pid);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/qn/change/code',\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    if (res.data.status_code === 1) {\r\n                        this.linkShare = this.GLOBAL.baseUrl + \"/fill_test?mode=1&code=\" + res.data.code;\r\n\r\n                        if (this.qrcode == null) {\r\n                            this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n                                width: 200, //生成的二维码的宽度\r\n                                height: 200, //生成的二维码的高度\r\n                                colorDark: \"#000000\", // 生成的二维码的深色部分\r\n                                colorLight: \"#ffffff\", //生成二维码的浅色部分\r\n                                correctLevel: QRCode.CorrectLevel.H\r\n                            });\r\n                        }\r\n                        this.qrcode.clear();\r\n                        this.qrcode.makeCode(this.linkShare);\r\n                    } else {\r\n                        this.$message.error(\"请求失败！\");\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        share() {\r\n            this.publish();\r\n        },\r\n        publish() {\r\n            var formData = new FormData();\r\n            formData.append(\"survey_id\", this.$route.params.qnid);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/survey/api/share',\r\n                data: formData,\r\n            }).then(res => {\r\n                switch(res.data.status_code) {\r\n                    case 1:\r\n                        this.linkShare = 'http://localhost:8080' + '/fillQn/' + res.data.code;\r\n                        console.log(res.data.code);\r\n<<<<<<< HEAD\r\n                        this.publishDialogVisible = true;\r\n=======\r\n>>>>>>> 4e52abfafb4c4f48a571496024b39acda2802afe\r\n                        // if (this.qrcode == null) {\r\n                        //     this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n                        //         width: 200, //生成的二维码的宽度\r\n                        //         height: 200, //生成的二维码的高度\r\n                        //         colorDark: \"#000000\", // 生成的二维码的深色部分\r\n                        //         colorLight: \"#ffffff\", //生成二维码的浅色部分\r\n                        //         correctLevel: QRCode.CorrectLevel.H\r\n                        //     });\r\n                        // }\r\n                        // this.qrcode.clear();\r\n                        // this.qrcode.makeCode(this.linkShare);\r\n                        break;\r\n                    case 2:\r\n                        break;\r\n                    case 3:\r\n                        break;\r\n                    case 4:\r\n                        break;\r\n                }\r\n            })\r\n        },\r\n        savetoserver() {\r\n            if (this.questions.length === 0) {\r\n                this.$message.error(\"题目为空，无法发布！\");\r\n                return;\r\n            }\r\n\r\n            this.$confirm('确认发布？', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'success'\r\n            }).then(() => {\r\n                // let loadingIns = this.$loading({ fullscreen: true, text: '拼命加载中' });\r\n                // this.publishSuccess();\r\n                var new_questions = JSON.parse(JSON.stringify(this.questions));\r\n                console.log(new_questions);\r\n                console.log(this.isRandom);\r\n                // let url = '/sm/save/qn/deploy';\r\n                console.log(\"checkpoint 0\");\r\n                for (var i = 0; i < new_questions.length; i++) {\r\n                    console.log(\"checkpoint 0.5\");\r\n                    if (new_questions[i].type == 'checkbox') {\r\n                        console.log(\"checkpoint 0.7\");\r\n                        console.log(new_questions[i].refer);\r\n                        new_questions[i].refer = new_questions[i].refer.join('-<^-^>-');\r\n                        console.log(new_questions[i].refer);\r\n                    }\r\n                }\r\n                console.log(\"checkpoint 1\");\r\n                const userInfo = user.getters.getUser(user.state());\r\n                console.log(\"checkpoint 2\");\r\n                var param = {\r\n                    username: userInfo.user.username,\r\n                    title: this.title,\r\n                    finished_time: this.timeFrame,\r\n                    description: this.description,\r\n                    type: '3',\r\n                    max_recycling: this.max_recycling,\r\n                    qn_id: this.$route.params.qnid,\r\n                    is_random: this.isRandom,\r\n                    questions: new_questions\r\n                };\r\n                var paramer = JSON.stringify(param, { questions: 'brackets' });\r\n                console.log(\"paramer success\");\r\n                this.$axios({\r\n                    method: 'post',\r\n                    url: '/surveymanage/api/savesurvey',\r\n                    data: paramer,\r\n                })\r\n                    .then(res => {\r\n                        // loadingIns.close();\r\n                        if (res.data.status_code == 1) {\r\n                            this.$message.success(\"保存成功！\");\r\n                            // this.linkShare = this.GLOBAL.baseUrl + '/fill_test?mode=1&code=' + res.data.code;\r\n\r\n                            // if (this.qrcode == null) {\r\n                            //     this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n                            //         width: 200, //生成的二维码的宽度\r\n                            //         height: 200, //生成的二维码的高度\r\n                            //         colorDark: \"#000000\", // 生成的二维码的深色部分\r\n                            //         colorLight: \"#ffffff\", //生成二维码的浅色部分\r\n                            //         correctLevel: QRCode.CorrectLevel.H\r\n                            //     });\r\n                            // }\r\n                            this.qrcode.clear();\r\n                            this.qrcode.makeCode(this.linkShare);\r\n                        }\r\n                        else if (res.data.status_code == 2) {\r\n                            this.$message.error(\"题目为空，无法发布！\");\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            }).catch(err => {\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: '取消发布'\r\n                });\r\n                console.log(err);\r\n            });\r\n        },\r\n        saveinfo(tag) {\r\n            this.saveQnInfo(tag, \"2\");\r\n        },\r\n        save() {\r\n            this.saveinfo('save');\r\n        },\r\n        preview() {\r\n            this.saveinfo('preview');\r\n        },\r\n        up: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            if (index !== 0) {\r\n                // 非法移动\r\n                if (questions[index].last_question === index) {\r\n                    this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n                    return;\r\n                }\r\n                // 关联维护\r\n                let arr = this.sonGroup(index);\r\n                let willSubtract = [];\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        willSubtract.push(arr[j].id - 1);\r\n                    }\r\n                }\r\n                arr = this.sonGroup(index - 1);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        questions[arr[j].id - 1].last_question++;\r\n                    }\r\n                }\r\n                for (let i = 0; i < willSubtract.length; i++) {\r\n                    questions[willSubtract[i]].last_question--;\r\n                }\r\n                // 题序维护\r\n                questions[index].id--;\r\n                questions[index - 1].id++;\r\n                let temp = questions[index];\r\n                questions[index] = questions[index - 1];\r\n                questions[index - 1] = temp;\r\n                // 大纲维护\r\n                this.updateOutline(index, questions[index - 1].title);\r\n                this.updateOutline(index + 1, questions[index].title);\r\n            }\r\n        },\r\n        down: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            if (index !== questions.length - 1) {\r\n                // 非法移动\r\n                if (questions[index + 1].last_question === index + 1) {\r\n                    this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n                    return;\r\n                }\r\n                // 关联维护\r\n                let arr = this.sonGroup(index);\r\n                let willAdd = [];\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        willAdd.push(arr[j].id - 1);\r\n                    }\r\n                }\r\n                arr = this.sonGroup(index + 1);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        questions[arr[j].id - 1].last_question--;\r\n                    }\r\n                }\r\n                for (let i = 0; i < willAdd.length; i++) {\r\n                    questions[willAdd[i]].last_question++;\r\n                }\r\n                // 题序维护\r\n                questions[index].id++;\r\n                questions[index + 1].id--;\r\n                let temp = questions[index];\r\n                questions[index] = questions[index + 1];\r\n                questions[index + 1] = temp;\r\n                // 大纲维护\r\n                this.updateOutline(index + 1, questions[index].title);\r\n                this.updateOutline(index + 2, questions[index + 1].title);\r\n            }\r\n        },\r\n        del_pre: function (index) {\r\n            // 问题关联检查\r\n            if (this.sonGroup(index - 1).length !== 0) {\r\n                this.$confirm('该问题已被关联，删除此问题会删除所有相关关联信息', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.del_relation(index);\r\n                    this.del(index)\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '问题及关联信息已成功删除'\r\n                    });\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '取消删除题目及关联'\r\n                    });\r\n                });\r\n            } else {\r\n                this.$confirm('确认删除（不可恢复）？', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.del(index)\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '删除成功'\r\n                    });\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '取消删除'\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        del: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            let outline = this.outline;\r\n            // 维护关联关系\r\n            for (let i = index + 1; i < questions.length; i++) {\r\n                let arr = this.sonGroup(i);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        if (questions[arr[j].id - 1] !== index) {\r\n                            questions[arr[j].id - 1].last_question--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // 维护题序\r\n            for (let i = index + 1; i < questions.length; i++) {\r\n                questions[i].id--;\r\n            }\r\n            outline.splice(index, 1);\r\n            questions.splice(index, 1);\r\n            // 维护大纲\r\n            for (let num = index; num < outline.length; num++) {\r\n                this.updateOutline(num + 1, questions[num].title);\r\n            }\r\n        },\r\n        copy: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            // 大纲更新\r\n            this.updateOutline(this.outline.length + 1, questions[index].title);\r\n            // 问卷更新\r\n            let temp = this.deepClone(questions[index]);\r\n            temp.id = questions.length + 1;\r\n            temp.question_id = 0;\r\n            questions.push(temp);\r\n            this.$message.success(\"问题复制成功，已粘贴至问卷末尾\");\r\n        },\r\n        deepClone: function (initialObj) {\r\n            let obj = {};\r\n            try {\r\n                obj = JSON.parse(JSON.stringify(initialObj));\r\n                // eslint-disable-next-line no-empty\r\n            } finally { }\r\n            return obj;\r\n        },    // 深拷贝\r\n        updateOutline: function (id, label) {\r\n            if (label.length > 12) {\r\n                label = id + '. ' + label.substring(0, 11) + '...';\r\n            } else {\r\n                label = id + '. ' + label;\r\n            }\r\n            if (id <= this.questions.length) {\r\n                console.log(\"id:\");\r\n                console.log(id);\r\n                // this.outline[id - 1].id = id;\r\n                // this.outline[id - 1].label = label;\r\n            } else {\r\n                this.outline.push({\r\n                    id: id,\r\n                    label: label,\r\n                })\r\n            }\r\n        },\r\n        updateQuestions: function (start, end) {\r\n            let offset = end - start;\r\n            if (offset > 0) {\r\n                for (let i = 0; i < offset; i++) {\r\n                    this.down(start + i);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < offset * -1; i++) {\r\n                    this.up(start - i);\r\n                }\r\n            }\r\n        },  // good\r\n        toFillQn: function (value) {\r\n            this.$router.push({\r\n                name: 'FillQn',\r\n                query: {\r\n                    mode: value,\r\n                    title: this.title,\r\n                }\r\n            });\r\n        },\r\n        InitOutline() {\r\n            for (var i = 0; i < this.questions.length; i++) {\r\n                this.outline.push({\r\n                    id: this.questions[i].id,\r\n                    label: (i + 1) + \". \" + this.questions[i].title\r\n                })\r\n            }\r\n        },\r\n        copyToClip(message) {\r\n            var aux = document.createElement(\"input\");\r\n            aux.setAttribute(\"value\", this.linkShare);\r\n            document.body.appendChild(aux);\r\n            aux.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(aux);\r\n            if (message !== null) {\r\n                this.$message.success(\"复制成功\");\r\n            } else {\r\n                this.$message.error(\"复制失败\");\r\n            }\r\n        },\r\n        // 大纲拖拽处理函数(下3个)\r\n        handleDrop(draggingNode, dropNode, dropType) {\r\n            console.log('tree drop: ', draggingNode.key, dropNode.key, dropType);\r\n            if (this.isRightRelation(draggingNode.key, dropNode.key)) {\r\n                this.updateQuestions(draggingNode.key, dropNode.key);\r\n            } else {\r\n                this.outline.splice(0, this.outline.length);\r\n                this.InitOutline();\r\n                this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n            }\r\n        },\r\n        allowDrop(draggingNode, dropNode, type) {\r\n            if (draggingNode.key > dropNode.key) {\r\n                return type === 'prev';\r\n            } else {\r\n                return type === 'next';\r\n            }\r\n        },\r\n        isRightRelation: function (index1, index2) {\r\n            console.log(index1, index2);\r\n            index1--;\r\n            index2--;\r\n            let questions = this.questions;\r\n            if (index1 < index2) {\r\n                for (let i = index1 + 1; i <= index2; i++) {\r\n                    if (questions[i].last_question === index1 + 1) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            } else {\r\n                for (let i = index1 - 1; i >= index2; i--) {\r\n                    if (questions[index1].last_question === i + 1) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        },\r\n        idTitle: function (item) {\r\n            if (item.id === 0) {\r\n                return item.title;\r\n            } else {\r\n                return item.id + \". \" + item.title;\r\n            }\r\n        },\r\n        // relatedQs: function (item) {\r\n        //     return \"关联问题：\" + this.questions[item.last_question - 1].id + \".\" + this.questions[item.last_question - 1].title + \"(\" + this.questions[item.last_question - 1].options[item.last_option - 1].title + \")\";\r\n        // },\r\n        // 遍历得爸爸\r\n        fatherIndex: function (qs_id) {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].question_id === qs_id) {\r\n                    return i;\r\n                }\r\n            }\r\n        },\r\n        // 遍历得儿子\r\n        sonGroup: function (index) {\r\n            let arr = [];\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].last_question === this.questions[index].id) {\r\n                    arr.push(this.questions[i]);\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n        // 连带删除关联信息\r\n        del_relation: function (index) {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                // 保存加入后,下面需修改id为question_id\r\n                if (this.questions[i].last_question === this.questions[index - 1].id) {\r\n                    this.questions[i].last_option = 0;\r\n                    this.questions[i].last_question = 0;\r\n                    this.questions[i].is_shown = true;\r\n                }\r\n            }\r\n        },\r\n        // 关联信息存在性判断\r\n        isExistRelation: function () {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].last_question !== 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        // 监听：全局删除关联信息\r\n        closeGlobalLogic: function (state) {\r\n            if (!state && this.isExistRelation()) {\r\n                this.$confirm('检测到您已为题目添加关联，关闭设置将会删除所有关联信息，是否继续？', '提示', {\r\n                    confirmButtonText: '确认',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.deleteGlobalRelation();\r\n                    this.$message.info(\"关联信息已全部删除\");\r\n                }).catch(() => {\r\n                    this.isLogic = true;\r\n                    this.$message.info(\"取消操作\");\r\n                });\r\n            }\r\n        },\r\n        // 删除全局关联信息\r\n        deleteGlobalRelation: function () {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                this.questions[i].last_question = 0;\r\n                this.questions[i].last_option = 0;\r\n                this.questions[i].is_shown = true;\r\n            }\r\n        },\r\n        fetchQuestions() {\r\n            // 假设从后端获取问题数据的过程\r\n            const formData = new FormData();\r\n            // formData.append(\"survey_keyword\", this.loginForm.user);\r\n            formData.append(\"survey_id\", this.$route.params.qnid);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/question/api/listquestion',\r\n                data: formData,\r\n            }).then(res => {\r\n                switch (res.data.status_code) {\r\n                    case 1:\r\n                        this.questions = JSON.parse(res.data.data);\r\n                        this.title = res.data.title;\r\n                        this.description = res.data.description;\r\n                        // for (var i = 0; i < this.questionnaires.length; i++) {\r\n                        // if (this.questionnaires[i].questionType == '1')\r\n                        //     this.questionnaires[i].questionType = '普通问卷'\r\n                        // else if (this.questionnaires[i].questionType == '2')\r\n                        //     this.questionnaires[i].questionType = '投票问卷'\r\n                        // else if (this.questionnaires[i].questionType == '3')\r\n                        //     this.questionnaires[i].questionType = '考试问卷'\r\n                        // else\r\n                        //     this.questionnaires[i].questionType = '报名问卷'\r\n                        // }\r\n                        console.log(this.questions);\r\n                        console.log(\"success on fetching questions\");\r\n                        break;\r\n                    case 2:\r\n                        console.log(\"error 2\");\r\n                        break;\r\n                    case 3:\r\n                        console.log(\"error 3\");\r\n                        break;\r\n                    case 4:\r\n                        console.log(\"error 4\");\r\n                        break;\r\n                    case 5:\r\n                        console.log(\"error 5\");\r\n                        break;\r\n                    case -1:\r\n                        console.log(\"error -1\");\r\n                        break;\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        },\r\n    },\r\n    computed: {\r\n        questionsFilter: function () {\r\n            let questions = this.questions;\r\n            let arr = [{\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '不设置关联题目',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 0 // 选项id\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 5, // 最大评分\r\n            }];\r\n            for (let i = 0; i < this.logicIndex; i++) {\r\n                if (questions[i].type === \"radio\" || questions[i].type === \"checkbox\") {\r\n                    arr.push(questions[i]);\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n    },\r\n    created() {\r\n        //this.getQnDataSelf();\r\n        this.fetchQuestions();\r\n    },\r\n    mounted() {\r\n        //this.timer = setInterval(this.autoSave, 60000);\r\n    },\r\n    //beforeDestroy() {\r\n    //clearInterval(this.timer);\r\n    //},\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form {\r\n    position: relative;\r\n}\r\n\r\n.qnBoard {\r\n    display: flex;\r\n    position: relative;\r\n    width: 190px;\r\n    max-height: 1000px;\r\n    left: 20px;\r\n    top: 80px;\r\n    background-color: white;\r\n}\r\n\r\n.qnMain {\r\n    display: flex;\r\n    position: absolute;\r\n    left: 15%;\r\n    width: 1300px;\r\n    height: 700px;\r\n    top: 80px;\r\n    background: #FFFFFF;\r\n}\r\n\r\n.qnBoard .demo-tabs>.el-tabs__content {\r\n    padding: px;\r\n    color: #4fef0f;\r\n    font-size: 32px;\r\n    font-weight: 600;\r\n}\r\n\r\n.qnBoard .demo-tabs .custom-tabs-label {\r\n    font-size: 20px;\r\n}\r\n\r\n.form .linkDialog {\r\n    text-align: left;\r\n}\r\n\r\n.form .edit {\r\n    margin-top: 0;\r\n    overflow: auto;\r\n    height: 550px;\r\n}\r\n\r\n.form .outline {\r\n    overflow: auto;\r\n    height: 550px;\r\n}\r\n\r\n.form .ques-type {\r\n    padding: 15px 0;\r\n    font-size: 16px;\r\n    border-bottom: dashed #e3e3e3 1px;\r\n}\r\n\r\n.form .type-icon {\r\n    color: #1687fd;\r\n    display: inline-block;\r\n}\r\n\r\n.form .type-icon:hover {\r\n    color: #409EFF;\r\n    cursor: pointer;\r\n}\r\n\r\n.form .el-tabs__nav-scroll {\r\n    text-align: center;\r\n    height: 60px;\r\n    margin: 0 60px;\r\n}\r\n\r\n.form .el-tabs__item {\r\n    font-weight: bold;\r\n    padding: 0 20px;\r\n    height: 60px;\r\n    box-sizing: border-box;\r\n    line-height: 60px;\r\n    display: inline-block;\r\n    list-style: none;\r\n    font-size: 16px;\r\n    color: black;\r\n    position: relative;\r\n}\r\n\r\n.form .el-tabs__header {\r\n    margin: 0;\r\n}\r\n\r\n.form .el-tree-node__content {\r\n    padding-left: 10px !important;\r\n    height: 40px;\r\n}\r\n\r\n.form .qnMain .ques {\r\n    width: 96%;\r\n    margin-left: 2%;\r\n    /* margin-top: 50px; */\r\n    margin-bottom: 2%;\r\n}\r\n\r\n.form .qnMain .ques .title {\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    padding-top: 10px;\r\n    padding-bottom: 26px;\r\n}\r\n\r\n.form .qnMain .ques .description {\r\n    text-align: left;\r\n    font-size: 18px;\r\n    padding-bottom: 30px;\r\n    color: black;\r\n    line-height: 30px;\r\n}\r\n\r\n.form .qnMain .ques-block {\r\n    margin-bottom: 10px;\r\n    padding-bottom: 10px;\r\n    border: solid #e3e3e3 1px;\r\n}\r\n\r\n.form .qnMain .ques-block:hover {\r\n    background: #f5f5f5;\r\n    transition: .3s;\r\n}\r\n\r\n.form .qnMain .ques-block .must {\r\n    font-weight: normal;\r\n    color: crimson;\r\n}\r\n\r\n.form .qnMain .block-title {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 20px 10px 10px;\r\n    font-weight: bold;\r\n}\r\n\r\n.form .qnMain .block-description {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 5px;\r\n    padding-bottom: 15px;\r\n    padding-left: 10px;\r\n    color: #969696;\r\n}\r\n\r\n.form .qnMain .block-choice {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 5px 10px 10px;\r\n}\r\n\r\n.form .el-button-group>.el-button:first-child {\r\n    border-radius: 0 0 0 8px;\r\n}\r\n\r\n.form .el-button-group>.el-button:last-child {\r\n    border-radius: 0 0 8px 0;\r\n}\r\n\r\n.form .block-button .el-button {\r\n    background: #b9b9b9;\r\n    border: transparent;\r\n    right: 15px;\r\n}\r\n\r\n.form .block-button .el-button:hover {\r\n    background: #989898;\r\n    border: transparent;\r\n}\r\n\r\n.form .bt {\r\n    color: white;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n}\r\n\r\n.form .block-choice .el-textarea__inner {\r\n    max-height: 100px;\r\n}\r\n\r\n.form .dialog {\r\n    text-align: left;\r\n    font-size: large;\r\n}\r\n\r\n.form .addOptionButton {\r\n    display: inline-block;\r\n    margin-left: 100px;\r\n}\r\n\r\n.form .deleteOptionButton {\r\n    margin-left: 20px;\r\n}\r\n\r\n.form .logic-description {\r\n    margin-top: -15px;\r\n    margin-bottom: 30px;\r\n    text-align: left;\r\n    padding-left: 6px;\r\n    font-size: 14px;\r\n    color: #aaaaaa;\r\n}\r\n\r\n.form .important {\r\n    color: crimson;\r\n}\r\n\r\n.form .logic-title {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    padding-left: 12px;\r\n    padding-bottom: 30px;\r\n}\r\n\r\n.form .logic-bt {\r\n    text-align: center;\r\n}\r\n\r\n.form .logic-form .el-input--suffix .el-input__inner {\r\n    width: 620px;\r\n}\r\n\r\n.form .sideTitle {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 10px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.form .easyChoose {\r\n    font-size: medium;\r\n    margin-top: 10px;\r\n}\r\n\r\n.form .chooseLabel {\r\n    margin-right: 10px;\r\n    margin-left: 5px;\r\n}\r\n\r\n.form .setting-item {\r\n    text-align: left;\r\n}\r\n\r\n.form .setting-bt {\r\n    margin-top: 28px;\r\n}\r\n\r\n.form .settingDialog .el-dialog__header {\r\n    text-align: left;\r\n}\r\n\r\n.form .settingDialog .item-title {\r\n    padding-right: 20px;\r\n}\r\n\r\n.form .logic-info {\r\n    color: #aaaaaa;\r\n    padding-top: 2px;\r\n    padding-left: 12px;\r\n    padding-bottom: 25px;\r\n}\r\n\r\n.form .block-relation {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #1687fd;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}