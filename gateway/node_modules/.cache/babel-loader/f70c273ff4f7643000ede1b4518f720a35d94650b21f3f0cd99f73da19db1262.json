{"ast":null,"code":"// import axios from 'axios';\n\nexport default {\n  props: {\n    questionnaireName: String,\n    questionnaireId: String,\n    isPublished: Boolean,\n    answersCount: Number,\n    creationDate: String,\n    isFavorited: Boolean,\n    isPaused: Boolean\n  },\n  // data(){\n  //   return{\n  //     localQuestionnaireName: this.questionnaireName,\n  //     localQuestionnaireId: this.questionnaireId,\n  //     localIsPublished: this.isPublished,\n  //     localAnswersCount: this.answersCount,\n  //     localCreationDate: this.creationDate,\n  //     localIsFavorited: this.isFavorited,\n  //     localIsPaused: this.isPaused,\n  //   };\n  // },\n  methods: {\n    edit() {\n      // 编辑操作\n      //this.questionnaireName = \"hhh\";\n      this.$emit('update:questionaireName', \"hhhhh\");\n      //  console.log(this.questionnaireName);\n    },\n    preview() {\n      // 预览操作\n    },\n    share() {\n      // 分享操作\n    },\n    statistics() {\n      // 统计操作\n    },\n    clear() {\n      // 清空操作\n    },\n    exportData() {\n      // 导出操作\n    },\n    pause() {\n      // 暂停操作\n      // this.localIsPaused = !this.localIsPaused;\n      // // this.$emit('update',!this.isPaused);\n      //this.isPaused = !this.isPaused;\n      //this.$emit('update',!this.isPaused);\n    },\n    copy() {\n      // 复制操作\n    },\n    favorite() {\n      // 收藏操作\n      this.$emit('update', !this.isFavorited);\n    },\n    remove() {\n      //删除操作\n    }\n    // updateData() {\n    //   // 当你需要通知父组件更新数据库时\n    //   this.$emit('update-data', {\n    //     questionnaireName: this.localQuestionnaireName,\n    //     questionnaireId: this.localQuestionnaireId,\n    //     isPublished: this.localIsPublished,\n    //     answersCount: this.localAnswersCount,\n    //     creationDate: this.localCreationDate,\n    //     isFavorited: this.localIsFavorited,\n    //     isPaused: this.localIsPaused,\n    //   });\n    // },\n  },\n  computed: {\n    publishedImagePath() {\n      return this.isPublished ? require('../../assets/images/Published.png') : require('../../assets/images/Unpublished.png');\n    }\n  }\n};","map":{"version":3,"names":["props","questionnaireName","String","questionnaireId","isPublished","Boolean","answersCount","Number","creationDate","isFavorited","isPaused","methods","edit","$emit","preview","share","statistics","clear","exportData","pause","copy","favorite","remove","computed","publishedImagePath","require"],"sources":["E:\\mytest\\src\\views\\qn-manage\\qnInstance.vue"],"sourcesContent":["<template>\r\n    <div class=\"questionnaire\">\r\n      <!-- 第一行 -->\r\n      <div class=\"questionnaire-info\">\r\n        <div class=\"info-left\">\r\n          <span>{{ questionnaireName }}</span>\r\n        </div>\r\n        <span>id: {{ questionnaireId }}</span>\r\n        <!-- <span>{{ isPublished ? '已发布' : '未发布' }}</span> -->\r\n        <span :class=\"{'icon-published': isPublished, 'icon-unpublished': !isPublished}\" :style=\"{ color: isPublished ? 'green' : 'red' }\">\r\n          <img :src=\"publishedImagePath\" alt=\"release status\" class=\"icon\">\r\n          {{ isPublished ? '已发布' : '未发布' }}\r\n        </span>\r\n        <!-- <span>答卷: {{ answersCount }}</span> -->\r\n        <span>答卷: <span :style=\"{ color: answersCount > 0 ? 'blue' : '' }\">{{ answersCount }}</span></span>\r\n        <span>创建时间：{{ creationDate }}</span>\r\n      </div>\r\n      <!-- 分隔线 -->\r\n      <div class=\"separator\"></div>\r\n      <!-- 第二行按钮 -->\r\n      <div class=\"questionnaire-actions\">\r\n        <div class=\"button-container\">\r\n          <div class=\"leftPart\">\r\n            <button @click=\"edit\" class=\"leftButton\">\r\n              <img src=\"../../../src/assets/images/Edit.png\" alt=\"edit-icon\" class=\"icon\">\r\n              编辑\r\n            </button>\r\n\r\n            <button @click=\"preview\" class=\"leftButton\">\r\n              <img src=\"../../../src/assets/images/Preview.png\" alt=\"preview-icon\" class=\"icon\">\r\n              预览\r\n            </button>\r\n\r\n            <button @click=\"share\" class=\"leftButton\">\r\n              <img src=\"../../../src/assets/images/Share.png\" alt=\"share-icon\" class=\"icon\">\r\n              分享\r\n            </button>\r\n\r\n            <button @click=\"statistics\" class=\"leftButton\">\r\n              <img src=\"../../../src/assets/images/Stats.png\" alt=\"statistics-icon\" class=\"icon\">\r\n              统计\r\n            </button>\r\n\r\n            <button @click=\"clear\" class=\"leftButton\">\r\n              <img src=\"../../../src/assets/images/ClearAll.png\" alt=\"clear-icon\" class=\"icon\">\r\n              清空\r\n            </button>\r\n\r\n            <button @click=\"exportData\" class=\"leftButton\">\r\n              <img src=\"../../../src/assets/images/ExportData.png\" alt=\"exportData-icon\" class=\"icon\">\r\n              导出\r\n            </button>\r\n          </div>\r\n\r\n          <button @click=\"pause\" class=\"rightButton\">\r\n            <img :src=\"isPaused ? require('../../../src/assets/images/Start.png') : require('../../../src/assets/images/PauseRed.png')\" alt=\"pause-icon\" class=\"icon\">\r\n            <span :class=\"{'text-red': !isPaused, 'text-black': isPaused}\">{{ isPaused ? '继续' : '暂停' }}</span>\r\n          </button>\r\n\r\n          <button @click=\"copy\" class=\"rightButton\">\r\n            <img src=\"../../../src/assets/images/Copy.png\" alt=\"copy-icon\" class=\"icon\">\r\n            复制\r\n          </button>\r\n\r\n          <button @click=\"favorite\" class=\"rightButton\">\r\n            <img :src=\"isFavorited ? require('../../../src/assets/images/Like.png') : require('../../../src/assets/images/LightLike.png')\" alt=\"favorite-icon\" class=\"icon\">\r\n            {{ isFavorited ? '已收藏' : '收藏' }}\r\n          </button>\r\n          \r\n          <button @click=\"remove\" class=\"rightButton\">\r\n            <img src=\"../../../src/assets/images/Delete.png\" alt=\"remove-icon\" class=\"icon\">\r\n            删除\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  // import axios from 'axios';\r\n\r\n  export default {\r\n    props: {\r\n      questionnaireName: String,\r\n      questionnaireId: String,\r\n      isPublished: Boolean, \r\n      answersCount: Number,\r\n      creationDate: String,\r\n      isFavorited: Boolean,\r\n      isPaused: Boolean,\r\n    },\r\n    // data(){\r\n    //   return{\r\n    //     localQuestionnaireName: this.questionnaireName,\r\n    //     localQuestionnaireId: this.questionnaireId,\r\n    //     localIsPublished: this.isPublished,\r\n    //     localAnswersCount: this.answersCount,\r\n    //     localCreationDate: this.creationDate,\r\n    //     localIsFavorited: this.isFavorited,\r\n    //     localIsPaused: this.isPaused,\r\n    //   };\r\n    // },\r\n    methods: {\r\n      edit() {\r\n        // 编辑操作\r\n         //this.questionnaireName = \"hhh\";\r\n         this.$emit('update:questionaireName',\"hhhhh\");\r\n        //  console.log(this.questionnaireName);\r\n      },\r\n      preview() {\r\n        // 预览操作\r\n      },\r\n      share() {\r\n        // 分享操作\r\n      },\r\n      statistics() {\r\n        // 统计操作\r\n      },\r\n      clear() {\r\n        // 清空操作\r\n      },\r\n      exportData() {\r\n        // 导出操作\r\n      },\r\n      pause() {\r\n        // 暂停操作\r\n        // this.localIsPaused = !this.localIsPaused;\r\n        // // this.$emit('update',!this.isPaused);\r\n        //this.isPaused = !this.isPaused;\r\n        //this.$emit('update',!this.isPaused);\r\n      },\r\n      copy() {\r\n        // 复制操作\r\n      },\r\n      favorite() {\r\n        // 收藏操作\r\n        this.$emit('update',!this.isFavorited);\r\n      },\r\n      remove() {\r\n        //删除操作\r\n      },\r\n      // updateData() {\r\n      //   // 当你需要通知父组件更新数据库时\r\n      //   this.$emit('update-data', {\r\n      //     questionnaireName: this.localQuestionnaireName,\r\n      //     questionnaireId: this.localQuestionnaireId,\r\n      //     isPublished: this.localIsPublished,\r\n      //     answersCount: this.localAnswersCount,\r\n      //     creationDate: this.localCreationDate,\r\n      //     isFavorited: this.localIsFavorited,\r\n      //     isPaused: this.localIsPaused,\r\n      //   });\r\n      // },\r\n    },\r\n    computed: {\r\n      publishedImagePath() {\r\n        return this.isPublished\r\n          ? require('../../assets/images/Published.png')\r\n          : require('../../assets/images/Unpublished.png');\r\n      }\r\n    },\r\n  };\r\n\r\n  </script>\r\n\r\n  <style scoped>\r\n  .questionnaire {\r\n    background-color: #ffffff;\r\n    padding: 40px;\r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n    margin-left: 28%;\r\n    margin-right: -320px;\r\n    border-radius: 5px; /* 添加边框圆角 */\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.05); /* 添加阴影 */\r\n    transition: box-shadow 0.3s ease; /* 添加过渡效果 */\r\n    position: relative;\r\n    top: 120px;\r\n  }\r\n\r\n  .separator {\r\n    height: 1px;\r\n    background-color: #d3d3d3;\r\n    margin: 25px 0;\r\n  }\r\n\r\n  .questionnaire-info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 20px;\r\n    align-items: center; /* 确保内部元素垂直居中 */\r\n    font-size: small;\r\n  }\r\n\r\n  .info-left {\r\n    margin-right: 700px;\r\n    font-size: x-large;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .questionnaire-actions button {\r\n    margin-right: 15px;\r\n    background-color: transparent;\r\n    border: 0px;\r\n    border-radius: 3px;\r\n    padding: 15px 20px;\r\n    transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;\r\n    cursor: pointer; /* 鼠标悬停时变为手形图标 */\r\n  }\r\n\r\n  .questionnaire-actions button:hover {\r\n    /*background-color: #cecfd0; /* 当鼠标悬停时改变按钮的背景色 */\r\n    color: rgb(15, 107, 255); /* 当鼠标悬停时改变按钮的文字颜色 */\r\n  }\r\n\r\n  .icon {\r\n    width: 15px;\r\n    height: 15px;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .button-container {\r\n    display: flex;\r\n  }\r\n\r\n  .leftPart {\r\n    margin-right: 100px;\r\n  }\r\n\r\n  .leftButton {\r\n    font-size: 15px;\r\n  }\r\n\r\n  .rightButton {\r\n    font-size: 15px;\r\n  }\r\n\r\n  .text-black {\r\n    color: black;\r\n    font-size: 15px;\r\n  }\r\n\r\n  .text-red {\r\n    color: red;\r\n    font-size: 15px;\r\n  }\r\n\r\n  .text-red:hover {\r\n    color: rgb(15, 107, 255); /* 当鼠标悬停时改变按钮的文字颜色 */\r\n  }\r\n\r\n  .text-black:hover {\r\n    color: rgb(15, 107, 255); /* 当鼠标悬停时改变按钮的文字颜色 */\r\n  }\r\n\r\n  </style>"],"mappings":"AA+EE;;AAEA,eAAe;EACbA,KAAK,EAAE;IACLC,iBAAiB,EAAEC,MAAM;IACzBC,eAAe,EAAED,MAAM;IACvBE,WAAW,EAAEC,OAAO;IACpBC,YAAY,EAAEC,MAAM;IACpBC,YAAY,EAAEN,MAAM;IACpBO,WAAW,EAAEJ,OAAO;IACpBK,QAAQ,EAAEL;EACZ,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAM,OAAO,EAAE;IACPC,IAAIA,CAAA,EAAG;MACL;MACC;MACA,IAAI,CAACC,KAAK,CAAC,yBAAyB,EAAC,OAAO,CAAC;MAC9C;IACF,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR;IAAA,CACD;IACDC,KAAKA,CAAA,EAAG;MACN;IAAA,CACD;IACDC,UAAUA,CAAA,EAAG;MACX;IAAA,CACD;IACDC,KAAKA,CAAA,EAAG;MACN;IAAA,CACD;IACDC,UAAUA,CAAA,EAAG;MACX;IAAA,CACD;IACDC,KAAKA,CAAA,EAAG;MACN;MACA;MACA;MACA;MACA;IAAA,CACD;IACDC,IAAIA,CAAA,EAAG;MACL;IAAA,CACD;IACDC,QAAQA,CAAA,EAAG;MACT;MACA,IAAI,CAACR,KAAK,CAAC,QAAQ,EAAC,CAAC,IAAI,CAACJ,WAAW,CAAC;IACxC,CAAC;IACDa,MAAMA,CAAA,EAAG;MACP;IAAA;IAEF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACpB,WAAU,GAClBqB,OAAO,CAAC,mCAAmC,IAC3CA,OAAO,CAAC,qCAAqC,CAAC;IACpD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}