{"ast":null,"code":"// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport GlobeModel from './GlobeModel';\nimport GlobeView from './GlobeView';\nimport globeCreator from '../../coord/globeCreator';\nexport function install(registers) {\n  registers.registerComponentModel(GlobeModel);\n  registers.registerComponentView(GlobeView);\n  registers.registerCoordinateSystem('globe', globeCreator);\n  registers.registerAction({\n    type: 'globeChangeCamera',\n    event: 'globecamerachanged',\n    update: 'series:updateCamera'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'globe',\n      query: payload\n    }, function (componentModel) {\n      componentModel.setView(payload);\n    });\n  });\n  registers.registerAction({\n    type: 'globeUpdateDisplacment',\n    event: 'globedisplacementupdated',\n    update: 'update'\n  }, function (payload, ecModel) {// Noop\n  });\n}","map":{"version":3,"names":["GlobeModel","GlobeView","globeCreator","install","registers","registerComponentModel","registerComponentView","registerCoordinateSystem","registerAction","type","event","update","payload","ecModel","eachComponent","mainType","query","componentModel","setView"],"sources":["E:/mytest/node_modules/echarts-gl/lib/component/globe/install.js"],"sourcesContent":["// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport GlobeModel from './GlobeModel';\nimport GlobeView from './GlobeView';\nimport globeCreator from '../../coord/globeCreator';\nexport function install(registers) {\n  registers.registerComponentModel(GlobeModel);\n  registers.registerComponentView(GlobeView);\n  registers.registerCoordinateSystem('globe', globeCreator);\n  registers.registerAction({\n    type: 'globeChangeCamera',\n    event: 'globecamerachanged',\n    update: 'series:updateCamera'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'globe',\n      query: payload\n    }, function (componentModel) {\n      componentModel.setView(payload);\n    });\n  });\n  registers.registerAction({\n    type: 'globeUpdateDisplacment',\n    event: 'globedisplacementupdated',\n    update: 'update'\n  }, function (payload, ecModel) {// Noop\n  });\n}"],"mappings":"AAAA;AACA,OAAO,kBAAkB;AACzB,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAO,SAASC,OAAOA,CAACC,SAAS,EAAE;EACjCA,SAAS,CAACC,sBAAsB,CAACL,UAAU,CAAC;EAC5CI,SAAS,CAACE,qBAAqB,CAACL,SAAS,CAAC;EAC1CG,SAAS,CAACG,wBAAwB,CAAC,OAAO,EAAEL,YAAY,CAAC;EACzDE,SAAS,CAACI,cAAc,CAAC;IACvBC,IAAI,EAAE,mBAAmB;IACzBC,KAAK,EAAE,oBAAoB;IAC3BC,MAAM,EAAE;EACV,CAAC,EAAE,UAAUC,OAAO,EAAEC,OAAO,EAAE;IAC7BA,OAAO,CAACC,aAAa,CAAC;MACpBC,QAAQ,EAAE,OAAO;MACjBC,KAAK,EAAEJ;IACT,CAAC,EAAE,UAAUK,cAAc,EAAE;MAC3BA,cAAc,CAACC,OAAO,CAACN,OAAO,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC,CAAC;EACFR,SAAS,CAACI,cAAc,CAAC;IACvBC,IAAI,EAAE,wBAAwB;IAC9BC,KAAK,EAAE,0BAA0B;IACjCC,MAAM,EAAE;EACV,CAAC,EAAE,UAAUC,OAAO,EAAEC,OAAO,EAAE,CAAC;EAAA,CAC/B,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}