{"ast":null,"code":"// import user from \"@/storage/user\";\n\nexport default {\n  name: \"FinishTest\",\n  props: {\n    quesStorage: []\n  },\n  data() {\n    return {\n      //rootUrl: this.GLOBAL.baseUrl,\n\n      hoverColor: {\n        \"--hcolor\": \"red\"\n      },\n      // questions: [],\n      // answers: [],\n      totalScore: null,\n      actualScore: null,\n      questions: [{\n        id: 1,\n        type: 'name',\n        title: '姓名',\n        must: true,\n        // 是否必填\n        description: '',\n        // 问题描述\n        options: [{\n          title: '',\n          // 选项标题\n          id: 0 // 选项id\n        }],\n        row: 1,\n        // 填空区域行数\n        refer: '',\n        // 参考答案\n        point: 0 // 分值\n      }, {\n        id: 2,\n        type: 'stuId',\n        title: '学号',\n        must: true,\n        // 是否必填\n        description: '',\n        // 问题描述\n        options: [{\n          title: '',\n          // 选项标题\n          id: 0 // 选项id\n        }],\n        row: 1,\n        // 填空区域行数\n        refer: '',\n        // 参考答案\n        point: 0 // 分值\n      }, {\n        id: 3,\n        type: 'class',\n        title: '班级',\n        must: true,\n        // 是否必填\n        description: '',\n        // 问题描述\n        options: [{\n          title: '',\n          // 选项标题\n          id: 0 // 选项id\n        }],\n        row: 1,\n        // 填空区域行数\n        refer: '',\n        // 参考答案\n        point: 0 // 分值\n      }, {\n        id: 4,\n        type: 'school',\n        title: '学校',\n        must: true,\n        // 是否必填\n        description: '',\n        // 问题描述\n        options: [{\n          title: '',\n          // 选项标题\n          id: 0 // 选项id\n        }],\n        row: 1,\n        // 填空区域行数\n        refer: '',\n        // 参考答案\n        point: 0 // 分值\n      }, {\n        id: 5,\n        type: 'radio',\n        title: '这是一个什么问卷？',\n        must: true,\n        // 是否必填\n        description: '请谨慎做答',\n        // 问题描述\n        options: [{\n          title: '考试问卷',\n          // 选项标题\n          id: 1 // 选项id\n        }, {\n          title: '调查问卷',\n          // 选项标题\n          id: 2 // 选项id\n        }],\n        row: 0,\n        // 填空区域行数\n        refer: '考试问卷',\n        // 参考答案\n        point: 10 // 分值\n      }, {\n        id: 6,\n        type: 'checkbox',\n        title: '软工助教都有谁？',\n        must: false,\n        // 是否必填\n        description: '',\n        // 问题描述\n        options: [{\n          title: 'ZYH',\n          // 选项标题\n          id: 1 // 选项id\n        }, {\n          title: 'LKW',\n          // 选项标题\n          id: 2 // 选项id\n        }, {\n          title: 'MHY',\n          // 选项标题\n          id: 3 // 选项id\n        }, {\n          title: 'HZH',\n          // 选项标题\n          id: 4 // 选项id\n        }],\n        row: 0,\n        // 填空区域行数\n        refer: '[\"LKW\", \"MHY\"]',\n        // 参考答案\n        point: 20 // 分值\n      }, {\n        id: 7,\n        type: 'text',\n        title: '小学期累不累？',\n        must: false,\n        // 是否必填\n        description: '请谨慎考虑做答',\n        // 问题描述\n        options: [{\n          title: '',\n          // 选项标题\n          id: 0 // 选项id\n        }],\n        row: 5,\n        // 填空区域行数\n        refer: '',\n        // 参考答案\n        point: 30 // 分值\n      }, {\n        id: 8,\n        type: 'judge',\n        title: '从来没有加过班',\n        must: true,\n        // 是否必填\n        description: '请谨慎考虑做答',\n        // 问题描述\n        options: [{\n          title: '对',\n          // 选项标题\n          id: 1 // 选项id\n        }, {\n          title: '错',\n          // 选项标题\n          id: 2 // 选项id\n        }],\n        row: 0,\n        // 填空区域行数\n        refer: '对',\n        // 参考答案\n        point: 50 // 分值\n      }],\n      answers: [{\n        question_id: '1',\n        type: 'name',\n        ans: 'Glj',\n        ansList: [],\n        correct: null\n      }, {\n        question_id: '2',\n        type: 'stuId',\n        ans: '22371514',\n        ansList: [],\n        correct: null\n      }, {\n        question_id: '3',\n        type: 'class',\n        ans: '222114',\n        ansList: [],\n        correct: null\n      }, {\n        question_id: '4',\n        type: 'school',\n        ans: '北航',\n        ansList: [],\n        correct: null\n      }, {\n        question_id: '5',\n        type: 'radio',\n        ans: '调查问卷',\n        ansList: [],\n        correct: null\n      }, {\n        question_id: '6',\n        type: 'checkbox',\n        ans: null,\n        ansList: [\"LKW\", \"MHY\"],\n        correct: null\n      }, {\n        question_id: '7',\n        type: 'text',\n        ans: '累死啦',\n        ansList: [],\n        correct: null\n      }, {\n        question_id: '8',\n        type: 'judge',\n        ans: '对',\n        ansList: [],\n        correct: null\n      }]\n    };\n  },\n  methods: {\n    isInfo: function (item) {\n      return item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school';\n    },\n    isRight: function (item) {\n      return this.answers[item.id - 1].correct;\n    },\n    judge() {\n      // 判卷\n      let questions = this.questions;\n      let answers = this.answers;\n      let total = 0;\n      let score = 0;\n      for (let i = 0; i < questions.length; i++) {\n        // 略过信息和主观题\n        if (this.isInfo(questions[i])) {\n          continue;\n        }\n        // 统计\n        if (questions[i].type === 'radio' || questions[i].type === 'judge') {\n          console.log(\"refer:\", questions[i].refer);\n          console.log(\"ans:\", answers[i].ans);\n          if (questions[i].refer === answers[i].ans) {\n            answers[i].correct = true;\n            score += questions[i].point;\n          }\n          total += questions[i].point;\n        }\n        if (questions[i].type === 'checkbox') {\n          // 预处理\n          questions[i].refer = questions[i].refer.replace(/-<\\^-\\^>-/g, \",\");\n          console.log(\"run\");\n          console.log(\"refer:\", questions[i].refer);\n          // let reference = questions[i].refer.substring(1, questions[i].refer.length-1).replace(/\"/g, \"\").split(', ');\n          if (questions[i].refer === answers[i].ansList.join(\",\")) {\n            answers[i].correct = true;\n            score += questions[i].point;\n          }\n          total += questions[i].point;\n        } else if (questions[i].type === 'text') {\n          if (questions[i].refer === answers[i].ans) {\n            answers[i].correct = true;\n            score += questions[i].point;\n          }\n          total += questions[i].point;\n        }\n      }\n      this.actualScore = score;\n      this.totalScore = total;\n    }\n  },\n  created() {\n    const formData = new FormData();\n    formData.append(\"code\", this.$route.params.code);\n    this.$axios({\n      method: 'post',\n      url: '/question/api/listquestionalt',\n      data: formData\n    }).then(res => {\n      switch (res.data.status_code) {\n        case 1:\n          this.title = res.data.title;\n          this.description = res.data.description;\n          this.questions = JSON.parse(res.data.data);\n          console.log(res.data.has_answers);\n          if (res.data.has_answers) {\n            console.log(\"enter 1\");\n            console.log(res.data.answers);\n            this.answers = JSON.parse(res.data.answers);\n            console.log(\"all ans:\", this.answers);\n            console.log(\"ans length:\", this.answers.length);\n            console.log(\"ans1:\", this.answers[0]);\n            console.log(\"answer[0].ans:\", this.answers[0].ans);\n          } else {\n            console.log(\"enter 2\");\n            this.answers = this.questions.map(question => ({\n              id: question.id,\n              type: question.type,\n              ans: '',\n              ansList: []\n            }));\n          }\n          // for (var i = 0; i < this.questionnaires.length; i++) {\n          // if (this.questionnaires[i].questionType == '1')\n          //     this.questionnaires[i].questionType = '普通问卷'\n          // else if (this.questionnaires[i].questionType == '2')\n          //     this.questionnaires[i].questionType = '投票问卷'\n          // else if (this.questionnaires[i].questionType == '3')\n          //     this.questionnaires[i].questionType = '考试问卷'\n          // else\n          //     this.questionnaires[i].questionType = '报名问卷'\n          // }\n          console.log(this.title);\n          console.log(this.description);\n          console.log(this.questions);\n          console.log(\"answers init:\");\n          console.log(this.answers);\n          console.log(\"success on fetching questions\");\n          this.judge();\n          break;\n        case 2:\n          console.log(\"error 2\");\n          break;\n        case 3:\n          console.log(\"error 3\");\n          break;\n        case 4:\n          console.log(\"error 4\");\n          break;\n        case 5:\n          console.log(\"error 5\");\n          break;\n        case -1:\n          break;\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    // var data = [];\n    // this.questions = this.quesStorage;\n    // const userInfo = user.getters.getUser(user.state());\n    // const formData = new FormData();\n    // formData.append(\"code\", this.$route.query.code);\n    // formData.append(\"username\", userInfo.user.username);\n    // this.$axios({\n    //   method: 'post',\n    //   url: '/sm/get/submit_answers/code',\n    //   data: formData,\n    // })\n    // .then(res => {\n    //   if (res.data.status_code === 1) {\n    //     data = res.data.answers;\n    //     this.questions = res.data.questions;\n\n    //     for (var m=0; m<this.questions.length; m++) {\n    //       if (this.questions[m].type === 'checkbox') {\n    //         this.questions[m].refer = this.questions[m].refer.split('-<^-^>-');\n    //       }\n    //     }\n\n    //     this.answers = [];\n    //     //建立答案框架\n    //     for (var i=0; i<this.questions.length; i++) {\n    //       this.answers.push({\n    //         question_id: this.questions[i].question_id,\n    //         type: this.questions[i].type,\n    //         ans: null,\n    //         ansList: [],\n    //         answer: ''\n    //       });\n    //     }\n    //     for (var j=0; j<this.answers.length; j++) {\n    //       for (var k=0; k<data.length; k++) {\n    //         if (this.answers[j].question_id === data[k].question_id) {\n    //           switch (this.answers[j].type) {\n    //             case 'checkbox':\n    //               this.answers[j].ansList = data[k].answer.split('-<^-^>-');\n    //               break;\n    //             case 'mark':\n    //               this.answers[j].ans = parseInt(data[k].answer);\n    //               this.answers[j].answer = data[k].answer;\n    //               break;\n    //             case 'radio':\n    //               this.answers[j].ans = data[k].answer;\n    //               this.answers[j].answer = data[k].answer;\n    //               break;\n    //             default:\n    //               this.answers[j].ans = data[k].answer;\n    //               this.answers[j].answer = data[k].answer;\n    //               break;\n    //           }\n    //         }\n    //       }\n    //     }\n\n    //     this.judge();\n    //   } else {\n    //     this.$message.error(\"请求失败！\");\n    //   }\n    // });\n  }\n};","map":{"version":3,"names":["name","props","quesStorage","data","hoverColor","totalScore","actualScore","questions","id","type","title","must","description","options","row","refer","point","answers","question_id","ans","ansList","correct","methods","isInfo","item","isRight","judge","total","score","i","length","console","log","replace","join","created","formData","FormData","append","$route","params","code","$axios","method","url","then","res","status_code","JSON","parse","has_answers","map","question","catch","err"],"sources":["E:\\QuestionairePlanet_Fronted\\mytest\\src\\views\\qn-fillpane\\FinishTest.vue"],"sourcesContent":["<template>\r\n    <div class=\"qn-result\">\r\n      <div class=\"paper\">\r\n        <div style=\"padding-top: 50px; padding-bottom: 6px\" >\r\n          <span><h1>恭喜你完成测试！您的分数是</h1></span>\r\n          <span style=\"color: red;\"><h1>{{ actualScore }}/{{ totalScore }}</h1>\r\n          </span>\r\n        </div>\r\n  \r\n        <div class=\"note\">\r\n          您的总分 / 满分\r\n        </div>\r\n  \r\n        <el-divider></el-divider>\r\n  \r\n        <div class=\"title\">\r\n          <h2>评阅结果与参考答案</h2>\r\n        </div>\r\n  \r\n        <div class=\"main\">\r\n          <div v-bind:class=\"{ 'ques-block-info' : isInfo(item) ,'ques-block-right': isRight(item), 'ques-block-wrong': !isRight(item) }\" v-for=\"item in questions\" :key=\"item.id\">\r\n  \r\n            <div class=\"q-title\">\r\n              {{ item.id }}. {{ item.title }}\r\n              <span class=\"must\" v-if=\"item.must\">(必填)</span>\r\n              <span class=\"point\" v-if=\"!isInfo(item)\">\r\n                &ensp;[分值 : {{ item.point }}]\r\n              </span>\r\n            </div>\r\n  \r\n            <div\r\n                class=\"q-description\"\r\n                v-if=\"item.description!=='' && item.description!==null && item.description!==undefined\"\r\n            >\r\n              {{ item.description }}\r\n            </div>\r\n  \r\n            <!--     姓名/学号/班级/学校-->\r\n            <div class=\"q-opt\" v-if=\"isInfo(item)\">\r\n              <el-input\r\n                  placeholder=\"请输入内容\"\r\n                  v-model=\"answers[item.id-1].ans\"\r\n                  :disabled=\"true\">\r\n              </el-input>\r\n            </div>\r\n  \r\n            <!--              判断/单选-->\r\n            <div v-if=\"item.type==='radio' || item.type === 'judge'\">\r\n              <div class=\"q-opt\" v-for=\"opt in item.options\" :key=\"opt.id\">\r\n                <el-radio v-model=\"answers[item.id-1].ans\" :label=\"opt.title\" :disabled=\"true\">\r\n                  {{ opt.title }}\r\n                </el-radio>\r\n              </div>\r\n            </div>\r\n  \r\n            <!--                  多选-->\r\n            <el-checkbox-group class=\"q-opt\" v-if=\"item.type==='checkbox'\" v-model=\"answers[item.id-1].ansList\">\r\n              <el-checkbox v-for=\"opt in item.options\" :key=\"opt.id\" :label=\"opt.title\" :disabled=\"true\">\r\n                {{ opt.title }}\r\n              </el-checkbox>\r\n            </el-checkbox-group>\r\n  \r\n            <!--                  填空-->\r\n            <div class=\"q-opt\" v-if=\"item.type==='text'\">\r\n              <el-input\r\n                  type=\"textarea\"\r\n                  :autosize=\"{ minRows: 2, maxRows: item.row}\"\r\n                  placeholder=\"请输入内容\"\r\n                  v-model=\"answers[item.id-1].ans\"\r\n                  :disabled=\"true\">\r\n              </el-input>\r\n            </div>\r\n  \r\n            <div v-if=\"!isInfo(item)\" class=\"tail-info\">\r\n              <div class=\"tail-point\">\r\n                <div v-if=\"answers[item.id-1].correct\">您的得分：{{ item.point }}</div>\r\n                <div v-else>您的得分：0</div>\r\n              </div>\r\n  \r\n              <div class=\"tail-refer\" v-if=\"item.refer!==null && item.refer!==undefined\">\r\n                <div v-if=\"item.type==='radio' || item.type==='judge'\">您的答案：{{ answers[item.id-1].ans }}</div>\r\n                <div v-if=\"item.type==='checkbox'\">您的答案：{{ answers[item.id-1].ansList }}</div>\r\n                <div v-if=\"item.type==='text'\">您的答案：{{ answers[item.id-1].ans }}</div>\r\n                <div v-if=\"item.refer!==''\">参考答案：{{ item.refer }}</div>\r\n                <div v-if=\"item.refer===''\">参考答案：无</div>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"tail\">\r\n          <a :href=\"rootUrl\">问卷星球</a>&ensp;提供技术支持\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  // import user from \"@/storage/user\";\r\n  \r\n  export default {\r\n    name: \"FinishTest\",\r\n    props: {\r\n      quesStorage: []\r\n    },\r\n    data(){\r\n      return{\r\n        //rootUrl: this.GLOBAL.baseUrl,\r\n  \r\n        hoverColor:{\r\n          \"--hcolor\":\"red\"\r\n        },\r\n        // questions: [],\r\n        // answers: [],\r\n        totalScore: null,\r\n        actualScore: null,\r\n        questions: [\r\n          {\r\n            id: 1,\r\n            type: 'name',\r\n            title: '姓名',\r\n            must: true, // 是否必填\r\n            description: '', // 问题描述\r\n            options: [\r\n              {\r\n                title: '', // 选项标题\r\n                id: 0 // 选项id\r\n              },\r\n            ],\r\n            row: 1, // 填空区域行数\r\n            refer: '', // 参考答案\r\n            point: 0,  // 分值\r\n          },\r\n          {\r\n            id: 2,\r\n            type: 'stuId',\r\n            title: '学号',\r\n            must: true, // 是否必填\r\n            description: '', // 问题描述\r\n            options: [\r\n              {\r\n                title: '', // 选项标题\r\n                id: 0 // 选项id\r\n              },\r\n            ],\r\n            row: 1, // 填空区域行数\r\n            refer: '', // 参考答案\r\n            point: 0,  // 分值\r\n          },\r\n          {\r\n            id: 3,\r\n            type: 'class',\r\n            title: '班级',\r\n            must: true, // 是否必填\r\n            description: '', // 问题描述\r\n            options: [\r\n              {\r\n                title: '', // 选项标题\r\n                id: 0 // 选项id\r\n              },\r\n            ],\r\n            row: 1, // 填空区域行数\r\n            refer: '', // 参考答案\r\n            point: 0,  // 分值\r\n          },\r\n          {\r\n            id: 4,\r\n            type: 'school',\r\n            title: '学校',\r\n            must: true, // 是否必填\r\n            description: '', // 问题描述\r\n            options: [\r\n              {\r\n                title: '', // 选项标题\r\n                id: 0 // 选项id\r\n              },\r\n            ],\r\n            row: 1, // 填空区域行数\r\n            refer: '', // 参考答案\r\n            point: 0,  // 分值\r\n          },\r\n          {\r\n            id: 5,\r\n            type: 'radio',\r\n            title: '这是一个什么问卷？',\r\n            must: true, // 是否必填\r\n            description: '请谨慎做答', // 问题描述\r\n            options: [\r\n              {\r\n                title: '考试问卷', // 选项标题\r\n                id: 1 // 选项id\r\n              },\r\n              {\r\n                title: '调查问卷', // 选项标题\r\n                id: 2 // 选项id\r\n              },\r\n            ],\r\n            row: 0, // 填空区域行数\r\n            refer: '考试问卷', // 参考答案\r\n            point: 10,  // 分值\r\n          },\r\n          {\r\n            id: 6,\r\n            type: 'checkbox',\r\n            title: '软工助教都有谁？',\r\n            must: false, // 是否必填\r\n            description: '', // 问题描述\r\n            options: [\r\n              {\r\n                title: 'ZYH', // 选项标题\r\n                id: 1 // 选项id\r\n              },\r\n              {\r\n                title: 'LKW', // 选项标题\r\n                id: 2 // 选项id\r\n              },\r\n              {\r\n                title: 'MHY', // 选项标题\r\n                id: 3 // 选项id\r\n              },\r\n              {\r\n                title: 'HZH', // 选项标题\r\n                id: 4 // 选项id\r\n              },\r\n            ],\r\n            row: 0, // 填空区域行数\r\n            refer: '[\"LKW\", \"MHY\"]', // 参考答案\r\n            point: 20,  // 分值\r\n          },\r\n          {\r\n            id: 7,\r\n            type: 'text',\r\n            title: '小学期累不累？',\r\n            must: false, // 是否必填\r\n            description: '请谨慎考虑做答', // 问题描述\r\n            options: [\r\n              {\r\n                title: '', // 选项标题\r\n                id: 0 // 选项id\r\n              },\r\n            ],\r\n            row: 5, // 填空区域行数\r\n            refer: '', // 参考答案\r\n            point: 30,  // 分值\r\n          },\r\n          {\r\n            id: 8,\r\n            type: 'judge',\r\n            title: '从来没有加过班',\r\n            must: true, // 是否必填\r\n            description: '请谨慎考虑做答', // 问题描述\r\n            options: [\r\n              {\r\n                title: '对', // 选项标题\r\n                id: 1 // 选项id\r\n              },\r\n              {\r\n                title: '错', // 选项标题\r\n                id: 2 // 选项id\r\n              },\r\n            ],\r\n            row: 0, // 填空区域行数\r\n            refer: '对', // 参考答案\r\n            point: 50,  // 分值\r\n          },\r\n        ],\r\n        answers: [\r\n          {\r\n            question_id: '1',\r\n            type: 'name',\r\n            ans: 'Glj',\r\n            ansList: [],\r\n            correct: null,\r\n          },\r\n          {\r\n            question_id: '2',\r\n            type: 'stuId',\r\n            ans: '22371514',\r\n            ansList: [],\r\n            correct: null,\r\n          },\r\n          {\r\n            question_id: '3',\r\n            type: 'class',\r\n            ans: '222114',\r\n            ansList: [],\r\n            correct: null,\r\n          },\r\n          {\r\n            question_id: '4',\r\n            type: 'school',\r\n            ans: '北航',\r\n            ansList: [],\r\n            correct: null,\r\n          },\r\n          {\r\n            question_id: '5',\r\n            type: 'radio',\r\n            ans: '调查问卷',\r\n            ansList: [],\r\n            correct: null,\r\n          },\r\n          {\r\n            question_id: '6',\r\n            type: 'checkbox',\r\n            ans: null,\r\n            ansList: [\"LKW\", \"MHY\"],\r\n            correct: null,\r\n          },\r\n          {\r\n            question_id: '7',\r\n            type: 'text',\r\n            ans: '累死啦',\r\n            ansList: [],\r\n            correct: null,\r\n          },\r\n          {\r\n            question_id: '8',\r\n            type: 'judge',\r\n            ans: '对',\r\n            ansList: [],\r\n            correct: null,\r\n          },\r\n        ],\r\n      }\r\n    },\r\n    methods: {\r\n      isInfo: function (item) {\r\n        return item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school'\r\n      },\r\n      isRight: function (item) {\r\n        return this.answers[item.id-1].correct;\r\n      },\r\n      judge() {\r\n        // 判卷\r\n        let questions = this.questions;\r\n        let answers = this.answers;\r\n        let total = 0;\r\n        let score = 0;\r\n        for (let i=0; i<questions.length; i++) {\r\n          // 略过信息和主观题\r\n          if (this.isInfo(questions[i])) { continue;}\r\n          // 统计\r\n          if (questions[i].type === 'radio' || questions[i].type === 'judge') {\r\n            console.log(\"refer:\", questions[i].refer);\r\n            console.log(\"ans:\", answers[i].ans);\r\n            if (questions[i].refer === answers[i].ans) {\r\n              answers[i].correct = true;\r\n              score += questions[i].point;\r\n            }\r\n            total += questions[i].point;\r\n          }\r\n          if (questions[i].type === 'checkbox') {\r\n            // 预处理\r\n            questions[i].refer = questions[i].refer.replace(/-<\\^-\\^>-/g, \",\");\r\n            console.log(\"run\");\r\n            console.log(\"refer:\", questions[i].refer);\r\n            // let reference = questions[i].refer.substring(1, questions[i].refer.length-1).replace(/\"/g, \"\").split(', ');\r\n            if (questions[i].refer === answers[i].ansList.join(\",\")) {\r\n              answers[i].correct = true;\r\n              score += questions[i].point;\r\n            }\r\n            total += questions[i].point;\r\n          } else if (questions[i].type === 'text') {\r\n            if (questions[i].refer === answers[i].ans) {\r\n              answers[i].correct = true;\r\n              score += questions[i].point;\r\n            }\r\n            total += questions[i].point;\r\n          }\r\n        }\r\n        this.actualScore = score;\r\n        this.totalScore = total;\r\n      },\r\n    },\r\n    created() {\r\n      const formData = new FormData();\r\n      formData.append(\"code\", this.$route.params.code);\r\n      this.$axios({\r\n        method: 'post',\r\n        url: '/question/api/listquestionalt',\r\n        data: formData,\r\n      }).then(res => {\r\n        switch (res.data.status_code) {\r\n          case 1:\r\n            this.title = res.data.title;\r\n            this.description = res.data.description;\r\n            this.questions = JSON.parse(res.data.data);\r\n            console.log(res.data.has_answers);\r\n            if (res.data.has_answers) {\r\n              console.log(\"enter 1\");\r\n              console.log(res.data.answers);\r\n              this.answers = JSON.parse(res.data.answers);\r\n              console.log(\"all ans:\", this.answers);\r\n              console.log(\"ans length:\", this.answers.length);\r\n              console.log(\"ans1:\", this.answers[0]);\r\n              console.log(\"answer[0].ans:\", this.answers[0].ans);\r\n            }\r\n            else {\r\n              console.log(\"enter 2\");\r\n              this.answers = this.questions.map(question => ({\r\n                id: question.id,\r\n                type: question.type,\r\n                ans: '',\r\n                ansList: []\r\n              }));\r\n            }\r\n            // for (var i = 0; i < this.questionnaires.length; i++) {\r\n            // if (this.questionnaires[i].questionType == '1')\r\n            //     this.questionnaires[i].questionType = '普通问卷'\r\n            // else if (this.questionnaires[i].questionType == '2')\r\n            //     this.questionnaires[i].questionType = '投票问卷'\r\n            // else if (this.questionnaires[i].questionType == '3')\r\n            //     this.questionnaires[i].questionType = '考试问卷'\r\n            // else\r\n            //     this.questionnaires[i].questionType = '报名问卷'\r\n            // }\r\n            console.log(this.title);\r\n            console.log(this.description);\r\n            console.log(this.questions);\r\n            console.log(\"answers init:\");\r\n            console.log(this.answers);\r\n            console.log(\"success on fetching questions\");\r\n            this.judge();\r\n            break;\r\n          case 2:\r\n            console.log(\"error 2\");\r\n            break;\r\n          case 3:\r\n            console.log(\"error 3\");\r\n            break;\r\n          case 4:\r\n            console.log(\"error 4\");\r\n            break;\r\n          case 5:\r\n            console.log(\"error 5\");\r\n            break;\r\n          case -1:\r\n            break;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n      // var data = [];\r\n      // this.questions = this.quesStorage;\r\n      // const userInfo = user.getters.getUser(user.state());\r\n      // const formData = new FormData();\r\n      // formData.append(\"code\", this.$route.query.code);\r\n      // formData.append(\"username\", userInfo.user.username);\r\n      // this.$axios({\r\n      //   method: 'post',\r\n      //   url: '/sm/get/submit_answers/code',\r\n      //   data: formData,\r\n      // })\r\n      // .then(res => {\r\n      //   if (res.data.status_code === 1) {\r\n      //     data = res.data.answers;\r\n      //     this.questions = res.data.questions;\r\n  \r\n      //     for (var m=0; m<this.questions.length; m++) {\r\n      //       if (this.questions[m].type === 'checkbox') {\r\n      //         this.questions[m].refer = this.questions[m].refer.split('-<^-^>-');\r\n      //       }\r\n      //     }\r\n  \r\n      //     this.answers = [];\r\n      //     //建立答案框架\r\n      //     for (var i=0; i<this.questions.length; i++) {\r\n      //       this.answers.push({\r\n      //         question_id: this.questions[i].question_id,\r\n      //         type: this.questions[i].type,\r\n      //         ans: null,\r\n      //         ansList: [],\r\n      //         answer: ''\r\n      //       });\r\n      //     }\r\n      //     for (var j=0; j<this.answers.length; j++) {\r\n      //       for (var k=0; k<data.length; k++) {\r\n      //         if (this.answers[j].question_id === data[k].question_id) {\r\n      //           switch (this.answers[j].type) {\r\n      //             case 'checkbox':\r\n      //               this.answers[j].ansList = data[k].answer.split('-<^-^>-');\r\n      //               break;\r\n      //             case 'mark':\r\n      //               this.answers[j].ans = parseInt(data[k].answer);\r\n      //               this.answers[j].answer = data[k].answer;\r\n      //               break;\r\n      //             case 'radio':\r\n      //               this.answers[j].ans = data[k].answer;\r\n      //               this.answers[j].answer = data[k].answer;\r\n      //               break;\r\n      //             default:\r\n      //               this.answers[j].ans = data[k].answer;\r\n      //               this.answers[j].answer = data[k].answer;\r\n      //               break;\r\n      //           }\r\n      //         }\r\n      //       }\r\n      //     }\r\n  \r\n      //     this.judge();\r\n      //   } else {\r\n      //     this.$message.error(\"请求失败！\");\r\n      //   }\r\n      // });\r\n    },\r\n  \r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .qn-result {\r\n    background-image: url(\"../../assets/images/preview_background.png\");\r\n    background-repeat: repeat-y;\r\n    min-height: 800px;\r\n    overflow: hidden;\r\n    background-position:center;\r\n    background-size: 100% auto;\r\n    background-attachment: fixed;\r\n  }\r\n  \r\n  .qn-result .paper {\r\n    margin: 120px auto 0;\r\n    width: 900px;\r\n    background-color: #FFFFFF;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, .12), 0 0 6px rgba(0, 0, 0, .04)\r\n  }\r\n  \r\n  .qn-result .note {\r\n    color: #b9b9b9;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .qn-result .block-refer {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #a3a3a3;\r\n  }\r\n  \r\n  .qn-result .block-yourAnswer {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #a3a3a3;\r\n  }\r\n  \r\n  .qn-result .block-point {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #e59824;\r\n  }\r\n  \r\n  .qn-result .title {\r\n    margin-top: 40px;\r\n    margin-bottom: 40px;\r\n    color: #1687fd;\r\n  }\r\n  \r\n  .qn-result .ques-block-info {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    text-align: center;\r\n    padding:20px\r\n  }\r\n  \r\n  .qn-result .ques-block-info:hover {\r\n    background: #f6f6f6 !important;\r\n    transition: .3s;\r\n  }\r\n  \r\n  .qn-result .ques-block-right {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    text-align: center;\r\n    padding:20px\r\n  }\r\n  \r\n  .qn-result .ques-block-right:hover {\r\n    background: #eef6fd;\r\n    transition: .3s;\r\n  }\r\n  \r\n  .qn-result .ques-block-wrong {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    text-align: center;\r\n    padding:20px\r\n  }\r\n  \r\n  .qn-result .ques-block-wrong:hover {\r\n    background: #fff2f2;\r\n    transition: .3s;\r\n  }\r\n  \r\n  .qn-result .q-title {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 0 10px 10px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .qn-result .q-description {\r\n    text-align: left;\r\n    font-size: 14px;\r\n    padding-left: 10px;\r\n    padding-top: 5px;\r\n    padding-bottom: 10px;\r\n    color: #969696;\r\n  }\r\n  \r\n  .qn-result .must {\r\n    font-weight: normal;\r\n    color: crimson;\r\n  }\r\n  \r\n  .qn-result .point {\r\n    font-weight: normal;\r\n    color: #EC9D2D;\r\n  }\r\n  \r\n  .qn-result .q-opt {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 10px 10px 10px;\r\n  }\r\n  \r\n  .qn-result .el-checkbox {\r\n    padding: 10px 0;\r\n    display: block;\r\n  }\r\n  \r\n  .qn-result .q-opt .el-textarea__inner {\r\n    max-height: 100px;\r\n  }\r\n  \r\n  .qn-result .tail {\r\n    padding-top: 25px;\r\n    font-size: 15px;\r\n    color: #b9b9b9;\r\n    border-top: solid 1px #e3e3e3;\r\n    height: 50px;\r\n    margin: 0 30px 130px;\r\n  }\r\n  \r\n  .qn-result .tail-point {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: crimson;\r\n  }\r\n  \r\n  .qn-result .tail-refer {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #0404c9;\r\n  }\r\n  \r\n  .tail-info {\r\n    padding: 0 10px;\r\n  }\r\n  </style>"],"mappings":"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I,CAACf,OAAM,GAAI,IAAI,CAACV,SAAS,CAAC4C,GAAG,CAACC,QAAO,KAAM;cAC7C5C,EAAE,EAAE4C,QAAQ,CAAC5C,EAAE;cACfC,IAAI,EAAE2C,QAAQ,CAAC3C,IAAI;cACnBU,GAAG,EAAE,EAAE;cACPC,OAAO,EAAE;YACX,CAAC,CAAC,CAAC;UACL;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACAW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACtB,KAAK,CAAC;UACvBqB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACpB,WAAW,CAAC;UAC7BmB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,SAAS,CAAC;UAC3BwB,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;UAC5BD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,OAAO,CAAC;UACzBc,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;UAC5C,IAAI,CAACN,KAAK,CAAC,CAAC;UACZ;QACF,KAAK,CAAC;UACJK,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;UACtB;QACF,KAAK,CAAC;UACJD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;UACtB;QACF,KAAK,CAAC;UACJD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;UACtB;QACF,KAAK,CAAC;UACJD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;UACtB;QACF,KAAK,CAAC,CAAC;UACL;MACJ;IACF,CAAC,CAAC,CAACqB,KAAK,CAACC,GAAE,IAAK;MACdvB,OAAO,CAACC,GAAG,CAACsB,GAAG,CAAC;IAClB,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;EACF;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}