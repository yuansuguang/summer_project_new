{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nexport default {\n  data() {\n    var ruleFormRef = ref();\n    var validateUser = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('The username cannot be NULL'));\n      } else {\n        callback();\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please input the password'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          if (!ruleFormRef.value) return;\n          ruleFormRef.value.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please input the password again'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error(\"Two inputs don't match!\"));\n      } else {\n        callback();\n      }\n    };\n    var validatePhone = (rule, value, callback) => {\n      // if (!value) {\n      //   return callback(new Error('Please input the phone number'))\n      // }\n      // setTimeout(() => {\n      //   if (!Number.isInteger(value)) {\n      //     callback(new Error('Please input digits'))\n      //   } else {\n      //     if (value < 10000000000) {\n      //       callback(new Error('Phone number must be 1XXXXXXXXXX'))\n      //     } else if (value >= 20000000000) {\n      //       callback(new Error('Phone number must be 1XXXXXXXXXX'))\n      //     }\n      //     else {\n      //       callback()\n      //     }\n      //   }\n      // }, 1000)\n      callback();\n    };\n\n    // var rules = reactive({\n    //   user: [{ validator: validateUser, trigger: 'blur' }],\n    //   pass: [{ validator: validatePass, trigger: 'blur' }],\n    //   checkPass: [{ validator: validatePass2, trigger: 'blur' }],\n    //   phone: [{ validator: validatePhone, trigger: 'blur' }],\n    // })\n\n    // var submitForm = (formEl) => {\n    //   if (!formEl) return\n    //   formEl.validate((valid) => {\n    //     if (valid) {\n    //       console.log('submit!')\n    //     } else {\n    //       console.log('error submit!')\n    //     }\n    //   })\n    // }\n\n    // var resetForm = (formEl) => {\n    //   if (!formEl) return\n    //   formEl.resetFields()\n    // }\n\n    return {\n      ruleForm: {\n        user: '',\n        pass: '',\n        checkPass: '',\n        phone: ''\n      },\n      rules: {\n        user: [{\n          validator: validateUser,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: validatePhone,\n          trigger: 'blur'\n        }]\n      }\n    };\n    // var rules = reactive({\n    //   user: [{ validator: validateUser, trigger: 'blur' }],\n    //   pass: [{ validator: validatePass, trigger: 'blur' }],\n    //   checkPass: [{ validator: validatePass2, trigger: 'blur' }],\n    //   phone: [{ validator: validatePhone, trigger: 'blur' }],\n    // })\n\n    // var submitForm = (formEl) => {\n    //   if (!formEl) return\n    //   formEl.validate((valid) => {\n    //     if (valid) {\n    //       console.log('submit!')\n    //     } else {\n    //       console.log('error submit!')\n    //     }\n    //   })\n    // }\n\n    // var resetForm = (formEl) => {\n    //   if (!formEl) return\n    //   formEl.resetFields()\n    // }\n  },\n  methods: {\n    register: function (formName) {\n      const self = this;\n      const formData = new formData();\n      formData.append(\"username\", self.ruleForm.user);\n      formData.append(\"password1\", self.ruleForm.pass);\n      formData.append(\"password2\", self.ruleForm.checkPass);\n      formData.append(\"email\", self.ruleForm.phone);\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          self.$axios({\n            method: 'post',\n            url: 'http://localhost:8080/user/register',\n            data: formData\n          }).then(res => {\n            switch (res.data.status_code) {\n              case 1:\n                this.$store.dispatch('saveUserInfo', {\n                  user: {\n                    'username': this.ruleForm.username,\n                    'confirmed': false\n                  }\n                });\n                this.$message.success('注册成功！');\n                setTimeout(() => {\n                  this.$router.push('/unverified_email');\n                }, 1500);\n                break;\n              case -1:\n                this.$message.warning('请检查填写的内容！');\n                break;\n              case 2:\n                this.$message.warning('用户名已注册！');\n                break;\n              case 3:\n                this.$message.error('邮箱已注册或不可用！');\n                break;\n              case 4:\n                this.$message.error('密码不符合规则，需满足8-18，英文字母+数字！');\n                break;\n              case 5:\n                this.$message.error('两次输入的密码不一致！');\n                break;\n              case 6:\n                this.$message.error('邮件验证码发送失败，请检查邮箱是否填写正确！');\n                break;\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n        } else {\n          console.log('提交失败!!');\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["ref","data","ruleFormRef","validateUser","rule","value","callback","Error","validatePass","ruleForm","checkPass","validateField","validatePass2","pass","validatePhone","user","phone","rules","validator","trigger","methods","register","formName","self","formData","append","$refs","validate","valid","$axios","method","url","then","res","status_code","$store","dispatch","username","$message","success","setTimeout","$router","push","warning","error","catch","err","console","log"],"sources":["E:\\mytest\\src\\views\\accountpane\\registerPane.vue"],"sourcesContent":["<template>\r\n  <div class=\"register\"\r\n    style=\" display: flex; justify-content: center; align-items: center;  height: 100vh; background-color:azure;\">\r\n    <div class=\"mainReg\" style=\"width: 600px; max-height: 2000px; border-radius: 10px; background-color: white\" :style=\"{\r\n      boxShadow: `var(--el-box-shadow-dark)`\r\n    }\">\r\n      <el-container>\r\n        <el-header>\r\n          <h2>Register</h2>\r\n        </el-header>\r\n        <el-main style=\"display: flex; justify-content: center;\">\r\n          <el-form ref=\"ruleFormRef\" style=\"max-width: 1000px \" :model=\"ruleForm\" status-icon :rules=\"rules\"\r\n            size=\"default\" label-width=\"auto\" class=\"registerForm\">\r\n            <el-form-item label=\"Username\" prop=\"user\">\r\n              <el-input v-model=\"ruleForm.user\" type=\"username\" autocomplete=\"off\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"Password\" prop=\"pass\">\r\n              <el-input v-model=\"ruleForm.pass\" type=\"password\" autocomplete=\"off\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"Confirm\" prop=\"checkPass\">\r\n              <el-input v-model=\"ruleForm.checkPass\" type=\"password\" autocomplete=\"off\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"邮箱\" prop=\"phone\">\r\n              <el-input v-model=\"ruleForm.phone\" type=\"phone\" autocomplete=\"off\" />\r\n              <!-- v-model.number=\"ruleForm.phone\" -->\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"register('ruleForm')\">\r\n                Submit\r\n              </el-button>\r\n              <el-button @click=\"resetForm(ruleFormRef)\">Reset</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-main>\r\n\r\n      </el-container>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\n\r\nexport default {\r\n  data() {\r\n    var ruleFormRef = ref()\r\n\r\n    var validateUser = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('The username cannot be NULL'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please input the password'))\r\n      } else {\r\n        if (this.ruleForm.checkPass !== '') {\r\n          if (!ruleFormRef.value) return\r\n          ruleFormRef.value.validateField('checkPass')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please input the password again'))\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error(\"Two inputs don't match!\"))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n\r\n    var validatePhone = (rule, value, callback) => {\r\n      // if (!value) {\r\n      //   return callback(new Error('Please input the phone number'))\r\n      // }\r\n      // setTimeout(() => {\r\n      //   if (!Number.isInteger(value)) {\r\n      //     callback(new Error('Please input digits'))\r\n      //   } else {\r\n      //     if (value < 10000000000) {\r\n      //       callback(new Error('Phone number must be 1XXXXXXXXXX'))\r\n      //     } else if (value >= 20000000000) {\r\n      //       callback(new Error('Phone number must be 1XXXXXXXXXX'))\r\n      //     }\r\n      //     else {\r\n      //       callback()\r\n      //     }\r\n      //   }\r\n      // }, 1000)\r\n      callback()\r\n    }\r\n\r\n    // var rules = reactive({\r\n    //   user: [{ validator: validateUser, trigger: 'blur' }],\r\n    //   pass: [{ validator: validatePass, trigger: 'blur' }],\r\n    //   checkPass: [{ validator: validatePass2, trigger: 'blur' }],\r\n    //   phone: [{ validator: validatePhone, trigger: 'blur' }],\r\n    // })\r\n\r\n    // var submitForm = (formEl) => {\r\n    //   if (!formEl) return\r\n    //   formEl.validate((valid) => {\r\n    //     if (valid) {\r\n    //       console.log('submit!')\r\n    //     } else {\r\n    //       console.log('error submit!')\r\n    //     }\r\n    //   })\r\n    // }\r\n\r\n    // var resetForm = (formEl) => {\r\n    //   if (!formEl) return\r\n    //   formEl.resetFields()\r\n    // }\r\n\r\n    return  {\r\n      ruleForm:{\r\n        user: '',\r\n        pass: '',\r\n        checkPass: '',\r\n        phone: ''\r\n      },\r\n      rules :{\r\n        user: [{ validator: validateUser, trigger: 'blur' }],\r\n        pass: [{ validator: validatePass, trigger: 'blur' }],\r\n        checkPass: [{ validator: validatePass2, trigger: 'blur' }],\r\n        phone: [{ validator: validatePhone, trigger: 'blur' }],\r\n      }\r\n    }\r\n    // var rules = reactive({\r\n    //   user: [{ validator: validateUser, trigger: 'blur' }],\r\n    //   pass: [{ validator: validatePass, trigger: 'blur' }],\r\n    //   checkPass: [{ validator: validatePass2, trigger: 'blur' }],\r\n    //   phone: [{ validator: validatePhone, trigger: 'blur' }],\r\n    // })\r\n\r\n    // var submitForm = (formEl) => {\r\n    //   if (!formEl) return\r\n    //   formEl.validate((valid) => {\r\n    //     if (valid) {\r\n    //       console.log('submit!')\r\n    //     } else {\r\n    //       console.log('error submit!')\r\n    //     }\r\n    //   })\r\n    // }\r\n\r\n    // var resetForm = (formEl) => {\r\n    //   if (!formEl) return\r\n    //   formEl.resetFields()\r\n    // }\r\n  },\r\n  methods:{\r\n    register: function(formName) {\r\n      const self = this;\r\n      const formData = new formData();\r\n      formData.append(\"username\",self.ruleForm.user);\r\n      formData.append(\"password1\",self.ruleForm.pass);\r\n      formData.append(\"password2\",self.ruleForm.checkPass);\r\n      formData.append(\"email\",self.ruleForm.phone);\r\n\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          self.$axios({\r\n            method: 'post',\r\n            url: 'http://localhost:8080/user/register',\r\n            data: formData,\r\n          })\r\n          .then(res => {\r\n            switch (res.data.status_code) {\r\n              case 1:\r\n                this.$store.dispatch('saveUserInfo', {user: {\r\n                    'username': this.ruleForm.username,\r\n                    'confirmed': false,\r\n                  }});\r\n                this.$message.success('注册成功！');\r\n                setTimeout(()=> {\r\n                  this.$router.push('/unverified_email');\r\n                },1500);\r\n                break;\r\n              case -1:\r\n                this.$message.warning('请检查填写的内容！');\r\n                break;\r\n              case 2:\r\n                this.$message.warning('用户名已注册！');\r\n                break;\r\n              case 3:\r\n                this.$message.error('邮箱已注册或不可用！');\r\n                break;\r\n              case 4:\r\n                this.$message.error('密码不符合规则，需满足8-18，英文字母+数字！');\r\n                break;\r\n              case 5:\r\n                this.$message.error('两次输入的密码不一致！');\r\n                break;\r\n              case 6:\r\n                this.$message.error('邮件验证码发送失败，请检查邮箱是否填写正确！');\r\n                break;\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          })\r\n        } else {\r\n          console.log('提交失败!!');\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.register .mainReg {\r\n  border: 1px solid var(--el-border-color);\r\n}\r\n</style>"],"mappings":";AAyCA,SAASA,GAAE,QAAS,KAAI;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,IAAIC,WAAU,GAAIF,GAAG,CAAC;IAEtB,IAAIG,YAAW,GAAIA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC5C,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MACnD,OAAO;QACLD,QAAQ,CAAC;MACX;IACF;IACA,IAAIE,YAAW,GAAIA,CAACJ,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC5C,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MACjD,OAAO;QACL,IAAI,IAAI,CAACE,QAAQ,CAACC,SAAQ,KAAM,EAAE,EAAE;UAClC,IAAI,CAACR,WAAW,CAACG,KAAK,EAAE;UACxBH,WAAW,CAACG,KAAK,CAACM,aAAa,CAAC,WAAW;QAC7C;QACAL,QAAQ,CAAC;MACX;IACF;IAEA,IAAIM,aAAY,GAAIA,CAACR,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC7C,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACvD,OAAO,IAAIF,KAAI,KAAM,IAAI,CAACI,QAAQ,CAACI,IAAI,EAAE;QACvCP,QAAQ,CAAC,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC/C,OAAO;QACLD,QAAQ,CAAC;MACX;IACF;IAEA,IAAIQ,aAAY,GAAIA,CAACV,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC7C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAA,QAAQ,CAAC;IACX;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA,OAAQ;MACNG,QAAQ,EAAC;QACPM,IAAI,EAAE,EAAE;QACRF,IAAI,EAAE,EAAE;QACRH,SAAS,EAAE,EAAE;QACbM,KAAK,EAAE;MACT,CAAC;MACDC,KAAI,EAAG;QACLF,IAAI,EAAE,CAAC;UAAEG,SAAS,EAAEf,YAAY;UAAEgB,OAAO,EAAE;QAAO,CAAC,CAAC;QACpDN,IAAI,EAAE,CAAC;UAAEK,SAAS,EAAEV,YAAY;UAAEW,OAAO,EAAE;QAAO,CAAC,CAAC;QACpDT,SAAS,EAAE,CAAC;UAAEQ,SAAS,EAAEN,aAAa;UAAEO,OAAO,EAAE;QAAO,CAAC,CAAC;QAC1DH,KAAK,EAAE,CAAC;UAAEE,SAAS,EAAEJ,aAAa;UAAEK,OAAO,EAAE;QAAO,CAAC;MACvD;IACF;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,QAAQ,EAAE,SAAAA,CAASC,QAAQ,EAAE;MAC3B,MAAMC,IAAG,GAAI,IAAI;MACjB,MAAMC,QAAO,GAAI,IAAIA,QAAQ,CAAC,CAAC;MAC/BA,QAAQ,CAACC,MAAM,CAAC,UAAU,EAACF,IAAI,CAACd,QAAQ,CAACM,IAAI,CAAC;MAC9CS,QAAQ,CAACC,MAAM,CAAC,WAAW,EAACF,IAAI,CAACd,QAAQ,CAACI,IAAI,CAAC;MAC/CW,QAAQ,CAACC,MAAM,CAAC,WAAW,EAACF,IAAI,CAACd,QAAQ,CAACC,SAAS,CAAC;MACpDc,QAAQ,CAACC,MAAM,CAAC,OAAO,EAACF,IAAI,CAACd,QAAQ,CAACO,KAAK,CAAC;MAE5C,IAAI,CAACU,KAAK,CAACJ,QAAQ,CAAC,CAACK,QAAQ,CAAEC,KAAK,IAAK;QACvC,IAAIA,KAAK,EAAE;UACTL,IAAI,CAACM,MAAM,CAAC;YACVC,MAAM,EAAE,MAAM;YACdC,GAAG,EAAE,qCAAqC;YAC1C9B,IAAI,EAAEuB;UACR,CAAC,EACAQ,IAAI,CAACC,GAAE,IAAK;YACX,QAAQA,GAAG,CAAChC,IAAI,CAACiC,WAAW;cAC1B,KAAK,CAAC;gBACJ,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,cAAc,EAAE;kBAACrB,IAAI,EAAE;oBACxC,UAAU,EAAE,IAAI,CAACN,QAAQ,CAAC4B,QAAQ;oBAClC,WAAW,EAAE;kBACf;gBAAC,CAAC,CAAC;gBACL,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAC,OAAO,CAAC;gBAC9BC,UAAU,CAAC,MAAK;kBACd,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,mBAAmB,CAAC;gBACxC,CAAC,EAAC,IAAI,CAAC;gBACP;cACF,KAAK,CAAC,CAAC;gBACL,IAAI,CAACJ,QAAQ,CAACK,OAAO,CAAC,WAAW,CAAC;gBAClC;cACF,KAAK,CAAC;gBACJ,IAAI,CAACL,QAAQ,CAACK,OAAO,CAAC,SAAS,CAAC;gBAChC;cACF,KAAK,CAAC;gBACJ,IAAI,CAACL,QAAQ,CAACM,KAAK,CAAC,YAAY,CAAC;gBACjC;cACF,KAAK,CAAC;gBACJ,IAAI,CAACN,QAAQ,CAACM,KAAK,CAAC,0BAA0B,CAAC;gBAC/C;cACF,KAAK,CAAC;gBACJ,IAAI,CAACN,QAAQ,CAACM,KAAK,CAAC,aAAa,CAAC;gBAClC;cACF,KAAK,CAAC;gBACJ,IAAI,CAACN,QAAQ,CAACM,KAAK,CAAC,wBAAwB,CAAC;gBAC7C;YACJ;UACF,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;YACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UAClB,CAAC;QACH,OAAO;UACLC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;UACrB,OAAO,KAAK;QACd;MACF,CAAC,CAAC;IACJ;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}