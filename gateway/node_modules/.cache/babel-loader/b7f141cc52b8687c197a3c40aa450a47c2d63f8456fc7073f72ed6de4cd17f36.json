{"ast":null,"code":"// TODO Should not derived from mesh?\nimport Mesh from '../Mesh';\nimport CubeGeometry from '../geometry/Cube';\nimport Shader from '../Shader';\nimport Material from '../Material';\nimport Texture from '../Texture';\nimport PerspectiveCamera from '../camera/Perspective';\nimport Matrix4 from '../math/Matrix4';\nimport skyboxEssl from '../shader/source/skybox.glsl.js';\nShader.import(skyboxEssl);\n/**\n * @constructor clay.plugin.Skybox\n *\n * @example\n *     var skyTex = new clay.TextureCube();\n *     skyTex.load({\n *         'px': 'assets/textures/sky/px.jpg',\n *         'nx': 'assets/textures/sky/nx.jpg'\n *         'py': 'assets/textures/sky/py.jpg'\n *         'ny': 'assets/textures/sky/ny.jpg'\n *         'pz': 'assets/textures/sky/pz.jpg'\n *         'nz': 'assets/textures/sky/nz.jpg'\n *     });\n *     var skybox = new clay.plugin.Skybox({\n *         scene: scene\n *     });\n *     skybox.material.set('environmentMap', skyTex);\n */\nvar Skybox = Mesh.extend(function () {\n  var skyboxShader = new Shader({\n    vertex: Shader.source('clay.skybox.vertex'),\n    fragment: Shader.source('clay.skybox.fragment')\n  });\n  var material = new Material({\n    shader: skyboxShader,\n    depthMask: false\n  });\n  return {\n    /**\n     * @type {clay.Scene}\n     * @memberOf clay.plugin.Skybox.prototype\n     */\n    scene: null,\n    geometry: new CubeGeometry(),\n    material: material,\n    environmentMap: null,\n    culling: false,\n    _dummyCamera: new PerspectiveCamera()\n  };\n}, function () {\n  var scene = this.scene;\n  if (scene) {\n    this.attachScene(scene);\n  }\n  if (this.environmentMap) {\n    this.setEnvironmentMap(this.environmentMap);\n  }\n}, /** @lends clay.plugin.Skybox# */{\n  /**\n   * Attach the skybox to the scene\n   * @param  {clay.Scene} scene\n   */\n  attachScene: function (scene) {\n    if (this.scene) {\n      this.detachScene();\n    }\n    scene.skybox = this;\n    this.scene = scene;\n    scene.on('beforerender', this._beforeRenderScene, this);\n  },\n  /**\n   * Detach from scene\n   */\n  detachScene: function () {\n    if (this.scene) {\n      this.scene.off('beforerender', this._beforeRenderScene);\n      this.scene.skybox = null;\n    }\n    this.scene = null;\n  },\n  /**\n   * Dispose skybox\n   * @param  {clay.Renderer} renderer\n   */\n  dispose: function (renderer) {\n    this.detachScene();\n    this.geometry.dispose(renderer);\n  },\n  /**\n   * Set environment map\n   * @param {clay.TextureCube} envMap\n   */\n  setEnvironmentMap: function (envMap) {\n    if (envMap.textureType === 'texture2D') {\n      this.material.define('EQUIRECTANGULAR');\n      // LINEAR filter can remove the artifacts in pole\n      envMap.minFilter = Texture.LINEAR;\n    } else {\n      this.material.undefine('EQUIRECTANGULAR');\n    }\n    this.material.set('environmentMap', envMap);\n  },\n  /**\n   * Get environment map\n   * @return {clay.TextureCube}\n   */\n  getEnvironmentMap: function () {\n    return this.material.get('environmentMap');\n  },\n  _beforeRenderScene: function (renderer, scene, camera) {\n    this.renderSkybox(renderer, camera);\n  },\n  renderSkybox: function (renderer, camera) {\n    var dummyCamera = this._dummyCamera;\n    dummyCamera.aspect = renderer.getViewportAspect();\n    dummyCamera.fov = camera.fov || 50;\n    dummyCamera.updateProjectionMatrix();\n    Matrix4.invert(dummyCamera.invProjectionMatrix, dummyCamera.projectionMatrix);\n    dummyCamera.worldTransform.copy(camera.worldTransform);\n    dummyCamera.viewMatrix.copy(camera.viewMatrix);\n    this.position.copy(camera.getWorldPosition());\n    this.update();\n\n    // Don't remember to disable blend\n    renderer.gl.disable(renderer.gl.BLEND);\n    if (this.material.get('lod') > 0) {\n      this.material.define('fragment', 'LOD');\n    } else {\n      this.material.undefine('fragment', 'LOD');\n    }\n    renderer.renderPass([this], dummyCamera);\n  }\n});\nexport default Skybox;","map":{"version":3,"names":["Mesh","CubeGeometry","Shader","Material","Texture","PerspectiveCamera","Matrix4","skyboxEssl","import","Skybox","extend","skyboxShader","vertex","source","fragment","material","shader","depthMask","scene","geometry","environmentMap","culling","_dummyCamera","attachScene","setEnvironmentMap","detachScene","skybox","on","_beforeRenderScene","off","dispose","renderer","envMap","textureType","define","minFilter","LINEAR","undefine","set","getEnvironmentMap","get","camera","renderSkybox","dummyCamera","aspect","getViewportAspect","fov","updateProjectionMatrix","invert","invProjectionMatrix","projectionMatrix","worldTransform","copy","viewMatrix","position","getWorldPosition","update","gl","disable","BLEND","renderPass"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/claygl/src/plugin/Skybox.js"],"sourcesContent":["// TODO Should not derived from mesh?\nimport Mesh from '../Mesh';\nimport CubeGeometry from '../geometry/Cube';\nimport Shader from '../Shader';\nimport Material from '../Material';\nimport Texture from '../Texture';\nimport PerspectiveCamera from '../camera/Perspective';\nimport Matrix4 from '../math/Matrix4';\n\nimport skyboxEssl from '../shader/source/skybox.glsl.js';\nShader.import(skyboxEssl);\n/**\n * @constructor clay.plugin.Skybox\n *\n * @example\n *     var skyTex = new clay.TextureCube();\n *     skyTex.load({\n *         'px': 'assets/textures/sky/px.jpg',\n *         'nx': 'assets/textures/sky/nx.jpg'\n *         'py': 'assets/textures/sky/py.jpg'\n *         'ny': 'assets/textures/sky/ny.jpg'\n *         'pz': 'assets/textures/sky/pz.jpg'\n *         'nz': 'assets/textures/sky/nz.jpg'\n *     });\n *     var skybox = new clay.plugin.Skybox({\n *         scene: scene\n *     });\n *     skybox.material.set('environmentMap', skyTex);\n */\nvar Skybox = Mesh.extend(function () {\n\n    var skyboxShader = new Shader({\n        vertex: Shader.source('clay.skybox.vertex'),\n        fragment: Shader.source('clay.skybox.fragment')\n    });\n    var material = new Material({\n        shader: skyboxShader,\n        depthMask: false\n    });\n\n    return {\n        /**\n         * @type {clay.Scene}\n         * @memberOf clay.plugin.Skybox.prototype\n         */\n        scene: null,\n\n        geometry: new CubeGeometry(),\n\n        material: material,\n\n        environmentMap: null,\n\n        culling: false,\n\n        _dummyCamera: new PerspectiveCamera()\n    };\n}, function () {\n    var scene = this.scene;\n    if (scene) {\n        this.attachScene(scene);\n    }\n    if (this.environmentMap) {\n        this.setEnvironmentMap(this.environmentMap);\n    }\n}, /** @lends clay.plugin.Skybox# */ {\n    /**\n     * Attach the skybox to the scene\n     * @param  {clay.Scene} scene\n     */\n    attachScene: function (scene) {\n        if (this.scene) {\n            this.detachScene();\n        }\n        scene.skybox = this;\n\n        this.scene = scene;\n        scene.on('beforerender', this._beforeRenderScene, this);\n    },\n    /**\n     * Detach from scene\n     */\n    detachScene: function () {\n        if (this.scene) {\n            this.scene.off('beforerender', this._beforeRenderScene);\n            this.scene.skybox = null;\n        }\n        this.scene = null;\n    },\n\n    /**\n     * Dispose skybox\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n        this.detachScene();\n        this.geometry.dispose(renderer);\n    },\n    /**\n     * Set environment map\n     * @param {clay.TextureCube} envMap\n     */\n    setEnvironmentMap: function (envMap) {\n        if (envMap.textureType === 'texture2D') {\n            this.material.define('EQUIRECTANGULAR');\n            // LINEAR filter can remove the artifacts in pole\n            envMap.minFilter = Texture.LINEAR;\n        }\n        else {\n            this.material.undefine('EQUIRECTANGULAR');\n        }\n        this.material.set('environmentMap', envMap);\n    },\n    /**\n     * Get environment map\n     * @return {clay.TextureCube}\n     */\n    getEnvironmentMap: function () {\n        return this.material.get('environmentMap');\n    },\n\n    _beforeRenderScene: function(renderer, scene, camera) {\n        this.renderSkybox(renderer, camera);\n    },\n\n    renderSkybox: function (renderer, camera) {\n        var dummyCamera = this._dummyCamera;\n        dummyCamera.aspect = renderer.getViewportAspect();\n        dummyCamera.fov = camera.fov || 50;\n        dummyCamera.updateProjectionMatrix();\n        Matrix4.invert(dummyCamera.invProjectionMatrix, dummyCamera.projectionMatrix);\n        dummyCamera.worldTransform.copy(camera.worldTransform);\n        dummyCamera.viewMatrix.copy(camera.viewMatrix);\n\n        this.position.copy(camera.getWorldPosition());\n        this.update();\n\n        // Don't remember to disable blend\n        renderer.gl.disable(renderer.gl.BLEND);\n        if (this.material.get('lod') > 0) {\n            this.material.define('fragment', 'LOD');\n        }\n        else {\n            this.material.undefine('fragment', 'LOD');\n        }\n        renderer.renderPass([this], dummyCamera);\n    }\n});\n\nexport default Skybox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}