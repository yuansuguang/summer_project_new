{"ast":null,"code":"export default {\n  data() {\n    return {\n      favoriteQuestionnaires: []\n    };\n  },\n  methods: {\n    clearData(questionnaire) {\n      // 清空问卷数据操作\n      // questionnaire.answersCount = 0;\n      const formData = new FormData();\n      formData.append('survey_id', questionnaire.questionnaireId);\n      this.$axios({\n        method: 'post',\n        url: '/submit/api/clear_survey',\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            console.log(\"success on cleaning questionnaire\");\n            break;\n          case 2:\n            console.log(\"error 2\");\n            break;\n          case 3:\n            console.log(\"error 3\");\n            break;\n          case -1:\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      this.fetchFavorite();\n    },\n    removeFromFavorites(questionnaire) {\n      // 取消收藏操作\n      const formData = new FormData();\n      formData.append('survey_id', questionnaire.questionnaireId);\n      this.$axios({\n        method: 'post',\n        url: '/surveymanage/api/collectsurvey',\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            console.log(\"success on collecting/uncollecting questionnaire\");\n            break;\n          case 2:\n            console.log(\"error 2\");\n            break;\n          case 3:\n            console.log(\"error 3\");\n            break;\n          case -1:\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      this.fetchFavorite();\n    },\n    fetchFavorite() {\n      const formData = new FormData();\n      // formData.append(\"survey_keyword\", this.loginForm.user);\n      // if (this.notRealeaseChecked == true)\n      //   formData.append(\"is_released\", 1);\n      // else if (this.notRealeaseChecked == false)\n      //   formData.append(\"is_released\", 2);\n      // else\n      formData.append(\"is_collected\", 1);\n      formData.append(\"is_released\", 0);\n      this.$axios({\n        method: 'post',\n        url: '/survey/api/list',\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            this.favoriteQuestionnaires = JSON.parse(res.data.data);\n            console.log(this.favoriteQuestionnaires);\n            // for (var i = 0; i < this.questionnaires.length; i++) {\n            //   this.questionnaires[i].previewVisible = false;\n            //   if (this.questionnaires[i].questionType == '1')\n            //     this.questionnaires[i].questionType = '普通问卷'\n            //   else if (this.questionnaires[i].questionType == '2')\n            //     this.questionnaires[i].questionType = '投票问卷'\n            //   else if (this.questionnaires[i].questionType == '3')\n            //     this.questionnaires[i].questionType = '考试问卷'\n            //   else\n            //     this.questionnaires[i].questionType = '报名问卷'\n            // }\n            console.log(\"success on fetching questionnaires\");\n            break;\n          case 2:\n            console.log(\"error 2\");\n            break;\n          case 3:\n            console.log(\"error 3\");\n            break;\n          case 4:\n            console.log(\"error 4\");\n            break;\n          case 5:\n            console.log(\"error 5\");\n            break;\n          case -1:\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  created() {\n    // 假设从后端获取问卷实例数据的方法为 fetchQuestionnaires()\n    this.fetchFavorite();\n  }\n};","map":{"version":3,"names":["data","favoriteQuestionnaires","methods","clearData","questionnaire","formData","FormData","append","questionnaireId","$axios","method","url","then","res","status_code","console","log","catch","err","fetchFavorite","removeFromFavorites","JSON","parse","created"],"sources":["E:\\mytest\\src\\views\\qn-manage\\qnCollect.vue"],"sourcesContent":["<template>\r\n  <div class=\"favorite-management\">\r\n    <!-- 提示信息：如果用户没有收藏的问卷 -->\r\n    <div v-if=\"!favoriteQuestionnaires.length\" class=\"white-board\">\r\n      <h3>您还没有收藏的问卷</h3>\r\n    </div>\r\n    \r\n    <!-- 已收藏问卷列表 -->\r\n    <div v-else class=\"white-board\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>问卷名</th>\r\n            <th>发布时间</th>\r\n            <th>答卷数</th>\r\n            <th>是否发布</th>\r\n            <th>清空数据</th>\r\n            <th>取消收藏</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"questionnaire in favoriteQuestionnaires\" :key=\"questionnaire.id\">\r\n            <td>{{ questionnaire.questionnaireName }}</td>\r\n            <td>{{ questionnaire.creationDate }}</td>\r\n            <td>{{ questionnaire.answersCount }}</td>\r\n            <td>{{ questionaire.isPublished }}</td>\r\n            <td><button @click=\"clearData(questionnaire)\">清空数据</button></td>\r\n            <td><button @click=\"removeFromFavorites(questionnaire)\">取消收藏</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      favoriteQuestionnaires: [\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    clearData(questionnaire) {\r\n      // 清空问卷数据操作\r\n      // questionnaire.answersCount = 0;\r\n      const formData = new FormData();\r\n      formData.append('survey_id', questionnaire.questionnaireId);\r\n      this.$axios({\r\n      method: 'post',\r\n      url: '/submit/api/clear_survey',\r\n      data: formData,\r\n    }).then(res => {\r\n      switch (res.data.status_code) {\r\n        case 1:\r\n          console.log(\"success on cleaning questionnaire\");\r\n          break;\r\n        case 2:\r\n          console.log(\"error 2\");\r\n          break;\r\n        case 3:\r\n          console.log(\"error 3\");\r\n          break;\r\n        case -1:\r\n          break;\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n    this.fetchFavorite();\r\n    },\r\n    removeFromFavorites(questionnaire) {\r\n      // 取消收藏操作\r\n      const formData = new FormData();\r\n    formData.append('survey_id', questionnaire.questionnaireId);\r\n    this.$axios({\r\n      method: 'post',\r\n      url: '/surveymanage/api/collectsurvey',\r\n      data: formData,\r\n    }).then(res => {\r\n      switch (res.data.status_code) {\r\n        case 1:\r\n          console.log(\"success on collecting/uncollecting questionnaire\");\r\n          break;\r\n        case 2:\r\n          console.log(\"error 2\");\r\n          break;\r\n        case 3:\r\n          console.log(\"error 3\");\r\n          break;\r\n        case -1:\r\n          break;\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n    this.fetchFavorite();\r\n    },\r\n    fetchFavorite() {\r\n      const formData = new FormData();\r\n    // formData.append(\"survey_keyword\", this.loginForm.user);\r\n    // if (this.notRealeaseChecked == true)\r\n    //   formData.append(\"is_released\", 1);\r\n    // else if (this.notRealeaseChecked == false)\r\n    //   formData.append(\"is_released\", 2);\r\n    // else\r\n    formData.append(\"is_collected\", 1);\r\n    formData.append(\"is_released\", 0);\r\n    this.$axios({\r\n      method: 'post',\r\n      url: '/survey/api/list',\r\n      data: formData,\r\n    }).then(res => {\r\n      switch (res.data.status_code) {\r\n        case 1:\r\n          this.favoriteQuestionnaires = JSON.parse(res.data.data);\r\n          console.log(this.favoriteQuestionnaires);\r\n          // for (var i = 0; i < this.questionnaires.length; i++) {\r\n          //   this.questionnaires[i].previewVisible = false;\r\n          //   if (this.questionnaires[i].questionType == '1')\r\n          //     this.questionnaires[i].questionType = '普通问卷'\r\n          //   else if (this.questionnaires[i].questionType == '2')\r\n          //     this.questionnaires[i].questionType = '投票问卷'\r\n          //   else if (this.questionnaires[i].questionType == '3')\r\n          //     this.questionnaires[i].questionType = '考试问卷'\r\n          //   else\r\n          //     this.questionnaires[i].questionType = '报名问卷'\r\n          // }\r\n          console.log(\"success on fetching questionnaires\");\r\n          break;\r\n        case 2:\r\n          console.log(\"error 2\");\r\n          break;\r\n        case 3:\r\n          console.log(\"error 3\");\r\n          break;\r\n        case 4:\r\n          console.log(\"error 4\");\r\n          break;\r\n        case 5:\r\n          console.log(\"error 5\");\r\n          break;\r\n        case -1:\r\n          break;\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n    },\r\n  },\r\n  created() {\r\n  // 假设从后端获取问卷实例数据的方法为 fetchQuestionnaires()\r\n  this.fetchFavorite();\r\n},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式 */\r\n.white-board {\r\n  background-color: white;\r\n  border: 1px solid black;\r\n  padding: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid black;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}