{"ast":null,"code":"import vec4 from '../glmatrix/vec4';\n\n/**\n * @constructor\n * @alias clay.Vector4\n * @param {number} x\n * @param {number} y\n * @param {number} z\n * @param {number} w\n */\nvar Vector4 = function (x, y, z, w) {\n  x = x || 0;\n  y = y || 0;\n  z = z || 0;\n  w = w || 0;\n\n  /**\n   * Storage of Vector4, read and write of x, y, z, w will change the values in array\n   * All methods also operate on the array instead of x, y, z, w components\n   * @name array\n   * @type {Float32Array}\n   * @memberOf clay.Vector4#\n   */\n  this.array = vec4.fromValues(x, y, z, w);\n\n  /**\n   * Dirty flag is used by the Node to determine\n   * if the matrix is updated to latest\n   * @name _dirty\n   * @type {boolean}\n   * @memberOf clay.Vector4#\n   */\n  this._dirty = true;\n};\nVector4.prototype = {\n  constructor: Vector4,\n  /**\n   * Add b to self\n   * @param  {clay.Vector4} b\n   * @return {clay.Vector4}\n   */\n  add: function (b) {\n    vec4.add(this.array, this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Set x, y and z components\n   * @param  {number}  x\n   * @param  {number}  y\n   * @param  {number}  z\n   * @param  {number}  w\n   * @return {clay.Vector4}\n   */\n  set: function (x, y, z, w) {\n    this.array[0] = x;\n    this.array[1] = y;\n    this.array[2] = z;\n    this.array[3] = w;\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Set x, y, z and w components from array\n   * @param  {Float32Array|number[]} arr\n   * @return {clay.Vector4}\n   */\n  setArray: function (arr) {\n    this.array[0] = arr[0];\n    this.array[1] = arr[1];\n    this.array[2] = arr[2];\n    this.array[3] = arr[3];\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Clone a new Vector4\n   * @return {clay.Vector4}\n   */\n  clone: function () {\n    return new Vector4(this.x, this.y, this.z, this.w);\n  },\n  /**\n   * Copy from b\n   * @param  {clay.Vector4} b\n   * @return {clay.Vector4}\n   */\n  copy: function (b) {\n    vec4.copy(this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Alias for distance\n   * @param  {clay.Vector4} b\n   * @return {number}\n   */\n  dist: function (b) {\n    return vec4.dist(this.array, b.array);\n  },\n  /**\n   * Distance between self and b\n   * @param  {clay.Vector4} b\n   * @return {number}\n   */\n  distance: function (b) {\n    return vec4.distance(this.array, b.array);\n  },\n  /**\n   * Alias for divide\n   * @param  {clay.Vector4} b\n   * @return {clay.Vector4}\n   */\n  div: function (b) {\n    vec4.div(this.array, this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Divide self by b\n   * @param  {clay.Vector4} b\n   * @return {clay.Vector4}\n   */\n  divide: function (b) {\n    vec4.divide(this.array, this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Dot product of self and b\n   * @param  {clay.Vector4} b\n   * @return {number}\n   */\n  dot: function (b) {\n    return vec4.dot(this.array, b.array);\n  },\n  /**\n   * Alias of length\n   * @return {number}\n   */\n  len: function () {\n    return vec4.len(this.array);\n  },\n  /**\n   * Calculate the length\n   * @return {number}\n   */\n  length: function () {\n    return vec4.length(this.array);\n  },\n  /**\n   * Linear interpolation between a and b\n   * @param  {clay.Vector4} a\n   * @param  {clay.Vector4} b\n   * @param  {number}  t\n   * @return {clay.Vector4}\n   */\n  lerp: function (a, b, t) {\n    vec4.lerp(this.array, a.array, b.array, t);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Minimum of self and b\n   * @param  {clay.Vector4} b\n   * @return {clay.Vector4}\n   */\n  min: function (b) {\n    vec4.min(this.array, this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Maximum of self and b\n   * @param  {clay.Vector4} b\n   * @return {clay.Vector4}\n   */\n  max: function (b) {\n    vec4.max(this.array, this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Alias for multiply\n   * @param  {clay.Vector4} b\n   * @return {clay.Vector4}\n   */\n  mul: function (b) {\n    vec4.mul(this.array, this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Mutiply self and b\n   * @param  {clay.Vector4} b\n   * @return {clay.Vector4}\n   */\n  multiply: function (b) {\n    vec4.multiply(this.array, this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Negate self\n   * @return {clay.Vector4}\n   */\n  negate: function () {\n    vec4.negate(this.array, this.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Normalize self\n   * @return {clay.Vector4}\n   */\n  normalize: function () {\n    vec4.normalize(this.array, this.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Generate random x, y, z, w components with a given scale\n   * @param  {number} scale\n   * @return {clay.Vector4}\n   */\n  random: function (scale) {\n    vec4.random(this.array, scale);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Scale self\n   * @param  {number}  scale\n   * @return {clay.Vector4}\n   */\n  scale: function (s) {\n    vec4.scale(this.array, this.array, s);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Scale b and add to self\n   * @param  {clay.Vector4} b\n   * @param  {number}  scale\n   * @return {clay.Vector4}\n   */\n  scaleAndAdd: function (b, s) {\n    vec4.scaleAndAdd(this.array, this.array, b.array, s);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Alias for squaredDistance\n   * @param  {clay.Vector4} b\n   * @return {number}\n   */\n  sqrDist: function (b) {\n    return vec4.sqrDist(this.array, b.array);\n  },\n  /**\n   * Squared distance between self and b\n   * @param  {clay.Vector4} b\n   * @return {number}\n   */\n  squaredDistance: function (b) {\n    return vec4.squaredDistance(this.array, b.array);\n  },\n  /**\n   * Alias for squaredLength\n   * @return {number}\n   */\n  sqrLen: function () {\n    return vec4.sqrLen(this.array);\n  },\n  /**\n   * Squared length of self\n   * @return {number}\n   */\n  squaredLength: function () {\n    return vec4.squaredLength(this.array);\n  },\n  /**\n   * Alias for subtract\n   * @param  {clay.Vector4} b\n   * @return {clay.Vector4}\n   */\n  sub: function (b) {\n    vec4.sub(this.array, this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Subtract b from self\n   * @param  {clay.Vector4} b\n   * @return {clay.Vector4}\n   */\n  subtract: function (b) {\n    vec4.subtract(this.array, this.array, b.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Transform self with a Matrix4 m\n   * @param  {clay.Matrix4} m\n   * @return {clay.Vector4}\n   */\n  transformMat4: function (m) {\n    vec4.transformMat4(this.array, this.array, m.array);\n    this._dirty = true;\n    return this;\n  },\n  /**\n   * Transform self with a Quaternion q\n   * @param  {clay.Quaternion} q\n   * @return {clay.Vector4}\n   */\n  transformQuat: function (q) {\n    vec4.transformQuat(this.array, this.array, q.array);\n    this._dirty = true;\n    return this;\n  },\n  toString: function () {\n    return '[' + Array.prototype.join.call(this.array, ',') + ']';\n  },\n  toArray: function () {\n    return Array.prototype.slice.call(this.array);\n  }\n};\nvar defineProperty = Object.defineProperty;\n// Getter and Setter\nif (defineProperty) {\n  var proto = Vector4.prototype;\n  /**\n   * @name x\n   * @type {number}\n   * @memberOf clay.Vector4\n   * @instance\n   */\n  defineProperty(proto, 'x', {\n    get: function () {\n      return this.array[0];\n    },\n    set: function (value) {\n      this.array[0] = value;\n      this._dirty = true;\n    }\n  });\n\n  /**\n   * @name y\n   * @type {number}\n   * @memberOf clay.Vector4\n   * @instance\n   */\n  defineProperty(proto, 'y', {\n    get: function () {\n      return this.array[1];\n    },\n    set: function (value) {\n      this.array[1] = value;\n      this._dirty = true;\n    }\n  });\n\n  /**\n   * @name z\n   * @type {number}\n   * @memberOf clay.Vector4\n   * @instance\n   */\n  defineProperty(proto, 'z', {\n    get: function () {\n      return this.array[2];\n    },\n    set: function (value) {\n      this.array[2] = value;\n      this._dirty = true;\n    }\n  });\n\n  /**\n   * @name w\n   * @type {number}\n   * @memberOf clay.Vector4\n   * @instance\n   */\n  defineProperty(proto, 'w', {\n    get: function () {\n      return this.array[3];\n    },\n    set: function (value) {\n      this.array[3] = value;\n      this._dirty = true;\n    }\n  });\n}\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.add = function (out, a, b) {\n  vec4.add(out.array, a.array, b.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {number}  x\n * @param  {number}  y\n * @param  {number}  z\n * @return {clay.Vector4}\n */\nVector4.set = function (out, x, y, z, w) {\n  vec4.set(out.array, x, y, z, w);\n  out._dirty = true;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.copy = function (out, b) {\n  vec4.copy(out.array, b.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.dist = function (a, b) {\n  return vec4.distance(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.distance = Vector4.dist;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.div = function (out, a, b) {\n  vec4.divide(out.array, a.array, b.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.divide = Vector4.div;\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.dot = function (a, b) {\n  return vec4.dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.len = function (b) {\n  return vec4.length(b.array);\n};\n\n// Vector4.length = Vector4.len;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @param  {number}  t\n * @return {clay.Vector4}\n */\nVector4.lerp = function (out, a, b, t) {\n  vec4.lerp(out.array, a.array, b.array, t);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.min = function (out, a, b) {\n  vec4.min(out.array, a.array, b.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.max = function (out, a, b) {\n  vec4.max(out.array, a.array, b.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.mul = function (out, a, b) {\n  vec4.multiply(out.array, a.array, b.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.multiply = Vector4.mul;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @return {clay.Vector4}\n */\nVector4.negate = function (out, a) {\n  vec4.negate(out.array, a.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @return {clay.Vector4}\n */\nVector4.normalize = function (out, a) {\n  vec4.normalize(out.array, a.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.random = function (out, scale) {\n  vec4.random(out.array, scale);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.scale = function (out, a, scale) {\n  vec4.scale(out.array, a.array, scale);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.scaleAndAdd = function (out, a, b, scale) {\n  vec4.scaleAndAdd(out.array, a.array, b.array, scale);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.sqrDist = function (a, b) {\n  return vec4.sqrDist(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.squaredDistance = Vector4.sqrDist;\n\n/**\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.sqrLen = function (a) {\n  return vec4.sqrLen(a.array);\n};\n/**\n * @function\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.squaredLength = Vector4.sqrLen;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.sub = function (out, a, b) {\n  vec4.subtract(out.array, a.array, b.array);\n  out._dirty = true;\n  return out;\n};\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.subtract = Vector4.sub;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Matrix4} m\n * @return {clay.Vector4}\n */\nVector4.transformMat4 = function (out, a, m) {\n  vec4.transformMat4(out.array, a.array, m.array);\n  out._dirty = true;\n  return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Quaternion} q\n * @return {clay.Vector4}\n */\nVector4.transformQuat = function (out, a, q) {\n  vec4.transformQuat(out.array, a.array, q.array);\n  out._dirty = true;\n  return out;\n};\nexport default Vector4;","map":{"version":3,"names":["vec4","Vector4","x","y","z","w","array","fromValues","_dirty","prototype","constructor","add","b","set","setArray","arr","clone","copy","dist","distance","div","divide","dot","len","length","lerp","a","t","min","max","mul","multiply","negate","normalize","random","scale","s","scaleAndAdd","sqrDist","squaredDistance","sqrLen","squaredLength","sub","subtract","transformMat4","m","transformQuat","q","toString","Array","join","call","toArray","slice","defineProperty","Object","proto","get","value","out"],"sources":["E:/mytest/node_modules/claygl/src/math/Vector4.js"],"sourcesContent":["import vec4 from '../glmatrix/vec4';\n\n/**\n * @constructor\n * @alias clay.Vector4\n * @param {number} x\n * @param {number} y\n * @param {number} z\n * @param {number} w\n */\nvar Vector4 = function(x, y, z, w) {\n\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n    w = w || 0;\n\n    /**\n     * Storage of Vector4, read and write of x, y, z, w will change the values in array\n     * All methods also operate on the array instead of x, y, z, w components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Vector4#\n     */\n    this.array = vec4.fromValues(x, y, z, w);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Vector4#\n     */\n    this._dirty = true;\n};\n\nVector4.prototype = {\n\n    constructor: Vector4,\n\n    /**\n     * Add b to self\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    add: function(b) {\n        vec4.add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @param  {number}  z\n     * @param  {number}  w\n     * @return {clay.Vector4}\n     */\n    set: function(x, y, z, w) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this.array[2] = z;\n        this.array[3] = w;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y, z and w components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Vector4}\n     */\n    setArray: function(arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n        this.array[2] = arr[2];\n        this.array[3] = arr[3];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Vector4\n     * @return {clay.Vector4}\n     */\n    clone: function() {\n        return new Vector4(this.x, this.y, this.z, this.w);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    copy: function(b) {\n        vec4.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for distance\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    dist: function(b) {\n        return vec4.dist(this.array, b.array);\n    },\n\n    /**\n     * Distance between self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    distance: function(b) {\n        return vec4.distance(this.array, b.array);\n    },\n\n    /**\n     * Alias for divide\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    div: function(b) {\n        vec4.div(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Divide self by b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    divide: function(b) {\n        vec4.divide(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    dot: function(b) {\n        return vec4.dot(this.array, b.array);\n    },\n\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function() {\n        return vec4.len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function() {\n        return vec4.length(this.array);\n    },\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Vector4} a\n     * @param  {clay.Vector4} b\n     * @param  {number}  t\n     * @return {clay.Vector4}\n     */\n    lerp: function(a, b, t) {\n        vec4.lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Minimum of self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    min: function(b) {\n        vec4.min(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Maximum of self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    max: function(b) {\n        vec4.max(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    mul: function(b) {\n        vec4.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    multiply: function(b) {\n        vec4.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Negate self\n     * @return {clay.Vector4}\n     */\n    negate: function() {\n        vec4.negate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Vector4}\n     */\n    normalize: function() {\n        vec4.normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Generate random x, y, z, w components with a given scale\n     * @param  {number} scale\n     * @return {clay.Vector4}\n     */\n    random: function(scale) {\n        vec4.random(this.array, scale);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self\n     * @param  {number}  scale\n     * @return {clay.Vector4}\n     */\n    scale: function(s) {\n        vec4.scale(this.array, this.array, s);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Scale b and add to self\n     * @param  {clay.Vector4} b\n     * @param  {number}  scale\n     * @return {clay.Vector4}\n     */\n    scaleAndAdd: function(b, s) {\n        vec4.scaleAndAdd(this.array, this.array, b.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredDistance\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    sqrDist: function(b) {\n        return vec4.sqrDist(this.array, b.array);\n    },\n\n    /**\n     * Squared distance between self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    squaredDistance: function(b) {\n        return vec4.squaredDistance(this.array, b.array);\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function() {\n        return vec4.sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function() {\n        return vec4.squaredLength(this.array);\n    },\n\n    /**\n     * Alias for subtract\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    sub: function(b) {\n        vec4.sub(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Subtract b from self\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    subtract: function(b) {\n        vec4.subtract(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix4 m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector4}\n     */\n    transformMat4: function(m) {\n        vec4.transformMat4(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Quaternion q\n     * @param  {clay.Quaternion} q\n     * @return {clay.Vector4}\n     */\n    transformQuat: function(q) {\n        vec4.transformQuat(this.array, this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n// Getter and Setter\nif (defineProperty) {\n\n    var proto = Vector4.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name z\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            return this.array[2];\n        },\n        set: function (value) {\n            this.array[2] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name w\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'w', {\n        get: function () {\n            return this.array[3];\n        },\n        set: function (value) {\n            this.array[3] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.add = function(out, a, b) {\n    vec4.add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {number}  x\n * @param  {number}  y\n * @param  {number}  z\n * @return {clay.Vector4}\n */\nVector4.set = function(out, x, y, z, w) {\n    vec4.set(out.array, x, y, z, w);\n    out._dirty = true;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.copy = function(out, b) {\n    vec4.copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.dist = function(a, b) {\n    return vec4.distance(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.distance = Vector4.dist;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.div = function(out, a, b) {\n    vec4.divide(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.divide = Vector4.div;\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.dot = function(a, b) {\n    return vec4.dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.len = function(b) {\n    return vec4.length(b.array);\n};\n\n// Vector4.length = Vector4.len;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @param  {number}  t\n * @return {clay.Vector4}\n */\nVector4.lerp = function(out, a, b, t) {\n    vec4.lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.min = function(out, a, b) {\n    vec4.min(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.max = function(out, a, b) {\n    vec4.max(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.mul = function(out, a, b) {\n    vec4.multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.multiply = Vector4.mul;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @return {clay.Vector4}\n */\nVector4.negate = function(out, a) {\n    vec4.negate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @return {clay.Vector4}\n */\nVector4.normalize = function(out, a) {\n    vec4.normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.random = function(out, scale) {\n    vec4.random(out.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.scale = function(out, a, scale) {\n    vec4.scale(out.array, a.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.scaleAndAdd = function(out, a, b, scale) {\n    vec4.scaleAndAdd(out.array, a.array, b.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.sqrDist = function(a, b) {\n    return vec4.sqrDist(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.squaredDistance = Vector4.sqrDist;\n\n/**\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.sqrLen = function(a) {\n    return vec4.sqrLen(a.array);\n};\n/**\n * @function\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.squaredLength = Vector4.sqrLen;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.sub = function(out, a, b) {\n    vec4.subtract(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.subtract = Vector4.sub;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Matrix4} m\n * @return {clay.Vector4}\n */\nVector4.transformMat4 = function(out, a, m) {\n    vec4.transformMat4(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Quaternion} q\n * @return {clay.Vector4}\n */\nVector4.transformQuat = function(out, a, q) {\n    vec4.transformQuat(out.array, a.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Vector4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}