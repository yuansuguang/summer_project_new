{"ast":null,"code":"import Node from './Node';\nimport Shader from './Shader';\nimport lightShader from './shader/source/header/light';\nShader['import'](lightShader);\n\n/**\n * @constructor clay.Light\n * @extends clay.Node\n */\nvar Light = Node.extend(function () {\n  return /** @lends clay.Light# */{\n    /**\n     * Light RGB color\n     * @type {number[]}\n     */\n    color: [1, 1, 1],\n    /**\n     * Light intensity\n     * @type {number}\n     */\n    intensity: 1.0,\n    // Config for shadow map\n    /**\n     * If light cast shadow\n     * @type {boolean}\n     */\n    castShadow: true,\n    /**\n     * Shadow map size\n     * @type {number}\n     */\n    shadowResolution: 512,\n    /**\n     * Light group, shader with same `lightGroup` will be affected\n     *\n     * Only useful in forward rendering\n     * @type {number}\n     */\n    group: 0\n  };\n}, /** @lends clay.Light.prototype. */\n{\n  /**\n   * Light type\n   * @type {string}\n   * @memberOf clay.Light#\n   */\n  type: '',\n  /**\n   * @return {clay.Light}\n   * @memberOf clay.Light.prototype\n   */\n  clone: function () {\n    var light = Node.prototype.clone.call(this);\n    light.color = Array.prototype.slice.call(this.color);\n    light.intensity = this.intensity;\n    light.castShadow = this.castShadow;\n    light.shadowResolution = this.shadowResolution;\n    return light;\n  }\n});\nexport default Light;","map":{"version":3,"names":["Node","Shader","lightShader","Light","extend","color","intensity","castShadow","shadowResolution","group","type","clone","light","prototype","call","Array","slice"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/claygl/src/Light.js"],"sourcesContent":["import Node from './Node';\nimport Shader from './Shader';\n\nimport lightShader from './shader/source/header/light';\nShader['import'](lightShader);\n\n/**\n * @constructor clay.Light\n * @extends clay.Node\n */\nvar Light = Node.extend(function(){\n    return /** @lends clay.Light# */ {\n        /**\n         * Light RGB color\n         * @type {number[]}\n         */\n        color: [1, 1, 1],\n\n        /**\n         * Light intensity\n         * @type {number}\n         */\n        intensity: 1.0,\n\n        // Config for shadow map\n        /**\n         * If light cast shadow\n         * @type {boolean}\n         */\n        castShadow: true,\n\n        /**\n         * Shadow map size\n         * @type {number}\n         */\n        shadowResolution: 512,\n\n        /**\n         * Light group, shader with same `lightGroup` will be affected\n         *\n         * Only useful in forward rendering\n         * @type {number}\n         */\n        group: 0\n    };\n},\n/** @lends clay.Light.prototype. */\n{\n    /**\n     * Light type\n     * @type {string}\n     * @memberOf clay.Light#\n     */\n    type: '',\n\n    /**\n     * @return {clay.Light}\n     * @memberOf clay.Light.prototype\n     */\n    clone: function() {\n        var light = Node.prototype.clone.call(this);\n        light.color = Array.prototype.slice.call(this.color);\n        light.intensity = this.intensity;\n        light.castShadow = this.castShadow;\n        light.shadowResolution = this.shadowResolution;\n\n        return light;\n    }\n});\n\nexport default Light;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAOC,WAAW,MAAM,8BAA8B;AACtDD,MAAM,CAAC,QAAQ,CAAC,CAACC,WAAW,CAAC;;AAE7B;AACA;AACA;AACA;AACA,IAAIC,KAAK,GAAGH,IAAI,CAACI,MAAM,CAAC,YAAU;EAC9B,OAAO,yBAA0B;IAC7B;AACR;AACA;AACA;IACQC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAEhB;AACR;AACA;AACA;IACQC,SAAS,EAAE,GAAG;IAEd;IACA;AACR;AACA;AACA;IACQC,UAAU,EAAE,IAAI;IAEhB;AACR;AACA;AACA;IACQC,gBAAgB,EAAE,GAAG;IAErB;AACR;AACA;AACA;AACA;AACA;IACQC,KAAK,EAAE;EACX,CAAC;AACL,CAAC,EACD;AACA;EACI;AACJ;AACA;AACA;AACA;EACIC,IAAI,EAAE,EAAE;EAER;AACJ;AACA;AACA;EACIC,KAAK,EAAE,SAAAA,CAAA,EAAW;IACd,IAAIC,KAAK,GAAGZ,IAAI,CAACa,SAAS,CAACF,KAAK,CAACG,IAAI,CAAC,IAAI,CAAC;IAC3CF,KAAK,CAACP,KAAK,GAAGU,KAAK,CAACF,SAAS,CAACG,KAAK,CAACF,IAAI,CAAC,IAAI,CAACT,KAAK,CAAC;IACpDO,KAAK,CAACN,SAAS,GAAG,IAAI,CAACA,SAAS;IAChCM,KAAK,CAACL,UAAU,GAAG,IAAI,CAACA,UAAU;IAClCK,KAAK,CAACJ,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;IAE9C,OAAOI,KAAK;EAChB;AACJ,CAAC,CAAC;AAEF,eAAeT,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}