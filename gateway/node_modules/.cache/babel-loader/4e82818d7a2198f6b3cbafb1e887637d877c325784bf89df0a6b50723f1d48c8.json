{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport user from \"@/store/user\";\nexport default {\n  methods: {\n    getQnDataSelf() {\n      let loadingIns = this.$loading({\n        fullscreen: true,\n        text: '拼命加载中'\n      });\n      const formData = new FormData();\n      formData.append(\"qn_id\", this.$route.query.pid);\n      this.$axios({\n        method: 'post',\n        url: '/sm/get/qn_detail',\n        data: formData\n      }).then(res => {\n        loadingIns.close();\n        switch (res.data.status_code) {\n          case 0:\n            this.$message.error(\"您无权访问！\");\n            this.$router.push('/');\n            break;\n          case 1:\n            this.title = res.data.title;\n            this.description = res.data.description;\n            this.type = res.data.type;\n            this.questions = res.data.questions;\n            this.isReleased = res.data.is_released;\n            this.isLogic = res.data.is_logic;\n            this.timeFrame = res.data.finished_time;\n            this.max_recycling = res.data.max_recycling;\n            if (this.max_recycling >= 1000) {\n              this.hasRecycleLimit = false;\n              this.max_recycling = 10000;\n            } else this.hasRecycleLimit = true;\n\n            // 多选题标准答案数据格式转换\n            if (this.type === '2') {\n              for (var i = 0; i < this.questions.length; i++) {\n                if (this.questions[i].type === 'checkbox') {\n                  this.questions[i].refer = this.questions[i].refer.split('-<^-^>-');\n                }\n              }\n            }\n            this.InitOutline();\n            break;\n          default:\n            this.$message.error(\"访问失败！\");\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    getQnDataForPreview(_autoSave = false) {\n      const formData = new FormData();\n      formData.append(\"qn_id\", this.$route.query.pid);\n      let loadingIns;\n      if (_autoSave === false) loadingIns = this.$loading({\n        fullscreen: true\n      });\n      this.$axios({\n        method: 'post',\n        url: '/sm/get/qn_detail',\n        data: formData\n      }).then(res => {\n        if (_autoSave === false) loadingIns.close();\n        switch (res.data.status_code) {\n          case 0:\n            this.$message.error(\"您无权访问！\");\n            this.$router.push('/');\n            break;\n          case 1:\n            this.title = res.data.title;\n            this.description = res.data.description;\n            this.type = res.data.type;\n            if (_autoSave === true) {\n              var new_ques = res.data.questions;\n              for (var k = 0; k < new_ques.length; k++) {\n                this.questions[k].options = new_ques[k].options;\n              }\n            } else {\n              this.questions = res.data.questions;\n            }\n\n            //建立答案框架\n            if (_autoSave === false) {\n              this.answers = [];\n              for (var i = 0; i < this.questions.length; i++) {\n                this.answers.push({\n                  question_id: this.questions[i].question_id,\n                  type: this.questions[i].type,\n                  ans: null,\n                  ansList: [],\n                  answer: ''\n                });\n              }\n            }\n            break;\n          default:\n            this.$message.error(\"访问失败！\");\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    getQnDataForFill(_autoSave = false, _requireAuth = true, _outOfOrder = false) {\n      const userInfo = user.getters.getUser(user.state());\n      if (_requireAuth && !userInfo) {\n        this.$message.warning(\"请先登录\");\n        this.$router.push('/login');\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"code\", this.$route.query.code);\n      let loadingIns;\n      if (_autoSave === false) loadingIns = this.$loading({\n        fullscreen: true\n      });\n      this.$axios({\n        method: 'post',\n        url: '/sm/get/qn_for_fill',\n        data: formData\n      }).then(res => {\n        if (_autoSave === false) loadingIns.close();\n        switch (res.data.status_code) {\n          case 1:\n            this.title = res.data.title;\n            this.description = res.data.description;\n            this.type = res.data.type;\n            if (_autoSave === true) {\n              var new_ques = res.data.questions;\n              for (var jj = 0; jj < new_ques.length; jj++) {\n                this.questions[jj].options = new_ques[jj].options;\n              }\n            } else {\n              this.questions = res.data.questions;\n            }\n            if (res.data.finished_time !== undefined && res.data.finished_time !== '') {\n              this.finished_time = res.data.finished_time;\n            }\n            if (_outOfOrder) {\n              this.quesStorage = JSON.parse(JSON.stringify(this.questions));\n              var info_ques = [];\n              var real_ques = [];\n              for (var k = 0; k < this.quesStorage.length; k++) {\n                if (this.quesStorage[k].type === 'name' || this.quesStorage[k].type === 'stuId' || this.quesStorage[k].type === 'class' || this.quesStorage[k].type === 'school') info_ques.push(this.quesStorage[k]);else real_ques.push(this.quesStorage[k]);\n              }\n              const userInfo = user.getters.getUser(user.state());\n              var new_questions = JSON.parse(JSON.stringify(real_ques));\n              var new_order = this.str2Array(userInfo.user.username, new_questions.length);\n              for (var j = 0; j < new_questions.length; j++) real_ques[j] = new_questions[new_order[j]];\n              this.questions = info_ques.concat(real_ques);\n\n              //-----------------------调整id\n              for (var ii = 0; ii < this.questions.length; ii++) {\n                this.questions[ii].id = ii + 1;\n              }\n            }\n            if (_autoSave === false) {\n              //建立答案框架\n              this.answers = [];\n              for (var i = 0; i < this.questions.length; i++) {\n                this.answers.push({\n                  question_id: this.questions[i].question_id,\n                  type: this.questions[i].type,\n                  ans: null,\n                  ansList: [],\n                  answer: ''\n                });\n              }\n            }\n            break;\n          case 2:\n            this.$router.push('PageNotFound');\n            break;\n          case 3:\n            this.close = true;\n            break;\n          case 666:\n            this.close = true;\n            break;\n          case 888:\n            this.repeat = true;\n            break;\n          case 999:\n            this.repeat = true;\n            break;\n          default:\n            this.$message.error(\"访问失败！\");\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["user","methods","getQnDataSelf","loadingIns","$loading","fullscreen","text","formData","FormData","append","$route","query","pid","$axios","method","url","data","then","res","close","status_code","$message","error","$router","push","title","description","type","questions","isReleased","is_released","isLogic","is_logic","timeFrame","finished_time","max_recycling","hasRecycleLimit","i","length","refer","split","InitOutline","catch","err","console","log","getQnDataForPreview","_autoSave","new_ques","k","options","answers","question_id","ans","ansList","answer","getQnDataForFill","_requireAuth","_outOfOrder","userInfo","getters","getUser","state","warning","code","jj","undefined","quesStorage","JSON","parse","stringify","info_ques","real_ques","new_questions","new_order","str2Array","username","j","concat","ii","id","repeat"],"sources":["E:/mytest/src/utils/getDataApi.js"],"sourcesContent":["import user from \"@/store/user\";\r\n\r\nexport default {\r\n    methods: {\r\n        getQnDataSelf() {\r\n            let loadingIns = this.$loading({fullscreen: true, text: '拼命加载中'});\r\n            const formData = new FormData();\r\n            formData.append(\"qn_id\", this.$route.query.pid);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/sm/get/qn_detail',\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    loadingIns.close();\r\n                    switch (res.data.status_code) {\r\n                        case 0:\r\n                            this.$message.error(\"您无权访问！\");\r\n                            this.$router.push('/');\r\n                            break;\r\n                        case 1:\r\n                            this.title = res.data.title;\r\n                            this.description = res.data.description;\r\n                            this.type = res.data.type;\r\n                            this.questions = res.data.questions;\r\n                            this.isReleased = res.data.is_released;\r\n                            this.isLogic = res.data.is_logic;\r\n                            this.timeFrame = res.data.finished_time;\r\n                            this.max_recycling = res.data.max_recycling;\r\n\r\n                            if (this.max_recycling >= 1000) {\r\n                                this.hasRecycleLimit = false;\r\n                                this.max_recycling = 10000;\r\n                            } else\r\n                                this.hasRecycleLimit = true;\r\n\r\n                            // 多选题标准答案数据格式转换\r\n                            if (this.type === '2') {\r\n                                for (var i=0; i<this.questions.length; i++) {\r\n                                    if (this.questions[i].type === 'checkbox') {\r\n                                        this.questions[i].refer = this.questions[i].refer.split('-<^-^>-');\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            this.InitOutline();\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"访问失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        getQnDataForPreview(_autoSave=false) {\r\n            const formData = new FormData();\r\n            formData.append(\"qn_id\", this.$route.query.pid);\r\n            let loadingIns;\r\n            if (_autoSave === false)\r\n                loadingIns = this.$loading({fullscreen: true});\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/sm/get/qn_detail',\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    if (_autoSave === false)\r\n                        loadingIns.close();\r\n                    switch (res.data.status_code) {\r\n                        case 0:\r\n                            this.$message.error(\"您无权访问！\");\r\n                            this.$router.push('/');\r\n                            break;\r\n                        case 1:\r\n                            this.title = res.data.title;\r\n                            this.description = res.data.description;\r\n                            this.type = res.data.type;\r\n\r\n                            if (_autoSave === true) {\r\n                                var new_ques =  res.data.questions;\r\n                                for (var k=0; k<new_ques.length; k++) {\r\n                                    this.questions[k].options = new_ques[k].options;\r\n                                }\r\n                            } else {\r\n                                this.questions = res.data.questions;\r\n                            }\r\n\r\n\r\n                            //建立答案框架\r\n                            if (_autoSave === false) {\r\n                                this.answers = []\r\n                                for (var i=0; i<this.questions.length; i++) {\r\n                                    this.answers.push({\r\n                                        question_id: this.questions[i].question_id,\r\n                                        type: this.questions[i].type,\r\n                                        ans: null,\r\n                                        ansList: [],\r\n                                        answer: ''\r\n                                    })\r\n                                }\r\n                            }\r\n\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"访问失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        getQnDataForFill(_autoSave=false, _requireAuth=true, _outOfOrder=false) {\r\n            const userInfo = user.getters.getUser(user.state());\r\n            if (_requireAuth && !userInfo) {\r\n                this.$message.warning(\"请先登录\");\r\n                this.$router.push('/login');\r\n                return;\r\n            }\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"code\", this.$route.query.code);\r\n            let loadingIns;\r\n            if (_autoSave === false)\r\n                loadingIns = this.$loading({fullscreen: true});\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/sm/get/qn_for_fill',\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    if (_autoSave === false)\r\n                        loadingIns.close();\r\n                    switch (res.data.status_code) {\r\n                        case 1:\r\n                            this.title = res.data.title;\r\n                            this.description = res.data.description;\r\n                            this.type = res.data.type;\r\n                            if (_autoSave === true) {\r\n                                var new_ques =  res.data.questions;\r\n                                for (var jj=0; jj<new_ques.length; jj++) {\r\n                                    this.questions[jj].options = new_ques[jj].options;\r\n                                }\r\n                            } else {\r\n                                this.questions = res.data.questions;\r\n                            }\r\n                            if (res.data.finished_time !== undefined && res.data.finished_time !== '') {\r\n                                this.finished_time = res.data.finished_time;\r\n                            }\r\n\r\n\r\n                            if (_outOfOrder) {\r\n                                this.quesStorage = JSON.parse(JSON.stringify(this.questions));\r\n\r\n                                var info_ques = [];\r\n                                var real_ques = [];\r\n                                for (var k=0; k<this.quesStorage.length; k++) {\r\n                                    if (this.quesStorage[k].type === 'name' || this.quesStorage[k].type==='stuId' || this.quesStorage[k].type==='class' || this.quesStorage[k].type === 'school')\r\n                                        info_ques.push(this.quesStorage[k]);\r\n                                    else\r\n                                        real_ques.push(this.quesStorage[k]);\r\n                                }\r\n                                const userInfo = user.getters.getUser(user.state());\r\n                                var new_questions = JSON.parse(JSON.stringify(real_ques));\r\n                                var new_order = this.str2Array(userInfo.user.username, new_questions.length);\r\n                                for (var j=0; j<new_questions.length; j++)\r\n                                    real_ques[j] = new_questions[new_order[j]];\r\n                                this.questions = info_ques.concat(real_ques);\r\n\r\n                                //-----------------------调整id\r\n                                for (var ii=0; ii<this.questions.length; ii++) {\r\n                                    this.questions[ii].id = ii+1;\r\n                                }\r\n                            }\r\n\r\n                            if (_autoSave === false) {\r\n                                //建立答案框架\r\n                                this.answers = [];\r\n                                for (var i=0; i<this.questions.length; i++) {\r\n                                    this.answers.push({\r\n                                        question_id: this.questions[i].question_id,\r\n                                        type: this.questions[i].type,\r\n                                        ans: null,\r\n                                        ansList: [],\r\n                                        answer: ''\r\n                                    })\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            this.$router.push('PageNotFound');\r\n                            break;\r\n                        case 3:\r\n                            this.close = true;\r\n                            break;\r\n                        case 666:\r\n                            this.close = true;\r\n                            break;\r\n                        case 888:\r\n                            this.repeat = true;\r\n                            break;\r\n                        case 999:\r\n                            this.repeat = true;\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"访问失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,IAAI,MAAM,cAAc;AAE/B,eAAe;EACXC,OAAO,EAAE;IACLC,aAAaA,CAAA,EAAG;MACZ,IAAIC,UAAU,GAAG,IAAI,CAACC,QAAQ,CAAC;QAACC,UAAU,EAAE,IAAI;QAAEC,IAAI,EAAE;MAAO,CAAC,CAAC;MACjE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,GAAG,CAAC;MAC/C,IAAI,CAACC,MAAM,CAAC;QACRC,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,mBAAmB;QACxBC,IAAI,EAAET;MACV,CAAC,CAAC,CACGU,IAAI,CAACC,GAAG,IAAI;QACTf,UAAU,CAACgB,KAAK,CAAC,CAAC;QAClB,QAAQD,GAAG,CAACF,IAAI,CAACI,WAAW;UACxB,KAAK,CAAC;YACF,IAAI,CAACC,QAAQ,CAACC,KAAK,CAAC,QAAQ,CAAC;YAC7B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;YACtB;UACJ,KAAK,CAAC;YACF,IAAI,CAACC,KAAK,GAAGP,GAAG,CAACF,IAAI,CAACS,KAAK;YAC3B,IAAI,CAACC,WAAW,GAAGR,GAAG,CAACF,IAAI,CAACU,WAAW;YACvC,IAAI,CAACC,IAAI,GAAGT,GAAG,CAACF,IAAI,CAACW,IAAI;YACzB,IAAI,CAACC,SAAS,GAAGV,GAAG,CAACF,IAAI,CAACY,SAAS;YACnC,IAAI,CAACC,UAAU,GAAGX,GAAG,CAACF,IAAI,CAACc,WAAW;YACtC,IAAI,CAACC,OAAO,GAAGb,GAAG,CAACF,IAAI,CAACgB,QAAQ;YAChC,IAAI,CAACC,SAAS,GAAGf,GAAG,CAACF,IAAI,CAACkB,aAAa;YACvC,IAAI,CAACC,aAAa,GAAGjB,GAAG,CAACF,IAAI,CAACmB,aAAa;YAE3C,IAAI,IAAI,CAACA,aAAa,IAAI,IAAI,EAAE;cAC5B,IAAI,CAACC,eAAe,GAAG,KAAK;cAC5B,IAAI,CAACD,aAAa,GAAG,KAAK;YAC9B,CAAC,MACG,IAAI,CAACC,eAAe,GAAG,IAAI;;YAE/B;YACA,IAAI,IAAI,CAACT,IAAI,KAAK,GAAG,EAAE;cACnB,KAAK,IAAIU,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,IAAI,CAACT,SAAS,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;gBACxC,IAAI,IAAI,CAACT,SAAS,CAACS,CAAC,CAAC,CAACV,IAAI,KAAK,UAAU,EAAE;kBACvC,IAAI,CAACC,SAAS,CAACS,CAAC,CAAC,CAACE,KAAK,GAAG,IAAI,CAACX,SAAS,CAACS,CAAC,CAAC,CAACE,KAAK,CAACC,KAAK,CAAC,SAAS,CAAC;gBACtE;cACJ;YACJ;YAEA,IAAI,CAACC,WAAW,CAAC,CAAC;YAClB;UACJ;YACI,IAAI,CAACpB,QAAQ,CAACC,KAAK,CAAC,OAAO,CAAC;YAC5B;QACR;MACJ,CAAC,CAAC,CACDoB,KAAK,CAACC,GAAG,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC;IACV,CAAC;IACDG,mBAAmBA,CAACC,SAAS,GAAC,KAAK,EAAE;MACjC,MAAMxC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,GAAG,CAAC;MAC/C,IAAIT,UAAU;MACd,IAAI4C,SAAS,KAAK,KAAK,EACnB5C,UAAU,GAAG,IAAI,CAACC,QAAQ,CAAC;QAACC,UAAU,EAAE;MAAI,CAAC,CAAC;MAClD,IAAI,CAACQ,MAAM,CAAC;QACRC,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,mBAAmB;QACxBC,IAAI,EAAET;MACV,CAAC,CAAC,CACGU,IAAI,CAACC,GAAG,IAAI;QACT,IAAI6B,SAAS,KAAK,KAAK,EACnB5C,UAAU,CAACgB,KAAK,CAAC,CAAC;QACtB,QAAQD,GAAG,CAACF,IAAI,CAACI,WAAW;UACxB,KAAK,CAAC;YACF,IAAI,CAACC,QAAQ,CAACC,KAAK,CAAC,QAAQ,CAAC;YAC7B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;YACtB;UACJ,KAAK,CAAC;YACF,IAAI,CAACC,KAAK,GAAGP,GAAG,CAACF,IAAI,CAACS,KAAK;YAC3B,IAAI,CAACC,WAAW,GAAGR,GAAG,CAACF,IAAI,CAACU,WAAW;YACvC,IAAI,CAACC,IAAI,GAAGT,GAAG,CAACF,IAAI,CAACW,IAAI;YAEzB,IAAIoB,SAAS,KAAK,IAAI,EAAE;cACpB,IAAIC,QAAQ,GAAI9B,GAAG,CAACF,IAAI,CAACY,SAAS;cAClC,KAAK,IAAIqB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACD,QAAQ,CAACV,MAAM,EAAEW,CAAC,EAAE,EAAE;gBAClC,IAAI,CAACrB,SAAS,CAACqB,CAAC,CAAC,CAACC,OAAO,GAAGF,QAAQ,CAACC,CAAC,CAAC,CAACC,OAAO;cACnD;YACJ,CAAC,MAAM;cACH,IAAI,CAACtB,SAAS,GAAGV,GAAG,CAACF,IAAI,CAACY,SAAS;YACvC;;YAGA;YACA,IAAImB,SAAS,KAAK,KAAK,EAAE;cACrB,IAAI,CAACI,OAAO,GAAG,EAAE;cACjB,KAAK,IAAId,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,IAAI,CAACT,SAAS,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;gBACxC,IAAI,CAACc,OAAO,CAAC3B,IAAI,CAAC;kBACd4B,WAAW,EAAE,IAAI,CAACxB,SAAS,CAACS,CAAC,CAAC,CAACe,WAAW;kBAC1CzB,IAAI,EAAE,IAAI,CAACC,SAAS,CAACS,CAAC,CAAC,CAACV,IAAI;kBAC5B0B,GAAG,EAAE,IAAI;kBACTC,OAAO,EAAE,EAAE;kBACXC,MAAM,EAAE;gBACZ,CAAC,CAAC;cACN;YACJ;YAEA;UACJ;YACI,IAAI,CAAClC,QAAQ,CAACC,KAAK,CAAC,OAAO,CAAC;YAC5B;QACR;MACJ,CAAC,CAAC,CACDoB,KAAK,CAACC,GAAG,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC;IACV,CAAC;IACDa,gBAAgBA,CAACT,SAAS,GAAC,KAAK,EAAEU,YAAY,GAAC,IAAI,EAAEC,WAAW,GAAC,KAAK,EAAE;MACpE,MAAMC,QAAQ,GAAG3D,IAAI,CAAC4D,OAAO,CAACC,OAAO,CAAC7D,IAAI,CAAC8D,KAAK,CAAC,CAAC,CAAC;MACnD,IAAIL,YAAY,IAAI,CAACE,QAAQ,EAAE;QAC3B,IAAI,CAACtC,QAAQ,CAAC0C,OAAO,CAAC,MAAM,CAAC;QAC7B,IAAI,CAACxC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC3B;MACJ;MAEA,MAAMjB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACqD,IAAI,CAAC;MAC/C,IAAI7D,UAAU;MACd,IAAI4C,SAAS,KAAK,KAAK,EACnB5C,UAAU,GAAG,IAAI,CAACC,QAAQ,CAAC;QAACC,UAAU,EAAE;MAAI,CAAC,CAAC;MAClD,IAAI,CAACQ,MAAM,CAAC;QACRC,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,qBAAqB;QAC1BC,IAAI,EAAET;MACV,CAAC,CAAC,CACGU,IAAI,CAACC,GAAG,IAAI;QACT,IAAI6B,SAAS,KAAK,KAAK,EACnB5C,UAAU,CAACgB,KAAK,CAAC,CAAC;QACtB,QAAQD,GAAG,CAACF,IAAI,CAACI,WAAW;UACxB,KAAK,CAAC;YACF,IAAI,CAACK,KAAK,GAAGP,GAAG,CAACF,IAAI,CAACS,KAAK;YAC3B,IAAI,CAACC,WAAW,GAAGR,GAAG,CAACF,IAAI,CAACU,WAAW;YACvC,IAAI,CAACC,IAAI,GAAGT,GAAG,CAACF,IAAI,CAACW,IAAI;YACzB,IAAIoB,SAAS,KAAK,IAAI,EAAE;cACpB,IAAIC,QAAQ,GAAI9B,GAAG,CAACF,IAAI,CAACY,SAAS;cAClC,KAAK,IAAIqC,EAAE,GAAC,CAAC,EAAEA,EAAE,GAACjB,QAAQ,CAACV,MAAM,EAAE2B,EAAE,EAAE,EAAE;gBACrC,IAAI,CAACrC,SAAS,CAACqC,EAAE,CAAC,CAACf,OAAO,GAAGF,QAAQ,CAACiB,EAAE,CAAC,CAACf,OAAO;cACrD;YACJ,CAAC,MAAM;cACH,IAAI,CAACtB,SAAS,GAAGV,GAAG,CAACF,IAAI,CAACY,SAAS;YACvC;YACA,IAAIV,GAAG,CAACF,IAAI,CAACkB,aAAa,KAAKgC,SAAS,IAAIhD,GAAG,CAACF,IAAI,CAACkB,aAAa,KAAK,EAAE,EAAE;cACvE,IAAI,CAACA,aAAa,GAAGhB,GAAG,CAACF,IAAI,CAACkB,aAAa;YAC/C;YAGA,IAAIwB,WAAW,EAAE;cACb,IAAI,CAACS,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC,IAAI,CAAC1C,SAAS,CAAC,CAAC;cAE7D,IAAI2C,SAAS,GAAG,EAAE;cAClB,IAAIC,SAAS,GAAG,EAAE;cAClB,KAAK,IAAIvB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,IAAI,CAACkB,WAAW,CAAC7B,MAAM,EAAEW,CAAC,EAAE,EAAE;gBAC1C,IAAI,IAAI,CAACkB,WAAW,CAAClB,CAAC,CAAC,CAACtB,IAAI,KAAK,MAAM,IAAI,IAAI,CAACwC,WAAW,CAAClB,CAAC,CAAC,CAACtB,IAAI,KAAG,OAAO,IAAI,IAAI,CAACwC,WAAW,CAAClB,CAAC,CAAC,CAACtB,IAAI,KAAG,OAAO,IAAI,IAAI,CAACwC,WAAW,CAAClB,CAAC,CAAC,CAACtB,IAAI,KAAK,QAAQ,EACxJ4C,SAAS,CAAC/C,IAAI,CAAC,IAAI,CAAC2C,WAAW,CAAClB,CAAC,CAAC,CAAC,CAAC,KAEpCuB,SAAS,CAAChD,IAAI,CAAC,IAAI,CAAC2C,WAAW,CAAClB,CAAC,CAAC,CAAC;cAC3C;cACA,MAAMU,QAAQ,GAAG3D,IAAI,CAAC4D,OAAO,CAACC,OAAO,CAAC7D,IAAI,CAAC8D,KAAK,CAAC,CAAC,CAAC;cACnD,IAAIW,aAAa,GAAGL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACE,SAAS,CAAC,CAAC;cACzD,IAAIE,SAAS,GAAG,IAAI,CAACC,SAAS,CAAChB,QAAQ,CAAC3D,IAAI,CAAC4E,QAAQ,EAAEH,aAAa,CAACnC,MAAM,CAAC;cAC5E,KAAK,IAAIuC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACJ,aAAa,CAACnC,MAAM,EAAEuC,CAAC,EAAE,EACrCL,SAAS,CAACK,CAAC,CAAC,GAAGJ,aAAa,CAACC,SAAS,CAACG,CAAC,CAAC,CAAC;cAC9C,IAAI,CAACjD,SAAS,GAAG2C,SAAS,CAACO,MAAM,CAACN,SAAS,CAAC;;cAE5C;cACA,KAAK,IAAIO,EAAE,GAAC,CAAC,EAAEA,EAAE,GAAC,IAAI,CAACnD,SAAS,CAACU,MAAM,EAAEyC,EAAE,EAAE,EAAE;gBAC3C,IAAI,CAACnD,SAAS,CAACmD,EAAE,CAAC,CAACC,EAAE,GAAGD,EAAE,GAAC,CAAC;cAChC;YACJ;YAEA,IAAIhC,SAAS,KAAK,KAAK,EAAE;cACrB;cACA,IAAI,CAACI,OAAO,GAAG,EAAE;cACjB,KAAK,IAAId,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,IAAI,CAACT,SAAS,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;gBACxC,IAAI,CAACc,OAAO,CAAC3B,IAAI,CAAC;kBACd4B,WAAW,EAAE,IAAI,CAACxB,SAAS,CAACS,CAAC,CAAC,CAACe,WAAW;kBAC1CzB,IAAI,EAAE,IAAI,CAACC,SAAS,CAACS,CAAC,CAAC,CAACV,IAAI;kBAC5B0B,GAAG,EAAE,IAAI;kBACTC,OAAO,EAAE,EAAE;kBACXC,MAAM,EAAE;gBACZ,CAAC,CAAC;cACN;YACJ;YACA;UACJ,KAAK,CAAC;YACF,IAAI,CAAChC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;YACjC;UACJ,KAAK,CAAC;YACF,IAAI,CAACL,KAAK,GAAG,IAAI;YACjB;UACJ,KAAK,GAAG;YACJ,IAAI,CAACA,KAAK,GAAG,IAAI;YACjB;UACJ,KAAK,GAAG;YACJ,IAAI,CAAC8D,MAAM,GAAG,IAAI;YAClB;UACJ,KAAK,GAAG;YACJ,IAAI,CAACA,MAAM,GAAG,IAAI;YAClB;UACJ;YACI,IAAI,CAAC5D,QAAQ,CAACC,KAAK,CAAC,OAAO,CAAC;YAC5B;QACR;MACJ,CAAC,CAAC,CACDoB,KAAK,CAACC,GAAG,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC;IACV;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}