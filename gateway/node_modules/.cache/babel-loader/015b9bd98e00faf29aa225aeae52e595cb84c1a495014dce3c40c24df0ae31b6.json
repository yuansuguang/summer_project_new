{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nvar defaultOption = {\n  show: true,\n  grid3DIndex: 0,\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字\n  name: '',\n  // 坐标轴名字位置\n  nameLocation: 'middle',\n  nameTextStyle: {\n    fontSize: 16\n  },\n  // 文字与轴线距离\n  nameGap: 20,\n  axisPointer: {},\n  axisLine: {},\n  // 坐标轴小标记\n  axisTick: {},\n  axisLabel: {},\n  // 分隔区域\n  splitArea: {}\n};\nvar categoryAxis = echarts.util.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    // Default with axisTick\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  },\n  axisPointer: {\n    label: {\n      show: false\n    }\n  }\n}, defaultOption);\nvar valueAxis = echarts.util.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5,\n  // Minimum interval\n  // minInterval: null\n  axisPointer: {\n    label: {}\n  }\n}, defaultOption); // FIXME\n\nvar timeAxis = echarts.util.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, valueAxis);\nvar logAxis = echarts.util.defaults({\n  logBase: 10\n}, valueAxis);\nlogAxis.scale = true;\nexport default {\n  categoryAxis3D: categoryAxis,\n  valueAxis3D: valueAxis,\n  timeAxis3D: timeAxis,\n  logAxis3D: logAxis\n};","map":{"version":3,"names":["echarts","defaultOption","show","grid3DIndex","inverse","name","nameLocation","nameTextStyle","fontSize","nameGap","axisPointer","axisLine","axisTick","axisLabel","splitArea","categoryAxis","util","merge","boundaryGap","alignWithLabel","interval","label","valueAxis","splitNumber","timeAxis","defaults","scale","min","max","logAxis","logBase","categoryAxis3D","valueAxis3D","timeAxis3D","logAxis3D"],"sources":["E:/QuestionairePlanet_Fronted/mytest/node_modules/echarts-gl/lib/component/grid3D/axis3DDefault.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nvar defaultOption = {\n  show: true,\n  grid3DIndex: 0,\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字\n  name: '',\n  // 坐标轴名字位置\n  nameLocation: 'middle',\n  nameTextStyle: {\n    fontSize: 16\n  },\n  // 文字与轴线距离\n  nameGap: 20,\n  axisPointer: {},\n  axisLine: {},\n  // 坐标轴小标记\n  axisTick: {},\n  axisLabel: {},\n  // 分隔区域\n  splitArea: {}\n};\nvar categoryAxis = echarts.util.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    // Default with axisTick\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  },\n  axisPointer: {\n    label: {\n      show: false\n    }\n  }\n}, defaultOption);\nvar valueAxis = echarts.util.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5,\n  // Minimum interval\n  // minInterval: null\n  axisPointer: {\n    label: {}\n  }\n}, defaultOption); // FIXME\n\nvar timeAxis = echarts.util.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, valueAxis);\nvar logAxis = echarts.util.defaults({\n  logBase: 10\n}, valueAxis);\nlogAxis.scale = true;\nexport default {\n  categoryAxis3D: categoryAxis,\n  valueAxis3D: valueAxis,\n  timeAxis3D: timeAxis,\n  logAxis3D: logAxis\n};"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,qBAAqB;AAC9C,IAAIC,aAAa,GAAG;EAClBC,IAAI,EAAE,IAAI;EACVC,WAAW,EAAE,CAAC;EACd;EACAC,OAAO,EAAE,KAAK;EACd;EACAC,IAAI,EAAE,EAAE;EACR;EACAC,YAAY,EAAE,QAAQ;EACtBC,aAAa,EAAE;IACbC,QAAQ,EAAE;EACZ,CAAC;EACD;EACAC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,CAAC,CAAC;EACfC,QAAQ,EAAE,CAAC,CAAC;EACZ;EACAC,QAAQ,EAAE,CAAC,CAAC;EACZC,SAAS,EAAE,CAAC,CAAC;EACb;EACAC,SAAS,EAAE,CAAC;AACd,CAAC;AACD,IAAIC,YAAY,GAAGf,OAAO,CAACgB,IAAI,CAACC,KAAK,CAAC;EACpC;EACAC,WAAW,EAAE,IAAI;EACjB;EACA;EACA;EACA;EACAN,QAAQ,EAAE;IACR;IACA;IACAO,cAAc,EAAE,KAAK;IACrBC,QAAQ,EAAE;EACZ,CAAC;EACD;EACAP,SAAS,EAAE;IACTO,QAAQ,EAAE;EACZ,CAAC;EACDV,WAAW,EAAE;IACXW,KAAK,EAAE;MACLnB,IAAI,EAAE;IACR;EACF;AACF,CAAC,EAAED,aAAa,CAAC;AACjB,IAAIqB,SAAS,GAAGtB,OAAO,CAACgB,IAAI,CAACC,KAAK,CAAC;EACjC;EACAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;EACAK,WAAW,EAAE,CAAC;EACd;EACA;EACAb,WAAW,EAAE;IACXW,KAAK,EAAE,CAAC;EACV;AACF,CAAC,EAAEpB,aAAa,CAAC,CAAC,CAAC;;AAEnB,IAAIuB,QAAQ,GAAGxB,OAAO,CAACgB,IAAI,CAACS,QAAQ,CAAC;EACnCC,KAAK,EAAE,IAAI;EACXC,GAAG,EAAE,SAAS;EACdC,GAAG,EAAE;AACP,CAAC,EAAEN,SAAS,CAAC;AACb,IAAIO,OAAO,GAAG7B,OAAO,CAACgB,IAAI,CAACS,QAAQ,CAAC;EAClCK,OAAO,EAAE;AACX,CAAC,EAAER,SAAS,CAAC;AACbO,OAAO,CAACH,KAAK,GAAG,IAAI;AACpB,eAAe;EACbK,cAAc,EAAEhB,YAAY;EAC5BiB,WAAW,EAAEV,SAAS;EACtBW,UAAU,EAAET,QAAQ;EACpBU,SAAS,EAAEL;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}