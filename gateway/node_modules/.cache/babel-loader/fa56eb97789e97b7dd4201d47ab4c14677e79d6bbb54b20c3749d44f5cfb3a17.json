{"ast":null,"code":"import { onMounted, reactive, watch, ref, onBeforeUnmount, shallowRef } from 'vue';\n\n//饼图的数据格式对应的是key:value的形式\n// data.pieNumber = [\n//     { value:1, name: \"开发\" },\n//     { value:2, name: \"维护\" },\n//     { value:3, name: \"测试\" },\n//     { value:4, name: \"BUG修复\" },\n//     { value:5, name: \"其他\" }\n// ]\n// 渲染数\n\nexport default {\n  __name: 'qnExport',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    mychart1.value.setOption(renderPieOptions());\n\n    // 定义属性\n    const mychart1 = ref(null);\n    const optionPie = ref(null);\n    const renderPieOptions = () => {\n      return {\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{a} <br/>{b} : {c} 个,占比： ({d}%)\"\n        },\n        legend: {\n          orient: \"vertical\",\n          position: 'right',\n          right: '2%',\n          top: '20%',\n          data: data.pieTitle //这里的渲染的数据需要与series里面渲染的数据中的name保持一致\n        },\n        series: [{\n          name: \"任务类型占比分析表\",\n          type: \"pie\",\n          radius: \"70%\",\n          center: [\"45%\", \"55%\"],\n          data: data.pieNumber,\n          //渲染的数据\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: \"rgba(0, 0, 0, 0.5)\"\n            }\n          },\n          label: {\n            show: true,\n            // 显示标签\n            formatter: '{b}个数占比：{d}%'\n          }\n        }]\n      };\n    };\n    const __returned__ = {\n      mychart1,\n      optionPie,\n      renderPieOptions,\n      onMounted,\n      reactive,\n      watch,\n      ref,\n      onBeforeUnmount,\n      shallowRef\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","reactive","watch","ref","onBeforeUnmount","shallowRef","mychart1","value","setOption","renderPieOptions","optionPie","tooltip","trigger","formatter","legend","orient","position","right","top","data","pieTitle","series","name","type","radius","center","pieNumber","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","label","show"],"sources":["E:/mytest/src/views/qn-data/qnExport.vue"],"sourcesContent":["<template>\r\n    <v-chart ref=\"mychart1\" class=\"chart\" :option=\"optionPie \"></v-chart>\r\n</template>\r\n \r\n<script setup>\r\n    import { onMounted, reactive, watch, ref, onBeforeUnmount, shallowRef } from 'vue'\r\n \r\n//饼图的数据格式对应的是key:value的形式\r\n// data.pieNumber = [\r\n//     { value:1, name: \"开发\" },\r\n//     { value:2, name: \"维护\" },\r\n//     { value:3, name: \"测试\" },\r\n//     { value:4, name: \"BUG修复\" },\r\n//     { value:5, name: \"其他\" }\r\n// ]\r\n    // 渲染数\r\n    mychart1.value.setOption(renderPieOptions ())\r\n \r\n    // 定义属性\r\n    const mychart1 = ref(null)\r\n    const optionPie = ref(null)\r\n \r\n    const renderPieOptions = () => {\r\n        return {\r\n            tooltip: {\r\n                trigger: \"item\",\r\n                formatter: \"{a} <br/>{b} : {c} 个,占比： ({d}%)\"\r\n            },\r\n            legend: {\r\n                orient: \"vertical\",\r\n                position: 'right',\r\n                right: '2%',\r\n                top: '20%',\r\n                data: data.pieTitle //这里的渲染的数据需要与series里面渲染的数据中的name保持一致\r\n            },\r\n            series: [\r\n                {\r\n                    name: \"任务类型占比分析表\",\r\n                    type: \"pie\",\r\n                    radius: \"70%\",\r\n                    center: [\"45%\", \"55%\"],\r\n                    data: data.pieNumber, //渲染的数据\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n                        }    \r\n                    },\r\n                    label: {\r\n                        show: true, // 显示标签\r\n                        formatter: '{b}个数占比：{d}%'\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n \r\n</script>"],"mappings":"AAKI,SAASA,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,GAAG,EAAEC,eAAe,EAAEC,UAAU,QAAQ,KAAK;;AAEtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;;;;;;;;IACAC,QAAQ,CAACC,KAAK,CAACC,SAAS,CAACC,gBAAgB,CAAE,CAAC,CAAC;;IAE7C;IACA,MAAMH,QAAQ,GAAGH,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMO,SAAS,GAAGP,GAAG,CAAC,IAAI,CAAC;IAE3B,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;MAC3B,OAAO;QACHE,OAAO,EAAE;UACLC,OAAO,EAAE,MAAM;UACfC,SAAS,EAAE;QACf,CAAC;QACDC,MAAM,EAAE;UACJC,MAAM,EAAE,UAAU;UAClBC,QAAQ,EAAE,OAAO;UACjBC,KAAK,EAAE,IAAI;UACXC,GAAG,EAAE,KAAK;UACVC,IAAI,EAAEA,IAAI,CAACC,QAAQ,CAAC;QACxB,CAAC;QACDC,MAAM,EAAE,CACJ;UACIC,IAAI,EAAE,WAAW;UACjBC,IAAI,EAAE,KAAK;UACXC,MAAM,EAAE,KAAK;UACbC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;UACtBN,IAAI,EAAEA,IAAI,CAACO,SAAS;UAAE;UACtBC,QAAQ,EAAE;YACNC,SAAS,EAAE;cACPC,UAAU,EAAE,EAAE;cACdC,aAAa,EAAE,CAAC;cAChBC,WAAW,EAAE;YACjB;UACJ,CAAC;UACDC,KAAK,EAAE;YACHC,IAAI,EAAE,IAAI;YAAE;YACZpB,SAAS,EAAE;UACf;QACJ,CAAC;MAET,CAAC;IACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}