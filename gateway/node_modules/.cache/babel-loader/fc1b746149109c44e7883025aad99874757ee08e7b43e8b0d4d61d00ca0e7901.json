{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = [\"id\", \"value\"];\nconst _hoisted_2 = [\"for\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($props.question), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.options, (option, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: 'option' + index,\n      value: option.value,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedOptions = $event)\n    }, null, 8 /* PROPS */, _hoisted_1), [[_vModelCheckbox, $data.selectedOptions]]), _createElementVNode(\"label\", {\n      for: 'option' + index\n    }, _toDisplayString(option.text), 9 /* TEXT, PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"p\", null, \"已选择: \" + _toDisplayString($data.selectedOptions), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$props","question","_Fragment","_renderList","options","option","index","key","type","id","value","_cache","$event","$data","selectedOptions","_hoisted_1","for","text","_hoisted_2"],"sources":["E:\\mytest\\src\\views\\qn-createpane\\qn-problemset\\MultipleChoice.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>{{ question }}</h2>\r\n      <div v-for=\"(option, index) in options\" :key=\"index\">\r\n        <input type=\"checkbox\" :id=\"'option' + index\" :value=\"option.value\" v-model=\"selectedOptions\">\r\n        <label :for=\"'option' + index\">{{ option.text }}</label>\r\n      </div>\r\n      <p>已选择: {{ selectedOptions }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    props: {\r\n      question: {\r\n        type: String,\r\n        default: '这里是题干'\r\n      },\r\n      options: {\r\n        type: Array,\r\n        default: () => [{ text: '选项1', value: 'option1' }, { text: '选项2', value: 'option2' }, { text: '选项3', value: 'option3' }]\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        selectedOptions: []\r\n      }\r\n    },\r\n    methods: {\r\n      editQuestion(newQuestion) {\r\n        this.question = newQuestion;\r\n      },\r\n      setOptions(newOptions) {\r\n        this.options = newOptions;\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  "],"mappings":";mBAAA;mBAAA;;uBACIA,mBAAA,CAOM,cANJC,mBAAA,CAAuB,YAAAC,gBAAA,CAAhBC,MAAA,CAAAC,QAAQ,mB,kBACfJ,mBAAA,CAGMK,SAAA,QANZC,WAAA,CAGqCH,MAAA,CAAAI,OAAO,EAH5C,CAGmBC,MAAM,EAAEC,KAAK;yBAA1BT,mBAAA,CAGM;MAHmCU,GAAG,EAAED;IAAK,I,gBACjDR,mBAAA,CAA8F;MAAvFU,IAAI,EAAC,UAAU;MAAEC,EAAE,aAAaH,KAAK;MAAGI,KAAK,EAAEL,MAAM,CAACK,KAAK;MAJ1E,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIqFC,KAAA,CAAAC,eAAe,GAAAF,MAAA;4BAJpGG,UAAA,I,kBAIqFF,KAAA,CAAAC,eAAe,E,GAC5FhB,mBAAA,CAAwD;MAAhDkB,GAAG,aAAaV;wBAAUD,MAAM,CAACY,IAAI,wBALrDC,UAAA,E;kCAOMpB,mBAAA,CAAiC,WAA9B,OAAK,GAAAC,gBAAA,CAAGc,KAAA,CAAAC,eAAe,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}