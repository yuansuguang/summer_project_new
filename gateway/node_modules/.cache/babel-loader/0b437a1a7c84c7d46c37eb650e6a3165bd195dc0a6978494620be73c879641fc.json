{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, mergeProps as _mergeProps, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-28fd0a20\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"form\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"问卷题目\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"题目\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"个人信息\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"font-size\": \"14px\"\n  }\n}, \" 问卷标题：\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"mt-4\",\n  style: {\n    \"width\": \"180px\",\n    \"left\": \"5px\",\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"font-size\": \"14px\"\n  }\n}, \" 问卷简介：\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"mt-4\",\n  style: {\n    \"width\": \"180px\",\n    \"left\": \"5px\",\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_9 = {\n  class: \"ques\"\n};\nconst _hoisted_10 = {\n  class: \"title\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"description\"\n};\nconst _hoisted_12 = {\n  class: \"content\"\n};\nconst _hoisted_13 = {\n  class: \"block-title\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"must\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"block-info\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"block-choice\"\n};\nconst _hoisted_17 = {\n  style: {\n    \"padding-bottom\": \"10px\"\n  }\n};\nconst _hoisted_18 = {\n  key: 2,\n  class: \"block-description\"\n};\nconst _hoisted_19 = {\n  key: 3,\n  style: {\n    \"color\": \"#9b9ea0\",\n    \"font-size\": \"x-small\"\n  }\n};\nconst _hoisted_20 = [\"src\"];\nconst _hoisted_21 = {\n  key: 0,\n  style: {\n    \"color\": \"#aaaaaa\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"15px\"\n  }\n};\nconst _hoisted_22 = {\n  key: 0,\n  style: {\n    \"color\": \"#aaaaaa\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"15px\"\n  }\n};\nconst _hoisted_23 = {\n  key: 4,\n  class: \"block-choice\"\n};\nconst _hoisted_24 = {\n  key: 5,\n  class: \"block-relation\"\n};\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"关联逻辑待设置\", -1 /* HOISTED */));\nconst _hoisted_26 = {\n  class: \"outline\"\n};\nconst _hoisted_27 = {\n  key: 0,\n  class: \"is-info\"\n};\nconst _hoisted_28 = {\n  key: 1,\n  class: \"non-pre\"\n};\nconst _hoisted_29 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \" \", -1 /* HOISTED */));\nconst _hoisted_30 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"el-upload__tip\"\n}, \" 只能上传jpg/png文件，且不超过5mb\", -1 /* HOISTED */));\nconst _hoisted_31 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"el-upload__tip\"\n}, \" 只能上传mp4/mkv文件，且不超过10mb\", -1 /* HOISTED */));\nconst _hoisted_32 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_33 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"qrcode_2\",\n  style: {\n    \"height\": \"200px\",\n    \"width\": \"200px\",\n    \"margin-left\": \"22px\"\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_34 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"链接与二维码\", -1 /* HOISTED */));\nconst _hoisted_35 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_36 = {\n  class: \"dialog-footer\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_37 = {\n  class: \"logic-title\"\n};\nconst _hoisted_38 = {\n  key: 1,\n  class: \"logic-info\"\n};\nconst _hoisted_39 = {\n  style: {\n    \"color\": \"#1687fd\"\n  }\n};\nconst _hoisted_40 = {\n  style: {\n    \"color\": \"#1687fd\"\n  }\n};\nconst _hoisted_41 = {\n  key: 2,\n  class: \"logic-info\"\n};\nconst _hoisted_42 = {\n  class: \"logic-bt\"\n};\nconst _hoisted_43 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"logic-description\"\n}, \" 题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】 \", -1 /* HOISTED */));\nconst _hoisted_44 = {\n  key: 0,\n  class: \"logic-description important\"\n};\nconst _hoisted_45 = {\n  class: \"setting-bt\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Edit = _resolveComponent(\"Edit\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_menu_item_group = _resolveComponent(\"el-menu-item-group\");\n  const _component_el_sub_menu = _resolveComponent(\"el-sub-menu\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_span = _resolveComponent(\"el-span\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_Link = _resolveComponent(\"Link\");\n  const _component_setting = _resolveComponent(\"setting\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_rate = _resolveComponent(\"el-rate\");\n  const _component_EditPen = _resolveComponent(\"EditPen\");\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  const _component_DocumentCopy = _resolveComponent(\"DocumentCopy\");\n  const _component_Delete = _resolveComponent(\"Delete\");\n  const _component_ArrowUp = _resolveComponent(\"ArrowUp\");\n  const _component_ArrowDown = _resolveComponent(\"ArrowDown\");\n  const _component_el_button_group = _resolveComponent(\"el-button-group\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"qnBoard\",\n    style: _normalizeStyle({\n      boxShadow: `var(--el-box-shadow-light)`\n    })\n  }, [_createVNode(_component_el_tabs, {\n    type: \"card\",\n    stretch: \"true\",\n    class: \"qn-tabs\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"编辑问卷\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_menu, {\n        class: \"el-menu-vertical-demo\",\n        style: {\n          \"position\": \"relative\",\n          \"width\": \"190.5px\"\n        }\n      }, {\n        title: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Edit)]),\n          _: 1 /* STABLE */\n        }), _hoisted_2]),\n        default: _withCtx(() => [_createVNode(_component_el_menu_item_group, null, {\n          title: _withCtx(() => [_hoisted_3]),\n          default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n            onClick: _cache[0] || (_cache[0] = $event => {\n              $data.willAddQuestion.type = 'radio';\n              $data.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"单选题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, {\n            onClick: _cache[1] || (_cache[1] = $event => {\n              $data.willAddQuestion.type = 'checkbox';\n              $data.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"多选题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, {\n            onClick: _cache[2] || (_cache[2] = $event => {\n              $data.willAddQuestion.type = 'text';\n              $data.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"填空题\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_menu_item, {\n            onClick: _cache[3] || (_cache[3] = $event => {\n              $data.willAddQuestion.type = 'mark';\n              $data.qsEditDialogVisible = true;\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"评分题\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item_group, {\n          title: \"预设题目\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_sub_menu, null, {\n            title: _withCtx(() => [_hoisted_4]),\n            default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n              onClick: $options.addName\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"姓名\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_menu_item, {\n              onClick: $options.addStuID\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"学号\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_menu_item, {\n              onClick: $options.addPhone\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"电话号码\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item_group, {\n          title: \"预设模板\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n            onClick: _cache[4] || (_cache[4] = $event => this.qsModelDialogVisible = true)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"模板库\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"问卷相关\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_hoisted_5]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_span, null, {\n          default: _withCtx(() => [_createTextVNode(\" \")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_input, {\n        modelValue: $data.input3,\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.input3 = $event),\n        style: {\n          \"max-width\": \"600px\"\n        },\n        placeholder: \"标题\",\n        class: \"input-with-select\"\n      }, {\n        append: _withCtx(() => [_createVNode(_component_el_button, {\n          onClick: _cache[5] || (_cache[5] = $event => $options.changeTitle($data.input3))\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"设置\")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_span, null, {\n          default: _withCtx(() => [_createTextVNode(\" \")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_hoisted_7]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_span, null, {\n          default: _withCtx(() => [_createTextVNode(\" \")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_input, {\n        modelValue: $data.input2,\n        \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.input2 = $event),\n        style: {\n          \"max-width\": \"600px\"\n        },\n        placeholder: \"简介\",\n        class: \"input-with-select\"\n      }, {\n        append: _withCtx(() => [_createVNode(_component_el_button, {\n          onClick: _cache[7] || (_cache[7] = $event => $options.changeDescription($data.input2))\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"设置\")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]), _createVNode(_component_el_divider, {\n        \"border-style\": \"dashed\"\n      }), _createVNode(_component_el_menu, {\n        class: \"el-menu-vertical-demo\",\n        style: {\n          \"position\": \"relative\",\n          \"width\": \"190.5px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n          onClick: _cache[9] || (_cache[9] = $event => this.qsOutLineDialogVisible = true)\n        }, {\n          title: _withCtx(() => [_createTextVNode(\"问卷逻辑\")]),\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode(_component_Link)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item, {\n          onClick: _cache[10] || (_cache[10] = $event => this.settingDialogVisible = true)\n        }, {\n          title: _withCtx(() => [_createTextVNode(\"问卷设置\")]),\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode(_component_setting)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_divider, {\n        \"border-style\": \"dashed\"\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"default\",\n        onClick: _cache[11] || (_cache[11] = $event => $options.savetoserver())\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"保存问卷\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"default\",\n        onClick: _cache[12] || (_cache[12] = $event => $options.publish())\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"发布问卷\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_span, null, {\n          default: _withCtx(() => [_createTextVNode(\" \")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })], 4 /* STYLE */), _createVNode(_component_el_container, null, {\n    default: _withCtx(() => [_createVNode(_component_el_main, {\n      class: \"qnMain\",\n      style: _normalizeStyle({\n        boxShadow: `var(--el-box-shadow-light)`,\n        borderRadius: `var(--el-border-radius-round)`\n      })\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString($data.title), 1 /* TEXT */), this.description !== '' && this.description !== null && this.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"   \" + _toDisplayString($data.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, item => {\n        return _openBlock(), _createBlock(_component_el_row, {\n          class: \"ques-block\",\n          key: item.id,\n          onMouseover: $event => $data.hoverItem = item.id,\n          style: _normalizeStyle({\n            borderRadius: `var(--el-border-radius-round)`\n          })\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 16,\n            class: \"block-content\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_13, [_createTextVNode(_toDisplayString(item.id) + \". \" + _toDisplayString(item.title) + \" \", 1 /* TEXT */), item.must ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, \"(必填)\")) : _createCommentVNode(\"v-if\", true)]), item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school' || item.type === 'phone' || item.type === 'email' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createVNode(_component_el_input, {\n              placeholder: \"请输入内容\",\n              style: {\n                \"margin-left\": \"10px\"\n              }\n            })])) : _createCommentVNode(\"v-if\", true), item.type === 'sex' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createVNode(_component_el_radio, {\n              value: \"0\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"男\")]),\n              _: 1 /* STABLE */\n            })]), _createElementVNode(\"div\", null, [_createVNode(_component_el_radio, {\n              value: \"0\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"女\")]),\n              _: 1 /* STABLE */\n            })])])) : _createCommentVNode(\"v-if\", true), item.description !== '' && item.description !== null && item.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, _toDisplayString(item.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  图片\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.imgList, (i, index) => {\n              return _openBlock(), _createBlock(_component_el_row, {\n                class: \"block-img\",\n                key: i.index\n              }, {\n                default: _withCtx(() => [index % 2 === 0 ? (_openBlock(), _createBlock(_component_el_col, {\n                  key: 0,\n                  offset: 2,\n                  span: 10,\n                  class: \"demo-image__preview\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_image, {\n                    style: {\n                      \"width\": \"200px\",\n                      \"height\": \"200px\"\n                    },\n                    src: i.url,\n                    \"preview-src-list\": [i.url]\n                  }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), index % 2 === 0 && index + 1 <= item.imgList.length - 1 ? (_openBlock(), _createBlock(_component_el_col, {\n                  key: 1,\n                  span: 10,\n                  class: \"demo-image__preview\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_image, {\n                    style: {\n                      \"width\": \"200px\",\n                      \"height\": \"200px\"\n                    },\n                    src: item.imgList[index + 1].url,\n                    \"preview-src-list\": [item.imgList[index + 1].url]\n                  }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 128 /* KEYED_FRAGMENT */)), item.imgList.length !== 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_19, \"（点击图片查看大图）\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                视频\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.videoList, i => {\n              return _openBlock(), _createBlock(_component_el_row, {\n                class: \"block-img\",\n                key: i.index\n              }, {\n                default: _withCtx(() => [_createElementVNode(\"embed\", {\n                  width: \"400\",\n                  height: \"230\",\n                  transparentatstart: \"true\",\n                  animationatstart: \"false\",\n                  autostart: \"true\",\n                  autosize: \"false\",\n                  volume: \"100\",\n                  displaysize: \"0\",\n                  showdisplay: \"true\",\n                  showstatusbar: \"true\",\n                  showcontrols: \"true\",\n                  showaudiocontrols: \"true\",\n                  showtracker: \"true\",\n                  showpositioncontrols: \"true\",\n                  balance: \"true\",\n                  src: i.url\n                }, null, 8 /* PROPS */, _hoisted_20)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.options, ans => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                class: \"block-choice\",\n                key: ans.id\n              }, [_createCommentVNode(\"                  单选\"), item.type === 'radio' ? (_openBlock(), _createBlock(_component_el_radio, {\n                key: 0,\n                value: \"0\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(ans.title), 1 /* TEXT */), ans.hasNumLimit ? (_openBlock(), _createElementBlock(\"span\", _hoisted_21, \"剩余\" + _toDisplayString(ans.supply - ans.consume) + \" 总计\" + _toDisplayString(ans.supply), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  多选\"), item.type === 'checkbox' ? (_openBlock(), _createBlock(_component_el_checkbox, {\n                key: 1,\n                value: \"0\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(ans.title) + \" \", 1 /* TEXT */), ans.hasNumLimit ? (_openBlock(), _createElementBlock(\"span\", _hoisted_22, \"剩余\" + _toDisplayString(ans.supply - ans.consume) + \" 总计\" + _toDisplayString(ans.supply), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  填空\"), item.type === 'text' && item.row > 1 ? (_openBlock(), _createBlock(_component_el_input, _mergeProps({\n                key: 2,\n                type: \"textarea\",\n                placeholder: \"请输入内容\",\n                ref_for: true\n              }, ans.title), null, 16 /* FULL_PROPS */)) : _createCommentVNode(\"v-if\", true), item.type === 'text' && item.row === 1 ? (_openBlock(), _createBlock(_component_el_input, _mergeProps({\n                key: 3,\n                placeholder: \"请输入内容\",\n                ref_for: true\n              }, ans.title), null, 16 /* FULL_PROPS */)) : _createCommentVNode(\"v-if\", true)]);\n            }), 128 /* KEYED_FRAGMENT */)), item.type === 'mark' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createCommentVNode(\"                  评分\"), _createVNode(_component_el_rate, {\n              value: \"0\",\n              max: item.score\n            }, null, 8 /* PROPS */, [\"max\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                 关联信息\"), $data.isLogic && item.last_question !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createCommentVNode(\" <div>{{ relatedQs(item) }}</div> \"), _hoisted_25])) : _createCommentVNode(\"v-if\", true)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), $data.hoverItem === item.id ? (_openBlock(), _createBlock(_component_el_col, {\n            key: 0,\n            span: 8,\n            class: \"block-button\",\n            style: {\n              \"text-align\": \"right\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button_group, null, {\n              default: _withCtx(() => [_createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"编辑\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.edit(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_EditPen)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), $data.isLogic ? (_openBlock(), _createBlock(_component_el_tooltip, {\n                key: 0,\n                class: \"item\",\n                effect: \"light\",\n                content: \"添加关联逻辑\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.logic(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_Link)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"复制\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.copy(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_DocumentCopy)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"删除\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.del_pre(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_Delete)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"上移\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.up(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_ArrowUp)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_tooltip, {\n                class: \"item\",\n                effect: \"light\",\n                content: \"下移\",\n                placement: \"bottom\",\n                \"open-delay\": \"400\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"bt\",\n                  type: \"primary\",\n                  onClick: $event => $options.down(item.id)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                    default: _withCtx(() => [_createVNode(_component_ArrowDown)]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onMouseover\", \"style\"]);\n      }), 128 /* KEYED_FRAGMENT */))])])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"style\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_dialog, {\n    title: _ctx.模板库,\n    modelValue: $data.qsModelDialogVisible,\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.qsModelDialogVisible = $event),\n    class: \"dialog\",\n    width: \"800px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"priamry\",\n      onClick: _cache[13] || (_cache[13] = $event => $options.setAMoedel()),\n      size: \"large\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"小学期模板\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"priamry\",\n      onClick: _cache[14] || (_cache[14] = $event => $options.setBMoedel()),\n      size: \"large\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"游戏评价模板\")]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"]), _createVNode(_component_el_dialog, {\n    title: _ctx.问卷逻辑,\n    modelValue: $data.qsOutLineDialogVisible,\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.qsOutLineDialogVisible = $event),\n    class: \"dialog\",\n    width: \"600px\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_26, [_createVNode(_component_el_tree, {\n      data: $data.outline,\n      \"node-key\": \"id\",\n      props: $data.defaultProps,\n      onNodeDrop: $options.handleDrop,\n      draggable: \"\",\n      \"allow-drop\": $options.allowDrop\n    }, null, 8 /* PROPS */, [\"data\", \"props\", \"onNodeDrop\", \"allow-drop\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"]), _createVNode(_component_el_dialog, {\n    title: $data.qsEditDialogTitle,\n    modelValue: $data.qsEditDialogVisible,\n    \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => $data.qsEditDialogVisible = $event),\n    \"before-close\": $options.cancel_pre,\n    class: \"dialog\",\n    width: \"600px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"form\",\n      model: $data.willAddQuestion,\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"题目类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          disabled: $data.selectDisAble,\n          modelValue: $data.willAddQuestion.type,\n          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.willAddQuestion.type = $event),\n          placeholder: \"请选择题目类型\",\n          onChange: $options.typeChange\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allType, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.value,\n              label: item.label,\n              value: item.value\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"disabled\", \"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), $data.willAddQuestion.type === 'name' || $data.willAddQuestion.type === 'stuId' || $data.willAddQuestion.type === 'class' || $data.willAddQuestion.type === 'school' || $data.willAddQuestion.type === 'phone' || $data.willAddQuestion.type === 'email' || $data.willAddQuestion.type === 'sex' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [$data.willAddQuestion.type === 'name' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"姓名\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'stuId' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 1,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"学号\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'school' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"学校\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'sex' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 3,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"性别\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'phone' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 4,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"手机号\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'email' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 5,\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          value: \"邮箱\",\n          disabled: \"\"\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"是否必填\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          modelValue: $data.willAddQuestion.must,\n          \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $data.willAddQuestion.must = $event)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"必填\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createVNode(_component_el_form_item, {\n        label: \"题目标题\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.willAddQuestion.title,\n          \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => $data.willAddQuestion.title = $event),\n          placeholder: \"请输入标题\",\n          style: {\n            \"width\": \"600px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"题目描述\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.willAddQuestion.description,\n          \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => $data.willAddQuestion.description = $event),\n          style: {\n            \"width\": \"600px\"\n          },\n          rows: 3,\n          type: \"textarea\",\n          placeholder: \"请输入题目描述\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"是否必填\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          modelValue: $data.willAddQuestion.must,\n          \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => $data.willAddQuestion.must = $event)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"必填\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), $data.willAddQuestion.type === 'radio' || $data.willAddQuestion.type === 'checkbox' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.willAddQuestion.options, (item, index) => {\n        return _openBlock(), _createBlock(_component_el_form_item, {\n          label: '选项' + (index + 1),\n          key: index\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_row, null, {\n            default: _withCtx(() => [_createVNode(_component_el_col, {\n              span: 8\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_input, {\n                modelValue: item.title,\n                \"onUpdate:modelValue\": $event => item.title = $event,\n                placeholder: \"请输入选项名\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_col, {\n              span: 16\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_button_group, null, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  type: \"danger\",\n                  plain: \"\",\n                  class: \"deleteOptionButton\",\n                  onClick: $event => $options.deleteOption(index)\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"删除选项\")]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), !item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_button, {\n                  key: 0,\n                  type: \"success\",\n                  plain: \"\",\n                  style: {\n                    \"margin-right\": \"8px\"\n                  },\n                  onClick: $event => item.hasNumLimit = true\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"添加库存限制\")]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_button, {\n                  key: 1,\n                  type: \"info\",\n                  plain: \"\",\n                  style: {\n                    \"margin-right\": \"8px\"\n                  },\n                  onClick: $event => item.hasNumLimit = false\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"取消库存限制\")]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.hasNumLimit ? (_openBlock(), _createBlock(_component_el_input_number, {\n                  key: 2,\n                  modelValue: item.supply,\n                  \"onUpdate:modelValue\": $event => item.supply = $event\n                }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n      }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 4\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            plain: \"\",\n            class: \"addOptionButton\",\n            onClick: $options.addOption\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"新增选项\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _hoisted_29, $data.willAddQuestion.type === 'text' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createVNode(_component_el_form_item, {\n        label: \"填空\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"textarea\",\n          class: \"my-input\",\n          rows: $data.willAddQuestion.row,\n          resize: \"none\"\n        }, null, 8 /* PROPS */, [\"rows\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"行数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $data.willAddQuestion.row,\n          \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => $data.willAddQuestion.row = $event),\n          min: 1,\n          max: 10\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), $data.willAddQuestion.type === 'mark' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"最大分数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $data.willAddQuestion.score,\n          \"onUpdate:modelValue\": _cache[23] || (_cache[23] = $event => $data.willAddQuestion.score = $event),\n          min: 3,\n          max: 10\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"上传图片\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          class: \"upload-img\",\n          action: _ctx.uploadImgUrl,\n          multiple: \"\",\n          \"http-request\": $options.upLoadImage,\n          \"before-upload\": $options.beforeImageUpload,\n          \"file-list\": $data.willAddQuestion.imgList,\n          limit: 6\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            plain: \"\",\n            style: {\n              \"width\": \"100px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1 /* STABLE */\n          }), _hoisted_30]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"action\", \"http-request\", \"before-upload\", \"file-list\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"上传视频\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          class: \"upload-video\",\n          action: _ctx.uploadVideoUrl,\n          \"http-request\": $options.upLoadVideo,\n          \"before-upload\": $options.beforeVideoUpload,\n          \"file-list\": $data.willAddQuestion.videoList,\n          limit: 1\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            plain: \"\",\n            style: {\n              \"width\": \"100px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1 /* STABLE */\n          }), _hoisted_31]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"action\", \"http-request\", \"before-upload\", \"file-list\"])]),\n        _: 1 /* STABLE */\n      })]))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"]), _createElementVNode(\"span\", _hoisted_32, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"primary\",\n        onClick: $options.dialogConfirm\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"确定\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createTextVNode(\"   \"), _createVNode(_component_el_button, {\n        span: 6,\n        onClick: $options.cancel_pre\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"取消\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\", \"before-close\"]), _createVNode(_component_el_dialog, {\n    modelValue: $data.qsLinkDialogVisible,\n    \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => $data.qsLinkDialogVisible = $event),\n    title: $data.qsLinkDialogTitle,\n    class: \"linkDialog\",\n    \"show-close\": false,\n    width: \"800px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: \"8\",\n        style: {\n          \"text-align\": \"center\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_hoisted_33]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: \"16\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_hoisted_34]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, {\n          style: {\n            \"margin-top\": \"15px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 16,\n            style: {\n              \"margin-right\": \"5px\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              placeholder: $data.linkShare,\n              modelValue: $data.linkShare,\n              \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => $data.linkShare = $event),\n              id: \"copyText\",\n              disabled: true\n            }, null, 8 /* PROPS */, [\"placeholder\", \"modelValue\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_button, {\n            type: \"info\",\n            plain: \"\",\n            id: \"copyBtn\",\n            onClick: $options.copyToClip\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"复制链接\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, {\n          style: {\n            \"margin-top\": \"25px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            plain: \"\",\n            onClick: _ctx.downloadQrcode\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"下载二维码\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $options.genCodeAgain,\n            style: {\n              \"margin-left\": \"30px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"重新生成链接\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"span\", _hoisted_35, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"success\",\n        style: {\n          \"width\": \"80px\"\n        },\n        onClick: $options.finish\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"完 成\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"title\"]), _createVNode(_component_el_dialog, {\n    modelValue: $data.editWrongMsgVisible,\n    \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => $data.editWrongMsgVisible = $event),\n    class: \"linkDialog\",\n    \"show-close\": false,\n    \"close-on-click-modal\": false,\n    width: \"300px\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString($data.editWrongMsg), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_36, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        span: 6,\n        type: \"danger\",\n        style: {\n          \"width\": \"80px\"\n        },\n        onClick: _cache[27] || (_cache[27] = $event => $data.editWrongMsgVisible = false)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"知道了\")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\"    关联问题弹框\"), _createVNode(_component_el_dialog, {\n    title: $data.qsLogicDialogTitle,\n    modelValue: $data.qsLogicDialogVisible,\n    \"onUpdate:modelValue\": _cache[32] || (_cache[32] = $event => $data.qsLogicDialogVisible = $event),\n    \"before-close\": $options.cancel_pre_logic,\n    class: \"dialog\"\n  }, {\n    default: _withCtx(() => [$data.questions.length !== 0 ? (_openBlock(), _createBlock(_component_el_form, {\n      key: 0,\n      class: \"logic-form\",\n      ref: \"form\",\n      \"label-width\": \"80px\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_37, \" 当前题目：\" + _toDisplayString($data.questions[$data.logicIndex].id) + \". \" + _toDisplayString($data.questions[$data.logicIndex].title), 1 /* TEXT */), _createVNode(_component_el_form_item, {\n        label: \"关联题目\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.willAddLogic.question_id,\n          \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => $data.willAddLogic.question_id = $event),\n          placeholder: \"请选择关联题目\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.questionsFilter, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: $options.idTitle(item),\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), $data.willAddLogic.question_id !== 0 ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"关联选项\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.willAddLogic.option_id,\n          \"onUpdate:modelValue\": _cache[30] || (_cache[30] = $event => $data.willAddLogic.option_id = $event),\n          placeholder: \"请选择关联选项\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions[$data.willAddLogic.question_id - 1].options, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: item.title,\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $data.willAddLogic.question_id !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, [_createCommentVNode(\"          保存加入后选项id记得减一\"), _createTextVNode(\" 当题目\"), _createElementVNode(\"span\", _hoisted_39, \" \\\"\" + _toDisplayString($options.idTitle($data.questions[$data.willAddLogic.question_id - 1])) + \"\\\" \", 1 /* TEXT */), _createTextVNode(\"选择选项\"), _createElementVNode(\"span\", _hoisted_40, \" \\\"\" + _toDisplayString($data.questions[$data.willAddLogic.question_id - 1].options[$data.willAddLogic.option_id - 1].title) + \"\\\" \", 1 /* TEXT */), _createTextVNode(\"时此题才会显示 \")])) : _createCommentVNode(\"v-if\", true), $options.questionsFilter.length === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_41, \" 题目之前不存在单（多）选题，无法设置关联题目 \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_42, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[31] || (_cache[31] = $event => $options.logicConfirm($data.logicIndex))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"确定\")]),\n        _: 1 /* STABLE */\n      })])]),\n      _: 1 /* STABLE */\n    }, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\", \"before-close\"]), _createVNode(_component_el_dialog, {\n    title: $data.settingDialogTitle,\n    modelValue: $data.settingDialogVisible,\n    \"onUpdate:modelValue\": _cache[37] || (_cache[37] = $event => $data.settingDialogVisible = $event),\n    class: \"settingDialog\",\n    width: \"30%\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, null, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        class: \"timeBlock\",\n        label: \"截止时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n          style: {\n            \"margin-left\": \"100px\"\n          },\n          modelValue: $data.timeFrame,\n          \"onUpdate:modelValue\": _cache[33] || (_cache[33] = $event => $data.timeFrame = $event),\n          onChange: $options.formatTime,\n          type: \"datetime\",\n          \"value-format\": \"yyyy-MM-dd HH:mm\",\n          placeholder: \"选择结束时间\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"是否限制回收量\",\n        class: \"recycleBlock\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_switch, {\n            modelValue: $data.hasRecycleLimit,\n            \"onUpdate:modelValue\": _cache[34] || (_cache[34] = $event => $data.hasRecycleLimit = $event),\n            \"active-color\": \"#13ce66\",\n            \"inactive-color\": \"grey\",\n            \"active-text\": \"是\",\n            \"inactive-text\": \"否\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, null, {\n          default: _withCtx(() => [$data.hasRecycleLimit ? (_openBlock(), _createBlock(_component_el_input_number, {\n            key: 0,\n            modelValue: $data.max_recycling,\n            \"onUpdate:modelValue\": _cache[35] || (_cache[35] = $event => $data.max_recycling = $event),\n            min: 1,\n            style: {\n              \"margin-left\": \"120px\",\n              \"height\": \"40px\",\n              \"margin-top\": \"10px\"\n            }\n          }, null, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"题目关联逻辑开关\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_switch, {\n          modelValue: $data.isLogic,\n          \"onUpdate:modelValue\": _cache[36] || (_cache[36] = $event => $data.isLogic = $event),\n          \"active-text\": \"开\",\n          \"inactive-text\": \"关\",\n          onChange: $options.closeGlobalLogic\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _hoisted_43, $data.isLogic ? (_openBlock(), _createElementBlock(\"div\", _hoisted_44, \" 为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑 \")) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_45, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.settingSuccess\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"完成\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","key","id","_createElementBlock","_hoisted_1","_normalizeStyle","_createVNode","_component_el_tabs","type","stretch","default","_withCtx","_component_el_tab_pane","label","_component_el_menu","title","_component_el_icon","_component_Edit","_","_hoisted_2","_component_el_menu_item_group","_hoisted_3","_component_el_menu_item","onClick","_cache","$event","$data","willAddQuestion","qsEditDialogVisible","_createTextVNode","_component_el_sub_menu","_hoisted_4","$options","addName","addStuID","addPhone","qsModelDialogVisible","_component_el_row","_hoisted_5","_component_el_span","_hoisted_6","_component_el_input","modelValue","input3","placeholder","append","_component_el_button","changeTitle","_hoisted_7","_hoisted_8","input2","changeDescription","_component_el_divider","qsOutLineDialogVisible","_component_Link","settingDialogVisible","_component_setting","size","savetoserver","publish","_component_el_container","_component_el_main","_hoisted_9","_hoisted_10","_toDisplayString","description","undefined","_hoisted_11","_createCommentVNode","_hoisted_12","_Fragment","_renderList","questions","item","_createBlock","onMouseover","hoverItem","_component_el_col","span","_hoisted_13","must","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_component_el_radio","value","_hoisted_18","imgList","i","index","offset","_component_el_image","src","url","length","_hoisted_19","videoList","width","height","transparentatstart","animationatstart","autostart","autosize","volume","displaysize","showdisplay","showstatusbar","showcontrols","showaudiocontrols","showtracker","showpositioncontrols","balance","_hoisted_20","options","ans","hasNumLimit","_hoisted_21","supply","consume","_component_el_checkbox","_hoisted_22","row","_mergeProps","ref_for","_hoisted_23","_component_el_rate","max","score","isLogic","last_question","_hoisted_24","_hoisted_25","_component_el_button_group","_component_el_tooltip","effect","content","placement","edit","_component_EditPen","logic","copy","_component_DocumentCopy","del_pre","_component_Delete","up","_component_ArrowUp","down","_component_ArrowDown","_component_el_dialog","_ctx","模板库","setAMoedel","setBMoedel","问卷逻辑","_hoisted_26","_component_el_tree","data","outline","props","defaultProps","onNodeDrop","handleDrop","draggable","allowDrop","qsEditDialogTitle","cancel_pre","_component_el_form","ref","model","_component_el_form_item","_component_el_select","disabled","selectDisAble","onChange","typeChange","allType","_component_el_option","_hoisted_27","_hoisted_28","rows","plain","deleteOption","_component_el_input_number","addOption","_hoisted_29","resize","min","_component_el_upload","action","uploadImgUrl","multiple","upLoadImage","beforeImageUpload","limit","_hoisted_30","uploadVideoUrl","upLoadVideo","beforeVideoUpload","_hoisted_31","_hoisted_32","dialogConfirm","qsLinkDialogVisible","qsLinkDialogTitle","_hoisted_33","_hoisted_34","linkShare","copyToClip","downloadQrcode","genCodeAgain","_hoisted_35","finish","editWrongMsgVisible","editWrongMsg","_hoisted_36","qsLogicDialogTitle","qsLogicDialogVisible","cancel_pre_logic","_hoisted_37","logicIndex","willAddLogic","question_id","questionsFilter","idTitle","option_id","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","logicConfirm","settingDialogTitle","_component_el_date_picker","timeFrame","formatTime","_component_el_switch","hasRecycleLimit","max_recycling","closeGlobalLogic","_hoisted_43","_hoisted_44","_hoisted_45","settingSuccess"],"sources":["E:\\mytest\\src\\views\\qn-createpane\\qn-modelPane\\qnEdit.vue"],"sourcesContent":["<template>\r\n    <div class=\"form\">\r\n        <div class=\"qnBoard\" :style=\"{\r\n            boxShadow: `var(--el-box-shadow-light)`,\r\n        }\">\r\n            <el-tabs type=\"card\" stretch=\"true\" class=\"qn-tabs\">\r\n                <el-tab-pane label=\"编辑问卷\">\r\n                    <el-menu class=\"el-menu-vertical-demo\" style=\"position: relative; width: 190.5px;\">\r\n                        <template #title>\r\n                            <el-icon>\r\n                                <Edit />\r\n                            </el-icon>\r\n                            <span>问卷题目</span>\r\n                        </template>\r\n                        <el-menu-item-group>\r\n                            <template #title><span>题目</span></template>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'radio'; qsEditDialogVisible = true\">单选题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'checkbox'; qsEditDialogVisible = true\">多选题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'text'; qsEditDialogVisible = true\">填空题</el-menu-item>\r\n                            <el-menu-item\r\n                                @click=\"willAddQuestion.type = 'mark'; qsEditDialogVisible = true\">评分题</el-menu-item>\r\n                        </el-menu-item-group>\r\n                        <el-menu-item-group title=\"预设题目\">\r\n                            <el-sub-menu>\r\n                                <template #title><span>个人信息</span></template>\r\n                                <el-menu-item @click=\"addName\">姓名</el-menu-item>\r\n                                <el-menu-item @click=\"addStuID\">学号</el-menu-item>\r\n                                <el-menu-item @click=\"addPhone\">电话号码</el-menu-item>\r\n                            </el-sub-menu>\r\n                        </el-menu-item-group>\r\n                        <el-menu-item-group title=\"预设模板\">\r\n                            <el-menu-item\r\n                                @click=\"this.qsModelDialogVisible = true\">模板库</el-menu-item>\r\n                        </el-menu-item-group>\r\n\r\n                    </el-menu>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"问卷相关\">\r\n                    <el-row>\r\n                        <span style=\"font-size: 14px\">&emsp;问卷标题：</span>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                    <div class=\"mt-4\" style=\"width: 180px; left: 5px; position: relative\">\r\n                        <el-input v-model=\"input3\" style=\"max-width: 600px\" placeholder=\"标题\" class=\"input-with-select\">\r\n\r\n                            <template #append>\r\n                                <el-button @click=\"changeTitle(input3)\">设置</el-button>\r\n                            </template>\r\n                        </el-input>\r\n                    </div>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <span style=\"font-size: 14px\">&emsp;问卷简介：</span>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                    <div class=\"mt-4\" style=\"width: 180px; left: 5px; position: relative\">\r\n                        <el-input v-model=\"input2\" style=\"max-width: 600px\" placeholder=\"简介\" class=\"input-with-select\">\r\n\r\n                            <template #append>\r\n                                <el-button @click=\"changeDescription(input2)\">设置</el-button>\r\n                            </template>\r\n                        </el-input>\r\n                    </div>\r\n                    <el-divider border-style=\"dashed\" />\r\n                    <el-menu class=\"el-menu-vertical-demo\" style=\"position: relative; width: 190.5px;\">\r\n                        <el-menu-item @click=\"this.qsOutLineDialogVisible = true\">\r\n                            <el-icon>\r\n                                <Link />\r\n                            </el-icon>\r\n                            <template #title>问卷逻辑</template>\r\n                        </el-menu-item>\r\n                        <el-menu-item @click=\"this.settingDialogVisible = true\">\r\n                            <el-icon>\r\n                                <setting />\r\n                            </el-icon>\r\n                            <template #title>问卷设置</template>\r\n                        </el-menu-item>\r\n                    </el-menu>\r\n                    <el-divider border-style=\"dashed\" />\r\n                    <el-button type=\"primary\" size=\"default\" @click=\"savetoserver()\">保存问卷</el-button>\r\n                    <el-button type=\"primary\" size=\"default\" @click=\"publish()\">发布问卷</el-button>\r\n                    <el-row>\r\n                        <el-span>&emsp;</el-span>\r\n                    </el-row>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n        </div>\r\n        \r\n        <el-container>\r\n            <el-main class=\"qnMain\" :style=\"{\r\n                boxShadow: `var(--el-box-shadow-light)`,\r\n                borderRadius: `var(--el-border-radius-round)`,\r\n            }\">\r\n                <div class=\"ques\">\r\n\r\n                    <div class=\"title\">\r\n                        {{ title }}\r\n                    </div>\r\n                    <div class=\"description\"\r\n                        v-if=\"this.description !== '' && this.description !== null && this.description !== undefined\">\r\n                        &emsp;&emsp;{{ description }}\r\n                    </div>\r\n                    <div class=\"content\">\r\n                        <el-row class=\"ques-block\" v-for=\"item in questions\" :key=\"item.id\"\r\n                            @mouseover.enter=\"hoverItem = item.id\" :style=\"{\r\n\r\n                                borderRadius: `var(--el-border-radius-round)`,\r\n                            }\">\r\n\r\n                            <el-col :span=\"16\" class=\"block-content\">\r\n                                <div class=\"block-title\">\r\n                                    {{ item.id }}. {{ item.title }} <span class=\"must\" v-if=\"item.must\">(必填)</span>\r\n                                </div>\r\n\r\n                                <div class=\"block-info\" v-if=\"item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school'\r\n                                    || item.type === 'phone' || item.type === 'email'\">\r\n                                    <el-input placeholder=\"请输入内容\" style=\"margin-left: 10px\">\r\n                                    </el-input>\r\n                                </div>\r\n\r\n                                <div class=\"block-choice\" v-if=\"item.type === 'sex'\">\r\n                                    <div style=\"padding-bottom: 10px\"><el-radio value=\"0\">男</el-radio></div>\r\n                                    <div><el-radio value=\"0\">女</el-radio></div>\r\n                                </div>\r\n\r\n                                <div class=\"block-description\"\r\n                                    v-if=\"item.description !== '' && item.description !== null && item.description !== undefined\">\r\n                                    {{ item.description }}\r\n                                </div>\r\n\r\n                                <!--                  图片-->\r\n                                <el-row class=\"block-img\" v-for=\"(i, index) in item.imgList\" :key=\"i.index\">\r\n                                    <el-col :offset=\"2\" :span=\"10\" class=\"demo-image__preview\" v-if=\"index % 2 === 0\">\r\n                                        <el-image style=\"width: 200px; height: 200px\" :src=\"i.url\"\r\n                                            :preview-src-list=\"[i.url]\">\r\n                                        </el-image>\r\n                                    </el-col>\r\n                                    <el-col :span=\"10\" class=\"demo-image__preview\"\r\n                                        v-if=\"index % 2 === 0 && index + 1 <= item.imgList.length - 1\">\r\n                                        <el-image style=\"width: 200px; height: 200px\" :src=\"item.imgList[index + 1].url\"\r\n                                            :preview-src-list=\"[item.imgList[index + 1].url]\">\r\n                                        </el-image>\r\n                                    </el-col>\r\n                                </el-row>\r\n                                <span style=\"color: #9b9ea0;font-size: x-small\"\r\n                                    v-if=\"item.imgList.length !== 0\">（点击图片查看大图）</span>\r\n\r\n\r\n                                <!--                视频-->\r\n                                <el-row class=\"block-img\" v-for=\"i in item.videoList\" :key=\"i.index\">\r\n                                    <embed width=400 height=230 transparentatstart=true animationatstart=false\r\n                                        autostart=true autosize=false volume=100 displaysize=0 showdisplay=true\r\n                                        showstatusbar=true showcontrols=true showaudiocontrols=true showtracker=true\r\n                                        showpositioncontrols=true balance=true :src=\"i.url\">\r\n                                </el-row>\r\n\r\n\r\n                                <div class=\"block-choice\" v-for=\"ans in item.options\" :key=\"ans.id\">\r\n\r\n                                    <!--                  单选-->\r\n                                    <el-radio v-if=\"item.type === 'radio'\" value=\"0\">\r\n                                        {{ ans.title }}<span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\"\r\n                                            v-if=\"ans.hasNumLimit\">剩余{{\r\n                                                ans.supply - ans.consume }}&emsp;总计{{ ans.supply }}</span>\r\n                                    </el-radio>\r\n\r\n                                    <!--                  多选-->\r\n                                    <el-checkbox v-if=\"item.type === 'checkbox'\" value=\"0\">\r\n                                        {{ ans.title }}\r\n                                        <span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\"\r\n                                            v-if=\"ans.hasNumLimit\">剩余{{\r\n                                                ans.supply -\r\n                                                ans.consume }}&emsp;总计{{ ans.supply }}</span>\r\n                                    </el-checkbox>\r\n\r\n                                    <!--                  填空-->\r\n                                    <el-input v-if=\"item.type === 'text' && item.row > 1\" type=\"textarea\"\r\n                                        placeholder=\"请输入内容\" v-bind=\"ans.title\">\r\n                                    </el-input>\r\n                                    <el-input v-if=\"item.type === 'text' && item.row === 1\" placeholder=\"请输入内容\"\r\n                                        v-bind=\"ans.title\">\r\n                                    </el-input>\r\n                                </div>\r\n\r\n                                <div class=\"block-choice\" v-if=\"item.type === 'mark'\">\r\n                                    <!--                  评分-->\r\n                                    <el-rate value=\"0\" :max=\"item.score\"></el-rate>\r\n                                </div>\r\n\r\n                                <!--                 关联信息-->\r\n                                <div class=\"block-relation\" v-if=\"isLogic && item.last_question !== 0\">\r\n                                    <!-- <div>{{ relatedQs(item) }}</div> -->\r\n                                    <div>关联逻辑待设置</div>\r\n                                </div>\r\n                            </el-col>\r\n\r\n                            <el-col :span=\"8\" class=\"block-button\" style=\"text-align: right\"\r\n                                v-if=\"hoverItem === item.id\">\r\n                                <el-button-group>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"编辑\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"edit(item.id)\"><el-icon>\r\n                                                <EditPen />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" v-if=\"isLogic\" effect=\"light\" content=\"添加关联逻辑\"\r\n                                        placement=\"bottom\" open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"logic(item.id)\"><el-icon>\r\n                                                <Link />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"复制\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"copy(item.id)\"><el-icon>\r\n                                                <DocumentCopy />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"删除\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"del_pre(item.id)\"><el-icon>\r\n                                                <Delete />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"上移\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"up(item.id)\"><el-icon>\r\n                                                <ArrowUp />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                    <el-tooltip class=\"item\" effect=\"light\" content=\"下移\" placement=\"bottom\"\r\n                                        open-delay=\"400\">\r\n                                        <el-button class=\"bt\" type=\"primary\" @click=\"down(item.id)\"><el-icon>\r\n                                                <ArrowDown />\r\n                                            </el-icon></el-button>\r\n                                    </el-tooltip>\r\n                                </el-button-group>\r\n                            </el-col>\r\n\r\n                        </el-row>\r\n                    </div>\r\n\r\n                </div>\r\n            </el-main>\r\n        </el-container>\r\n\r\n        <el-dialog :title=\"模板库\" v-model=\"qsModelDialogVisible\" class=\"dialog\"\r\n            width=\"800px\">\r\n            <el-button type=\"priamry\" @click=\"setAMoedel()\" size=\"large\">小学期模板</el-button>\r\n            <el-button type=\"priamry\" @click=\"setBMoedel()\" size=\"large\">游戏评价模板</el-button>\r\n        </el-dialog>\r\n\r\n        <el-dialog :title=\"问卷逻辑\" v-model=\"qsOutLineDialogVisible\" class=\"dialog\"\r\n            width=\"600px\">\r\n            <div class=\"outline\">\r\n                <el-tree\r\n                    :data=\"outline\"\r\n                    node-key=\"id\"\r\n                    :props=\"defaultProps\"\r\n                    @node-drop=\"handleDrop\"\r\n                    draggable\r\n                    :allow-drop=\"allowDrop\"\r\n                ></el-tree>\r\n              </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog :title=\"qsEditDialogTitle\" v-model=\"qsEditDialogVisible\" :before-close=\"cancel_pre\" class=\"dialog\"\r\n            width=\"600px\">\r\n            <el-form ref=\"form\" :model=\"willAddQuestion\" label-width=\"100px\">\r\n                <el-form-item label=\"题目类型\">\r\n                    <el-select :disabled=\"selectDisAble\" v-model=\"willAddQuestion.type\" placeholder=\"请选择题目类型\"\r\n                        @change=\"typeChange\">\r\n                        <el-option v-for=\"item in allType\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <div class=\"is-info\" v-if=\"willAddQuestion.type === 'name'\r\n                    || willAddQuestion.type === 'stuId'\r\n                    || willAddQuestion.type === 'class'\r\n                    || willAddQuestion.type === 'school'\r\n                    || willAddQuestion.type === 'phone'\r\n                    || willAddQuestion.type === 'email'\r\n                    || willAddQuestion.type === 'sex'\">\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'name'\">\r\n                        <el-input value=\"姓名\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'stuId'\">\r\n                        <el-input value=\"学号\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'school'\">\r\n                        <el-input value=\"学校\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'sex'\">\r\n                        <el-input value=\"性别\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'phone'\">\r\n                        <el-input value=\"手机号\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type === 'email'\">\r\n                        <el-input value=\"邮箱\" disabled></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"是否必填\">\r\n                        <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n                    </el-form-item>\r\n                </div>\r\n                <div v-else class=\"non-pre\">\r\n                    <el-form-item label=\"题目标题\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.title\" placeholder=\"请输入标题\" style=\"width: 600px\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"题目描述\" style=\"width: 100%;\">\r\n                        <el-input v-model=\"willAddQuestion.description\" style=\"width: 600px\" :rows=\"3\" type=\"textarea\"\r\n                            placeholder=\"请输入题目描述\" />\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"是否必填\">\r\n                        <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n                    </el-form-item>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'radio' || willAddQuestion.type === 'checkbox'\">\r\n                        <el-form-item :label=\"'选项' + (index + 1)\" v-for=\"(item, index) in willAddQuestion.options\"\r\n                            :key=\"index\">\r\n                            <el-row>\r\n                                <el-col :span=\"8\">\r\n                                    <el-input v-model=\"item.title\" placeholder=\"请输入选项名\"></el-input>\r\n                                </el-col>\r\n                                <el-col :span=\"16\">\r\n                                    <el-button-group>\r\n                                        <el-button type=\"danger\" plain class=\"deleteOptionButton\"\r\n                                            @click=\"deleteOption(index)\">删除选项</el-button>\r\n                                        <el-button type=\"success\" plain style=\"margin-right: 8px\"\r\n                                            v-if=\"!item.hasNumLimit\" @click=\"item.hasNumLimit = true\">添加库存限制</el-button>\r\n                                        <el-button type=\"info\" plain style=\"margin-right: 8px\" v-if=\"item.hasNumLimit\"\r\n                                            @click=\"item.hasNumLimit = false\">取消库存限制</el-button>\r\n                                        <el-input-number v-model=\"item.supply\"\r\n                                            v-if=\"item.hasNumLimit\"></el-input-number>\r\n                                    </el-button-group>\r\n                                </el-col>\r\n                            </el-row>\r\n\r\n                        </el-form-item>\r\n                        <el-row>\r\n                            <el-col :span=\"4\">\r\n                                <el-button type=\"primary\" plain class=\"addOptionButton\"\r\n                                    @click=\"addOption\">新增选项</el-button>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </template>\r\n                    <span>&emsp;</span>\r\n                    <template v-if=\"willAddQuestion.type === 'text'\">\r\n                        <el-form-item label=\"填空\">\r\n                            <el-input type=\"textarea\" class=\"my-input\" :rows=\"willAddQuestion.row\" resize=\"none\">\r\n                            </el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"行数\">\r\n                            <el-input-number v-model=\"willAddQuestion.row\" :min=\"1\" :max=\"10\"></el-input-number>\r\n                        </el-form-item>\r\n                    </template>\r\n\r\n                    <template v-if=\"willAddQuestion.type === 'mark'\">\r\n                        <el-form-item label=\"最大分数\">\r\n                            <el-input-number v-model=\"willAddQuestion.score\" :min=\"3\" :max=\"10\"></el-input-number>\r\n                        </el-form-item>\r\n                    </template>\r\n                    <el-form-item label=\"上传图片\">\r\n                        <el-upload class=\"upload-img\" :action=uploadImgUrl multiple :http-request=\"upLoadImage\"\r\n                            :before-upload=\"beforeImageUpload\" :file-list=\"willAddQuestion.imgList\" :limit=\"6\">\r\n                            <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n                            <span class=\"el-upload__tip\">&emsp;只能上传jpg/png文件，且不超过5mb</span>\r\n                        </el-upload>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"上传视频\">\r\n                        <el-upload class=\"upload-video\" :action=uploadVideoUrl :http-request=\"upLoadVideo\"\r\n                            :before-upload=\"beforeVideoUpload\" :file-list=\"willAddQuestion.videoList\" :limit=\"1\">\r\n                            <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n                            <span class=\"el-upload__tip\">&emsp;只能上传mp4/mkv文件，且不超过10mb</span>\r\n                        </el-upload>\r\n                    </el-form-item>\r\n                </div>\r\n            </el-form>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"primary\" @click=\"dialogConfirm\">确定</el-button>\r\n                    &emsp;\r\n                    <el-button :span=\"6\" @click=\"cancel_pre\">取消</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog v-model=\"qsLinkDialogVisible\" :title=\"qsLinkDialogTitle\" class=\"linkDialog\" :show-close=\"false\"\r\n            width=\"800px\">\r\n            <el-row>\r\n                <el-col span=\"8\" style=\"text-align: center\">\r\n                    <el-row>\r\n                        <div id=\"qrcode_2\" style=\"height:200px; width:200px; margin-left: 22px;\"></div>\r\n                    </el-row>\r\n                </el-col>\r\n                <el-col span=\"16\">\r\n                    <el-row>\r\n                        <h2>链接与二维码</h2>\r\n                    </el-row>\r\n                    <el-row style=\"margin-top:15px\">\r\n                        <el-col :span=\"16\" style=\"margin-right: 5px\">\r\n                            <el-input :placeholder=linkShare v-model=\"linkShare\" id=\"copyText\" :disabled=\"true\">\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-button type=\"info\" plain id=\"copyBtn\" @click=\"copyToClip\">复制链接</el-button></el-row>\r\n                    <el-row style=\"margin-top: 25px\">\r\n                        <el-button type=\"primary\" plain @click=\"downloadQrcode\">下载二维码</el-button>\r\n                        <el-button type=\"primary\" @click=\"genCodeAgain\" style=\"margin-left: 30px\">重新生成链接</el-button>\r\n                    </el-row>\r\n                </el-col>\r\n            </el-row>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"success\" style=\"width: 80px\" @click=\"finish\">完 成</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog v-model=\"editWrongMsgVisible\" class=\"linkDialog\" :show-close=\"false\" :close-on-click-modal=\"false\"\r\n            width=\"300px\">\r\n            <span>{{ editWrongMsg }}</span>\r\n            <span class=\"dialog-footer\" style=\"text-align: center\">\r\n                <el-row>\r\n                    <el-button :span=\"6\" type=\"danger\" style=\"width: 80px\"\r\n                        @click=\"editWrongMsgVisible = false\">知道了</el-button>\r\n                </el-row>\r\n            </span>\r\n        </el-dialog>\r\n        <!--    关联问题弹框-->\r\n        <el-dialog :title=\"qsLogicDialogTitle\" v-model=\"qsLogicDialogVisible\" :before-close=\"cancel_pre_logic\"\r\n            class=\"dialog\">\r\n            <el-form v-if=\"questions.length !== 0\" class=\"logic-form\" ref=\"form\" label-width=\"80px\">\r\n\r\n                <div class=\"logic-title\">\r\n                    当前题目：{{ questions[logicIndex].id }}. {{ questions[logicIndex].title }}\r\n                </div>\r\n\r\n                <el-form-item label=\"关联题目\">\r\n                    <el-select v-model=\"willAddLogic.question_id\" placeholder=\"请选择关联题目\">\r\n                        <el-option v-for=\"item in questionsFilter\" :key=\"item.id\" :label=\"idTitle(item)\"\r\n                            :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"关联选项\" v-if=\"willAddLogic.question_id !== 0\">\r\n                    <el-select v-model=\"willAddLogic.option_id\" placeholder=\"请选择关联选项\">\r\n                        <el-option v-for=\"item in questions[willAddLogic.question_id - 1].options\" :key=\"item.id\"\r\n                            :label=\"item.title\" :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <div class=\"logic-info\" v-if=\"willAddLogic.question_id !== 0\">\r\n                    <!--          保存加入后选项id记得减一-->\r\n                    当题目<span style=\"color: #1687fd\"> \"{{ idTitle(questions[willAddLogic.question_id - 1]) }}\"\r\n                    </span>选择选项<span style=\"color: #1687fd\"> \"{{ questions[willAddLogic.question_id -\r\n                        1].options[willAddLogic.option_id -\r\n                        1].title\r\n                        }}\"\r\n                    </span>时此题才会显示\r\n                </div>\r\n                <div class=\"logic-info\" v-if=\"questionsFilter.length === 1\">\r\n                    题目之前不存在单（多）选题，无法设置关联题目\r\n                </div>\r\n\r\n                <div class=\"logic-bt\">\r\n                    <el-button type=\"primary\" @click=\"logicConfirm(logicIndex)\">确定</el-button>\r\n                </div>\r\n\r\n            </el-form>\r\n        </el-dialog>\r\n        <el-dialog :title=\"settingDialogTitle\" v-model=\"settingDialogVisible\" class=\"settingDialog\" width=\"30%\">\r\n            <el-form>\r\n                <el-form-item class=\"timeBlock\" label=\"截止时间\">\r\n                    <el-date-picker style=\"margin-left: 100px\" v-model=\"timeFrame\" @change=\"formatTime\" type=\"datetime\"\r\n                        value-format=\"yyyy-MM-dd HH:mm\" placeholder=\"选择结束时间\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item label=\"是否限制回收量\" class=\"recycleBlock\">\r\n                    <el-row>\r\n                        <el-switch v-model=\"hasRecycleLimit\" active-color=\"#13ce66\" inactive-color=\"grey\"\r\n                            active-text=\"是\" inactive-text=\"否\">\r\n                        </el-switch>\r\n                    </el-row>\r\n                    <el-row>\r\n                        <el-input-number v-model=\"max_recycling\" :min=\"1\" v-if=\"hasRecycleLimit\"\r\n                            style=\"margin-left: 120px;height: 40px;margin-top: 10px\">\r\n                        </el-input-number>\r\n                    </el-row>\r\n                </el-form-item>\r\n                <el-form-item label=\"题目关联逻辑开关\">\r\n                    <el-switch v-model=\"isLogic\" active-text=\"开\" inactive-text=\"关\" @change=\"closeGlobalLogic\">\r\n                    </el-switch>\r\n                </el-form-item>\r\n\r\n                <div class=\"logic-description\">\r\n                    题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】\r\n                </div>\r\n\r\n                <div class=\"logic-description important\" v-if=\"isLogic\">\r\n                    为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑\r\n                </div>\r\n            </el-form>\r\n\r\n            <div class=\"setting-bt\">\r\n                <el-button type=\"primary\" @click=\"settingSuccess\">完成</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n//import editHeader from \"@/components/header/editPageHeader\";\r\nimport QRCode from \"qrcodejs2\";\r\nimport getDataApi from \"@/utils/getDataApi\";\r\nimport saveDataApi from \"@/utils/saveDataApi\";\r\nimport qrcodeApi from \"@/utils/qrcodeApi\";\r\nimport user from \"@/storage/user\";\r\n\r\nexport default {\r\n    mixins: [getDataApi, saveDataApi, qrcodeApi],\r\n    data() {\r\n        return {\r\n            logicQuestionState: 0,  // 用于判断用户是否更改关联问题设置\r\n            logicOptionState: 0,    // 用于判断用户是否更改关联选项设置\r\n\r\n            //uploadImgUrl: this.GLOBAL.backUrl + 'upload/image',\r\n            //uploadVideoUrl: this.GLOBAL.backUrl + 'upload/video',\r\n\r\n            timer: '',\r\n            value: '',\r\n            qrcode: null,\r\n            timeFrame: '',\r\n            linkShare: '',\r\n            editWrongMsg: \"\",\r\n            editWrongMsgVisible: false,\r\n            qsLinkDialogVisible: false,\r\n            dialogVisibleAsso: false,\r\n            qsLinkDialogTitle: \"发布成功！\",\r\n            settingDialogTitle: \"高级设置\",   // 高级设置弹框的标题\r\n            settingDialogVisible: false,     // 高级设置对话框可见性\r\n            closingDate: null,   // 高级设置中问卷回收的截止日期\r\n            isLogic: true,      // 问卷是否引入关联逻辑\r\n            isReleased: false,   // 是否发布\r\n            hasRecycleLimit: false,\r\n            max_recycling: 10000,\r\n            editIndex: 0,\r\n            logicIndex: 0,          // 当前添加题目逻辑的问题ID\r\n            selectDisAble: false,\r\n            hoverItem: 0,\r\n            activeName: 'first',\r\n            title: '',\r\n            description: '',\r\n            input3: '',\r\n            input2: '',\r\n            defaultProps: {\r\n                children: 'children',\r\n                label: 'label'\r\n            },\r\n            type: 1,\r\n            questions: [],\r\n            outline: [],\r\n            pid: this.$route.query.pid,\r\n            qsEditDialogVisible: false,\r\n            qsEditDialogTitle: \"新建题目\",\r\n            qsLogicDialogVisible: false,\r\n            qsLogicDialogTitle: \"关联逻辑设置\",\r\n            qsOutLineDialogVisible: false,\r\n            qsModelDialogVisible: false,\r\n            modelA: false,\r\n            modelB: false,\r\n            willAddQuestion: {\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        hasNumLimit: false,  // 是否添加库存限制\r\n                        title: '', // 选项标题\r\n                        id: 1, // 选项id\r\n                        supply: 1,  // 库存\r\n                        consume: 0, // 已消耗库存（已选）\r\n                    }\r\n                ],\r\n                row: 1, // 填空题区域显示行数\r\n                score: 5, // 评分题的最大评分\r\n                imgList: [],\r\n                videoList: [],\r\n            },\r\n            willAddLogic: {\r\n                question_id: 0,\r\n                option_id: 1,\r\n            },\r\n            allType: [\r\n                {\r\n                    value: 'radio',\r\n                    label: '单选题',\r\n                },\r\n                {\r\n                    value: 'checkbox',\r\n                    label: '多选题',\r\n                },\r\n                {\r\n                    value: 'text',\r\n                    label: '填空题',\r\n                }, {\r\n                    value: 'mark',\r\n                    label: '评分题',\r\n                }, {\r\n                    value: 'name',\r\n                    label: '姓名'\r\n                },\r\n                {\r\n                    value: 'stuId',\r\n                    label: '学号'\r\n                },\r\n                {\r\n                    value: 'phone',\r\n                    label: '手机号'\r\n                },\r\n                {\r\n                    value: 'school',\r\n                    label: '学校'\r\n                },\r\n                {\r\n                    value: 'sex',\r\n                    label: '性别'\r\n                },\r\n                {\r\n                    value: 'email',\r\n                    label: '邮箱'\r\n                },\r\n            ],\r\n\r\n            xiaoxueqi_questions: [\r\n                {\r\n                    id: 1,\r\n                    type: 'radio',\r\n                    title: '这是一个什么网站？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '问卷系统',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '出版系统',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    type: 'checkbox',\r\n                    title: '软工小学期助教都有谁？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: 'ZYH',\r\n                    }, {\r\n                        id: 2,\r\n                        title: 'LKW',\r\n                    }, {\r\n                        id: 3,\r\n                        title: 'ZXH',\r\n                    }, {\r\n                        id: 4,\r\n                        title: 'HZH',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    type: 'radio',\r\n                    title: '软工小学期累不累',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '累',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '非常累',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 4,\r\n                    type: 'text',\r\n                    title: '您对小学期的评价如何？',\r\n                    description: '请考虑妥当后填写',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 0,\r\n                        title: '',\r\n                    }],\r\n                    row: 3,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 5,\r\n                    type: 'mark',\r\n                    title: '给小学期打个分吧~',\r\n                    description: '请考虑妥当后填写',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 0,\r\n                        title: '',\r\n                    }],\r\n                    row: 0,\r\n                    score: 10,\r\n                },\r\n            ],\r\n            some_questions: [\r\n                {\r\n                    id: 1,\r\n                    type: 'checkbox',\r\n                    title: '您常玩的游戏类型是？',\r\n                    description: '',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: 'RPG',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '动作',\r\n                    }, {\r\n                        id: 3,\r\n                        title: '卡牌',\r\n                    }, {\r\n                        id: 4,\r\n                        title: 'Rougelike',\r\n                    }, {\r\n                        id: 5,\r\n                        title: '解密',\r\n                    }, {\r\n                        id: 6,\r\n                        title: '塔防',\r\n                    }, {\r\n                        id: 7,\r\n                        title: '类银河恶魔城',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    type: 'radio',\r\n                    title: '您玩游戏的月均消费为？',\r\n                    description: '单位为人民币',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '0 ~ 100',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '100 ~ 1000',\r\n                    }, {\r\n                        id: 3,\r\n                        title: '1000 ~ 2000',\r\n                    }, {\r\n                        id: 4,\r\n                        title: '2000以上',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    type: 'radio',\r\n                    title: '您玩游戏多长时间了？',\r\n                    description: '',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 1,\r\n                        title: '0 ~ 1 年',\r\n                    }, {\r\n                        id: 2,\r\n                        title: '1 ~ 5 年',\r\n                    }, {\r\n                        id: 3,\r\n                        title: '5 ~ 10 年',\r\n                    }, {\r\n                        id: 4,\r\n                        title: '10年以上',\r\n                    }],\r\n                    row: 0,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 4,\r\n                    type: 'text',\r\n                    title: '您对本游戏的评价如何？',\r\n                    description: '',\r\n                    must: false,\r\n                    options: [{\r\n                        id: 0,\r\n                        title: '',\r\n                    }],\r\n                    row: 3,\r\n                    score: 0,\r\n                },\r\n                {\r\n                    id: 5,\r\n                    type: 'mark',\r\n                    title: '给本游戏打个分吧~',\r\n                    description: '',\r\n                    must: true,\r\n                    options: [{\r\n                        id: 0,\r\n                        title: '',\r\n                    }],\r\n                    row: 0,\r\n                    score: 10,\r\n                },\r\n            ],\r\n            xiaoxueqi_outline: [\r\n                {\r\n                    id: 1,\r\n                    label: '1. 这是一个什么网站？',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    label: '2. 软工小学期助教都有谁？',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    label: '3. 软工小学期累不累',\r\n                },\r\n                {\r\n                    id: 4,\r\n                    label: '4. 您对小学期的评价如何？',\r\n                },\r\n                {\r\n                    id: 5,\r\n                    label: '5. 给小学期打个分吧~',\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    // components: {\r\n    //     editHeader,\r\n    // },\r\n    methods: {\r\n        //---------------------------Image and video--------------------------------//\r\n        upLoadImage(file) {\r\n            const formData = new FormData();\r\n            formData.append('image', file.file);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/image/api/upload_image',\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status_code) {\r\n                        case 1:\r\n                            var name = res.data.name;\r\n                            var url = res.data.url;\r\n                            this.willAddQuestion.imgList.push({\r\n                                name: name,\r\n                                url: url\r\n                            });\r\n                            console.log(this.willAddQuestion.imgList);\r\n                            break;\r\n                        case 2:\r\n                            this.$message.error(\"上传文件格式错误！\");\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"操作失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        upLoadVideo(file) {\r\n            const formData = new FormData();\r\n            formData.append('video', file.file);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: this.uploadVideoUrl,\r\n                data: formData,\r\n            })\r\n                .then(res => {\r\n                    switch (res.data.status_code) {\r\n                        case 1:\r\n                            var name = res.data.name;\r\n                            var url = res.data.url;\r\n                            this.willAddQuestion.videoList.push({\r\n                                name: name,\r\n                                url: url\r\n                            });\r\n                            console.log(this.willAddQuestion.videoList);\r\n                            break;\r\n                        case 2:\r\n                            // this.$message.error(\"上传文件格式错误！\");\r\n                            break;\r\n                        default:\r\n                            this.$message.error(\"操作失败！\");\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        beforeImageUpload(file) {\r\n            const isJPG = file.type === 'image/jpeg';\r\n            const isPNG = file.type === 'image/png';\r\n            const isLt5M = file.size / 1024 / 1024 < 10;\r\n\r\n            if (!isJPG && !isPNG) {\r\n                this.$message.error('上传头像图片只能是 JPG/PNG 格式!');\r\n            } else if (!isLt5M) {\r\n                this.$message.error('上传头像图片大小不能超过 5MB!');\r\n            }\r\n            return (isJPG || isPNG) && isLt5M;\r\n        },\r\n        beforeVideoUpload(file) {\r\n            const filename = file.name;\r\n            var suffix = '';\r\n            var isVideo = false;\r\n            const isLt2M = file.size / 1024 / 1024 < 30;\r\n            try {\r\n                var flieArr = filename.split('.');\r\n                suffix = flieArr[flieArr.length - 1];\r\n            } catch (err) {\r\n                suffix = '';\r\n            }\r\n            var videoList = ['mp4', 'mkv'];\r\n            var judge = videoList.some(function (item) {\r\n                return item === suffix;\r\n            });\r\n            if (judge) {\r\n                isVideo = true;\r\n            }\r\n            if (!isVideo) {\r\n                this.$message.error('上传视频文件只能是 MP4/MKV 格式!');\r\n            } else if (!isLt2M) {\r\n                this.$message.error('上传视频文件大小不能超过 10MB!');\r\n            }\r\n            return isLt2M && isVideo;\r\n        },\r\n        beforeRemove(file, fileList) {\r\n            console.log(file, fileList);\r\n            return this.$confirm(`确定移除 ${file.name}？`);\r\n        },\r\n        handleRemove(file, fileList) {\r\n            console.log(file, fileList);\r\n            this.$message(\"移除成功\")\r\n        },\r\n        //--------------------------------------------------------------------------//\r\n        recycleLimit() {\r\n            if (this.hasRecycleLimit === false) this.max_recycling = 10000;\r\n        },\r\n        autoSave() {\r\n            this.saveQnInfo('autosave', '4');\r\n        },\r\n        share() {\r\n            this.publish();\r\n        },\r\n        genCodeAgain() {\r\n            this.makeCodeAgain(\"4\");\r\n        },\r\n        formatTime(time) {\r\n            this.timeFrame = time;\r\n        },\r\n        addName() {\r\n            this.willAddQuestion.type = \"name\";\r\n            this.willAddQuestion.title = \"姓名\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addSex() {\r\n            this.willAddQuestion.type = \"sex\";\r\n            this.willAddQuestion.title = \"性别\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addStuID() {\r\n            this.willAddQuestion.type = \"stuId\";\r\n            this.willAddQuestion.title = \"学号\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addSchool() {\r\n            this.willAddQuestion.type = \"school\";\r\n            this.willAddQuestion.title = \"学校\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addPhone() {\r\n            this.willAddQuestion.type = \"phone\";\r\n            this.willAddQuestion.title = \"手机号\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        addEmail() {\r\n            this.willAddQuestion.type = \"email\";\r\n            this.willAddQuestion.title = \"邮箱\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        finish() {\r\n            this.qsLinkDialogVisible = false;\r\n            this.$router.push('/index')// 跳转到问卷中心？\r\n        },\r\n        publishSuccess: function () {\r\n            this.qsLinkDialogVisible = true;\r\n        },\r\n        edit: function (index) {\r\n            index--;\r\n            this.willAddQuestion = {\r\n                question_id: this.questions[index].question_id,\r\n                id: this.questions[index].id,\r\n                type: this.questions[index].type,\r\n                title: this.questions[index].title,\r\n                must: this.questions[index].must,\r\n                description: this.questions[index].description,\r\n                options: JSON.parse(JSON.stringify(this.questions[index].options)),\r\n                row: this.questions[index].row,\r\n                score: this.questions[index].score,\r\n                is_shown: this.questions[index].is_shown,\r\n                last_question: this.questions[index].last_question,\r\n                last_option: this.questions[index].last_option,\r\n                imgList: JSON.parse(JSON.stringify(this.questions[index].imgList)),\r\n                videoList: JSON.parse(JSON.stringify(this.questions[index].videoList)),\r\n            };\r\n            this.editIndex = index;\r\n            this.selectDisAble = true;\r\n            this.qsEditDialogTitle = \"编辑题目\";\r\n            this.qsEditDialogVisible = true;\r\n        },\r\n        isExistEmptyOption: function () {\r\n            for (let i = 0; i < this.willAddQuestion.options.length; i++) {\r\n                if (this.willAddQuestion.options[i].title === '') return true;\r\n            }\r\n            return false;\r\n        },\r\n        isExistSameOption: function () {\r\n            for (let i = 0; i < this.willAddQuestion.options.length; i++) {\r\n                for (let j = 0; j < this.willAddQuestion.options.length; j++) {\r\n                    if (i !== j && this.willAddQuestion.options[i].title === this.willAddQuestion.options[j].title) return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        dialogConfirm() {\r\n            let index = this.editIndex;\r\n            if (this.qsEditDialogTitle === \"编辑题目\") {\r\n                if (this.willAddQuestion.title === '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '标题不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能重复!'\r\n                    });\r\n                }\r\n                else {\r\n                    this.questions[index].id = this.willAddQuestion.id;\r\n                    this.questions[index].row = this.willAddQuestion.row;\r\n                    this.questions[index].must = this.willAddQuestion.must;\r\n                    this.questions[index].description = this.willAddQuestion.description;\r\n                    this.questions[index].title = this.willAddQuestion.title;\r\n                    this.questions[index].options = this.willAddQuestion.options;\r\n                    this.questions[index].score = this.willAddQuestion.score;\r\n                    this.questions[index].is_shown = this.willAddQuestion.is_shown;\r\n                    this.questions[index].last_question = this.willAddQuestion.last_question;\r\n                    this.questions[index].last_option = this.willAddQuestion.last_option;\r\n                    this.questions[index].options = JSON.parse(JSON.stringify(this.willAddQuestion.options));\r\n                    this.questions[index].imgList = JSON.parse(JSON.stringify(this.willAddQuestion.imgList));\r\n                    this.questions[index].videoList = JSON.parse(JSON.stringify(this.willAddQuestion.videoList));\r\n                    // 大纲更新\r\n                    this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                    this.qsEditDialogTitle = \"\";\r\n                    this.qsEditDialogVisible = false;\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '修改成功!'\r\n                    });\r\n                    // 重置\r\n                    this.resetWillAdd();\r\n                    this.selectDisAble = false;\r\n                }\r\n            }\r\n            else {\r\n                if (this.willAddQuestion.title === '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '标题不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能为空!'\r\n                    });\r\n                }\r\n                else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '选项名不能重复!'\r\n                    });\r\n                }\r\n                else {\r\n                    this.qsEditDialogVisible = false;\r\n                    this.willAddQuestion.id = this.questions.length + 1;\r\n                    // 大纲更新\r\n                    this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n                    this.questions.push(this.willAddQuestion);\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '添加成功!'\r\n                    });\r\n                    // 重置\r\n                    this.resetWillAdd();\r\n                }\r\n            }\r\n        },\r\n        resetWillAdd() {\r\n            this.willAddQuestion = {\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 1,// 选项id\r\n                        hasNumLimit: false,\r\n                        supply: 1,\r\n                        consume: 0,\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 5, // 最大评分\r\n                imgList: [],\r\n                videoList: []\r\n            }\r\n        },\r\n        dialogCancel: function () {\r\n            this.qsEditDialogTitle = \"新建题目\";\r\n            this.resetWillAdd();\r\n            this.qsEditDialogVisible = false;\r\n            this.selectDisAble = false;\r\n        },\r\n        cancel_pre: function () {\r\n            this.$confirm('已编辑的题目信息将不会保存,确认关闭？', '提示', {\r\n                confirmButtonText: '确认',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                this.dialogCancel();\r\n            }).catch(() => {\r\n            });\r\n        },\r\n        LogicDialogCancel: function () {\r\n            this.qsLogicDialogVisible = false;\r\n            this.resetLogic();\r\n        },\r\n        cancel_pre_logic: function () {\r\n            this.$confirm('已编辑的题目关联逻辑将不会保存,确认关闭？', '提示', {\r\n                confirmButtonText: '确认',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                this.LogicDialogCancel();\r\n            }).catch(() => {\r\n            });\r\n        },\r\n        logicConfirm: function (index) {\r\n            console.log(this.questions);\r\n            let questions = this.questions;\r\n            let willAddLogic = this.willAddLogic;\r\n            questions[index].last_question = willAddLogic.question_id;\r\n            questions[index].last_option = willAddLogic.option_id;\r\n            questions[index].is_shown = willAddLogic.question_id === 0;\r\n            if (this.willAddLogic.question_id !== this.logicQuestionState || this.willAddLogic.option_id !== this.logicOptionState) {\r\n                this.$message({\r\n                    type: 'success',\r\n                    message: '问题关联设置成功'\r\n                });\r\n            }\r\n            this.qsLogicDialogVisible = false;\r\n            this.resetLogic();\r\n        },\r\n        logic: function (index) {\r\n            this.logicIndex = index - 1;\r\n            this.willAddLogic.question_id = this.questions[index - 1].last_question;\r\n            if (this.questions[index - 1].last_option !== 0) { this.willAddLogic.option_id = this.questions[index - 1].last_option; }\r\n            else this.willAddLogic.option_id = 1;\r\n            console.log(this.questions);\r\n            this.qsLogicDialogVisible = true;\r\n            this.logicQuestionState = this.willAddLogic.question_id;\r\n            this.logicOptionState = this.willAddLogic.option_id;\r\n        },\r\n        resetLogic() {\r\n            this.willAddLogic = {\r\n                question_id: 0,\r\n                option_id: 1,\r\n            };\r\n            this.logicIndex = 0;\r\n        },\r\n        typeChange(value) {\r\n            this.willAddQuestion.type = value;\r\n        },\r\n        addOption() {\r\n            // 问题关联检查\r\n            if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\r\n                this.$message({\r\n                    type: 'warning',\r\n                    message: '此问题已被关联，无法新增选项，请删除关联信息后再试'\r\n                });\r\n                return;\r\n            }\r\n            this.willAddQuestion.options.push({\r\n                hasNumLimit: false,\r\n                title: '', // 选项标题\r\n                id: this.willAddQuestion.options.length + 1,\r\n                supply: 1,\r\n                consume: 0,\r\n            });\r\n        },\r\n        deleteOption(index) {\r\n            if (this.willAddQuestion.options.length === 1) {\r\n                this.$message({\r\n                    type: \"error\",\r\n                    message: \"至少需要设置一个选项！\"\r\n                })\r\n            }\r\n            else {\r\n                // 问题关联检查\r\n                if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\r\n                    this.$message({\r\n                        type: 'warning',\r\n                        message: '此问题已被关联，无法删除选项，请删除关联信息后再试'\r\n                    });\r\n                    return;\r\n                }\r\n                // id重排\r\n                for (let i = index + 1; i < this.willAddQuestion.options.length; i++) {\r\n                    this.willAddQuestion.options[i].id--;\r\n                }\r\n                this.willAddQuestion.options.splice(index, 1);\r\n            }\r\n        },\r\n        changeTitle: function (value) {\r\n            this.title = value;\r\n        },\r\n        changeDescription: function (value) {\r\n            this.description = value;\r\n        },\r\n        openSetting: function () {\r\n            this.settingDialogVisible = true;\r\n        },\r\n        settingSuccess: function () {\r\n            this.settingDialogVisible = false;\r\n            this.$message({\r\n                type: 'success',\r\n                message: '设置已生效'\r\n            });\r\n        },\r\n\r\n        publish() {\r\n            var formData = new FormData();\r\n            formData.append(\"survey_id\", this.$route.params.qnid);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/survey/api/share',\r\n                data: formData,\r\n            }).then(res => {\r\n                switch(res.data.status_code) {\r\n                    case 1:\r\n                        this.linkShare = 'http://localhost:8080' + '/fillQn/' + res.data.code;\r\n                        console.log(res.data.code);\r\n                        if (this.qrcode == null) {\r\n                            this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n                                width: 200, //生成的二维码的宽度\r\n                                height: 200, //生成的二维码的高度\r\n                                colorDark: \"#000000\", // 生成的二维码的深色部分\r\n                                colorLight: \"#ffffff\", //生成二维码的浅色部分\r\n                                correctLevel: QRCode.CorrectLevel.H\r\n                            });\r\n                        }\r\n                        this.qrcode.clear();\r\n                        this.qrcode.makeCode(this.linkShare);\r\n                        break;\r\n                    case 2:\r\n                        break;\r\n                    case 3:\r\n                        break;\r\n                    case 4:\r\n                        break;\r\n                }\r\n            })\r\n        },\r\n        \r\n        savetoserver() {\r\n            this.changeTitle(this.input3);\r\n            this.changeDescription(this.input2);\r\n            if (this.questions.length === 0) {\r\n                this.$message.error(\"题目为空，无法发布！\");\r\n                return;\r\n            }\r\n\r\n            this.$confirm('确认发布？', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'success'\r\n            }).then(() => {\r\n                let loadingIns = this.$loading({ fullscreen: true, text: '拼命加载中' });\r\n                this.publishSuccess();\r\n                var new_questions = JSON.parse(JSON.stringify(this.questions));\r\n                const userInfo = user.getters.getUser(user.state());\r\n                var param = {\r\n                    username: userInfo.user.username,\r\n                    title: this.title,\r\n                    finished_time: this.timeFrame,\r\n                    description: this.description,\r\n                    type: this.type,\r\n                    max_recycling: this.max_recycling,\r\n                    qn_id: this.$route.params.qnid,\r\n                    questions: new_questions\r\n                };\r\n                var paramer = JSON.stringify(param, { questions: 'brackets' });\r\n                console.log(paramer);\r\n                this.$axios({\r\n                    method: 'post',\r\n                    url: '/surveymanage/api/savesurvey',\r\n                    data: paramer,\r\n                })\r\n                    .then(res => {\r\n                        loadingIns.close();\r\n                        if (res.data.status_code == 1) {\r\n                            this.$message.success(\"保存成功！\");\r\n                            console.log(paramer);\r\n                            console.log(this.title);\r\n                            console.log(this.description);\r\n                            // this.linkShare = this.GLOBAL.baseUrl + '/fill_form?mode=1&code=' + res.data.code;\r\n\r\n                            // if (this.qrcode == null) {\r\n                            //     this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n                            //         width: 200, //生成的二维码的宽度\r\n                            //         height: 200, //生成的二维码的高度\r\n                            //         colorDark: \"#000000\", // 生成的二维码的深色部分\r\n                            //         colorLight: \"#ffffff\", //生成二维码的浅色部分\r\n                            //         correctLevel: QRCode.CorrectLevel.H\r\n                            //     });\r\n                            // }\r\n                            this.qrcode.clear();\r\n                            this.qrcode.makeCode(this.linkShare);\r\n                        }\r\n                        else if (res.data.status_code == 2) {\r\n                            this.$message.error(\"题目为空，无法发布！\");\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            }).catch(() => {\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: '取消发布'\r\n                });\r\n            });\r\n        },\r\n        saveinfo(tag) {\r\n            this.saveQnInfo(tag, \"4\");\r\n        },\r\n        save() {\r\n            this.saveinfo('save');\r\n        },\r\n        preview() {\r\n            this.saveinfo('preview');\r\n        },\r\n        up: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            if (index !== 0) {\r\n                // 非法移动\r\n                if (questions[index].last_question === index) {\r\n                    this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n                    return;\r\n                }\r\n                // 关联维护\r\n                let arr = this.sonGroup(index);\r\n                let willSubtract = [];\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        willSubtract.push(arr[j].id - 1);\r\n                    }\r\n                }\r\n                arr = this.sonGroup(index - 1);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        questions[arr[j].id - 1].last_question++;\r\n                    }\r\n                }\r\n                for (let i = 0; i < willSubtract.length; i++) {\r\n                    questions[willSubtract[i]].last_question--;\r\n                }\r\n                // 题序维护\r\n                questions[index].id--;\r\n                questions[index - 1].id++;\r\n                let temp = questions[index];\r\n                questions[index] = questions[index - 1];\r\n                questions[index - 1] = temp;\r\n                // 大纲维护\r\n                this.updateOutline(index, questions[index - 1].title);\r\n                this.updateOutline(index + 1, questions[index].title);\r\n            }\r\n        },\r\n        down: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            if (index !== questions.length - 1) {\r\n                // 非法移动\r\n                if (questions[index + 1].last_question === index + 1) {\r\n                    this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n                    return;\r\n                }\r\n                // 关联维护\r\n                let arr = this.sonGroup(index);\r\n                let willAdd = [];\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        willAdd.push(arr[j].id - 1);\r\n                    }\r\n                }\r\n                arr = this.sonGroup(index + 1);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        questions[arr[j].id - 1].last_question--;\r\n                    }\r\n                }\r\n                for (let i = 0; i < willAdd.length; i++) {\r\n                    questions[willAdd[i]].last_question++;\r\n                }\r\n                // 题序维护\r\n                questions[index].id++;\r\n                questions[index + 1].id--;\r\n                let temp = questions[index];\r\n                questions[index] = questions[index + 1];\r\n                questions[index + 1] = temp;\r\n                // 大纲维护\r\n                this.updateOutline(index + 1, questions[index].title);\r\n                this.updateOutline(index + 2, questions[index + 1].title);\r\n            }\r\n        },\r\n        del_pre: function (index) {\r\n            // 问题关联检查\r\n            if (this.sonGroup(index - 1).length !== 0) {\r\n                this.$confirm('该问题已被关联，删除此问题会删除所有相关关联信息', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.del_relation(index);\r\n                    this.del(index)\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '问题及关联信息已成功删除'\r\n                    });\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '取消删除题目及关联'\r\n                    });\r\n                });\r\n            } else {\r\n                this.$confirm('确认删除（不可恢复）？', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.del(index)\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '删除成功'\r\n                    });\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '取消删除'\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        del: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            let outline = this.outline;\r\n            // 维护关联关系\r\n            for (let i = index + 1; i < questions.length; i++) {\r\n                let arr = this.sonGroup(i);\r\n                if (arr.length !== 0) {\r\n                    for (let j = 0; j < arr.length; j++) {\r\n                        if (questions[arr[j].id - 1] !== index) {\r\n                            questions[arr[j].id - 1].last_question--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // 维护题序\r\n            for (let i = index + 1; i < questions.length; i++) {\r\n                questions[i].id--;\r\n            }\r\n            outline.splice(index, 1);\r\n            questions.splice(index, 1);\r\n            // 维护大纲\r\n            for (let num = index; num < outline.length; num++) {\r\n                this.updateOutline(num + 1, questions[num].title);\r\n            }\r\n        },\r\n        setAMoedel(){\r\n            // {\r\n            //         id: 1,\r\n            //         type: 'radio',\r\n            //         title: '这是一个什么网站？',\r\n            //         description: '请考虑妥当后填写',\r\n            //         must: true,\r\n            //         options: [{\r\n            //             id: 1,\r\n            //             title: '问卷系统',\r\n            //         }, {\r\n            //             id: 2,\r\n            //             title: '出版系统',\r\n            //         }],\r\n            //         row: 0,\r\n            //         score: 0,\r\n            //     },\r\n            if(this.modelA){\r\n                this.$message({\r\n                    type: 'error',\r\n                    message: '该模板已添加！'\r\n                })\r\n                return;\r\n            }\r\n            this.modelA = true;\r\n            for(let i = 0; i < this.xiaoxueqi_questions.length; i++){\r\n                this.willAddQuestion.id = this.xiaoxueqi_questions[i].id;\r\n                this.willAddQuestion.title = this.xiaoxueqi_questions[i].title;\r\n                this.willAddQuestion.description = this.xiaoxueqi_questions[i].description;\r\n                this.willAddQuestion.must = this.xiaoxueqi_questions[i].must;\r\n                this.willAddQuestion.type = this.xiaoxueqi_questions[i].type;\r\n                this.willAddQuestion.row = this.xiaoxueqi_questions[i].row;\r\n                this.willAddQuestion.score = this.xiaoxueqi_questions[i].score;\r\n                this.willAddQuestion.options = this.xiaoxueqi_questions[i].options;\r\n                this.dialogConfirm();\r\n            }\r\n        },\r\n        setBMoedel(){\r\n            // {\r\n            //         id: 1,\r\n            //         type: 'radio',\r\n            //         title: '这是一个什么网站？',\r\n            //         description: '请考虑妥当后填写',\r\n            //         must: true,\r\n            //         options: [{\r\n            //             id: 1,\r\n            //             title: '问卷系统',\r\n            //         }, {\r\n            //             id: 2,\r\n            //             title: '出版系统',\r\n            //         }],\r\n            //         row: 0,\r\n            //         score: 0,\r\n            //     },\r\n            if(this.modelB){\r\n                this.$message({\r\n                    type: 'error',\r\n                    message: '该模板已添加！'\r\n                })\r\n                return;\r\n            }\r\n            this.modelB = true;\r\n            for(let i = 0; i < this.some_questions.length; i++){\r\n                this.willAddQuestion.id = this.some_questions[i].id;\r\n                this.willAddQuestion.title = this.some_questions[i].title;\r\n                this.willAddQuestion.description = this.some_questions[i].description;\r\n                this.willAddQuestion.must = this.some_questions[i].must;\r\n                this.willAddQuestion.type = this.some_questions[i].type;\r\n                this.willAddQuestion.row = this.some_questions[i].row;\r\n                this.willAddQuestion.score = this.some_questions[i].score;\r\n                this.willAddQuestion.options = this.some_questions[i].options;\r\n                this.dialogConfirm();\r\n            }\r\n        },\r\n        copy: function (index) {\r\n            index--;\r\n            let questions = this.questions;\r\n            // 大纲更新\r\n            this.updateOutline(this.outline.length + 1, questions[index].title);\r\n            // 问卷更新\r\n            let temp = this.deepClone(questions[index]);\r\n            temp.id = questions.length + 1;\r\n            temp.question_id = 0;\r\n            questions.push(temp);\r\n            this.$message.success(\"问题复制成功，已粘贴至问卷末尾\");\r\n        },\r\n        deepClone: function (initialObj) {\r\n            let obj = {};\r\n            try {\r\n                obj = JSON.parse(JSON.stringify(initialObj));\r\n                // eslint-disable-next-line no-empty\r\n            } finally { }\r\n            return obj;\r\n        },    // 深拷贝\r\n        updateOutline: function (id, label) {\r\n            if (label.length > 12) {\r\n                label = id + '. ' + label.substring(0, 11) + '...';\r\n            } else {\r\n                label = id + '. ' + label;\r\n            }\r\n            if (id <= this.questions.length) {\r\n                // this.outline[id - 1].id = id;\r\n                // this.outline[id - 1].label = label;\r\n            } else {\r\n                this.outline.push({\r\n                    id: id,\r\n                    label: label,\r\n                })\r\n            }\r\n        },\r\n        updateQuestions: function (start, end) {\r\n            let offset = end - start;\r\n            if (offset > 0) {\r\n                for (let i = 0; i < offset; i++) {\r\n                    this.down(start + i);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < offset * -1; i++) {\r\n                    this.up(start - i);\r\n                }\r\n            }\r\n        },  // good\r\n        toFillQn: function (value) {\r\n            this.$router.push({\r\n                name: 'FillQn',\r\n                query: {\r\n                    mode: value,\r\n                    title: this.title,\r\n                }\r\n            });\r\n        },\r\n        InitOutline() {\r\n            for (var i = 0; i < this.questions.length; i++) {\r\n                this.outline.push({\r\n                    id: this.questions[i].id,\r\n                    label: (i + 1) + \". \" + this.questions[i].title\r\n                })\r\n            }\r\n        },\r\n        copyToClip(message) {\r\n            var aux = document.createElement(\"input\");\r\n            aux.setAttribute(\"value\", this.linkShare);\r\n            document.body.appendChild(aux);\r\n            aux.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(aux);\r\n            if (message !== null) {\r\n                this.$message.success(\"复制成功\");\r\n            } else {\r\n                this.$message.error(\"复制失败\");\r\n            }\r\n        },\r\n        // 大纲拖拽处理函数(下3个)\r\n        handleDrop(draggingNode, dropNode, dropType) {\r\n            console.log('tree drop: ', draggingNode.key, dropNode.key, dropType);\r\n            if (this.isRightRelation(draggingNode.key, dropNode.key)) {\r\n                this.updateQuestions(draggingNode.key, dropNode.key);\r\n            } else {\r\n                this.outline.splice(0, this.outline.length);\r\n                this.InitOutline();\r\n                this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n            }\r\n        },\r\n        allowDrop(draggingNode, dropNode, type) {\r\n            if (draggingNode.key > dropNode.key) {\r\n                return type === 'prev';\r\n            } else {\r\n                return type === 'next';\r\n            }\r\n        },\r\n        isRightRelation: function (index1, index2) {\r\n            console.log(index1, index2);\r\n            index1--;\r\n            index2--;\r\n            let questions = this.questions;\r\n            if (index1 < index2) {\r\n                for (let i = index1 + 1; i <= index2; i++) {\r\n                    if (questions[i].last_question === index1 + 1) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            } else {\r\n                for (let i = index1 - 1; i >= index2; i--) {\r\n                    if (questions[index1].last_question === i + 1) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        },\r\n        idTitle: function (item) {\r\n            if (item.id === 0) {\r\n                return item.title;\r\n            } else {\r\n                return item.id + \". \" + item.title;\r\n            }\r\n        },\r\n        // relatedQs: function (item) {\r\n        //     return \"关联问题：\" + this.questions[item.last_question - 1].id + \".\" + this.questions[item.last_question - 1].title + \"(\" + this.questions[item.last_question - 1].options[item.last_option - 1].title + \")\";\r\n        // },\r\n        // 遍历得爸爸\r\n        fatherIndex: function (qs_id) {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].question_id === qs_id) {\r\n                    return i;\r\n                }\r\n            }\r\n        },\r\n        // 遍历得儿子\r\n        sonGroup: function (index) {\r\n            let arr = [];\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].last_question === this.questions[index].id) {\r\n                    arr.push(this.questions[i]);\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n        // 连带删除关联信息\r\n        del_relation: function (index) {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                // 保存加入后,下面需修改id为question_id\r\n                if (this.questions[i].last_question === this.questions[index - 1].id) {\r\n                    this.questions[i].last_option = 0;\r\n                    this.questions[i].last_question = 0;\r\n                    this.questions[i].is_shown = true;\r\n                }\r\n            }\r\n        },\r\n        // 关联信息存在性判断\r\n        isExistRelation: function () {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                if (this.questions[i].last_question !== 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        // 监听：全局删除关联信息\r\n        closeGlobalLogic: function (state) {\r\n            if (!state && this.isExistRelation()) {\r\n                this.$confirm('检测到您已为题目添加关联，关闭设置将会删除所有关联信息，是否继续？', '提示', {\r\n                    confirmButtonText: '确认',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.deleteGlobalRelation();\r\n                    this.$message.info(\"关联信息已全部删除\");\r\n                }).catch(() => {\r\n                    this.isLogic = true;\r\n                    this.$message.info(\"取消操作\");\r\n                });\r\n            }\r\n        },\r\n        // 删除全局关联信息\r\n        deleteGlobalRelation: function () {\r\n            for (let i = 0; i < this.questions.length; i++) {\r\n                this.questions[i].last_question = 0;\r\n                this.questions[i].last_option = 0;\r\n                this.questions[i].is_shown = true;\r\n            }\r\n        },\r\n        fetchQuestions() {\r\n            // 假设从后端获取问题数据的过程\r\n            const formData = new FormData();\r\n            // formData.append(\"survey_keyword\", this.loginForm.user);\r\n            formData.append(\"survey_id\", this.$route.params.qnid);\r\n            this.$axios({\r\n                method: 'post',\r\n                url: '/question/api/listquestion',\r\n                data: formData,\r\n            }).then(res => {\r\n                switch (res.data.status_code) {\r\n                case 1:\r\n                    this.questions = JSON.parse(res.data.data);\r\n                    // for (var i = 0; i < this.questionnaires.length; i++) {\r\n                    // if (this.questionnaires[i].questionType == '1')\r\n                    //     this.questionnaires[i].questionType = '普通问卷'\r\n                    // else if (this.questionnaires[i].questionType == '2')\r\n                    //     this.questionnaires[i].questionType = '投票问卷'\r\n                    // else if (this.questionnaires[i].questionType == '3')\r\n                    //     this.questionnaires[i].questionType = '考试问卷'\r\n                    // else\r\n                    //     this.questionnaires[i].questionType = '报名问卷'\r\n                    // }\r\n                    console.log(this.questions);\r\n                    console.log(\"success on fetching questions\");\r\n                    break;\r\n                case 2:\r\n                    console.log(\"error 2\");\r\n                    break;\r\n                case 3:\r\n                    console.log(\"error 3\");\r\n                    break;\r\n                case 4:\r\n                    console.log(\"error 4\");\r\n                    break;\r\n                case 5:\r\n                    console.log(\"error 5\");\r\n                    break;\r\n                case -1:\r\n                    break;\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n            // const questionnaireDataFromBackend = [\r\n            //   {\r\n            //     questionnaireName: '问卷1',\r\n            //     questionnaireId: '123',\r\n            //     isPublished: true,\r\n            //     answersCount: 50,\r\n            //     creationDate: '2024-05-20',\r\n            //     isFavorited: true,\r\n            //     isPaused: true,\r\n            //     isEditing: false,\r\n            //   },\r\n            //   {\r\n            //     questionnaireName: '问卷2',\r\n            //     questionnaireId: '456',\r\n            //     isPublished: false,\r\n            //     answersCount: 30,\r\n            //     creationDate: '2024-05-21',\r\n            //     isFavorited: false,\r\n            //     isPaused: false,\r\n            //     isEditing: false,\r\n            //   },\r\n            //   {\r\n            //     questionnaireName: '问卷3',\r\n            //     questionnaireId: '789',\r\n            //     isPublished: false,\r\n            //     answersCount: 50,\r\n            //     creationDate: '2024-05-22',\r\n            //     isFavorited: true,\r\n            //     isPaused: false,\r\n            //     isEditing: false,\r\n            //   },\r\n            //   {\r\n            //     questionnaireName: '问卷4',\r\n            //     questionnaireId: '789',\r\n            //     isPublished: false,\r\n            //     answersCount: 50,\r\n            //     creationDate: '2024-05-23',\r\n            //     isFavorited: true,\r\n            //     isPaused: false,\r\n            //     isEditing: false,\r\n            //   },\r\n            //   {\r\n            //     questionnaireName: '问卷5',\r\n            //     questionnaireId: '789',\r\n            //     isPublished: false,\r\n            //     answersCount: 50,\r\n            //     creationDate: '2024-05-24',\r\n            //     isFavorited: true,\r\n            //     isPaused: false,\r\n            //     isEditing: false,\r\n            //   },\r\n            //   {\r\n            //     questionnaireName: '问卷6',\r\n            //     questionnaireId: '789',\r\n            //     isPublished: false,\r\n            //     answersCount: 50,\r\n            //     creationDate: '2024-05-25',\r\n            //     isFavorited: true,\r\n            //     isPaused: true,\r\n            //     isEditing: false,\r\n            //   },\r\n            // ];\r\n            // 将（模拟后端）获取的数据赋值给组件的数据属性\r\n\r\n        },\r\n    },\r\n    computed: {\r\n        questionsFilter: function () {\r\n            let questions = this.questions;\r\n            let arr = [{\r\n                question_id: 0,\r\n                id: 0,\r\n                type: '',\r\n                title: '不设置关联题目',\r\n                must: false, // 是否必填\r\n                is_shown: true,   // 是否显示\r\n                last_question: 0,   // 前导问题\r\n                last_option: 0,     // 前导选项\r\n                description: '', // 问题描述\r\n                options: [\r\n                    {\r\n                        title: '', // 选项标题\r\n                        id: 0 // 选项id\r\n                    }\r\n                ],\r\n                row: 1, // 填空区域行数\r\n                score: 5, // 最大评分\r\n            }];\r\n            for (let i = 0; i < this.logicIndex; i++) {\r\n                if (questions[i].type === \"radio\" || questions[i].type === \"checkbox\") {\r\n                    arr.push(questions[i]);\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n    },\r\n    created() {\r\n        //this.getQnDataSelf();\r\n        this.fetchQuestions();\r\n    },\r\n    mounted() {\r\n        //this.timer = setInterval(this.autoSave, 60000);\r\n    },\r\n    beforeUnmount() {\r\n        //clearInterval(this.timer);\r\n    },\r\n    watch: {\r\n        //hasRecycleLimit:\"recycleLimit\",\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form {\r\n    position: relative;\r\n}\r\n\r\n.qnBoard {\r\n    display: flex;\r\n    position: relative;\r\n    width: 190px;\r\n    max-height: 1000px;\r\n    left: 20px;\r\n    top: 80px;\r\n    background-color: white;\r\n}\r\n\r\n.qnMain {\r\n    display: flex;\r\n    position: absolute;\r\n    left: 15%;\r\n    width: 1300px;\r\n    height: 700px;\r\n    top: 80px;\r\n    background: #FFFFFF;\r\n}\r\n\r\n.qnBoard .demo-tabs>.el-tabs__content {\r\n    padding: px;\r\n    color: #4fef0f;\r\n    font-size: 32px;\r\n    font-weight: 600;\r\n}\r\n\r\n.qnBoard .demo-tabs .custom-tabs-label {\r\n    font-size: 20px;\r\n}\r\n\r\n.form .linkDialog {\r\n    text-align: left;\r\n}\r\n\r\n.form .edit {\r\n    margin-top: 0;\r\n    overflow: auto;\r\n    height: 550px;\r\n}\r\n\r\n.form .outline {\r\n    overflow: auto;\r\n    height: 550px;\r\n}\r\n\r\n.form .ques-type {\r\n    padding: 15px 0;\r\n    font-size: 16px;\r\n    border-bottom: dashed #e3e3e3 1px;\r\n}\r\n\r\n.form .type-icon {\r\n    color: #1687fd;\r\n    display: inline-block;\r\n}\r\n\r\n.form .type-icon:hover {\r\n    color: #409EFF;\r\n    cursor: pointer;\r\n}\r\n\r\n.form .el-tabs__nav-scroll {\r\n    text-align: center;\r\n    height: 60px;\r\n    margin: 0 60px;\r\n}\r\n\r\n.form .el-tabs__item {\r\n    font-weight: bold;\r\n    padding: 0 20px;\r\n    height: 60px;\r\n    box-sizing: border-box;\r\n    line-height: 60px;\r\n    display: inline-block;\r\n    list-style: none;\r\n    font-size: 16px;\r\n    color: black;\r\n    position: relative;\r\n}\r\n\r\n.form .el-tabs__header {\r\n    margin: 0;\r\n}\r\n\r\n.form .el-tree-node__content {\r\n    padding-left: 10px !important;\r\n    height: 40px;\r\n}\r\n\r\n.form .qnMain .ques {\r\n    width: 96%;\r\n    margin-left: 2%;\r\n    /* margin-top: 50px; */\r\n    margin-bottom: 2%;\r\n}\r\n\r\n.form .qnMain .ques .title {\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    padding-top: 10px;\r\n    padding-bottom: 26px;\r\n}\r\n\r\n.form .qnMain .ques .description {\r\n    text-align: left;\r\n    font-size: 18px;\r\n    padding-bottom: 30px;\r\n    color: black;\r\n    line-height: 30px;\r\n}\r\n\r\n.form .qnMain .ques-block {\r\n    margin-bottom: 10px;\r\n    padding-bottom: 10px;\r\n    border: solid #e3e3e3 1px;\r\n}\r\n\r\n.form .qnMain .ques-block:hover {\r\n    background: #f5f5f5;\r\n    transition: .3s;\r\n}\r\n\r\n.form .qnMain .ques-block .must {\r\n    font-weight: normal;\r\n    color: crimson;\r\n}\r\n\r\n.form .qnMain .block-title {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 20px 10px 10px;\r\n    font-weight: bold;\r\n}\r\n\r\n.form .qnMain .block-description {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 5px;\r\n    padding-bottom: 15px;\r\n    padding-left: 10px;\r\n    color: #969696;\r\n}\r\n\r\n.form .qnMain .block-choice {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 5px 10px 10px;\r\n}\r\n\r\n.form .el-button-group>.el-button:first-child {\r\n    border-radius: 0 0 0 8px;\r\n}\r\n\r\n.form .el-button-group>.el-button:last-child {\r\n    border-radius: 0 0 8px 0;\r\n}\r\n\r\n.form .block-button .el-button {\r\n    background: #b9b9b9;\r\n    border: transparent;\r\n    right: 15px;\r\n}\r\n\r\n.form .block-button .el-button:hover {\r\n    background: #989898;\r\n    border: transparent;\r\n}\r\n\r\n.form .bt {\r\n    color: white;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n}\r\n\r\n.form .block-choice .el-textarea__inner {\r\n    max-height: 100px;\r\n}\r\n\r\n.form .dialog {\r\n    text-align: left;\r\n    font-size: large;\r\n}\r\n\r\n.form .addOptionButton {\r\n    display: inline-block;\r\n    margin-left: 100px;\r\n}\r\n\r\n.form .deleteOptionButton {\r\n    margin-left: 20px;\r\n}\r\n\r\n.form .logic-description {\r\n    margin-top: -15px;\r\n    margin-bottom: 30px;\r\n    text-align: left;\r\n    padding-left: 6px;\r\n    font-size: 14px;\r\n    color: #aaaaaa;\r\n}\r\n\r\n.form .important {\r\n    color: crimson;\r\n}\r\n\r\n.form .logic-title {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    padding-left: 12px;\r\n    padding-bottom: 30px;\r\n}\r\n\r\n.form .logic-bt {\r\n    text-align: center;\r\n}\r\n\r\n.form .logic-form .el-input--suffix .el-input__inner {\r\n    width: 620px;\r\n}\r\n\r\n.form .sideTitle {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 10px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.form .easyChoose {\r\n    font-size: medium;\r\n    margin-top: 10px;\r\n}\r\n\r\n.form .chooseLabel {\r\n    margin-right: 10px;\r\n    margin-left: 5px;\r\n}\r\n\r\n.form .setting-item {\r\n    text-align: left;\r\n}\r\n\r\n.form .setting-bt {\r\n    margin-top: 28px;\r\n}\r\n\r\n.form .settingDialog .el-dialog__header {\r\n    text-align: left;\r\n}\r\n\r\n.form .settingDialog .item-title {\r\n    padding-right: 20px;\r\n}\r\n\r\n.form .logic-info {\r\n    color: #aaaaaa;\r\n    padding-top: 2px;\r\n    padding-left: 12px;\r\n    padding-bottom: 25px;\r\n}\r\n\r\n.form .block-relation {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #1687fd;\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAM;gEAWOC,mBAAA,CAAiB,cAAX,MAAI;gEAGOA,mBAAA,CAAe,cAAT,IAAE;gEAYJA,mBAAA,CAAiB,cAAX,MAAI;gEAenCA,mBAAA,CAAgD;EAA1CC,KAAuB,EAAvB;IAAA;EAAA;AAAuB,GAAC,QAAW;;EAKxCF,KAAK,EAAC,MAAM;EAACE,KAAmD,EAAnD;IAAA;IAAA;IAAA;EAAA;;gEAYdD,mBAAA,CAAgD;EAA1CC,KAAuB,EAAvB;IAAA;EAAA;AAAuB,GAAC,QAAW;;EAKxCF,KAAK,EAAC,MAAM;EAACE,KAAmD,EAAnD;IAAA;IAAA;IAAA;EAAA;;;EAsCjBF,KAAK,EAAC;AAAM;;EAERA,KAAK,EAAC;AAAO;;EAxGtCG,GAAA;EA2GyBH,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAS;;EAQHA,KAAK,EAAC;AAAa;;EAvHxDG,GAAA;EAwH0EH,KAAK,EAAC;;;EAxHhFG,GAAA;EA2HqCH,KAAK,EAAC;;;EA3H3CG,GAAA;EAiIqCH,KAAK,EAAC;;;EACFE,KAA4B,EAA5B;IAAA;EAAA;AAA4B;;EAlIrEC,GAAA;EAsIqCH,KAAK,EAAC;;;EAtI3CG,GAAA;EAyJsCD,KAAyC,EAAzC;IAAA;IAAA;EAAA;;oBAzJtC;;EAAAC,GAAA;EA0K6DD,KAAyD,EAAzD;IAAA;IAAA;IAAA;EAAA;;;EA1K7DC,GAAA;EAkL8CD,KAAyD,EAAzD;IAAA;IAAA;IAAA;EAAA;;;EAlL9CC,GAAA;EAiMqCH,KAAK,EAAC;;;EAjM3CG,GAAA;EAuMqCH,KAAK,EAAC;;iEAEPC,mBAAA,CAAkB,aAAb,SAAO;;EA6D/BD,KAAK,EAAC;AAAS;;EAtQhCG,GAAA;EA4RqBH,KAAK,EAAC;;;EA5R3BG,GAAA;EAyT4BH,KAAK,EAAC;;iEA2CdC,mBAAA,CAAmB,cAAb,GAAM;iEAoBJA,mBAAA,CAA+D;EAAzDD,KAAK,EAAC;AAAgB,GAAC,wBAA2B;iEAQxDC,mBAAA,CAAgE;EAA1DD,KAAK,EAAC;AAAgB,GAAC,yBAA4B;;EAKnEA,KAAK,EAAC,eAAe;EAACE,KAA0B,EAA1B;IAAA;EAAA;;iEAahBD,mBAAA,CAA+E;EAA1EG,EAAE,EAAC,UAAU;EAACF,KAAqD,EAArD;IAAA;IAAA;IAAA;EAAA;;iEAKnBD,mBAAA,CAAe,YAAX,QAAM;;EAchBD,KAAK,EAAC,eAAe;EAACE,KAA0B,EAA1B;IAAA;EAAA;;;EAStBF,KAAK,EAAC,eAAe;EAACE,KAA0B,EAA1B;IAAA;EAAA;;;EAYnBF,KAAK,EAAC;AAAa;;EA1bxCG,GAAA;EA8cqBH,KAAK,EAAC;;;EAEEE,KAAsB,EAAtB;IAAA;EAAA;AAAsB;;EACdA,KAAsB,EAAtB;IAAA;EAAA;AAAsB;;EAjd3DC,GAAA;EAudqBH,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAU;iEA8BrBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAmB,GAAC,qDAE/B;;EA3fhBG,GAAA;EA6fqBH,KAAK,EAAC;;;EAKVA,KAAK,EAAC;AAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAjgB/BK,mBAAA,CAqgBM,OArgBNC,UAqgBM,GApgBFL,mBAAA,CA6FM;IA7FDD,KAAK,EAAC,SAAS;IAAEE,KAAK,EAFnCK,eAAA,CAEqC;;KAE5B;MACGC,YAAA,CAyFUC,kBAAA;IAzFDC,IAAI,EAAC,MAAM;IAACC,OAAO,EAAC,MAAM;IAACX,KAAK,EAAC;;IALtDY,OAAA,EAAAC,QAAA,CAMgB,MAiCc,CAjCdL,YAAA,CAiCcM,sBAAA;MAjCDC,KAAK,EAAC;IAAM;MANzCH,OAAA,EAAAC,QAAA,CAOoB,MA+BU,CA/BVL,YAAA,CA+BUQ,kBAAA;QA/BDhB,KAAK,EAAC,uBAAuB;QAACE,KAA2C,EAA3C;UAAA;UAAA;QAAA;;QACxBe,KAAK,EAAAJ,QAAA,CACZ,MAEU,CAFVL,YAAA,CAEUU,kBAAA;UAXtCN,OAAA,EAAAC,QAAA,CAUgC,MAAQ,CAARL,YAAA,CAAQW,eAAA,E;UAVxCC,CAAA;YAY4BC,UAAiB,C;QAZ7CT,OAAA,EAAAC,QAAA,CAcwB,MAUqB,CAVrBL,YAAA,CAUqBc,6BAAA;UATNL,KAAK,EAAAJ,QAAA,CAAC,MAAe,CAAfU,UAAe,C;UAf5DX,OAAA,EAAAC,QAAA,CAgB4B,MAC0F,CAD1FL,YAAA,CAC0FgB,uBAAA;YAArFC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA;cAAEC,KAAA,CAAAC,eAAe,CAACnB,IAAI;cAAYkB,KAAA,CAAAE,mBAAmB;YAAA;;YAjB3FlB,OAAA,EAAAC,QAAA,CAiBoG,MAAG,CAjBvGkB,gBAAA,CAiBoG,KAAG,E;YAjBvGX,CAAA;cAkB4BZ,YAAA,CAC6FgB,uBAAA;YAAxFC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA;cAAEC,KAAA,CAAAC,eAAe,CAACnB,IAAI;cAAekB,KAAA,CAAAE,mBAAmB;YAAA;;YAnB9FlB,OAAA,EAAAC,QAAA,CAmBuG,MAAG,CAnB1GkB,gBAAA,CAmBuG,KAAG,E;YAnB1GX,CAAA;cAoB4BZ,YAAA,CACyFgB,uBAAA;YAApFC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA;cAAEC,KAAA,CAAAC,eAAe,CAACnB,IAAI;cAAWkB,KAAA,CAAAE,mBAAmB;YAAA;;YArB1FlB,OAAA,EAAAC,QAAA,CAqBmG,MAAG,CArBtGkB,gBAAA,CAqBmG,KAAG,E;YArBtGX,CAAA;cAsB4BZ,YAAA,CACyFgB,uBAAA;YAApFC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA;cAAEC,KAAA,CAAAC,eAAe,CAACnB,IAAI;cAAWkB,KAAA,CAAAE,mBAAmB;YAAA;;YAvB1FlB,OAAA,EAAAC,QAAA,CAuBmG,MAAG,CAvBtGkB,gBAAA,CAuBmG,KAAG,E;YAvBtGX,CAAA;;UAAAA,CAAA;YAyBwBZ,YAAA,CAOqBc,6BAAA;UAPDL,KAAK,EAAC;QAAM;UAzBxDL,OAAA,EAAAC,QAAA,CA0B4B,MAKc,CALdL,YAAA,CAKcwB,sBAAA;YAJCf,KAAK,EAAAJ,QAAA,CAAC,MAAiB,CAAjBoB,UAAiB,C;YA3BlErB,OAAA,EAAAC,QAAA,CA4BgC,MAAgD,CAAhDL,YAAA,CAAgDgB,uBAAA;cAAjCC,OAAK,EAAES,QAAA,CAAAC;YAAO;cA5B7DvB,OAAA,EAAAC,QAAA,CA4B+D,MAAE,CA5BjEkB,gBAAA,CA4B+D,IAAE,E;cA5BjEX,CAAA;4CA6BgCZ,YAAA,CAAiDgB,uBAAA;cAAlCC,OAAK,EAAES,QAAA,CAAAE;YAAQ;cA7B9DxB,OAAA,EAAAC,QAAA,CA6BgE,MAAE,CA7BlEkB,gBAAA,CA6BgE,IAAE,E;cA7BlEX,CAAA;4CA8BgCZ,YAAA,CAAmDgB,uBAAA;cAApCC,OAAK,EAAES,QAAA,CAAAG;YAAQ;cA9B9DzB,OAAA,EAAAC,QAAA,CA8BgE,MAAI,CA9BpEkB,gBAAA,CA8BgE,MAAI,E;cA9BpEX,CAAA;;YAAAA,CAAA;;UAAAA,CAAA;YAiCwBZ,YAAA,CAGqBc,6BAAA;UAHDL,KAAK,EAAC;QAAM;UAjCxDL,OAAA,EAAAC,QAAA,CAkC4B,MACgE,CADhEL,YAAA,CACgEgB,uBAAA;YAA3DC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAAOW,oBAAoB;;YAnCjE1B,OAAA,EAAAC,QAAA,CAmC0E,MAAG,CAnC7EkB,gBAAA,CAmC0E,KAAG,E;YAnC7EX,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAwCgBZ,YAAA,CAqDcM,sBAAA;MArDDC,KAAK,EAAC;IAAM;MAxCzCH,OAAA,EAAAC,QAAA,CAyCoB,MAES,CAFTL,YAAA,CAES+B,iBAAA;QA3C7B3B,OAAA,EAAAC,QAAA,CA0CwB,MAAgD,CAAhD2B,UAAgD,C;QA1CxEpB,CAAA;UA4CoBZ,YAAA,CAES+B,iBAAA;QA9C7B3B,OAAA,EAAAC,QAAA,CA6CwB,MAAyB,CAAzBL,YAAA,CAAyBiC,kBAAA;UA7CjD7B,OAAA,EAAAC,QAAA,CA6CiC,MAAM,CA7CvCkB,gBAAA,CA6CiC,GAAM,E;UA7CvCX,CAAA;;QAAAA,CAAA;UA+CoBnB,mBAAA,CAOM,OAPNyC,UAOM,GANFlC,YAAA,CAKWmC,mBAAA;QArDnCC,UAAA,EAgD2ChB,KAAA,CAAAiB,MAAM;QAhDjD,uBAAAnB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgD2CC,KAAA,CAAAiB,MAAM,GAAAlB,MAAA;QAAEzB,KAAwB,EAAxB;UAAA;QAAA,CAAwB;QAAC4C,WAAW,EAAC,IAAI;QAAC9C,KAAK,EAAC;;QAE5D+C,MAAM,EAAAlC,QAAA,CACb,MAAsD,CAAtDL,YAAA,CAAsDwC,oBAAA;UAA1CvB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEO,QAAA,CAAAe,WAAW,CAACrB,KAAA,CAAAiB,MAAM;;UAnDrEjC,OAAA,EAAAC,QAAA,CAmDwE,MAAE,CAnD1EkB,gBAAA,CAmDwE,IAAE,E;UAnD1EX,CAAA;;QAAAA,CAAA;2CAuDoBZ,YAAA,CAES+B,iBAAA;QAzD7B3B,OAAA,EAAAC,QAAA,CAwDwB,MAAyB,CAAzBL,YAAA,CAAyBiC,kBAAA;UAxDjD7B,OAAA,EAAAC,QAAA,CAwDiC,MAAM,CAxDvCkB,gBAAA,CAwDiC,GAAM,E;UAxDvCX,CAAA;;QAAAA,CAAA;UA0DoBZ,YAAA,CAES+B,iBAAA;QA5D7B3B,OAAA,EAAAC,QAAA,CA2DwB,MAAgD,CAAhDqC,UAAgD,C;QA3DxE9B,CAAA;UA6DoBZ,YAAA,CAES+B,iBAAA;QA/D7B3B,OAAA,EAAAC,QAAA,CA8DwB,MAAyB,CAAzBL,YAAA,CAAyBiC,kBAAA;UA9DjD7B,OAAA,EAAAC,QAAA,CA8DiC,MAAM,CA9DvCkB,gBAAA,CA8DiC,GAAM,E;UA9DvCX,CAAA;;QAAAA,CAAA;UAgEoBnB,mBAAA,CAOM,OAPNkD,UAOM,GANF3C,YAAA,CAKWmC,mBAAA;QAtEnCC,UAAA,EAiE2ChB,KAAA,CAAAwB,MAAM;QAjEjD,uBAAA1B,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiE2CC,KAAA,CAAAwB,MAAM,GAAAzB,MAAA;QAAEzB,KAAwB,EAAxB;UAAA;QAAA,CAAwB;QAAC4C,WAAW,EAAC,IAAI;QAAC9C,KAAK,EAAC;;QAE5D+C,MAAM,EAAAlC,QAAA,CACb,MAA4D,CAA5DL,YAAA,CAA4DwC,oBAAA;UAAhDvB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEO,QAAA,CAAAmB,iBAAiB,CAACzB,KAAA,CAAAwB,MAAM;;UApE3ExC,OAAA,EAAAC,QAAA,CAoE8E,MAAE,CApEhFkB,gBAAA,CAoE8E,IAAE,E;UApEhFX,CAAA;;QAAAA,CAAA;2CAwEoBZ,YAAA,CAAoC8C,qBAAA;QAAxB,cAAY,EAAC;MAAQ,IACjC9C,YAAA,CAaUQ,kBAAA;QAbDhB,KAAK,EAAC,uBAAuB;QAACE,KAA2C,EAA3C;UAAA;UAAA;QAAA;;QAzE3DU,OAAA,EAAAC,QAAA,CA0EwB,MAKe,CALfL,YAAA,CAKegB,uBAAA;UALAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAAO4B,sBAAsB;;UAIlCtC,KAAK,EAAAJ,QAAA,CAAC,MAAI,CA9EjDkB,gBAAA,CA8E6C,MAAI,E;UA9EjDnB,OAAA,EAAAC,QAAA,CA2E4B,MAEU,CAFVL,YAAA,CAEUU,kBAAA;YA7EtCN,OAAA,EAAAC,QAAA,CA4EgC,MAAQ,CAARL,YAAA,CAAQgD,eAAA,E;YA5ExCpC,CAAA;;UAAAA,CAAA;YAgFwBZ,YAAA,CAKegB,uBAAA;UALAC,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAC,MAAA,SAAO8B,oBAAoB;;UAIhCxC,KAAK,EAAAJ,QAAA,CAAC,MAAI,CApFjDkB,gBAAA,CAoF6C,MAAI,E;UApFjDnB,OAAA,EAAAC,QAAA,CAiF4B,MAEU,CAFVL,YAAA,CAEUU,kBAAA;YAnFtCN,OAAA,EAAAC,QAAA,CAkFgC,MAAW,CAAXL,YAAA,CAAWkD,kBAAA,E;YAlF3CtC,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;UAuFoBZ,YAAA,CAAoC8C,qBAAA;QAAxB,cAAY,EAAC;MAAQ,IACjC9C,YAAA,CAAiFwC,oBAAA;QAAtEtC,IAAI,EAAC,SAAS;QAACiD,IAAI,EAAC,SAAS;QAAElC,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAAEO,QAAA,CAAA0B,YAAY;;QAxFjFhD,OAAA,EAAAC,QAAA,CAwFqF,MAAI,CAxFzFkB,gBAAA,CAwFqF,MAAI,E;QAxFzFX,CAAA;UAyFoBZ,YAAA,CAA4EwC,oBAAA;QAAjEtC,IAAI,EAAC,SAAS;QAACiD,IAAI,EAAC,SAAS;QAAElC,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAAEO,QAAA,CAAA2B,OAAO;;QAzF5EjD,OAAA,EAAAC,QAAA,CAyFgF,MAAI,CAzFpFkB,gBAAA,CAyFgF,MAAI,E;QAzFpFX,CAAA;UA0FoBZ,YAAA,CAES+B,iBAAA;QA5F7B3B,OAAA,EAAAC,QAAA,CA2FwB,MAAyB,CAAzBL,YAAA,CAAyBiC,kBAAA;UA3FjD7B,OAAA,EAAAC,QAAA,CA2FiC,MAAM,CA3FvCkB,gBAAA,CA2FiC,GAAM,E;UA3FvCX,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;uBAiGQZ,YAAA,CA2JesD,uBAAA;IA5PvBlD,OAAA,EAAAC,QAAA,CAkGY,MAyJU,CAzJVL,YAAA,CAyJUuD,kBAAA;MAzJD/D,KAAK,EAAC,QAAQ;MAAEE,KAAK,EAlG1CK,eAAA,CAkG4C;;;OAG/B;;MArGbK,OAAA,EAAAC,QAAA,CAsGgB,MAoJM,CApJNZ,mBAAA,CAoJM,OApJN+D,UAoJM,GAlJF/D,mBAAA,CAEM,OAFNgE,WAEM,EAAAC,gBAAA,CADCtC,KAAA,CAAAX,KAAK,kB,KAGGkD,WAAW,gBAAgBA,WAAW,kBAAkBA,WAAW,KAAKC,SAAS,I,cADhG/D,mBAAA,CAGM,OAHNgE,WAGM,EAF4F,KAClF,GAAAH,gBAAA,CAAGtC,KAAA,CAAAuC,WAAW,oBA7GlDG,mBAAA,gBA+GoBrE,mBAAA,CAyIM,OAzINsE,WAyIM,I,kBAxIFlE,mBAAA,CAuISmE,SAAA,QAvPjCC,WAAA,CAgHkE7C,KAAA,CAAA8C,SAAS,EAAjBC,IAAI;6BAAtCC,YAAA,CAuISrC,iBAAA;UAvIDvC,KAAK,EAAC,YAAY;UAA4BG,GAAG,EAAEwE,IAAI,CAACvE,EAAE;UAC7DyE,WAAS,EAAAlD,MAAA,IAAQC,KAAA,CAAAkD,SAAS,GAAGH,IAAI,CAACvE,EAAE;UAAGF,KAAK,EAjHzEK,eAAA,CAiH2E;;WAG9C;;UApH7BK,OAAA,EAAAC,QAAA,CAsH4B,MAqFS,CArFTL,YAAA,CAqFSuE,iBAAA;YArFAC,IAAI,EAAE,EAAE;YAAEhF,KAAK,EAAC;;YAtHrDY,OAAA,EAAAC,QAAA,CAuHgC,MAEM,CAFNZ,mBAAA,CAEM,OAFNgF,WAEM,GAzHtClD,gBAAA,CAAAmC,gBAAA,CAwHuCS,IAAI,CAACvE,EAAE,IAAG,IAAE,GAAA8D,gBAAA,CAAGS,IAAI,CAAC1D,KAAK,IAAG,GAAC,iBAAyB0D,IAAI,CAACO,IAAI,I,cAAlC7E,mBAAA,CAA+C,QAA/C8E,WAA+C,EAAX,MAAI,KAxH5Gb,mBAAA,e,GA2H8DK,IAAI,CAACjE,IAAI,eAAeiE,IAAI,CAACjE,IAAI,gBAAgBiE,IAAI,CAACjE,IAAI,gBAAgBiE,IAAI,CAACjE,IAAI,iBAAsDiE,IAAI,CAACjE,IAAI,gBAAgBiE,IAAI,CAACjE,IAAI,gB,cAAzML,mBAAA,CAIM,OAJN+E,WAIM,GAFF5E,YAAA,CACWmC,mBAAA;cADDG,WAAW,EAAC,OAAO;cAAC5C,KAAyB,EAAzB;gBAAA;cAAA;oBA7HlEoE,mBAAA,gBAiIgEK,IAAI,CAACjE,IAAI,c,cAAzCL,mBAAA,CAGM,OAHNgF,WAGM,GAFFpF,mBAAA,CAAwE,OAAxEqF,WAAwE,GAAtC9E,YAAA,CAAgC+E,mBAAA;cAAtBC,KAAK,EAAC;YAAG;cAlIzF5E,OAAA,EAAAC,QAAA,CAkI0F,MAAC,CAlI3FkB,gBAAA,CAkI0F,GAAC,E;cAlI3FX,CAAA;kBAmIoCnB,mBAAA,CAA2C,cAAtCO,YAAA,CAAgC+E,mBAAA;cAAtBC,KAAK,EAAC;YAAG;cAnI5D5E,OAAA,EAAAC,QAAA,CAmI6D,MAAC,CAnI9DkB,gBAAA,CAmI6D,GAAC,E;cAnI9DX,CAAA;sBAAAkD,mBAAA,gBAuI0CK,IAAI,CAACR,WAAW,WAAWQ,IAAI,CAACR,WAAW,aAAaQ,IAAI,CAACR,WAAW,KAAKC,SAAS,I,cADhG/D,mBAAA,CAGM,OAHNoF,WAGM,EAAAvB,gBAAA,CADCS,IAAI,CAACR,WAAW,oBAxIvDG,mBAAA,gBA2IgCA,mBAAA,wBAA2B,G,kBAC3BjE,mBAAA,CAYSmE,SAAA,QAxJzCC,WAAA,CA4I+EE,IAAI,CAACe,OAAO,EA5I3F,CA4IkEC,CAAC,EAAEC,KAAK;mCAA1ChB,YAAA,CAYSrC,iBAAA;gBAZDvC,KAAK,EAAC,WAAW;gBAAqCG,GAAG,EAAEwF,CAAC,CAACC;;gBA5IrGhF,OAAA,EAAAC,QAAA,CA6IoC,MAIS,CAJwD+E,KAAK,c,cAAtEhB,YAAA,CAISG,iBAAA;kBAjJ7C5E,GAAA;kBA6I6C0F,MAAM,EAAE,CAAC;kBAAGb,IAAI,EAAE,EAAE;kBAAEhF,KAAK,EAAC;;kBA7IzEY,OAAA,EAAAC,QAAA,CA8IwC,MAEW,CAFXL,YAAA,CAEWsF,mBAAA;oBAFD5F,KAAmC,EAAnC;sBAAA;sBAAA;oBAAA,CAAmC;oBAAE6F,GAAG,EAAEJ,CAAC,CAACK,GAAG;oBACpD,kBAAgB,GAAGL,CAAC,CAACK,GAAG;;kBA/IrE5E,CAAA;gDAAAkD,mBAAA,gBAmJ8CsB,KAAK,cAAcA,KAAK,QAAQjB,IAAI,CAACe,OAAO,CAACO,MAAM,Q,cAD7DrB,YAAA,CAKSG,iBAAA;kBAvJ7C5E,GAAA;kBAkJ6C6E,IAAI,EAAE,EAAE;kBAAEhF,KAAK,EAAC;;kBAlJ7DY,OAAA,EAAAC,QAAA,CAoJwC,MAEW,CAFXL,YAAA,CAEWsF,mBAAA;oBAFD5F,KAAmC,EAAnC;sBAAA;sBAAA;oBAAA,CAAmC;oBAAE6F,GAAG,EAAEpB,IAAI,CAACe,OAAO,CAACE,KAAK,MAAMI,GAAG;oBAC1E,kBAAgB,GAAGrB,IAAI,CAACe,OAAO,CAACE,KAAK,MAAMI,GAAG;;kBArJ3F5E,CAAA;gDAAAkD,mBAAA,e;gBAAAlD,CAAA;;4CA0J0CuD,IAAI,CAACe,OAAO,CAACO,MAAM,U,cAD7B5F,mBAAA,CACsD,QADtD6F,WACsD,EAAjB,YAAU,KA1J/E5B,mBAAA,gBA6JgCA,mBAAA,sBAAyB,G,kBACzBjE,mBAAA,CAKSmE,SAAA,QAnKzCC,WAAA,CA8JsEE,IAAI,CAACwB,SAAS,EAAnBR,CAAC;mCAAlCf,YAAA,CAKSrC,iBAAA;gBALDvC,KAAK,EAAC,WAAW;gBAA8BG,GAAG,EAAEwF,CAAC,CAACC;;gBA9J9FhF,OAAA,EAAAC,QAAA,CA+JoC,MAGwD,CAHxDZ,mBAAA,CAGwD;kBAHjDmG,KAAK,EAAC,KAAG;kBAACC,MAAM,EAAC,KAAG;kBAACC,kBAAkB,EAAC,MAAI;kBAACC,gBAAgB,EAAC,OAAK;kBACtEC,SAAS,EAAC,MAAI;kBAACC,QAAQ,EAAC,OAAK;kBAACC,MAAM,EAAC,KAAG;kBAACC,WAAW,EAAC,GAAC;kBAACC,WAAW,EAAC,MAAI;kBACvEC,aAAa,EAAC,MAAI;kBAACC,YAAY,EAAC,MAAI;kBAACC,iBAAiB,EAAC,MAAI;kBAACC,WAAW,EAAC,MAAI;kBAC5EC,oBAAoB,EAAC,MAAI;kBAACC,OAAO,EAAC,MAAI;kBAAEnB,GAAG,EAAEJ,CAAC,CAACK;wCAlKvFmB,WAAA,E;gBAAA/F,CAAA;;+DAsKgCf,mBAAA,CAyBMmE,SAAA,QA/LtCC,WAAA,CAsKwEE,IAAI,CAACyC,OAAO,EAAnBC,GAAG;mCAApChH,mBAAA,CAyBM;gBAzBDL,KAAK,EAAC,cAAc;gBAA8BG,GAAG,EAAEkH,GAAG,CAACjH;kBAE5DkE,mBAAA,wBAA2B,EACXK,IAAI,CAACjE,IAAI,gB,cAAzBkE,YAAA,CAIWW,mBAAA;gBA7K/CpF,GAAA;gBAyK2EqF,KAAK,EAAC;;gBAzKjF5E,OAAA,EAAAC,QAAA,CA0KwC,MAAe,CA1KvDkB,gBAAA,CAAAmC,gBAAA,CA0K2CmD,GAAG,CAACpG,KAAK,kBACFoG,GAAG,CAACC,WAAW,I,cADVjH,mBAAA,CAEmD,QAFnDkH,WAEmD,EADvC,IAAE,GAAArD,gBAAA,CACrBmD,GAAG,CAACG,MAAM,GAAGH,GAAG,CAACI,OAAO,IAAG,KAAQ,GAAAvD,gBAAA,CAAGmD,GAAG,CAACG,MAAM,oBA5KhGlD,mBAAA,e;gBAAAlD,CAAA;8CAAAkD,mBAAA,gBA+KoCA,mBAAA,wBAA2B,EACRK,IAAI,CAACjE,IAAI,mB,cAA5BkE,YAAA,CAMc8C,sBAAA;gBAtLlDvH,GAAA;gBAgLiFqF,KAAK,EAAC;;gBAhLvF5E,OAAA,EAAAC,QAAA,CAiLwC,MAAe,CAjLvDkB,gBAAA,CAAAmC,gBAAA,CAiL2CmD,GAAG,CAACpG,KAAK,IAAG,GACf,iBACUoG,GAAG,CAACC,WAAW,I,cADzBjH,mBAAA,CAGqD,QAHrDsH,WAGqD,EAF1B,IAAE,GAAAzD,gBAAA,CACrBmD,GAAG,CAACG,MAAM,GAAoDH,GAAG,CAACI,OAAO,IAC3D,KAAQ,GAAAvD,gBAAA,CAAGmD,GAAG,CAACG,MAAM,oBArLnFlD,mBAAA,e;gBAAAlD,CAAA;8CAAAkD,mBAAA,gBAwLoCA,mBAAA,wBAA2B,EACXK,IAAI,CAACjE,IAAI,eAAeiE,IAAI,CAACiD,GAAG,Q,cAAhDhD,YAAA,CAEWjC,mBAAA,EAFXkF,WAAA,CAEW;gBA3L/C1H,GAAA;gBAyL0FO,IAAI,EAAC,UAAU;gBACjEoC,WAAW,EAAC,OAAO;gBA1L3DgF,OAAA;iBA0LoET,GAAG,CAACpG,KAAK,iCA1L7EqD,mBAAA,gBA4LoDK,IAAI,CAACjE,IAAI,eAAeiE,IAAI,CAACiD,GAAG,U,cAAhDhD,YAAA,CAEWjC,mBAAA,EAFXkF,WAAA,CAEW;gBA9L/C1H,GAAA;gBA4L4F2C,WAAW,EAAC,OAAO;gBA5L/GgF,OAAA;iBA6LgDT,GAAG,CAACpG,KAAK,iCA7LzDqD,mBAAA,e;4CAiMgEK,IAAI,CAACjE,IAAI,e,cAAzCL,mBAAA,CAGM,OAHN0H,WAGM,GAFFzD,mBAAA,wBAA2B,EAC3B9D,YAAA,CAA+CwH,kBAAA;cAAtCxC,KAAK,EAAC,GAAG;cAAEyC,GAAG,EAAEtD,IAAI,CAACuD;kDAnMlE5D,mBAAA,gBAsMgCA,mBAAA,yBAA4B,EACM1C,KAAA,CAAAuG,OAAO,IAAIxD,IAAI,CAACyD,aAAa,U,cAA/D/H,mBAAA,CAGM,OAHNgI,WAGM,GAFF/D,mBAAA,sCAAyC,EACzCgE,WAAkB,C,KAzMtDhE,mBAAA,e;YAAAlD,CAAA;wCA8MsCQ,KAAA,CAAAkD,SAAS,KAAKH,IAAI,CAACvE,EAAE,I,cAD/BwE,YAAA,CAwCSG,iBAAA;YArPrC5E,GAAA;YA6MqC6E,IAAI,EAAE,CAAC;YAAEhF,KAAK,EAAC,cAAc;YAACE,KAAyB,EAAzB;cAAA;YAAA;;YA7MnEU,OAAA,EAAAC,QAAA,CA+MgC,MAqCkB,CArClBL,YAAA,CAqCkB+H,0BAAA;cApPlD3H,OAAA,EAAAC,QAAA,CAgNoC,MAKa,CALbL,YAAA,CAKagI,qBAAA;gBALDxI,KAAK,EAAC,MAAM;gBAACyI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBACnE,YAAU,EAAC;;gBAjNnD/H,OAAA,EAAAC,QAAA,CAkNwC,MAE0B,CAF1BL,YAAA,CAE0BwC,oBAAA;kBAFfhD,KAAK,EAAC,IAAI;kBAACU,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAA0G,IAAI,CAACjE,IAAI,CAACvE,EAAE;;kBAlNjGQ,OAAA,EAAAC,QAAA,CAkNoG,MAE9C,CAF8CL,YAAA,CAE9CU,kBAAA;oBApNtDN,OAAA,EAAAC,QAAA,CAmNgD,MAAW,CAAXL,YAAA,CAAWqI,kBAAA,E;oBAnN3DzH,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;4CAsNmEQ,KAAA,CAAAuG,OAAO,I,cAAtCvD,YAAA,CAKa4D,qBAAA;gBA3NjDrI,GAAA;gBAsNgDH,KAAK,EAAC,MAAM;gBAAgByI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,QAAQ;gBACnEC,SAAS,EAAC,QAAQ;gBAAC,YAAU,EAAC;;gBAvNtE/H,OAAA,EAAAC,QAAA,CAwNwC,MAE0B,CAF1BL,YAAA,CAE0BwC,oBAAA;kBAFfhD,KAAK,EAAC,IAAI;kBAACU,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAA4G,KAAK,CAACnE,IAAI,CAACvE,EAAE;;kBAxNlGQ,OAAA,EAAAC,QAAA,CAwNqG,MAE/C,CAF+CL,YAAA,CAE/CU,kBAAA;oBA1NtDN,OAAA,EAAAC,QAAA,CAyNgD,MAAQ,CAARL,YAAA,CAAQgD,eAAA,E;oBAzNxDpC,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;8CAAAkD,mBAAA,gBA4NoC9D,YAAA,CAKagI,qBAAA;gBALDxI,KAAK,EAAC,MAAM;gBAACyI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBACnE,YAAU,EAAC;;gBA7NnD/H,OAAA,EAAAC,QAAA,CA8NwC,MAE0B,CAF1BL,YAAA,CAE0BwC,oBAAA;kBAFfhD,KAAK,EAAC,IAAI;kBAACU,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAA6G,IAAI,CAACpE,IAAI,CAACvE,EAAE;;kBA9NjGQ,OAAA,EAAAC,QAAA,CA8NoG,MAE9C,CAF8CL,YAAA,CAE9CU,kBAAA;oBAhOtDN,OAAA,EAAAC,QAAA,CA+NgD,MAAgB,CAAhBL,YAAA,CAAgBwI,uBAAA,E;oBA/NhE5H,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;4CAkOoCZ,YAAA,CAKagI,qBAAA;gBALDxI,KAAK,EAAC,MAAM;gBAACyI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBACnE,YAAU,EAAC;;gBAnOnD/H,OAAA,EAAAC,QAAA,CAoOwC,MAE0B,CAF1BL,YAAA,CAE0BwC,oBAAA;kBAFfhD,KAAK,EAAC,IAAI;kBAACU,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAA+G,OAAO,CAACtE,IAAI,CAACvE,EAAE;;kBApOpGQ,OAAA,EAAAC,QAAA,CAoOuG,MAEjD,CAFiDL,YAAA,CAEjDU,kBAAA;oBAtOtDN,OAAA,EAAAC,QAAA,CAqOgD,MAAU,CAAVL,YAAA,CAAU0I,iBAAA,E;oBArO1D9H,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;4CAwOoCZ,YAAA,CAKagI,qBAAA;gBALDxI,KAAK,EAAC,MAAM;gBAACyI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBACnE,YAAU,EAAC;;gBAzOnD/H,OAAA,EAAAC,QAAA,CA0OwC,MAE0B,CAF1BL,YAAA,CAE0BwC,oBAAA;kBAFfhD,KAAK,EAAC,IAAI;kBAACU,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAAiH,EAAE,CAACxE,IAAI,CAACvE,EAAE;;kBA1O/FQ,OAAA,EAAAC,QAAA,CA0OkG,MAE5C,CAF4CL,YAAA,CAE5CU,kBAAA;oBA5OtDN,OAAA,EAAAC,QAAA,CA2OgD,MAAW,CAAXL,YAAA,CAAW4I,kBAAA,E;oBA3O3DhI,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;4CA8OoCZ,YAAA,CAKagI,qBAAA;gBALDxI,KAAK,EAAC,MAAM;gBAACyI,MAAM,EAAC,OAAO;gBAACC,OAAO,EAAC,IAAI;gBAACC,SAAS,EAAC,QAAQ;gBACnE,YAAU,EAAC;;gBA/OnD/H,OAAA,EAAAC,QAAA,CAgPwC,MAE0B,CAF1BL,YAAA,CAE0BwC,oBAAA;kBAFfhD,KAAK,EAAC,IAAI;kBAACU,IAAI,EAAC,SAAS;kBAAEe,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAAmH,IAAI,CAAC1E,IAAI,CAACvE,EAAE;;kBAhPjGQ,OAAA,EAAAC,QAAA,CAgPoG,MAE9C,CAF8CL,YAAA,CAE9CU,kBAAA;oBAlPtDN,OAAA,EAAAC,QAAA,CAiPgD,MAAa,CAAbL,YAAA,CAAa8I,oBAAA,E;oBAjP7DlI,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;;cAAAA,CAAA;;YAAAA,CAAA;0CAAAkD,mBAAA,e;UAAAlD,CAAA;;;MAAAA,CAAA;;IAAAA,CAAA;MA8PQZ,YAAA,CAIY+I,oBAAA;IAJAtI,KAAK,EAAEuI,IAAA,CAAAC,GAAG;IA9P9B7G,UAAA,EA8PyChB,KAAA,CAAAU,oBAAoB;IA9P7D,uBAAAZ,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA8PyCC,KAAA,CAAAU,oBAAoB,GAAAX,MAAA;IAAE3B,KAAK,EAAC,QAAQ;IACjEoG,KAAK,EAAC;;IA/PlBxF,OAAA,EAAAC,QAAA,CAgQY,MAA8E,CAA9EL,YAAA,CAA8EwC,oBAAA;MAAnEtC,IAAI,EAAC,SAAS;MAAEe,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAAEO,QAAA,CAAAwH,UAAU;MAAI/F,IAAI,EAAC;;MAhQjE/C,OAAA,EAAAC,QAAA,CAgQyE,MAAK,CAhQ9EkB,gBAAA,CAgQyE,OAAK,E;MAhQ9EX,CAAA;QAiQYZ,YAAA,CAA+EwC,oBAAA;MAApEtC,IAAI,EAAC,SAAS;MAAEe,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAAEO,QAAA,CAAAyH,UAAU;MAAIhG,IAAI,EAAC;;MAjQjE/C,OAAA,EAAAC,QAAA,CAiQyE,MAAM,CAjQ/EkB,gBAAA,CAiQyE,QAAM,E;MAjQ/EX,CAAA;;IAAAA,CAAA;8CAoQQZ,YAAA,CAYY+I,oBAAA;IAZAtI,KAAK,EAAEuI,IAAA,CAAAI,IAAI;IApQ/BhH,UAAA,EAoQ0ChB,KAAA,CAAA2B,sBAAsB;IApQhE,uBAAA7B,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAoQ0CC,KAAA,CAAA2B,sBAAsB,GAAA5B,MAAA;IAAE3B,KAAK,EAAC,QAAQ;IACpEoG,KAAK,EAAC;;IArQlBxF,OAAA,EAAAC,QAAA,CAsQY,MASQ,CATRZ,mBAAA,CASQ,OATR4J,WASQ,GARJrJ,YAAA,CAOWsJ,kBAAA;MANNC,IAAI,EAAEnI,KAAA,CAAAoI,OAAO;MACd,UAAQ,EAAC,IAAI;MACZC,KAAK,EAAErI,KAAA,CAAAsI,YAAY;MACnBC,UAAS,EAAEjI,QAAA,CAAAkI,UAAU;MACtBC,SAAS,EAAT,EAAS;MACR,YAAU,EAAEnI,QAAA,CAAAoI;;IA7QjClJ,CAAA;8CAkRQZ,YAAA,CA0HY+I,oBAAA;IA1HAtI,KAAK,EAAEW,KAAA,CAAA2I,iBAAiB;IAlR5C3H,UAAA,EAkRuDhB,KAAA,CAAAE,mBAAmB;IAlR1E,uBAAAJ,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAkRuDC,KAAA,CAAAE,mBAAmB,GAAAH,MAAA;IAAG,cAAY,EAAEO,QAAA,CAAAsI,UAAU;IAAExK,KAAK,EAAC,QAAQ;IACzGoG,KAAK,EAAC;;IAnRlBxF,OAAA,EAAAC,QAAA,CAoRY,MAgHU,CAhHVL,YAAA,CAgHUiK,kBAAA;MAhHDC,GAAG,EAAC,MAAM;MAAEC,KAAK,EAAE/I,KAAA,CAAAC,eAAe;MAAE,aAAW,EAAC;;MApRrEjB,OAAA,EAAAC,QAAA,CAqRgB,MAMe,CANfL,YAAA,CAMeoK,uBAAA;QAND7J,KAAK,EAAC;MAAM;QArR1CH,OAAA,EAAAC,QAAA,CAsRoB,MAIY,CAJZL,YAAA,CAIYqK,oBAAA;UAJAC,QAAQ,EAAElJ,KAAA,CAAAmJ,aAAa;UAtRvDnI,UAAA,EAsRkEhB,KAAA,CAAAC,eAAe,CAACnB,IAAI;UAtRtF,uBAAAgB,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAsRkEC,KAAA,CAAAC,eAAe,CAACnB,IAAI,GAAAiB,MAAA;UAAEmB,WAAW,EAAC,SAAS;UACpFkI,QAAM,EAAE9I,QAAA,CAAA+I;;UAvRjCrK,OAAA,EAAAC,QAAA,CAwRmC,MAAuB,E,kBAAlCR,mBAAA,CACYmE,SAAA,QAzRpCC,WAAA,CAwRkD7C,KAAA,CAAAsJ,OAAO,EAAfvG,IAAI;iCAAtBC,YAAA,CACYuG,oBAAA;cADwBhL,GAAG,EAAEwE,IAAI,CAACa,KAAK;cAAGzE,KAAK,EAAE4D,IAAI,CAAC5D,KAAK;cAAGyE,KAAK,EAAEb,IAAI,CAACa;;;UAxR9GpE,CAAA;;QAAAA,CAAA;UA4R2CQ,KAAA,CAAAC,eAAe,CAACnB,IAAI,eAAoCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,gBAAqCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,gBAAqCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,iBAAsCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,gBAAqCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,gBAAqCkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,c,cAArYL,mBAAA,CA4BM,OA5BN+K,WA4BM,GArBoDxJ,KAAA,CAAAC,eAAe,CAACnB,IAAI,e,cAA1EkE,YAAA,CAEegG,uBAAA;QArSnCzK,GAAA;QAmSkCY,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QAnS/CU,OAAA,EAAAC,QAAA,CAoSwB,MAAyC,CAAzCL,YAAA,CAAyCmC,mBAAA;UAA/B6C,KAAK,EAAC,IAAI;UAACsF,QAAQ,EAAR;;QApS7C1J,CAAA;YAAAkD,mBAAA,gBAsS0E1C,KAAA,CAAAC,eAAe,CAACnB,IAAI,gB,cAA1EkE,YAAA,CAEegG,uBAAA;QAxSnCzK,GAAA;QAsSkCY,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QAtS/CU,OAAA,EAAAC,QAAA,CAuSwB,MAAyC,CAAzCL,YAAA,CAAyCmC,mBAAA;UAA/B6C,KAAK,EAAC,IAAI;UAACsF,QAAQ,EAAR;;QAvS7C1J,CAAA;YAAAkD,mBAAA,gBAyS0E1C,KAAA,CAAAC,eAAe,CAACnB,IAAI,iB,cAA1EkE,YAAA,CAEegG,uBAAA;QA3SnCzK,GAAA;QAySkCY,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QAzS/CU,OAAA,EAAAC,QAAA,CA0SwB,MAAyC,CAAzCL,YAAA,CAAyCmC,mBAAA;UAA/B6C,KAAK,EAAC,IAAI;UAACsF,QAAQ,EAAR;;QA1S7C1J,CAAA;YAAAkD,mBAAA,gBA4S0E1C,KAAA,CAAAC,eAAe,CAACnB,IAAI,c,cAA1EkE,YAAA,CAEegG,uBAAA;QA9SnCzK,GAAA;QA4SkCY,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QA5S/CU,OAAA,EAAAC,QAAA,CA6SwB,MAAyC,CAAzCL,YAAA,CAAyCmC,mBAAA;UAA/B6C,KAAK,EAAC,IAAI;UAACsF,QAAQ,EAAR;;QA7S7C1J,CAAA;YAAAkD,mBAAA,gBA+S0E1C,KAAA,CAAAC,eAAe,CAACnB,IAAI,gB,cAA1EkE,YAAA,CAEegG,uBAAA;QAjTnCzK,GAAA;QA+SkCY,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QA/S/CU,OAAA,EAAAC,QAAA,CAgTwB,MAA0C,CAA1CL,YAAA,CAA0CmC,mBAAA;UAAhC6C,KAAK,EAAC,KAAK;UAACsF,QAAQ,EAAR;;QAhT9C1J,CAAA;YAAAkD,mBAAA,gBAkT0E1C,KAAA,CAAAC,eAAe,CAACnB,IAAI,gB,cAA1EkE,YAAA,CAEegG,uBAAA;QApTnCzK,GAAA;QAkTkCY,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QAlT/CU,OAAA,EAAAC,QAAA,CAmTwB,MAAyC,CAAzCL,YAAA,CAAyCmC,mBAAA;UAA/B6C,KAAK,EAAC,IAAI;UAACsF,QAAQ,EAAR;;QAnT7C1J,CAAA;YAAAkD,mBAAA,gBAqToB9D,YAAA,CAEeoK,uBAAA;QAFD7J,KAAK,EAAC;MAAM;QArT9CH,OAAA,EAAAC,QAAA,CAsTwB,MAA4D,CAA5DL,YAAA,CAA4DkH,sBAAA;UAtTpF9E,UAAA,EAsT8ChB,KAAA,CAAAC,eAAe,CAACqD,IAAI;UAtTlE,uBAAAxD,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAsT8CC,KAAA,CAAAC,eAAe,CAACqD,IAAI,GAAAvD,MAAA;;UAtTlEf,OAAA,EAAAC,QAAA,CAsToE,MAAE,CAtTtEkB,gBAAA,CAsToE,IAAE,E;UAtTtEX,CAAA;;QAAAA,CAAA;6BAyTgBf,mBAAA,CA0EM,OA1ENgL,WA0EM,GAzEF7K,YAAA,CAEeoK,uBAAA;QAFD7J,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QA1T/CU,OAAA,EAAAC,QAAA,CA2TwB,MAA8F,CAA9FL,YAAA,CAA8FmC,mBAAA;UA3TtHC,UAAA,EA2T2ChB,KAAA,CAAAC,eAAe,CAACZ,KAAK;UA3ThE,uBAAAS,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA2T2CC,KAAA,CAAAC,eAAe,CAACZ,KAAK,GAAAU,MAAA;UAAEmB,WAAW,EAAC,OAAO;UAAC5C,KAAoB,EAApB;YAAA;UAAA;;QA3TtFkB,CAAA;UA8ToBZ,YAAA,CAGeoK,uBAAA;QAHD7J,KAAK,EAAC,MAAM;QAACb,KAAoB,EAApB;UAAA;QAAA;;QA9T/CU,OAAA,EAAAC,QAAA,CA+TwB,MAC4B,CAD5BL,YAAA,CAC4BmC,mBAAA;UAhUpDC,UAAA,EA+T2ChB,KAAA,CAAAC,eAAe,CAACsC,WAAW;UA/TtE,uBAAAzC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA+T2CC,KAAA,CAAAC,eAAe,CAACsC,WAAW,GAAAxC,MAAA;UAAEzB,KAAoB,EAApB;YAAA;UAAA,CAAoB;UAAEoL,IAAI,EAAE,CAAC;UAAE5K,IAAI,EAAC,UAAU;UAC1FoC,WAAW,EAAC;;QAhUxC1B,CAAA;UAmUoBZ,YAAA,CAEeoK,uBAAA;QAFD7J,KAAK,EAAC;MAAM;QAnU9CH,OAAA,EAAAC,QAAA,CAoUwB,MAA4D,CAA5DL,YAAA,CAA4DkH,sBAAA;UApUpF9E,UAAA,EAoU8ChB,KAAA,CAAAC,eAAe,CAACqD,IAAI;UApUlE,uBAAAxD,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAoU8CC,KAAA,CAAAC,eAAe,CAACqD,IAAI,GAAAvD,MAAA;;UApUlEf,OAAA,EAAAC,QAAA,CAoUoE,MAAE,CApUtEkB,gBAAA,CAoUoE,IAAE,E;UApUtEX,CAAA;;QAAAA,CAAA;UAuUoCQ,KAAA,CAAAC,eAAe,CAACnB,IAAI,gBAAgBkB,KAAA,CAAAC,eAAe,CAACnB,IAAI,mB,cAAxEL,mBAAA,CA4BWmE,SAAA;QAnW/BrE,GAAA;MAAA,K,kBAwUwBE,mBAAA,CAoBemE,SAAA,QA5VvCC,WAAA,CAwU0F7C,KAAA,CAAAC,eAAe,CAACuF,OAAO,EAxUjH,CAwU0EzC,IAAI,EAAEiB,KAAK;6BAA7DhB,YAAA,CAoBegG,uBAAA;UApBA7J,KAAK,UAAU6E,KAAK;UAC9BzF,GAAG,EAAEyF;;UAzUlChF,OAAA,EAAAC,QAAA,CA0U4B,MAgBS,CAhBTL,YAAA,CAgBS+B,iBAAA;YA1VrC3B,OAAA,EAAAC,QAAA,CA2UgC,MAES,CAFTL,YAAA,CAESuE,iBAAA;cAFAC,IAAI,EAAE;YAAC;cA3UhDpE,OAAA,EAAAC,QAAA,CA4UoC,MAA+D,CAA/DL,YAAA,CAA+DmC,mBAAA;gBA5UnGC,UAAA,EA4UuD+B,IAAI,CAAC1D,KAAK;gBA5UjE,uBAAAU,MAAA,IA4UuDgD,IAAI,CAAC1D,KAAK,GAAAU,MAAA;gBAAEmB,WAAW,EAAC;;cA5U/E1B,CAAA;0CA8UgCZ,YAAA,CAWSuE,iBAAA;cAXAC,IAAI,EAAE;YAAE;cA9UjDpE,OAAA,EAAAC,QAAA,CA+UoC,MASkB,CATlBL,YAAA,CASkB+H,0BAAA;gBAxVtD3H,OAAA,EAAAC,QAAA,CAgVwC,MACiD,CADjDL,YAAA,CACiDwC,oBAAA;kBADtCtC,IAAI,EAAC,QAAQ;kBAAC6K,KAAK,EAAL,EAAK;kBAACvL,KAAK,EAAC,oBAAoB;kBACpDyB,OAAK,EAAAE,MAAA,IAAEO,QAAA,CAAAsJ,YAAY,CAAC5F,KAAK;;kBAjVtEhF,OAAA,EAAAC,QAAA,CAiVyE,MAAI,CAjV7EkB,gBAAA,CAiVyE,MAAI,E;kBAjV7EX,CAAA;mEAmVmDuD,IAAI,CAAC2C,WAAW,I,cAD3B1C,YAAA,CACgF5B,oBAAA;kBAnVxH7C,GAAA;kBAkVmDO,IAAI,EAAC,SAAS;kBAAC6K,KAAK,EAAL,EAAK;kBAACrL,KAAyB,EAAzB;oBAAA;kBAAA,CAAyB;kBAC3BuB,OAAK,EAAAE,MAAA,IAAEgD,IAAI,CAAC2C,WAAW;;kBAnV7F1G,OAAA,EAAAC,QAAA,CAmVsG,MAAM,CAnV5GkB,gBAAA,CAmVsG,QAAM,E;kBAnV5GX,CAAA;oEAAAkD,mBAAA,gBAoVqGK,IAAI,CAAC2C,WAAW,I,cAA7E1C,YAAA,CACwD5B,oBAAA;kBArVhG7C,GAAA;kBAoVmDO,IAAI,EAAC,MAAM;kBAAC6K,KAAK,EAAL,EAAK;kBAACrL,KAAyB,EAAzB;oBAAA;kBAAA,CAAyB;kBACjDuB,OAAK,EAAAE,MAAA,IAAEgD,IAAI,CAAC2C,WAAW;;kBArVpE1G,OAAA,EAAAC,QAAA,CAqV8E,MAAM,CArVpFkB,gBAAA,CAqV8E,QAAM,E;kBArVpFX,CAAA;oEAAAkD,mBAAA,gBAuVkDK,IAAI,CAAC2C,WAAW,I,cAD1B1C,YAAA,CAC8C6G,0BAAA;kBAvVtFtL,GAAA;kBAAAyC,UAAA,EAsVkE+B,IAAI,CAAC6C,MAAM;kBAtV7E,uBAAA7F,MAAA,IAsVkEgD,IAAI,CAAC6C,MAAM,GAAA7F;kFAtV7E2C,mBAAA,e;gBAAAlD,CAAA;;cAAAA,CAAA;;YAAAA,CAAA;;UAAAA,CAAA;;sCA6VwBZ,YAAA,CAKS+B,iBAAA;QAlWjC3B,OAAA,EAAAC,QAAA,CA8V4B,MAGS,CAHTL,YAAA,CAGSuE,iBAAA;UAHAC,IAAI,EAAE;QAAC;UA9V5CpE,OAAA,EAAAC,QAAA,CA+VgC,MACuC,CADvCL,YAAA,CACuCwC,oBAAA;YAD5BtC,IAAI,EAAC,SAAS;YAAC6K,KAAK,EAAL,EAAK;YAACvL,KAAK,EAAC,iBAAiB;YAClDyB,OAAK,EAAES,QAAA,CAAAwJ;;YAhW5C9K,OAAA,EAAAC,QAAA,CAgWuD,MAAI,CAhW3DkB,gBAAA,CAgWuD,MAAI,E;YAhW3DX,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;wCAAAkD,mBAAA,gBAoWoBqH,WAAmB,EACH/J,KAAA,CAAAC,eAAe,CAACnB,IAAI,e,cAApCL,mBAAA,CAQWmE,SAAA;QA7W/BrE,GAAA;MAAA,IAsWwBK,YAAA,CAGeoK,uBAAA;QAHD7J,KAAK,EAAC;MAAI;QAtWhDH,OAAA,EAAAC,QAAA,CAuW4B,MACW,CADXL,YAAA,CACWmC,mBAAA;UADDjC,IAAI,EAAC,UAAU;UAACV,KAAK,EAAC,UAAU;UAAEsL,IAAI,EAAE1J,KAAA,CAAAC,eAAe,CAAC+F,GAAG;UAAEgE,MAAM,EAAC;;QAvW1GxK,CAAA;UA0WwBZ,YAAA,CAEeoK,uBAAA;QAFD7J,KAAK,EAAC;MAAI;QA1WhDH,OAAA,EAAAC,QAAA,CA2W4B,MAAoF,CAApFL,YAAA,CAAoFiL,0BAAA;UA3WhH7I,UAAA,EA2WsDhB,KAAA,CAAAC,eAAe,CAAC+F,GAAG;UA3WzE,uBAAAlG,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA2WsDC,KAAA,CAAAC,eAAe,CAAC+F,GAAG,GAAAjG,MAAA;UAAGkK,GAAG,EAAE,CAAC;UAAG5D,GAAG,EAAE;;QA3W1F7G,CAAA;wCAAAkD,mBAAA,gBA+WoC1C,KAAA,CAAAC,eAAe,CAACnB,IAAI,e,cAChCkE,YAAA,CAEegG,uBAAA;QAlXvCzK,GAAA;QAgXsCY,KAAK,EAAC;;QAhX5CH,OAAA,EAAAC,QAAA,CAiX4B,MAAsF,CAAtFL,YAAA,CAAsFiL,0BAAA;UAjXlH7I,UAAA,EAiXsDhB,KAAA,CAAAC,eAAe,CAACqG,KAAK;UAjX3E,uBAAAxG,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAiXsDC,KAAA,CAAAC,eAAe,CAACqG,KAAK,GAAAvG,MAAA;UAAGkK,GAAG,EAAE,CAAC;UAAG5D,GAAG,EAAE;;QAjX5F7G,CAAA;YAAAkD,mBAAA,gBAoXoB9D,YAAA,CAMeoK,uBAAA;QAND7J,KAAK,EAAC;MAAM;QApX9CH,OAAA,EAAAC,QAAA,CAqXwB,MAIY,CAJZL,YAAA,CAIYsL,oBAAA;UAJD9L,KAAK,EAAC,YAAY;UAAE+L,MAAM,EAACvC,IAAA,CAAAwC,YAAY;UAACC,QAAQ,EAAR,EAAQ;UAAE,cAAY,EAAE/J,QAAA,CAAAgK,WAAW;UACjF,eAAa,EAAEhK,QAAA,CAAAiK,iBAAiB;UAAG,WAAS,EAAEvK,KAAA,CAAAC,eAAe,CAAC6D,OAAO;UAAG0G,KAAK,EAAE;;UAtX5GxL,OAAA,EAAAC,QAAA,CAuX4B,MAAmE,CAAnEL,YAAA,CAAmEwC,oBAAA;YAAxDW,IAAI,EAAC,OAAO;YAAC4H,KAAK,EAAL,EAAK;YAACrL,KAAoB,EAApB;cAAA;YAAA;;YAvX1DU,OAAA,EAAAC,QAAA,CAuX+E,MAAI,CAvXnFkB,gBAAA,CAuX+E,MAAI,E;YAvXnFX,CAAA;cAwX4BiL,WAA+D,C;UAxX3FjL,CAAA;;QAAAA,CAAA;UA4XoBZ,YAAA,CAMeoK,uBAAA;QAND7J,KAAK,EAAC;MAAM;QA5X9CH,OAAA,EAAAC,QAAA,CA6XwB,MAIY,CAJZL,YAAA,CAIYsL,oBAAA;UAJD9L,KAAK,EAAC,cAAc;UAAE+L,MAAM,EAACvC,IAAA,CAAA8C,cAAc;UAAE,cAAY,EAAEpK,QAAA,CAAAqK,WAAW;UAC5E,eAAa,EAAErK,QAAA,CAAAsK,iBAAiB;UAAG,WAAS,EAAE5K,KAAA,CAAAC,eAAe,CAACsE,SAAS;UAAGiG,KAAK,EAAE;;UA9X9GxL,OAAA,EAAAC,QAAA,CA+X4B,MAAmE,CAAnEL,YAAA,CAAmEwC,oBAAA;YAAxDW,IAAI,EAAC,OAAO;YAAC4H,KAAK,EAAL,EAAK;YAACrL,KAAoB,EAApB;cAAA;YAAA;;YA/X1DU,OAAA,EAAAC,QAAA,CA+X+E,MAAI,CA/XnFkB,gBAAA,CA+X+E,MAAI,E;YA/XnFX,CAAA;cAgY4BqL,WAAgE,C;UAhY5FrL,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;kCAqYYnB,mBAAA,CAMO,QANPyM,WAMO,GALHlM,YAAA,CAIS+B,iBAAA;MA1YzB3B,OAAA,EAAAC,QAAA,CAuYoB,MAAyE,CAAzEL,YAAA,CAAyEwC,oBAAA;QAA7DgC,IAAI,EAAE,CAAC;QAAEtE,IAAI,EAAC,SAAS;QAAEe,OAAK,EAAES,QAAA,CAAAyK;;QAvYhE/L,OAAA,EAAAC,QAAA,CAuY+E,MAAE,CAvYjFkB,gBAAA,CAuY+E,IAAE,E;QAvYjFX,CAAA;sCAAAW,gBAAA,CAuY6F,KAEzE,GAAAvB,YAAA,CAAuDwC,oBAAA;QAA3CgC,IAAI,EAAE,CAAC;QAAGvD,OAAK,EAAES,QAAA,CAAAsI;;QAzYjD5J,OAAA,EAAAC,QAAA,CAyY6D,MAAE,CAzY/DkB,gBAAA,CAyY6D,IAAE,E;QAzY/DX,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;8DA6YQZ,YAAA,CA6BY+I,oBAAA;IA1apB3G,UAAA,EA6Y4BhB,KAAA,CAAAgL,mBAAmB;IA7Y/C,uBAAAlL,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA6Y4BC,KAAA,CAAAgL,mBAAmB,GAAAjL,MAAA;IAAGV,KAAK,EAAEW,KAAA,CAAAiL,iBAAiB;IAAE7M,KAAK,EAAC,YAAY;IAAE,YAAU,EAAE,KAAK;IACrGoG,KAAK,EAAC;;IA9YlBxF,OAAA,EAAAC,QAAA,CA+YY,MAqBS,CArBTL,YAAA,CAqBS+B,iBAAA;MAparB3B,OAAA,EAAAC,QAAA,CAgZgB,MAIS,CAJTL,YAAA,CAISuE,iBAAA;QAJDC,IAAI,EAAC,GAAG;QAAC9E,KAA0B,EAA1B;UAAA;QAAA;;QAhZjCU,OAAA,EAAAC,QAAA,CAiZoB,MAES,CAFTL,YAAA,CAES+B,iBAAA;UAnZ7B3B,OAAA,EAAAC,QAAA,CAkZwB,MAA+E,CAA/EiM,WAA+E,C;UAlZvG1L,CAAA;;QAAAA,CAAA;UAqZgBZ,YAAA,CAcSuE,iBAAA;QAdDC,IAAI,EAAC;MAAI;QArZjCpE,OAAA,EAAAC,QAAA,CAsZoB,MAES,CAFTL,YAAA,CAES+B,iBAAA;UAxZ7B3B,OAAA,EAAAC,QAAA,CAuZwB,MAAe,CAAfkM,WAAe,C;UAvZvC3L,CAAA;YAyZoBZ,YAAA,CAK2F+B,iBAAA;UALnFrC,KAAuB,EAAvB;YAAA;UAAA;QAAuB;UAzZnDU,OAAA,EAAAC,QAAA,CA0ZwB,MAGS,CAHTL,YAAA,CAGSuE,iBAAA;YAHAC,IAAI,EAAE,EAAE;YAAE9E,KAAyB,EAAzB;cAAA;YAAA;;YA1Z3CU,OAAA,EAAAC,QAAA,CA2Z4B,MACW,CADXL,YAAA,CACWmC,mBAAA;cADAG,WAAW,EAAClB,KAAA,CAAAoL,SAAS;cA3Z5DpK,UAAA,EA2ZsEhB,KAAA,CAAAoL,SAAS;cA3Z/E,uBAAAtL,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA2ZsEC,KAAA,CAAAoL,SAAS,GAAArL,MAAA;cAAEvB,EAAE,EAAC,UAAU;cAAE0K,QAAQ,EAAE;;YA3Z1G1J,CAAA;cA8ZwBZ,YAAA,CAA8EwC,oBAAA;YAAnEtC,IAAI,EAAC,MAAM;YAAC6K,KAAK,EAAL,EAAK;YAACnL,EAAE,EAAC,SAAS;YAAEqB,OAAK,EAAES,QAAA,CAAA+K;;YA9Z1ErM,OAAA,EAAAC,QAAA,CA8ZsF,MAAI,CA9Z1FkB,gBAAA,CA8ZsF,MAAI,E;YA9Z1FX,CAAA;;UAAAA,CAAA;YA+ZoBZ,YAAA,CAGS+B,iBAAA;UAHDrC,KAAwB,EAAxB;YAAA;UAAA;QAAwB;UA/ZpDU,OAAA,EAAAC,QAAA,CAgawB,MAAyE,CAAzEL,YAAA,CAAyEwC,oBAAA;YAA9DtC,IAAI,EAAC,SAAS;YAAC6K,KAAK,EAAL,EAAK;YAAE9J,OAAK,EAAE+H,IAAA,CAAA0D;;YAhahEtM,OAAA,EAAAC,QAAA,CAgagF,MAAK,CAharFkB,gBAAA,CAgagF,OAAK,E;YAharFX,CAAA;0CAiawBZ,YAAA,CAA4FwC,oBAAA;YAAjFtC,IAAI,EAAC,SAAS;YAAEe,OAAK,EAAES,QAAA,CAAAiL,YAAY;YAAEjN,KAAyB,EAAzB;cAAA;YAAA;;YAjaxEU,OAAA,EAAAC,QAAA,CAiakG,MAAM,CAjaxGkB,gBAAA,CAiakG,QAAM,E;YAjaxGX,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAqaYnB,mBAAA,CAIO,QAJPmN,WAIO,GAHH5M,YAAA,CAES+B,iBAAA;MAxazB3B,OAAA,EAAAC,QAAA,CAuaoB,MAAuF,CAAvFL,YAAA,CAAuFwC,oBAAA;QAA3EgC,IAAI,EAAE,CAAC;QAAEtE,IAAI,EAAC,SAAS;QAACR,KAAmB,EAAnB;UAAA;QAAA,CAAmB;QAAEuB,OAAK,EAAES,QAAA,CAAAmL;;QAvapFzM,OAAA,EAAAC,QAAA,CAua4F,MAAG,CAva/FkB,gBAAA,CAua4F,KAAG,E;QAva/FX,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;8CA2aQZ,YAAA,CASY+I,oBAAA;IApbpB3G,UAAA,EA2a4BhB,KAAA,CAAA0L,mBAAmB;IA3a/C,uBAAA5L,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA2a4BC,KAAA,CAAA0L,mBAAmB,GAAA3L,MAAA;IAAE3B,KAAK,EAAC,YAAY;IAAE,YAAU,EAAE,KAAK;IAAG,sBAAoB,EAAE,KAAK;IACxGoG,KAAK,EAAC;;IA5alBxF,OAAA,EAAAC,QAAA,CA6aY,MAA+B,CAA/BZ,mBAAA,CAA+B,cAAAiE,gBAAA,CAAtBtC,KAAA,CAAA2L,YAAY,kBACrBtN,mBAAA,CAKO,QALPuN,WAKO,GAJHhN,YAAA,CAGS+B,iBAAA;MAlbzB3B,OAAA,EAAAC,QAAA,CAgboB,MACwD,CADxDL,YAAA,CACwDwC,oBAAA;QAD5CgC,IAAI,EAAE,CAAC;QAAEtE,IAAI,EAAC,QAAQ;QAACR,KAAmB,EAAnB;UAAA;QAAA,CAAmB;QACjDuB,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAAEC,KAAA,CAAA0L,mBAAmB;;QAjbnD1M,OAAA,EAAAC,QAAA,CAib6D,MAAG,CAjbhEkB,gBAAA,CAib6D,KAAG,E;QAjbhEX,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;qCAqbQkD,mBAAA,cAAiB,EACjB9D,YAAA,CA0CY+I,oBAAA;IA1CAtI,KAAK,EAAEW,KAAA,CAAA6L,kBAAkB;IAtb7C7K,UAAA,EAsbwDhB,KAAA,CAAA8L,oBAAoB;IAtb5E,uBAAAhM,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAsbwDC,KAAA,CAAA8L,oBAAoB,GAAA/L,MAAA;IAAG,cAAY,EAAEO,QAAA,CAAAyL,gBAAgB;IACjG3N,KAAK,EAAC;;IAvblBY,OAAA,EAAAC,QAAA,CAwbY,MAuCU,CAvCKe,KAAA,CAAA8C,SAAS,CAACuB,MAAM,U,cAA/BrB,YAAA,CAuCU6F,kBAAA;MA/dtBtK,GAAA;MAwbmDH,KAAK,EAAC,YAAY;MAAC0K,GAAG,EAAC,MAAM;MAAC,aAAW,EAAC;;MAxb7F9J,OAAA,EAAAC,QAAA,CA0bgB,MAEM,CAFNZ,mBAAA,CAEM,OAFN2N,WAEM,EAFmB,QAChB,GAAA1J,gBAAA,CAAGtC,KAAA,CAAA8C,SAAS,CAAC9C,KAAA,CAAAiM,UAAU,EAAEzN,EAAE,IAAG,IAAE,GAAA8D,gBAAA,CAAGtC,KAAA,CAAA8C,SAAS,CAAC9C,KAAA,CAAAiM,UAAU,EAAE5M,KAAK,kBAGvET,YAAA,CAMeoK,uBAAA;QAND7J,KAAK,EAAC;MAAM;QA9b1CH,OAAA,EAAAC,QAAA,CA+boB,MAIY,CAJZL,YAAA,CAIYqK,oBAAA;UAnchCjI,UAAA,EA+bwChB,KAAA,CAAAkM,YAAY,CAACC,WAAW;UA/bhE,uBAAArM,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA+bwCC,KAAA,CAAAkM,YAAY,CAACC,WAAW,GAAApM,MAAA;UAAEmB,WAAW,EAAC;;UA/b9ElC,OAAA,EAAAC,QAAA,CAgcmC,MAA+B,E,kBAA1CR,mBAAA,CAEYmE,SAAA,QAlcpCC,WAAA,CAgckDvC,QAAA,CAAA8L,eAAe,EAAvBrJ,IAAI;iCAAtBC,YAAA,CAEYuG,oBAAA;cAFgChL,GAAG,EAAEwE,IAAI,CAACvE,EAAE;cAAGW,KAAK,EAAEmB,QAAA,CAAA+L,OAAO,CAACtJ,IAAI;cACzEa,KAAK,EAAEb,IAAI,CAACvE;;;UAjczCgB,CAAA;;QAAAA,CAAA;UAsciDQ,KAAA,CAAAkM,YAAY,CAACC,WAAW,U,cAAzDnJ,YAAA,CAMegG,uBAAA;QA5c/BzK,GAAA;QAsc8BY,KAAK,EAAC;;QAtcpCH,OAAA,EAAAC,QAAA,CAucoB,MAIY,CAJZL,YAAA,CAIYqK,oBAAA;UA3chCjI,UAAA,EAucwChB,KAAA,CAAAkM,YAAY,CAACI,SAAS;UAvc9D,uBAAAxM,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAucwCC,KAAA,CAAAkM,YAAY,CAACI,SAAS,GAAAvM,MAAA;UAAEmB,WAAW,EAAC;;UAvc5ElC,OAAA,EAAAC,QAAA,CAwcmC,MAA+D,E,kBAA1ER,mBAAA,CAEYmE,SAAA,QA1cpCC,WAAA,CAwckD7C,KAAA,CAAA8C,SAAS,CAAC9C,KAAA,CAAAkM,YAAY,CAACC,WAAW,MAAM3G,OAAO,EAAvDzC,IAAI;iCAAtBC,YAAA,CAEYuG,oBAAA;cAFgEhL,GAAG,EAAEwE,IAAI,CAACvE,EAAE;cACnFW,KAAK,EAAE4D,IAAI,CAAC1D,KAAK;cAAGuE,KAAK,EAAEb,IAAI,CAACvE;;;UAzc7DgB,CAAA;;QAAAA,CAAA;YAAAkD,mBAAA,gBA8c8C1C,KAAA,CAAAkM,YAAY,CAACC,WAAW,U,cAAtD1N,mBAAA,CAQM,OARN8N,WAQM,GAPF7J,mBAAA,2BAA8B,EA/clDvC,gBAAA,CA+ckD,MAC3B,GAAA9B,mBAAA,CACI,QADJmO,WACI,EADyB,KAAE,GAAAlK,gBAAA,CAAGhC,QAAA,CAAA+L,OAAO,CAACrM,KAAA,CAAA8C,SAAS,CAAC9C,KAAA,CAAAkM,YAAY,CAACC,WAAW,UAAS,KACxF,iBAjdpBhM,gBAAA,CAid2B,MAAI,GAAA9B,mBAAA,CAIJ,QAJIoO,WAIJ,EAJiC,KAAE,GAAAnK,gBAAA,CAAGtC,KAAA,CAAA8C,SAAS,CAAC9C,KAAA,CAAAkM,YAAY,CAACC,WAAW,G,GAA+B3G,OAAO,CAACxF,KAAA,CAAAkM,YAAY,CAACI,SAAS,G,GAA+BjN,KAAK,IAG1K,KACN,iBArdpBc,gBAAA,CAqd2B,UACX,E,KAtdhBuC,mBAAA,gBAud8CpC,QAAA,CAAA8L,eAAe,CAAC/H,MAAM,U,cAApD5F,mBAAA,CAEM,OAFNiO,WAEM,EAFsD,0BAE5D,KAzdhBhK,mBAAA,gBA2dgBrE,mBAAA,CAEM,OAFNsO,WAEM,GADF/N,YAAA,CAA0EwC,oBAAA;QAA/DtC,IAAI,EAAC,SAAS;QAAEe,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAAEO,QAAA,CAAAsM,YAAY,CAAC5M,KAAA,CAAAiM,UAAU;;QA5d7EjN,OAAA,EAAAC,QAAA,CA4dgF,MAAE,CA5dlFkB,gBAAA,CA4dgF,IAAE,E;QA5dlFX,CAAA;;MAAAA,CAAA;gCAAAkD,mBAAA,e;IAAAlD,CAAA;8DAieQZ,YAAA,CAoCY+I,oBAAA;IApCAtI,KAAK,EAAEW,KAAA,CAAA6M,kBAAkB;IAje7C7L,UAAA,EAiewDhB,KAAA,CAAA6B,oBAAoB;IAje5E,uBAAA/B,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAiewDC,KAAA,CAAA6B,oBAAoB,GAAA9B,MAAA;IAAE3B,KAAK,EAAC,eAAe;IAACoG,KAAK,EAAC;;IAje1GxF,OAAA,EAAAC,QAAA,CAkeY,MA8BU,CA9BVL,YAAA,CA8BUiK,kBAAA;MAhgBtB7J,OAAA,EAAAC,QAAA,CAmegB,MAIe,CAJfL,YAAA,CAIeoK,uBAAA;QAJD5K,KAAK,EAAC,WAAW;QAACe,KAAK,EAAC;;QAnetDH,OAAA,EAAAC,QAAA,CAoeoB,MAEiB,CAFjBL,YAAA,CAEiBkO,yBAAA;UAFDxO,KAA0B,EAA1B;YAAA;UAAA,CAA0B;UApe9D0C,UAAA,EAoewEhB,KAAA,CAAA+M,SAAS;UApejF,uBAAAjN,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAoewEC,KAAA,CAAA+M,SAAS,GAAAhN,MAAA;UAAGqJ,QAAM,EAAE9I,QAAA,CAAA0M,UAAU;UAAElO,IAAI,EAAC,UAAU;UAC/F,cAAY,EAAC,kBAAkB;UAACoC,WAAW,EAAC;;QArepE1B,CAAA;UAwegBZ,YAAA,CAWeoK,uBAAA;QAXD7J,KAAK,EAAC,SAAS;QAACf,KAAK,EAAC;;QAxepDY,OAAA,EAAAC,QAAA,CAyeoB,MAIS,CAJTL,YAAA,CAIS+B,iBAAA;UA7e7B3B,OAAA,EAAAC,QAAA,CA0ewB,MAEY,CAFZL,YAAA,CAEYqO,oBAAA;YA5epCjM,UAAA,EA0e4ChB,KAAA,CAAAkN,eAAe;YA1e3D,uBAAApN,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA0e4CC,KAAA,CAAAkN,eAAe,GAAAnN,MAAA;YAAE,cAAY,EAAC,SAAS;YAAC,gBAAc,EAAC,MAAM;YAC7E,aAAW,EAAC,GAAG;YAAC,eAAa,EAAC;;UA3e1DP,CAAA;YA8eoBZ,YAAA,CAIS+B,iBAAA;UAlf7B3B,OAAA,EAAAC,QAAA,CA+ewB,MAEkB,CAFsCe,KAAA,CAAAkN,eAAe,I,cAAvElK,YAAA,CAEkB6G,0BAAA;YAjf1CtL,GAAA;YAAAyC,UAAA,EA+ekDhB,KAAA,CAAAmN,aAAa;YA/e/D,uBAAArN,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA+ekDC,KAAA,CAAAmN,aAAa,GAAApN,MAAA;YAAGkK,GAAG,EAAE,CAAC;YAC5C3L,KAAwD,EAAxD;cAAA;cAAA;cAAA;YAAA;qDAhf5BoE,mBAAA,e;UAAAlD,CAAA;;QAAAA,CAAA;UAofgBZ,YAAA,CAGeoK,uBAAA;QAHD7J,KAAK,EAAC;MAAU;QApf9CH,OAAA,EAAAC,QAAA,CAqfoB,MACY,CADZL,YAAA,CACYqO,oBAAA;UAtfhCjM,UAAA,EAqfwChB,KAAA,CAAAuG,OAAO;UArf/C,uBAAAzG,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAqfwCC,KAAA,CAAAuG,OAAO,GAAAxG,MAAA;UAAE,aAAW,EAAC,GAAG;UAAC,eAAa,EAAC,GAAG;UAAEqJ,QAAM,EAAE9I,QAAA,CAAA8M;;QArf5F5N,CAAA;UAyfgB6N,WAEM,EAEyCrN,KAAA,CAAAuG,OAAO,I,cAAtD9H,mBAAA,CAEM,OAFN6O,WAEM,EAFkD,gCAExD,KA/fhB5K,mBAAA,e;MAAAlD,CAAA;QAkgBYnB,mBAAA,CAEM,OAFNkP,WAEM,GADF3O,YAAA,CAAgEwC,oBAAA;MAArDtC,IAAI,EAAC,SAAS;MAAEe,OAAK,EAAES,QAAA,CAAAkN;;MAngBlDxO,OAAA,EAAAC,QAAA,CAmgBkE,MAAE,CAngBpEkB,gBAAA,CAmgBkE,IAAE,E;MAngBpEX,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}