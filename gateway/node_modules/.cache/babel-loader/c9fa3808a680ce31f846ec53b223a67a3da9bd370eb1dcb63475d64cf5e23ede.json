{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport editHeader from \"../../../components/header/editHeader\";\nimport QRCode from \"qrcodejs2\";\nimport getDataApi from \"@/utils/getDataApi\";\nimport saveDataApi from \"@/utils/saveDataApi\";\nimport qrcodeApi from \"@/utils/qrcodeApi\";\nimport user from \"@/store/user\";\nexport default {\n  name: \"form\",\n  mixins: [getDataApi, saveDataApi, qrcodeApi],\n  data() {\n    return {\n      logicQuestionState: 0,\n      // 用于判断用户是否更改关联问题设置\n      logicOptionState: 0,\n      // 用于判断用户是否更改关联选项设置\n\n      uploadImgUrl: this.GLOBAL.backUrl + 'upload/image',\n      uploadVideoUrl: this.GLOBAL.backUrl + 'upload/video',\n      timer: '',\n      value: '',\n      qrcode: null,\n      timeFrame: '',\n      linkShare: '',\n      editWrongMsg: \"\",\n      editWrongMsgVisible: false,\n      qsLinkDialogVisible: false,\n      dialogVisibleAsso: false,\n      qsLinkDialogTitle: \"发布成功！\",\n      settingDialogTitle: \"高级设置\",\n      // 高级设置弹框的标题\n      settingDialogVisible: false,\n      // 高级设置对话框可见性\n      closingDate: null,\n      // 高级设置中问卷回收的截止日期\n      isLogic: true,\n      // 问卷是否引入关联逻辑\n      isReleased: false,\n      // 是否发布\n      hasRecycleLimit: false,\n      max_recycling: 10000,\n      editIndex: 0,\n      logicIndex: 0,\n      // 当前添加题目逻辑的问题ID\n      selectDisAble: false,\n      hoverItem: 0,\n      activeName: 'first',\n      title: '',\n      description: '',\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      type: 1,\n      questions: [],\n      outline: [],\n      pid: this.$route.query.pid,\n      qsEditDialogVisible: false,\n      qsEditDialogTitle: \"新建题目\",\n      qsLogicDialogVisible: false,\n      qsLogicDialogTitle: \"关联逻辑设置\",\n      willAddQuestion: {\n        question_id: 0,\n        id: 0,\n        type: '',\n        title: '',\n        must: false,\n        // 是否必填\n        is_shown: true,\n        // 是否显示\n        last_question: 0,\n        // 前导问题\n        last_option: 0,\n        // 前导选项\n        description: '',\n        // 问题描述\n        options: [{\n          hasNumLimit: false,\n          // 是否添加库存限制\n          title: '',\n          // 选项标题\n          id: 1,\n          // 选项id\n          supply: 1,\n          // 库存\n          consume: 0 // 已消耗库存（已选）\n        }],\n        row: 1,\n        // 填空题区域显示行数\n        score: 5,\n        // 评分题的最大评分\n        imgList: [],\n        videoList: []\n      },\n      willAddLogic: {\n        question_id: 0,\n        option_id: 1\n      },\n      allType: [{\n        value: 'radio',\n        label: '单选题'\n      }, {\n        value: 'checkbox',\n        label: '多选题'\n      }, {\n        value: 'text',\n        label: '填空题'\n      }, {\n        value: 'mark',\n        label: '评分题'\n      }, {\n        value: 'name',\n        label: '姓名'\n      }, {\n        value: 'stuId',\n        label: '学号'\n      }, {\n        value: 'phone',\n        label: '手机号'\n      }, {\n        value: 'school',\n        label: '学校'\n      }, {\n        value: 'sex',\n        label: '性别'\n      }, {\n        value: 'email',\n        label: '邮箱'\n      }],\n      xiaoxueqi_questions: [{\n        id: 1,\n        type: 'radio',\n        title: '这是一个什么网站？',\n        description: '请考虑妥当后填写',\n        must: true,\n        options: [{\n          id: 1,\n          title: '问卷系统'\n        }, {\n          id: 2,\n          title: '出版系统'\n        }],\n        row: 0,\n        score: 0\n      }, {\n        id: 2,\n        type: 'checkbox',\n        title: '软工小学期助教都有谁？',\n        description: '请考虑妥当后填写',\n        must: false,\n        options: [{\n          id: 1,\n          title: 'ZYH'\n        }, {\n          id: 2,\n          title: 'LKW'\n        }, {\n          id: 3,\n          title: 'ZXH'\n        }, {\n          id: 4,\n          title: 'HZH'\n        }],\n        row: 0,\n        score: 0\n      }, {\n        id: 3,\n        type: 'radio',\n        title: '软工小学期累不累',\n        description: '请考虑妥当后填写',\n        must: false,\n        options: [{\n          id: 1,\n          title: '累'\n        }, {\n          id: 2,\n          title: '非常累'\n        }],\n        row: 0,\n        score: 0\n      }, {\n        id: 4,\n        type: 'text',\n        title: '您对小学期的评价如何？',\n        description: '请考虑妥当后填写',\n        must: false,\n        options: [{\n          id: 0,\n          title: ''\n        }],\n        row: 3,\n        score: 0\n      }, {\n        id: 5,\n        type: 'mark',\n        title: '给小学期打个分吧~',\n        description: '请考虑妥当后填写',\n        must: true,\n        options: [{\n          id: 0,\n          title: ''\n        }],\n        row: 0,\n        score: 10\n      }],\n      xiaoxueqi_outline: [{\n        id: 1,\n        label: '1. 这是一个什么网站？'\n      }, {\n        id: 2,\n        label: '2. 软工小学期助教都有谁？'\n      }, {\n        id: 3,\n        label: '3. 软工小学期累不累'\n      }, {\n        id: 4,\n        label: '4. 您对小学期的评价如何？'\n      }, {\n        id: 5,\n        label: '5. 给小学期打个分吧~'\n      }]\n    };\n  },\n  components: {\n    editHeader\n  },\n  methods: {\n    //---------------------------Image and video--------------------------------//\n    upLoadImage(file) {\n      const formData = new FormData();\n      formData.append('image', file.file);\n      this.$axios({\n        method: 'post',\n        url: this.uploadImgUrl,\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            var name = res.data.name;\n            var url = res.data.url;\n            this.willAddQuestion.imgList.push({\n              name: name,\n              url: url\n            });\n            console.log(this.willAddQuestion.imgList);\n            break;\n          case 2:\n            // this.$message.error(\"上传文件格式错误！\");\n            break;\n          default:\n            this.$message.error(\"操作失败！\");\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    upLoadVideo(file) {\n      const formData = new FormData();\n      formData.append('video', file.file);\n      this.$axios({\n        method: 'post',\n        url: this.uploadVideoUrl,\n        data: formData\n      }).then(res => {\n        switch (res.data.status_code) {\n          case 1:\n            var name = res.data.name;\n            var url = res.data.url;\n            this.willAddQuestion.videoList.push({\n              name: name,\n              url: url\n            });\n            console.log(this.willAddQuestion.videoList);\n            break;\n          case 2:\n            // this.$message.error(\"上传文件格式错误！\");\n            break;\n          default:\n            this.$message.error(\"操作失败！\");\n            break;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    beforeImageUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isPNG = file.type === 'image/png';\n      const isLt5M = file.size / 1024 / 1024 < 10;\n      if (!isJPG && !isPNG) {\n        this.$message.error('上传头像图片只能是 JPG/PNG 格式!');\n      } else if (!isLt5M) {\n        this.$message.error('上传头像图片大小不能超过 5MB!');\n      }\n      return (isJPG || isPNG) && isLt5M;\n    },\n    beforeVideoUpload(file) {\n      const filename = file.name;\n      var suffix = '';\n      var isVideo = false;\n      const isLt2M = file.size / 1024 / 1024 < 30;\n      try {\n        var flieArr = filename.split('.');\n        suffix = flieArr[flieArr.length - 1];\n      } catch (err) {\n        suffix = '';\n      }\n      var videoList = ['mp4', 'mkv'];\n      var judge = videoList.some(function (item) {\n        return item === suffix;\n      });\n      if (judge) {\n        isVideo = true;\n      }\n      if (!isVideo) {\n        this.$message.error('上传视频文件只能是 MP4/MKV 格式!');\n      } else if (!isLt2M) {\n        this.$message.error('上传视频文件大小不能超过 10MB!');\n      }\n      return isLt2M && isVideo;\n    },\n    beforeRemove(file, fileList) {\n      console.log(file, fileList);\n      return this.$confirm(`确定移除 ${file.name}？`);\n    },\n    handleRemove(file, fileList) {\n      console.log(file, fileList);\n      this.$message(\"移除成功\");\n    },\n    //--------------------------------------------------------------------------//\n    recycleLimit() {\n      if (this.hasRecycleLimit === false) this.max_recycling = 10000;\n    },\n    autoSave() {\n      this.saveQnInfo('autosave', '4');\n    },\n    share() {\n      this.publish();\n    },\n    genCodeAgain() {\n      this.makeCodeAgain(\"4\");\n    },\n    formatTime(time) {\n      this.timeFrame = time;\n    },\n    addName() {\n      this.willAddQuestion.type = \"name\";\n      this.willAddQuestion.title = \"姓名\";\n      this.qsEditDialogVisible = true;\n    },\n    addSex() {\n      this.willAddQuestion.type = \"sex\";\n      this.willAddQuestion.title = \"性别\";\n      this.qsEditDialogVisible = true;\n    },\n    addStuID() {\n      this.willAddQuestion.type = \"stuId\";\n      this.willAddQuestion.title = \"学号\";\n      this.qsEditDialogVisible = true;\n    },\n    addSchool() {\n      this.willAddQuestion.type = \"school\";\n      this.willAddQuestion.title = \"学校\";\n      this.qsEditDialogVisible = true;\n    },\n    addPhone() {\n      this.willAddQuestion.type = \"phone\";\n      this.willAddQuestion.title = \"手机号\";\n      this.qsEditDialogVisible = true;\n    },\n    addEmail() {\n      this.willAddQuestion.type = \"email\";\n      this.willAddQuestion.title = \"邮箱\";\n      this.qsEditDialogVisible = true;\n    },\n    finish() {\n      this.qsLinkDialogVisible = false;\n      this.$router.push('/index'); // 跳转到问卷中心？\n    },\n    publishSuccess: function () {\n      this.qsLinkDialogVisible = true;\n    },\n    edit: function (index) {\n      index--;\n      this.willAddQuestion = {\n        question_id: this.questions[index].question_id,\n        id: this.questions[index].id,\n        type: this.questions[index].type,\n        title: this.questions[index].title,\n        must: this.questions[index].must,\n        description: this.questions[index].description,\n        options: JSON.parse(JSON.stringify(this.questions[index].options)),\n        row: this.questions[index].row,\n        score: this.questions[index].score,\n        is_shown: this.questions[index].is_shown,\n        last_question: this.questions[index].last_question,\n        last_option: this.questions[index].last_option,\n        imgList: JSON.parse(JSON.stringify(this.questions[index].imgList)),\n        videoList: JSON.parse(JSON.stringify(this.questions[index].videoList))\n      };\n      this.editIndex = index;\n      this.selectDisAble = true;\n      this.qsEditDialogTitle = \"编辑题目\";\n      this.qsEditDialogVisible = true;\n    },\n    isExistEmptyOption: function () {\n      for (let i = 0; i < this.willAddQuestion.options.length; i++) {\n        if (this.willAddQuestion.options[i].title === '') return true;\n      }\n      return false;\n    },\n    isExistSameOption: function () {\n      for (let i = 0; i < this.willAddQuestion.options.length; i++) {\n        for (let j = 0; j < this.willAddQuestion.options.length; j++) {\n          if (i !== j && this.willAddQuestion.options[i].title === this.willAddQuestion.options[j].title) return true;\n        }\n      }\n      return false;\n    },\n    dialogConfirm() {\n      let index = this.editIndex;\n      if (this.qsEditDialogTitle === \"编辑题目\") {\n        if (this.willAddQuestion.title === '') {\n          this.$message({\n            type: 'error',\n            message: '标题不能为空!'\n          });\n        } else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\n          this.$message({\n            type: 'error',\n            message: '选项名不能为空!'\n          });\n        } else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\n          this.$message({\n            type: 'error',\n            message: '选项名不能重复!'\n          });\n        } else {\n          this.questions[index].id = this.willAddQuestion.id;\n          this.questions[index].row = this.willAddQuestion.row;\n          this.questions[index].must = this.willAddQuestion.must;\n          this.questions[index].description = this.willAddQuestion.description;\n          this.questions[index].title = this.willAddQuestion.title;\n          this.questions[index].options = this.willAddQuestion.options;\n          this.questions[index].score = this.willAddQuestion.score;\n          this.questions[index].is_shown = this.willAddQuestion.is_shown;\n          this.questions[index].last_question = this.willAddQuestion.last_question;\n          this.questions[index].last_option = this.willAddQuestion.last_option;\n          this.questions[index].options = JSON.parse(JSON.stringify(this.willAddQuestion.options));\n          this.questions[index].imgList = JSON.parse(JSON.stringify(this.willAddQuestion.imgList));\n          this.questions[index].videoList = JSON.parse(JSON.stringify(this.willAddQuestion.videoList));\n          // 大纲更新\n          this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\n          this.qsEditDialogTitle = \"\";\n          this.qsEditDialogVisible = false;\n          this.$message({\n            type: 'success',\n            message: '修改成功!'\n          });\n          // 重置\n          this.resetWillAdd();\n          this.selectDisAble = false;\n        }\n      } else {\n        if (this.willAddQuestion.title === '') {\n          this.$message({\n            type: 'error',\n            message: '标题不能为空!'\n          });\n        } else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistEmptyOption()) {\n          this.$message({\n            type: 'error',\n            message: '选项名不能为空!'\n          });\n        } else if ((this.willAddQuestion.type === \"radio\" || this.willAddQuestion.type === \"checkbox\") && this.isExistSameOption()) {\n          this.$message({\n            type: 'error',\n            message: '选项名不能重复!'\n          });\n        } else {\n          this.qsEditDialogVisible = false;\n          this.willAddQuestion.id = this.questions.length + 1;\n          // 大纲更新\n          this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\n          this.questions.push(this.willAddQuestion);\n          this.$message({\n            type: 'success',\n            message: '添加成功!'\n          });\n          // 重置\n          this.resetWillAdd();\n        }\n      }\n    },\n    resetWillAdd() {\n      this.willAddQuestion = {\n        question_id: 0,\n        id: 0,\n        type: '',\n        title: '',\n        must: false,\n        // 是否必填\n        is_shown: true,\n        // 是否显示\n        last_question: 0,\n        // 前导问题\n        last_option: 0,\n        // 前导选项\n        description: '',\n        // 问题描述\n        options: [{\n          title: '',\n          // 选项标题\n          id: 1,\n          // 选项id\n          hasNumLimit: false,\n          supply: 1,\n          consume: 0\n        }],\n        row: 1,\n        // 填空区域行数\n        score: 5,\n        // 最大评分\n        imgList: [],\n        videoList: []\n      };\n    },\n    dialogCancel: function () {\n      this.qsEditDialogTitle = \"新建题目\";\n      this.resetWillAdd();\n      this.qsEditDialogVisible = false;\n      this.selectDisAble = false;\n    },\n    cancel_pre: function () {\n      this.$confirm('已编辑的题目信息将不会保存,确认关闭？', '提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.dialogCancel();\n      }).catch(() => {});\n    },\n    LogicDialogCancel: function () {\n      this.qsLogicDialogVisible = false;\n      this.resetLogic();\n    },\n    cancel_pre_logic: function () {\n      this.$confirm('已编辑的题目关联逻辑将不会保存,确认关闭？', '提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.LogicDialogCancel();\n      }).catch(() => {});\n    },\n    logicConfirm: function (index) {\n      console.log(this.questions);\n      let questions = this.questions;\n      let willAddLogic = this.willAddLogic;\n      questions[index].last_question = willAddLogic.question_id;\n      questions[index].last_option = willAddLogic.option_id;\n      questions[index].is_shown = willAddLogic.question_id === 0;\n      if (this.willAddLogic.question_id !== this.logicQuestionState || this.willAddLogic.option_id !== this.logicOptionState) {\n        this.$message({\n          type: 'success',\n          message: '问题关联设置成功'\n        });\n      }\n      this.qsLogicDialogVisible = false;\n      this.resetLogic();\n    },\n    logic: function (index) {\n      this.logicIndex = index - 1;\n      this.willAddLogic.question_id = this.questions[index - 1].last_question;\n      if (this.questions[index - 1].last_option !== 0) {\n        this.willAddLogic.option_id = this.questions[index - 1].last_option;\n      } else this.willAddLogic.option_id = 1;\n      console.log(this.questions);\n      this.qsLogicDialogVisible = true;\n      this.logicQuestionState = this.willAddLogic.question_id;\n      this.logicOptionState = this.willAddLogic.option_id;\n    },\n    resetLogic() {\n      this.willAddLogic = {\n        question_id: 0,\n        option_id: 1\n      };\n      this.logicIndex = 0;\n    },\n    typeChange(value) {\n      this.willAddQuestion.type = value;\n    },\n    addOption() {\n      // 问题关联检查\n      if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\n        this.$message({\n          type: 'warning',\n          message: '此问题已被关联，无法新增选项，请删除关联信息后再试'\n        });\n        return;\n      }\n      this.willAddQuestion.options.push({\n        hasNumLimit: false,\n        title: '',\n        // 选项标题\n        id: this.willAddQuestion.options.length + 1,\n        supply: 1,\n        consume: 0\n      });\n    },\n    deleteOption(index) {\n      if (this.willAddQuestion.options.length === 1) {\n        this.$message({\n          type: \"error\",\n          message: \"至少需要设置一个选项！\"\n        });\n      } else {\n        // 问题关联检查\n        if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id - 1).length !== 0) {\n          this.$message({\n            type: 'warning',\n            message: '此问题已被关联，无法删除选项，请删除关联信息后再试'\n          });\n          return;\n        }\n        // id重排\n        for (let i = index + 1; i < this.willAddQuestion.options.length; i++) {\n          this.willAddQuestion.options[i].id--;\n        }\n        this.willAddQuestion.options.splice(index, 1);\n      }\n    },\n    changeTitle: function (value) {\n      this.title = value;\n    },\n    changeDescription: function (value) {\n      this.description = value;\n    },\n    openSetting: function () {\n      this.settingDialogVisible = true;\n    },\n    settingSuccess: function () {\n      this.settingDialogVisible = false;\n      this.$message({\n        type: 'success',\n        message: '设置已生效'\n      });\n    },\n    publish() {\n      if (this.questions.length === 0) {\n        this.$message.error(\"题目为空，无法发布！\");\n        return;\n      }\n      this.$confirm('确认发布？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'success'\n      }).then(() => {\n        let loadingIns = this.$loading({\n          fullscreen: true,\n          text: '拼命加载中'\n        });\n        this.publishSuccess();\n        var new_questions = JSON.parse(JSON.stringify(this.questions));\n        let url = '/sm/save/qn/deploy';\n        const userInfo = user.getters.getUser(user.state());\n        var param = {\n          username: userInfo.user.username,\n          title: this.title,\n          finished_time: this.timeFrame,\n          description: this.description,\n          type: this.type,\n          max_recycling: this.max_recycling,\n          qn_id: this.$route.query.pid,\n          questions: new_questions\n        };\n        var paramer = JSON.stringify(param, {\n          questions: 'brackets'\n        });\n        this.$axios({\n          method: 'post',\n          url: url,\n          data: paramer\n        }).then(res => {\n          loadingIns.close();\n          if (res.data.status_code === 1) {\n            this.linkShare = this.GLOBAL.baseUrl + '/fill_form?mode=1&code=' + res.data.code;\n            if (this.qrcode == null) {\n              this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\n                width: 200,\n                //生成的二维码的宽度\n                height: 200,\n                //生成的二维码的高度\n                colorDark: \"#000000\",\n                // 生成的二维码的深色部分\n                colorLight: \"#ffffff\",\n                //生成二维码的浅色部分\n                correctLevel: QRCode.CorrectLevel.H\n              });\n            }\n            this.qrcode.clear();\n            this.qrcode.makeCode(this.linkShare);\n          } else if (res.data.status_code === 2) {\n            this.$message.error(\"题目为空，无法发布！\");\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消发布'\n        });\n      });\n    },\n    saveinfo(tag) {\n      this.saveQnInfo(tag, \"4\");\n    },\n    save() {\n      this.saveinfo('save');\n    },\n    preview() {\n      this.saveinfo('preview');\n    },\n    up: function (index) {\n      index--;\n      let questions = this.questions;\n      if (index !== 0) {\n        // 非法移动\n        if (questions[index].last_question === index) {\n          this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\n          return;\n        }\n        // 关联维护\n        let arr = this.sonGroup(index);\n        let willSubtract = [];\n        if (arr.length !== 0) {\n          for (let j = 0; j < arr.length; j++) {\n            willSubtract.push(arr[j].id - 1);\n          }\n        }\n        arr = this.sonGroup(index - 1);\n        if (arr.length !== 0) {\n          for (let j = 0; j < arr.length; j++) {\n            questions[arr[j].id - 1].last_question++;\n          }\n        }\n        for (let i = 0; i < willSubtract.length; i++) {\n          questions[willSubtract[i]].last_question--;\n        }\n        // 题序维护\n        questions[index].id--;\n        questions[index - 1].id++;\n        let temp = questions[index];\n        questions[index] = questions[index - 1];\n        questions[index - 1] = temp;\n        // 大纲维护\n        this.updateOutline(index, questions[index - 1].title);\n        this.updateOutline(index + 1, questions[index].title);\n      }\n    },\n    down: function (index) {\n      index--;\n      let questions = this.questions;\n      if (index !== questions.length - 1) {\n        // 非法移动\n        if (questions[index + 1].last_question === index + 1) {\n          this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\n          return;\n        }\n        // 关联维护\n        let arr = this.sonGroup(index);\n        let willAdd = [];\n        if (arr.length !== 0) {\n          for (let j = 0; j < arr.length; j++) {\n            willAdd.push(arr[j].id - 1);\n          }\n        }\n        arr = this.sonGroup(index + 1);\n        if (arr.length !== 0) {\n          for (let j = 0; j < arr.length; j++) {\n            questions[arr[j].id - 1].last_question--;\n          }\n        }\n        for (let i = 0; i < willAdd.length; i++) {\n          questions[willAdd[i]].last_question++;\n        }\n        // 题序维护\n        questions[index].id++;\n        questions[index + 1].id--;\n        let temp = questions[index];\n        questions[index] = questions[index + 1];\n        questions[index + 1] = temp;\n        // 大纲维护\n        this.updateOutline(index + 1, questions[index].title);\n        this.updateOutline(index + 2, questions[index + 1].title);\n      }\n    },\n    del_pre: function (index) {\n      // 问题关联检查\n      if (this.sonGroup(index - 1).length !== 0) {\n        this.$confirm('该问题已被关联，删除此问题会删除所有相关关联信息', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.del_relation(index);\n          this.del(index);\n          this.$message({\n            type: 'success',\n            message: '问题及关联信息已成功删除'\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消删除题目及关联'\n          });\n        });\n      } else {\n        this.$confirm('确认删除（不可恢复）？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.del(index);\n          this.$message({\n            type: 'success',\n            message: '删除成功'\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消删除'\n          });\n        });\n      }\n    },\n    del: function (index) {\n      index--;\n      let questions = this.questions;\n      let outline = this.outline;\n      // 维护关联关系\n      for (let i = index + 1; i < questions.length; i++) {\n        let arr = this.sonGroup(i);\n        if (arr.length !== 0) {\n          for (let j = 0; j < arr.length; j++) {\n            if (questions[arr[j].id - 1] !== index) {\n              questions[arr[j].id - 1].last_question--;\n            }\n          }\n        }\n      }\n      // 维护题序\n      for (let i = index + 1; i < questions.length; i++) {\n        questions[i].id--;\n      }\n      outline.splice(index, 1);\n      questions.splice(index, 1);\n      // 维护大纲\n      for (let num = index; num < outline.length; num++) {\n        this.updateOutline(num + 1, questions[num].title);\n      }\n    },\n    copy: function (index) {\n      index--;\n      let questions = this.questions;\n      // 大纲更新\n      this.updateOutline(this.outline.length + 1, questions[index].title);\n      // 问卷更新\n      let temp = this.deepClone(questions[index]);\n      temp.id = questions.length + 1;\n      temp.question_id = 0;\n      questions.push(temp);\n      this.$message.success(\"问题复制成功，已粘贴至问卷末尾\");\n    },\n    deepClone: function (initialObj) {\n      let obj = {};\n      try {\n        obj = JSON.parse(JSON.stringify(initialObj));\n        // eslint-disable-next-line no-empty\n      } finally {}\n      return obj;\n    },\n    // 深拷贝\n    updateOutline: function (id, label) {\n      if (label.length > 12) {\n        label = id + '. ' + label.substring(0, 11) + '...';\n      } else {\n        label = id + '. ' + label;\n      }\n      if (id <= this.questions.length) {\n        this.outline[id - 1].id = id;\n        this.outline[id - 1].label = label;\n      } else {\n        this.outline.push({\n          id: id,\n          label: label\n        });\n      }\n    },\n    updateQuestions: function (start, end) {\n      let offset = end - start;\n      if (offset > 0) {\n        for (let i = 0; i < offset; i++) {\n          this.down(start + i);\n        }\n      } else {\n        for (let i = 0; i < offset * -1; i++) {\n          this.up(start - i);\n        }\n      }\n    },\n    // good\n    toFillQn: function (value) {\n      this.$router.push({\n        name: 'FillQn',\n        query: {\n          mode: value,\n          title: this.title\n        }\n      });\n    },\n    InitOutline() {\n      for (var i = 0; i < this.questions.length; i++) {\n        this.outline.push({\n          id: this.questions[i].id,\n          label: i + 1 + \". \" + this.questions[i].title\n        });\n      }\n    },\n    copyToClip(message) {\n      var aux = document.createElement(\"input\");\n      aux.setAttribute(\"value\", this.linkShare);\n      document.body.appendChild(aux);\n      aux.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(aux);\n      if (message !== null) {\n        this.$message.success(\"复制成功\");\n      } else {\n        this.$message.error(\"复制失败\");\n      }\n    },\n    // 大纲拖拽处理函数(下3个)\n    handleDrop(draggingNode, dropNode, dropType) {\n      console.log('tree drop: ', draggingNode.key, dropNode.key, dropType);\n      if (this.isRightRelation(draggingNode.key, dropNode.key)) {\n        this.updateQuestions(draggingNode.key, dropNode.key);\n      } else {\n        this.outline.splice(0, this.outline.length);\n        this.InitOutline();\n        this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\n      }\n    },\n    allowDrop(draggingNode, dropNode, type) {\n      if (draggingNode.key > dropNode.key) {\n        return type === 'prev';\n      } else {\n        return type === 'next';\n      }\n    },\n    isRightRelation: function (index1, index2) {\n      console.log(index1, index2);\n      index1--;\n      index2--;\n      let questions = this.questions;\n      if (index1 < index2) {\n        for (let i = index1 + 1; i <= index2; i++) {\n          if (questions[i].last_question === index1 + 1) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        for (let i = index1 - 1; i >= index2; i--) {\n          if (questions[index1].last_question === i + 1) {\n            return false;\n          }\n        }\n        return true;\n      }\n    },\n    idTitle: function (item) {\n      if (item.id === 0) {\n        return item.title;\n      } else {\n        return item.id + \". \" + item.title;\n      }\n    },\n    relatedQs: function (item) {\n      return \"关联问题：\" + this.questions[item.last_question - 1].id + \".\" + this.questions[item.last_question - 1].title + \"(\" + this.questions[item.last_question - 1].options[item.last_option - 1].title + \")\";\n    },\n    // 遍历得爸爸\n    fatherIndex: function (qs_id) {\n      for (let i = 0; i < this.questions.length; i++) {\n        if (this.questions[i].question_id === qs_id) {\n          return i;\n        }\n      }\n    },\n    // 遍历得儿子\n    sonGroup: function (index) {\n      let arr = [];\n      for (let i = 0; i < this.questions.length; i++) {\n        if (this.questions[i].last_question === this.questions[index].id) {\n          arr.push(this.questions[i]);\n        }\n      }\n      return arr;\n    },\n    // 连带删除关联信息\n    del_relation: function (index) {\n      for (let i = 0; i < this.questions.length; i++) {\n        // 保存加入后,下面需修改id为question_id\n        if (this.questions[i].last_question === this.questions[index - 1].id) {\n          this.questions[i].last_option = 0;\n          this.questions[i].last_question = 0;\n          this.questions[i].is_shown = true;\n        }\n      }\n    },\n    // 关联信息存在性判断\n    isExistRelation: function () {\n      for (let i = 0; i < this.questions.length; i++) {\n        if (this.questions[i].last_question !== 0) {\n          return true;\n        }\n      }\n      return false;\n    },\n    // 监听：全局删除关联信息\n    closeGlobalLogic: function (state) {\n      if (!state && this.isExistRelation()) {\n        this.$confirm('检测到您已为题目添加关联，关闭设置将会删除所有关联信息，是否继续？', '提示', {\n          confirmButtonText: '确认',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.deleteGlobalRelation();\n          this.$message.info(\"关联信息已全部删除\");\n        }).catch(() => {\n          this.isLogic = true;\n          this.$message.info(\"取消操作\");\n        });\n      }\n    },\n    // 删除全局关联信息\n    deleteGlobalRelation: function () {\n      for (let i = 0; i < this.questions.length; i++) {\n        this.questions[i].last_question = 0;\n        this.questions[i].last_option = 0;\n        this.questions[i].is_shown = true;\n      }\n    }\n  },\n  computed: {\n    questionsFilter: function () {\n      let questions = this.questions;\n      let arr = [{\n        question_id: 0,\n        id: 0,\n        type: '',\n        title: '不设置关联题目',\n        must: false,\n        // 是否必填\n        is_shown: true,\n        // 是否显示\n        last_question: 0,\n        // 前导问题\n        last_option: 0,\n        // 前导选项\n        description: '',\n        // 问题描述\n        options: [{\n          title: '',\n          // 选项标题\n          id: 0 // 选项id\n        }],\n        row: 1,\n        // 填空区域行数\n        score: 5 // 最大评分\n      }];\n      for (let i = 0; i < this.logicIndex; i++) {\n        if (questions[i].type === \"radio\" || questions[i].type === \"checkbox\") {\n          arr.push(questions[i]);\n        }\n      }\n      return arr;\n    }\n  },\n  created() {\n    this.getQnDataSelf();\n  },\n  mounted() {\n    this.timer = setInterval(this.autoSave, 60000);\n  },\n  beforeDestroy() {\n    clearInterval(this.timer);\n  },\n  watch: {\n    hasRecycleLimit: \"recycleLimit\"\n  }\n};","map":{"version":3,"names":["editHeader","QRCode","getDataApi","saveDataApi","qrcodeApi","user","name","mixins","data","logicQuestionState","logicOptionState","uploadImgUrl","GLOBAL","backUrl","uploadVideoUrl","timer","value","qrcode","timeFrame","linkShare","editWrongMsg","editWrongMsgVisible","qsLinkDialogVisible","dialogVisibleAsso","qsLinkDialogTitle","settingDialogTitle","settingDialogVisible","closingDate","isLogic","isReleased","hasRecycleLimit","max_recycling","editIndex","logicIndex","selectDisAble","hoverItem","activeName","title","description","defaultProps","children","label","type","questions","outline","pid","$route","query","qsEditDialogVisible","qsEditDialogTitle","qsLogicDialogVisible","qsLogicDialogTitle","willAddQuestion","question_id","id","must","is_shown","last_question","last_option","options","hasNumLimit","supply","consume","row","score","imgList","videoList","willAddLogic","option_id","allType","xiaoxueqi_questions","xiaoxueqi_outline","components","methods","upLoadImage","file","formData","FormData","append","$axios","method","url","then","res","status_code","push","console","log","$message","error","catch","err","upLoadVideo","beforeImageUpload","isJPG","isPNG","isLt5M","size","beforeVideoUpload","filename","suffix","isVideo","isLt2M","flieArr","split","length","judge","some","item","beforeRemove","fileList","$confirm","handleRemove","recycleLimit","autoSave","saveQnInfo","share","publish","genCodeAgain","makeCodeAgain","formatTime","time","addName","addSex","addStuID","addSchool","addPhone","addEmail","finish","$router","publishSuccess","edit","index","JSON","parse","stringify","isExistEmptyOption","i","isExistSameOption","j","dialogConfirm","message","updateOutline","resetWillAdd","dialogCancel","cancel_pre","confirmButtonText","cancelButtonText","LogicDialogCancel","resetLogic","cancel_pre_logic","logicConfirm","logic","typeChange","addOption","sonGroup","deleteOption","splice","changeTitle","changeDescription","openSetting","settingSuccess","loadingIns","$loading","fullscreen","text","new_questions","userInfo","getters","getUser","state","param","username","finished_time","qn_id","paramer","close","baseUrl","code","document","getElementById","width","height","colorDark","colorLight","correctLevel","CorrectLevel","H","clear","makeCode","saveinfo","tag","save","preview","up","arr","willSubtract","temp","down","willAdd","del_pre","del_relation","del","num","copy","deepClone","success","initialObj","obj","substring","updateQuestions","start","end","offset","toFillQn","mode","InitOutline","copyToClip","aux","createElement","setAttribute","body","appendChild","select","execCommand","removeChild","handleDrop","draggingNode","dropNode","dropType","key","isRightRelation","allowDrop","index1","index2","idTitle","relatedQs","fatherIndex","qs_id","isExistRelation","closeGlobalLogic","deleteGlobalRelation","info","computed","questionsFilter","created","getQnDataSelf","mounted","setInterval","beforeDestroy","clearInterval","watch"],"sources":["E:\\mytest\\src\\views\\qn-createpane\\qn-categorypane\\form.vue"],"sourcesContent":["<template>\r\n    <div class=\"form\">\r\n      <el-header class=\"header\">\r\n        <edit-header\r\n            :title=\"title\"\r\n            :description=\"description\"\r\n            :isReleased=\"isReleased\"\r\n            v-on:titleChanged=\"changeTitle($event)\"\r\n            v-on:descriptionChanged=\"changeDescription($event)\"\r\n            v-on:advancedSetting=\"openSetting($event)\"\r\n            v-on:publishClicked=\"publish($event)\"\r\n            v-on:saveClicked=\"save($event)\"\r\n            v-on:qnPreview=\"preview($event)\"\r\n            v-on:onConfirm=\"dialogCancel($event)\"\r\n            v-on:shareClicked=\"share($event)\"\r\n        >\r\n        </edit-header>\r\n      </el-header>\r\n  \r\n      <el-container class=\"container\">\r\n        <el-aside class=\"side\">\r\n          <el-tabs v-model=\"activeName\" @tab-click=\"initOutline\">\r\n  \r\n  \r\n              <el-tab-pane label=\"题目类型\" name=\"first\">\r\n                <div class=\"edit\">\r\n                  <div class=\"ques-type\">\r\n                    <i class=\"el-icon-check\"></i>\r\n                    <span> 单选题&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</span>\r\n                    <i class=\"el-icon-circle-plus type-icon\" @click=\"willAddQuestion.type='radio';qsEditDialogVisible=true\"></i>\r\n                  </div>\r\n                  <div class=\"ques-type\">\r\n                    <i class=\"el-icon-finished\"></i>\r\n                    <span> 多选题&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</span>\r\n                    <i class=\"el-icon-circle-plus type-icon\" @click=\"willAddQuestion.type='checkbox';qsEditDialogVisible=true\"></i>\r\n                  </div>\r\n                  <div class=\"ques-type\">\r\n                    <i class=\"el-icon-edit-outline\"></i>\r\n                    <span> 填空题&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</span>\r\n                    <i class=\"el-icon-circle-plus type-icon\" @click=\"willAddQuestion.type='text';qsEditDialogVisible=true\"></i>\r\n                  </div>\r\n                  <div class=\"ques-type\">\r\n                    <i class=\"el-icon-star-off\"></i>\r\n                    <span> 评分题&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</span>\r\n                    <i class=\"el-icon-circle-plus type-icon\" @click=\"willAddQuestion.type='mark';qsEditDialogVisible=true\"></i>\r\n                  </div>\r\n                  <div>\r\n                    <el-row class=\"sideTitle\">个人信息模板</el-row>\r\n                    <div class=\"ques-type\">\r\n                      <i class=\"el-icon-user\"></i>\r\n                      <span class=\"chooseLabel\">姓名 </span>\r\n                      <i class=\"el-icon-circle-plus type-icon\" @click=\"addName\"></i>&emsp;&emsp;\r\n                      <i class=\"el-icon-discount\"></i>\r\n                      <span class=\"chooseLabel\">学号 </span>\r\n                      <i class=\"el-icon-circle-plus type-icon\" @click=\"addStuID\"></i>\r\n  <!--                    <i class=\"el-icon-male\"></i>-->\r\n  <!--                    <span class=\"chooseLabel\">性别 </span>-->\r\n  <!--                    <i class=\"el-icon-circle-plus type-icon\" @click=\"addSex\"></i>-->\r\n                    </div>\r\n  \r\n                    <div class=\"ques-type\">\r\n                      <i class=\"el-icon-phone-outline\"></i>\r\n                      <span class=\"chooseLabel\">电话 </span>\r\n                      <i class=\"el-icon-circle-plus type-icon\" @click=\"addPhone\"></i>&emsp;&emsp;\r\n                      <i class=\"el-icon-message\"></i>\r\n                      <span class=\"chooseLabel\">邮箱 </span>\r\n                      <i class=\"el-icon-circle-plus type-icon\" @click=\"addEmail\"></i>\r\n                    </div>\r\n  <!--                  <div class=\"ques-type\">-->\r\n  <!--                    &emsp;&emsp;-->\r\n  <!--                    <i class=\"el-icon-school\"></i>-->\r\n  <!--                    <span class=\"chooseLabel\">学校 </span>-->\r\n  <!--                    <i class=\"el-icon-circle-plus type-icon\" @click=\"addSchool\"></i>-->\r\n  <!--                  </div>-->\r\n                  </div>\r\n                </div>\r\n              </el-tab-pane>\r\n  \r\n            <el-tab-pane label=\"问卷大纲\" name=\"second\">\r\n              <div class=\"outline\">\r\n                <el-tree\r\n                    :data=\"outline\"\r\n                    node-key=\"id\"\r\n                    :props=\"defaultProps\"\r\n                    @node-drop=\"handleDrop\"\r\n                    draggable\r\n                    :allow-drop=\"allowDrop\"\r\n                ></el-tree>\r\n              </div>\r\n            </el-tab-pane>\r\n  \r\n          </el-tabs>\r\n        </el-aside>\r\n  \r\n        <el-main class=\"main\">\r\n          <div class=\"ques\">\r\n  \r\n            <div class=\"title\">\r\n              {{ title }}\r\n            </div>\r\n            <div class=\"description\" v-if=\"this.description!=='' && this.description!==null && this.description !== undefined\">\r\n              &emsp;&emsp;{{ description }}\r\n            </div>\r\n            <div class=\"content\">\r\n              <el-row class=\"ques-block\" v-for=\"item in questions\" :key=\"item.id\" @mouseover.native=\"hoverItem=item.id\">\r\n  \r\n                <el-col :span=\"16\" class=\"block-content\">\r\n                  <div class=\"block-title\">\r\n                    {{ item.id }}. {{ item.title }} <span class=\"must\" v-if=\"item.must\">(必填)</span>\r\n                  </div>\r\n  \r\n                  <div class=\"block-info\" v-if=\"item.type==='name' || item.type==='stuId' || item.type==='class' || item.type==='school'\r\n                            ||item.type==='phone' || item.type==='email' \">\r\n                    <el-input placeholder=\"请输入内容\" style=\"margin-left: 10px\"\r\n                        >\r\n                    </el-input>\r\n                  </div>\r\n  \r\n                  <div class=\"block-choice\" v-if=\"item.type==='sex'\">\r\n                    <div style=\"padding-bottom: 10px\"><el-radio value=\"0\">男</el-radio></div>\r\n                    <div><el-radio value=\"0\">女</el-radio></div>\r\n                  </div>\r\n  \r\n                  <div\r\n                      class=\"block-description\"\r\n                      v-if=\"item.description!=='' && item.description!==null && item.description!==undefined\"\r\n                  >\r\n                    {{ item.description }}\r\n                  </div>\r\n  \r\n                  <!--                  图片-->\r\n                  <el-row class=\"block-img\" v-for=\"(i,index) in item.imgList\" :key=\"i.index\">\r\n                    <el-col :offset=\"2\" :span=\"10\" class=\"demo-image__preview\" v-if=\"index%2===0\">\r\n                      <el-image\r\n                          style=\"width: 200px; height: 200px\"\r\n                          :src=\"i.url\"\r\n                          :preview-src-list=\"[i.url]\">\r\n                      </el-image>\r\n                    </el-col>\r\n                    <el-col :span=\"10\" class=\"demo-image__preview\" v-if=\"index%2===0&&index+1<=item.imgList.length-1\">\r\n                      <el-image\r\n                          style=\"width: 200px; height: 200px\"\r\n                          :src=\"item.imgList[index+1].url\"\r\n                          :preview-src-list=\"[item.imgList[index+1].url]\">\r\n                      </el-image>\r\n                    </el-col>\r\n                  </el-row>\r\n                  <span style=\"color: #9b9ea0;font-size: x-small\" v-if=\"item.imgList.length!==0\">（点击图片查看大图）</span>\r\n  \r\n  \r\n                  <!--                视频-->\r\n                  <el-row class=\"block-img\" v-for=\"i in item.videoList\" :key=\"i.index\">\r\n                    <embed width=400 height=230 transparentatstart=true\r\n                           animationatstart=false autostart=true autosize=false volume=100\r\n                           displaysize=0 showdisplay=true showstatusbar=true showcontrols=true\r\n                           showaudiocontrols=true showtracker=true showpositioncontrols=true\r\n                           balance=true :src=\"i.url\">\r\n                  </el-row>\r\n  \r\n  \r\n                  <div class=\"block-choice\" v-for=\"ans in item.options\" :key=\"ans.id\">\r\n  \r\n                    <!--                  单选-->\r\n                    <el-radio v-if=\"item.type==='radio'\" value=\"0\">\r\n                      {{ ans.title }}<span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\" v-if=\"ans.hasNumLimit\">剩余{{ans.supply-ans.consume}}&emsp;总计{{ans.supply}}</span>\r\n                    </el-radio>\r\n  \r\n                    <!--                  多选-->\r\n                    <el-checkbox v-if=\"item.type==='checkbox'\" value=\"0\">\r\n                      {{ ans.title }}\r\n                      <span style=\"color: #aaaaaa;font-size: small;margin-left: 15px\" v-if=\"ans.hasNumLimit\">剩余{{ans.supply-ans.consume}}&emsp;总计{{ans.supply}}</span>\r\n                    </el-checkbox>\r\n  \r\n                    <!--                  填空-->\r\n                    <el-input\r\n                        v-if=\"item.type==='text'&&item.row>1\"\r\n                        type=\"textarea\"\r\n                        placeholder=\"请输入内容\"\r\n                        v-bind=\"ans.title\">\r\n                    </el-input>\r\n                    <el-input\r\n                        v-if=\"item.type==='text'&&item.row===1\"\r\n                        placeholder=\"请输入内容\"\r\n                        v-bind=\"ans.title\">\r\n                    </el-input>\r\n                  </div>\r\n  \r\n                  <div class=\"block-choice\" v-if=\"item.type==='mark'\">\r\n                    <!--                  评分-->\r\n                    <el-rate value=\"0\" :max=\"item.score\"></el-rate>\r\n                  </div>\r\n  \r\n                  <!--                 关联信息-->\r\n                  <div class=\"block-relation\" v-if=\"isLogic && item.last_question!==0\">\r\n                    <div>{{ relatedQs(item) }}</div>\r\n                  </div>\r\n                </el-col>\r\n  \r\n                <el-col :span=\"8\" class=\"block-button\" style=\"text-align: right\" v-if=\"hoverItem===item.id\">\r\n                  <el-button-group>\r\n                    <el-tooltip class=\"item\" effect=\"light\" content=\"编辑\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-edit\" @click=\"edit(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                    <el-tooltip class=\"item\" v-if=\"isLogic\" effect=\"light\" content=\"添加关联逻辑\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-paperclip\" @click=\"logic(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                    <el-tooltip class=\"item\" effect=\"light\" content=\"复制\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-document-copy\" @click=\"copy(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                    <el-tooltip class=\"item\" effect=\"light\" content=\"删除\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-delete\" @click=\"del_pre(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                    <el-tooltip class=\"item\" effect=\"light\" content=\"上移\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-caret-top\" @click=\"up(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                    <el-tooltip class=\"item\" effect=\"light\" content=\"下移\" placement=\"bottom\" open-delay=\"400\">\r\n                      <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-caret-bottom\" @click=\"down(item.id)\"></el-button>\r\n                    </el-tooltip>\r\n                  </el-button-group>\r\n                </el-col>\r\n  \r\n              </el-row>\r\n            </div>\r\n  \r\n          </div>\r\n        </el-main>\r\n  \r\n      </el-container>\r\n  \r\n      <el-dialog :title=\"qsEditDialogTitle\" :visible.sync=\"qsEditDialogVisible\"  :before-close=\"cancel_pre\" class=\"dialog\" width=\"1100px\">\r\n        <el-form ref=\"form\" :model=\"willAddQuestion\" label-width=\"100px\">\r\n          <el-form-item label=\"题目类型\" >\r\n            <el-select :disabled=\"selectDisAble\" v-model=\"willAddQuestion.type\" placeholder=\"请选择题目类型\" @change=\"typeChange\">\r\n              <el-option\r\n                  v-for=\"item in allType\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <div\r\n              class=\"is-info\"\r\n              v-if=\"willAddQuestion.type==='name'\r\n              || willAddQuestion.type==='stuId'\r\n              || willAddQuestion.type==='class'\r\n              || willAddQuestion.type==='school'\r\n              || willAddQuestion.type==='phone'\r\n              || willAddQuestion.type==='email'\r\n              || willAddQuestion.type==='sex'\"\r\n          >\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='name'\">\r\n              <el-input value=\"姓名\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='stuId'\">\r\n              <el-input value=\"学号\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='school'\">\r\n              <el-input value=\"学校\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='sex'\">\r\n              <el-input value=\"性别\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='phone'\">\r\n              <el-input value=\"手机号\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"题目标题\" style=\"width: 100%;\" v-if=\"willAddQuestion.type==='email'\">\r\n              <el-input value=\"邮箱\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"是否必填\" >\r\n              <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n            </el-form-item>\r\n          </div>\r\n          <div v-else class=\"non-pre\">\r\n          <el-form-item label=\"题目标题\" style=\"width: 100%;\">\r\n            <el-input v-model=\"willAddQuestion.title\" placeholder=\"请输入标题\" style=\"width: 800px\" ></el-input>\r\n          </el-form-item>\r\n  \r\n          <el-form-item label=\"题目描述\" style=\"width: 100%;\">\r\n            <el-input v-model=\"willAddQuestion.description\" placeholder=\"请输入题目描述\" style=\"width: 800px\"></el-input>\r\n          </el-form-item>\r\n  \r\n          <el-form-item label=\"是否必填\" >\r\n            <el-checkbox v-model=\"willAddQuestion.must\">必填</el-checkbox>\r\n          </el-form-item>\r\n  \r\n          <template v-if=\"willAddQuestion.type==='radio'||willAddQuestion.type==='checkbox'\">\r\n            <el-form-item :label=\"'选项'+(index+1)\" v-for=\"(item,index) in willAddQuestion.options\" :key=\"index\">\r\n              <el-row>\r\n                <el-col :span=\"12\">\r\n                  <el-input  v-model=\"item.title\" placeholder=\"请输入选项名\" ></el-input>\r\n                </el-col>\r\n                <el-col :span=\"12\">\r\n                  <el-button type=\"danger\" plain class=\"deleteOptionButton\"  @click=\"deleteOption(index)\" >删除选项</el-button>\r\n                  <el-button type=\"success\" plain style=\"margin-right: 8px\" v-if=\"!item.hasNumLimit\" @click=\"item.hasNumLimit=true\">添加库存限制</el-button>\r\n                  <el-button type=\"info\" plain style=\"margin-right: 8px\" v-if=\"item.hasNumLimit\" @click=\"item.hasNumLimit=false\">取消库存限制</el-button>\r\n                  <el-input-number v-model=\"item.supply\" v-if=\"item.hasNumLimit\"></el-input-number>\r\n                </el-col>\r\n              </el-row>\r\n  \r\n            </el-form-item>\r\n            <el-button type=\"primary\" plain class=\"addOptionButton\" @click=\"addOption\">新增选项</el-button>\r\n          </template>\r\n  \r\n          <template v-if=\"willAddQuestion.type==='text'\" >\r\n            <el-form-item label=\"填空\">\r\n              <el-input\r\n                  type=\"textarea\"\r\n                  class=\"my-input\"\r\n                  :rows=\"willAddQuestion.row\"\r\n                  resize=\"none\">\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"行数\">\r\n              <el-input-number v-model=\"willAddQuestion.row\" :min=\"1\" :max=\"10\" ></el-input-number>\r\n            </el-form-item>\r\n          </template>\r\n  \r\n          <template v-if=\"willAddQuestion.type==='mark'\">\r\n            <el-form-item label=\"最大分数\">\r\n              <el-input-number v-model=\"willAddQuestion.score\" :min=\"3\" :max=\"10\" ></el-input-number>\r\n            </el-form-item>\r\n          </template>\r\n          <el-form-item label=\"上传图片\">\r\n            <el-upload\r\n                class=\"upload-img\"\r\n                :action=uploadImgUrl\r\n                multiple\r\n                :http-request=\"upLoadImage\"\r\n                :before-upload=\"beforeImageUpload\"\r\n                :file-list=\"willAddQuestion.imgList\"\r\n                :limit=\"6\">\r\n              <el-button size=\"small\"  plain style=\"width: 100px\">点击上传</el-button>\r\n              <span slot=\"tip\" class=\"el-upload__tip\">&emsp;只能上传jpg/png文件，且不超过5mb</span>\r\n            </el-upload>\r\n          </el-form-item>\r\n  \r\n          <el-form-item label=\"上传视频\">\r\n            <el-upload\r\n                class=\"upload-video\"\r\n                :action=uploadVideoUrl\r\n                :http-request=\"upLoadVideo\"\r\n                :before-upload=\"beforeVideoUpload\"\r\n                :file-list=\"willAddQuestion.videoList\"\r\n                :limit=\"1\">\r\n              <el-button size=\"small\" plain style=\"width: 100px\">点击上传</el-button>\r\n              <span slot=\"tip\" class=\"el-upload__tip\">&emsp;只能上传mp4/mkv文件，且不超过10mb</span>\r\n            </el-upload>\r\n          </el-form-item>\r\n          </div>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\" style=\"text-align: center\">\r\n          <el-row>\r\n            <el-button :span=\"6\" type=\"primary\" @click=\"dialogConfirm\">确定</el-button>\r\n            &emsp;\r\n            <el-button :span=\"6\" @click=\"cancel_pre\" >取消</el-button>\r\n          </el-row>\r\n        </span>\r\n      </el-dialog>\r\n      <el-dialog :visible.sync=\"qsLinkDialogVisible\" :title=\"qsLinkDialogTitle\" class=\"linkDialog\" :show-close=\"false\" width=\"800px\" >\r\n        <el-row>\r\n          <el-col span=\"8\" style=\"text-align: center\">\r\n            <el-row>\r\n              <div id=\"qrcode_2\" style=\"height:200px; width:200px; margin-left: 22px;\"></div>\r\n            </el-row>\r\n          </el-col>\r\n          <el-col span=\"16\">\r\n            <el-row><h2>链接与二维码</h2></el-row>\r\n            <el-row style=\"margin-top:15px\">\r\n              <el-col :span=\"16\" style=\"margin-right: 5px\">\r\n                <el-input :placeholder=linkShare v-model=\"linkShare\" id=\"copyText\" :disabled=\"true\">\r\n                </el-input>\r\n              </el-col>\r\n              <el-button type=\"info\" plain id=\"copyBtn\" @click=\"copyToClip\">复制链接</el-button></el-row>\r\n            <el-row style=\"margin-top: 25px\">\r\n              <el-button type=\"primary\" plain @click=\"downloadQrcode\">下载二维码</el-button>\r\n              <el-button type=\"primary\" @click=\"genCodeAgain\" style=\"margin-left: 30px\">重新生成链接</el-button>\r\n            </el-row>\r\n          </el-col>\r\n        </el-row>\r\n        <span slot=\"footer\" class=\"dialog-footer\" style=\"text-align: center\">\r\n          <el-row>\r\n            <el-button :span=\"6\" type=\"success\" style=\"width: 80px\"  @click=\"finish\">完 成</el-button>\r\n          </el-row>\r\n        </span>\r\n      </el-dialog>\r\n      <el-dialog :visible.sync=\"editWrongMsgVisible\"  class=\"linkDialog\" :show-close=\"false\" :close-on-click-modal=\"false\" width=\"300px\" >\r\n        <span>{{ editWrongMsg }}</span>\r\n        <span slot=\"footer\" class=\"dialog-footer\" style=\"text-align: center\">\r\n                    <el-row>\r\n                      <el-button :span=\"6\" type=\"danger\" style=\"width: 80px\"  @click=\"editWrongMsgVisible=false\">知道了</el-button>\r\n                    </el-row>\r\n        </span>\r\n      </el-dialog>\r\n      <!--    关联问题弹框-->\r\n      <el-dialog :title=\"qsLogicDialogTitle\" :visible.sync=\"qsLogicDialogVisible\"  :before-close=\"cancel_pre_logic\" class=\"dialog\" >\r\n        <el-form v-if=\"questions.length !== 0\" class=\"logic-form\" ref=\"form\" label-width=\"80px\">\r\n  \r\n          <div class=\"logic-title\">\r\n            当前题目：{{ questions[logicIndex].id }}. {{ questions[logicIndex].title }}\r\n          </div>\r\n  \r\n          <el-form-item label=\"关联题目\">\r\n            <el-select v-model=\"willAddLogic.question_id\" placeholder=\"请选择关联题目\">\r\n              <el-option\r\n                  v-for=\"item in questionsFilter\"\r\n                  :key=\"item.id\"\r\n                  :label=\"idTitle(item)\"\r\n                  :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n  \r\n          <el-form-item label=\"关联选项\" v-if=\"willAddLogic.question_id!==0\">\r\n            <el-select v-model=\"willAddLogic.option_id\" placeholder=\"请选择关联选项\">\r\n              <el-option\r\n                  v-for=\"item in questions[willAddLogic.question_id-1].options\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.title\"\r\n                  :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n  \r\n          <div class=\"logic-info\" v-if=\"willAddLogic.question_id!==0\">\r\n            <!--          保存加入后选项id记得减一-->\r\n            当题目<span style=\"color: #1687fd\"> \"{{ idTitle(questions[willAddLogic.question_id-1]) }}\" </span>选择选项<span style=\"color: #1687fd\"> \"{{ questions[willAddLogic.question_id-1].options[willAddLogic.option_id-1].title}}\" </span>时此题才会显示\r\n          </div>\r\n          <div class=\"logic-info\" v-if=\"questionsFilter.length===1\">\r\n            题目之前不存在单（多）选题，无法设置关联题目\r\n          </div>\r\n  \r\n          <div class=\"logic-bt\">\r\n            <el-button type=\"primary\" @click=\"logicConfirm(logicIndex)\">确定</el-button>\r\n          </div>\r\n  \r\n        </el-form>\r\n      </el-dialog>\r\n      <!--    高级设置弹框-->\r\n      <el-dialog :title=\"settingDialogTitle\" :visible.sync=\"settingDialogVisible\" class=\"settingDialog\" width=\"30%\">\r\n        <el-form>\r\n          <el-form-item class=\"timeBlock\" label=\"截止时间\">\r\n            <el-date-picker style=\"margin-left: 100px\"\r\n                            v-model=\"timeFrame\"\r\n                            @change=\"formatTime\"\r\n                            type=\"datetime\"\r\n                            value-format=\"yyyy-MM-dd HH:mm\"\r\n                            placeholder=\"选择结束时间\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n        <el-form-item label=\"是否限制回收量\" class=\"recycleBlock\">\r\n            <el-row>\r\n              <el-switch\r\n                  v-model=\"hasRecycleLimit\"\r\n                  active-color=\"#13ce66\"\r\n                  inactive-color=\"grey\"\r\n                  active-text=\"是\"\r\n                  inactive-text=\"否\"\r\n              >\r\n              </el-switch>\r\n            </el-row>\r\n            <el-row>\r\n              <el-input-number v-model=\"max_recycling\" :min=\"1\" v-if=\"hasRecycleLimit\" style=\"margin-left: 120px;height: 40px;margin-top: 10px\">\r\n              </el-input-number>\r\n            </el-row>\r\n          </el-form-item>\r\n          <el-form-item label=\"题目关联逻辑开关\">\r\n            <el-switch\r\n                v-model=\"isLogic\"\r\n                active-text=\"开\"\r\n                inactive-text=\"关\"\r\n                @change=\"closeGlobalLogic\"\r\n            >\r\n            </el-switch>\r\n          </el-form-item>\r\n  \r\n          <div class=\"logic-description\">\r\n            题目关联打开时，可设置一个题目的显示同前面某个题目的某个选项被选中关联在一起【问题右侧按钮处设置】\r\n          </div>\r\n  \r\n          <div class=\"logic-description important\" v-if=\"isLogic\">\r\n            为确保您的问卷关联逻辑正确，建议您最后为问卷设计关联逻辑\r\n          </div>\r\n        </el-form>\r\n  \r\n        <div class=\"setting-bt\">\r\n          <el-button type=\"primary\" @click=\"settingSuccess\">完成</el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import editHeader from \"../../../components/header/editHeader\";\r\n  import QRCode from \"qrcodejs2\";\r\n  import getDataApi from \"@/utils/getDataApi\";\r\n  import saveDataApi from \"@/utils/saveDataApi\";\r\n  import qrcodeApi from \"@/utils/qrcodeApi\";\r\n  import user from \"@/store/user\";\r\n  \r\n  export default {\r\n    name: \"form\",\r\n    mixins: [getDataApi, saveDataApi, qrcodeApi],\r\n    data() {\r\n      return {\r\n        logicQuestionState: 0,  // 用于判断用户是否更改关联问题设置\r\n        logicOptionState: 0,    // 用于判断用户是否更改关联选项设置\r\n  \r\n        uploadImgUrl: this.GLOBAL.backUrl + 'upload/image',\r\n        uploadVideoUrl: this.GLOBAL.backUrl + 'upload/video',\r\n  \r\n        timer: '',\r\n        value:'',\r\n        qrcode: null,\r\n        timeFrame: '',\r\n        linkShare: '',\r\n        editWrongMsg: \"\",\r\n        editWrongMsgVisible: false,\r\n        qsLinkDialogVisible: false,\r\n        dialogVisibleAsso: false,\r\n        qsLinkDialogTitle: \"发布成功！\",\r\n        settingDialogTitle: \"高级设置\",   // 高级设置弹框的标题\r\n        settingDialogVisible: false,     // 高级设置对话框可见性\r\n        closingDate: null,   // 高级设置中问卷回收的截止日期\r\n        isLogic: true,      // 问卷是否引入关联逻辑\r\n        isReleased: false,   // 是否发布\r\n        hasRecycleLimit:false,\r\n        max_recycling: 10000,\r\n        editIndex:0,\r\n        logicIndex: 0,          // 当前添加题目逻辑的问题ID\r\n        selectDisAble:false,\r\n        hoverItem:0,\r\n        activeName: 'first',\r\n        title: '',\r\n        description: '',\r\n        defaultProps: {\r\n          children: 'children',\r\n          label: 'label'\r\n        },\r\n        type: 1,\r\n        questions: [],\r\n        outline: [],\r\n        pid: this.$route.query.pid,\r\n        qsEditDialogVisible:false,\r\n        qsEditDialogTitle:\"新建题目\",\r\n        qsLogicDialogVisible:false,\r\n        qsLogicDialogTitle: \"关联逻辑设置\",\r\n        willAddQuestion: {\r\n          question_id: 0,\r\n          id: 0,\r\n          type: '',\r\n          title: '',\r\n          must: false, // 是否必填\r\n          is_shown: true,   // 是否显示\r\n          last_question: 0,   // 前导问题\r\n          last_option: 0,     // 前导选项\r\n          description: '', // 问题描述\r\n          options:[\r\n            {\r\n              hasNumLimit:false,  // 是否添加库存限制\r\n              title:'', // 选项标题\r\n              id: 1, // 选项id\r\n              supply: 1,  // 库存\r\n              consume: 0, // 已消耗库存（已选）\r\n            }\r\n          ],\r\n          row: 1, // 填空题区域显示行数\r\n          score: 5, // 评分题的最大评分\r\n          imgList: [],\r\n          videoList: [],\r\n        },\r\n        willAddLogic: {\r\n          question_id: 0,\r\n          option_id: 1,\r\n        },\r\n        allType:[\r\n          {\r\n            value:'radio',\r\n            label:'单选题',\r\n          },\r\n          {\r\n            value:'checkbox',\r\n            label:'多选题',\r\n          },\r\n          {\r\n            value:'text',\r\n            label:'填空题',\r\n          },{\r\n            value: 'mark',\r\n            label: '评分题',\r\n          },{\r\n            value: 'name',\r\n            label: '姓名'\r\n          },\r\n          {\r\n            value: 'stuId',\r\n            label: '学号'\r\n          },\r\n          {\r\n            value: 'phone',\r\n            label: '手机号'\r\n          },\r\n          {\r\n            value: 'school',\r\n            label: '学校'\r\n          },\r\n          {\r\n            value: 'sex',\r\n            label: '性别'\r\n          },\r\n          {\r\n            value: 'email',\r\n            label: '邮箱'\r\n          },\r\n        ],\r\n  \r\n        xiaoxueqi_questions: [\r\n          {\r\n            id: 1,\r\n            type: 'radio',\r\n            title: '这是一个什么网站？',\r\n            description: '请考虑妥当后填写',\r\n            must: true,\r\n            options: [{\r\n              id: 1,\r\n              title: '问卷系统',\r\n            }, {\r\n              id: 2,\r\n              title: '出版系统',\r\n            }],\r\n            row: 0,\r\n            score: 0,\r\n          },\r\n          {\r\n            id: 2,\r\n            type: 'checkbox',\r\n            title: '软工小学期助教都有谁？',\r\n            description: '请考虑妥当后填写',\r\n            must: false,\r\n            options: [{\r\n              id: 1,\r\n              title: 'ZYH',\r\n            }, {\r\n              id: 2,\r\n              title: 'LKW',\r\n            },{\r\n              id: 3,\r\n              title: 'ZXH',\r\n            }, {\r\n              id: 4,\r\n              title: 'HZH',\r\n            }],\r\n            row: 0,\r\n            score: 0,\r\n          },\r\n          {\r\n            id: 3,\r\n            type: 'radio',\r\n            title: '软工小学期累不累',\r\n            description: '请考虑妥当后填写',\r\n            must: false,\r\n            options: [{\r\n              id: 1,\r\n              title: '累',\r\n            }, {\r\n              id: 2,\r\n              title: '非常累',\r\n            }],\r\n            row: 0,\r\n            score: 0,\r\n          },\r\n          {\r\n            id: 4,\r\n            type: 'text',\r\n            title: '您对小学期的评价如何？',\r\n            description: '请考虑妥当后填写',\r\n            must: false,\r\n            options: [{\r\n              id: 0,\r\n              title: '',\r\n            }],\r\n            row: 3,\r\n            score: 0,\r\n          },\r\n          {\r\n            id: 5,\r\n            type: 'mark',\r\n            title: '给小学期打个分吧~',\r\n            description: '请考虑妥当后填写',\r\n            must: true,\r\n            options: [{\r\n              id: 0,\r\n              title: '',\r\n            }],\r\n            row: 0,\r\n            score: 10,\r\n          },\r\n        ],\r\n        xiaoxueqi_outline: [\r\n        {\r\n          id: 1,\r\n          label: '1. 这是一个什么网站？',\r\n        },\r\n        {\r\n          id: 2,\r\n          label: '2. 软工小学期助教都有谁？',\r\n        },\r\n        {\r\n          id: 3,\r\n          label: '3. 软工小学期累不累',\r\n        },\r\n        {\r\n          id: 4,\r\n          label: '4. 您对小学期的评价如何？',\r\n        },\r\n        {\r\n          id: 5,\r\n          label: '5. 给小学期打个分吧~',\r\n        },\r\n      ],\r\n      }\r\n    },\r\n    components: {\r\n      editHeader,\r\n    },\r\n    methods: {\r\n      //---------------------------Image and video--------------------------------//\r\n      upLoadImage(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file.file);\r\n        this.$axios({\r\n          method: 'post',\r\n          url: this.uploadImgUrl,\r\n          data: formData,\r\n        })\r\n            .then(res => {\r\n              switch (res.data.status_code) {\r\n                case 1:\r\n                  var name = res.data.name;\r\n                  var url = res.data.url;\r\n                  this.willAddQuestion.imgList.push({\r\n                    name: name,\r\n                    url: url\r\n                  });\r\n                  console.log(this.willAddQuestion.imgList);\r\n                  break;\r\n                case 2:\r\n                  // this.$message.error(\"上传文件格式错误！\");\r\n                  break;\r\n                default:\r\n                  this.$message.error(\"操作失败！\");\r\n                  break;\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            })\r\n      },\r\n      upLoadVideo(file) {\r\n        const formData = new FormData();\r\n        formData.append('video', file.file);\r\n        this.$axios({\r\n          method: 'post',\r\n          url: this.uploadVideoUrl,\r\n          data: formData,\r\n        })\r\n            .then(res => {\r\n              switch (res.data.status_code) {\r\n                case 1:\r\n                  var name = res.data.name;\r\n                  var url = res.data.url;\r\n                  this.willAddQuestion.videoList.push({\r\n                    name: name,\r\n                    url: url\r\n                  });\r\n                  console.log(this.willAddQuestion.videoList);\r\n                  break;\r\n                case 2:\r\n                  // this.$message.error(\"上传文件格式错误！\");\r\n                  break;\r\n                default:\r\n                  this.$message.error(\"操作失败！\");\r\n                  break;\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            })\r\n      },\r\n      beforeImageUpload(file) {\r\n        const isJPG = file.type === 'image/jpeg';\r\n        const isPNG = file.type === 'image/png';\r\n        const isLt5M = file.size / 1024 / 1024 < 10;\r\n  \r\n        if (!isJPG && !isPNG) {\r\n          this.$message.error('上传头像图片只能是 JPG/PNG 格式!');\r\n        } else if (!isLt5M) {\r\n          this.$message.error('上传头像图片大小不能超过 5MB!');\r\n        }\r\n        return (isJPG || isPNG) && isLt5M;\r\n      },\r\n      beforeVideoUpload(file) {\r\n        const filename = file.name;\r\n        var suffix = '';\r\n        var isVideo = false;\r\n        const isLt2M = file.size / 1024 / 1024 < 30;\r\n        try {\r\n          var flieArr = filename.split('.');\r\n          suffix = flieArr[flieArr.length - 1];\r\n        } catch (err) {\r\n          suffix = '';\r\n        }\r\n        var videoList = ['mp4', 'mkv'];\r\n        var judge = videoList.some(function (item) {\r\n          return item === suffix;\r\n        });\r\n        if (judge) {\r\n          isVideo = true;\r\n        }\r\n        if (!isVideo) {\r\n          this.$message.error('上传视频文件只能是 MP4/MKV 格式!');\r\n        } else if (!isLt2M) {\r\n          this.$message.error('上传视频文件大小不能超过 10MB!');\r\n        }\r\n        return isLt2M && isVideo;\r\n      },\r\n      beforeRemove(file, fileList) {\r\n        console.log(file, fileList);\r\n        return this.$confirm(`确定移除 ${ file.name }？`);\r\n      },\r\n      handleRemove(file, fileList) {\r\n        console.log(file, fileList);\r\n        this.$message(\"移除成功\")\r\n      },\r\n      //--------------------------------------------------------------------------//\r\n      recycleLimit(){\r\n        if (this.hasRecycleLimit===false) this.max_recycling=10000;\r\n      },\r\n      autoSave() {\r\n        this.saveQnInfo('autosave', '4');\r\n      },\r\n      share() {\r\n        this.publish();\r\n      },\r\n      genCodeAgain() {\r\n        this.makeCodeAgain(\"4\");\r\n      },\r\n      formatTime(time) {\r\n        this.timeFrame = time;\r\n      },\r\n      addName(){\r\n        this.willAddQuestion.type=\"name\";\r\n        this.willAddQuestion.title=\"姓名\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      addSex(){\r\n        this.willAddQuestion.type=\"sex\";\r\n        this.willAddQuestion.title=\"性别\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      addStuID(){\r\n        this.willAddQuestion.type=\"stuId\";\r\n        this.willAddQuestion.title=\"学号\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      addSchool(){\r\n        this.willAddQuestion.type=\"school\";\r\n        this.willAddQuestion.title=\"学校\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      addPhone(){\r\n        this.willAddQuestion.type=\"phone\";\r\n        this.willAddQuestion.title=\"手机号\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      addEmail(){\r\n        this.willAddQuestion.type=\"email\";\r\n        this.willAddQuestion.title=\"邮箱\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      finish(){\r\n        this.qsLinkDialogVisible=false;\r\n        this.$router.push('/index')// 跳转到问卷中心？\r\n      },\r\n      publishSuccess:function (){\r\n        this.qsLinkDialogVisible=true;\r\n      },\r\n      edit:function (index){\r\n        index--;\r\n        this.willAddQuestion={\r\n          question_id:this.questions[index].question_id,\r\n          id:this.questions[index].id,\r\n          type:this.questions[index].type,\r\n          title:this.questions[index].title,\r\n          must:this.questions[index].must,\r\n          description: this.questions[index].description,\r\n          options: JSON.parse(JSON.stringify(this.questions[index].options)),\r\n          row:this.questions[index].row,\r\n          score:this.questions[index].score,\r\n          is_shown: this.questions[index].is_shown,\r\n          last_question: this.questions[index].last_question,\r\n          last_option: this.questions[index].last_option,\r\n          imgList: JSON.parse(JSON.stringify(this.questions[index].imgList)),\r\n          videoList: JSON.parse(JSON.stringify(this.questions[index].videoList)),\r\n        };\r\n        this.editIndex=index;\r\n        this.selectDisAble=true;\r\n        this.qsEditDialogTitle=\"编辑题目\";\r\n        this.qsEditDialogVisible=true;\r\n      },\r\n      isExistEmptyOption:function (){\r\n        for(let i=0;i<this.willAddQuestion.options.length;i++){\r\n          if(this.willAddQuestion.options[i].title==='') return true;\r\n        }\r\n        return false;\r\n      },\r\n      isExistSameOption:function (){\r\n        for(let i=0;i<this.willAddQuestion.options.length;i++){\r\n          for(let j=0;j<this.willAddQuestion.options.length;j++){\r\n            if(i!==j&&this.willAddQuestion.options[i].title===this.willAddQuestion.options[j].title) return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n      dialogConfirm(){\r\n        let index = this.editIndex;\r\n        if(this.qsEditDialogTitle===\"编辑题目\") {\r\n          if (this.willAddQuestion.title === '') {\r\n            this.$message({\r\n              type: 'error',\r\n              message: '标题不能为空!'\r\n            });\r\n          }\r\n          else if((this.willAddQuestion.type===\"radio\"||this.willAddQuestion.type===\"checkbox\")&&this.isExistEmptyOption()){\r\n            this.$message({\r\n              type: 'error',\r\n              message: '选项名不能为空!'\r\n            });\r\n          }\r\n          else if((this.willAddQuestion.type===\"radio\"||this.willAddQuestion.type===\"checkbox\")&&this.isExistSameOption()){\r\n            this.$message({\r\n              type: 'error',\r\n              message: '选项名不能重复!'\r\n            });\r\n          }\r\n          else {\r\n            this.questions[index].id = this.willAddQuestion.id;\r\n            this.questions[index].row = this.willAddQuestion.row;\r\n            this.questions[index].must = this.willAddQuestion.must;\r\n            this.questions[index].description = this.willAddQuestion.description;\r\n            this.questions[index].title = this.willAddQuestion.title;\r\n            this.questions[index].options = this.willAddQuestion.options;\r\n            this.questions[index].score = this.willAddQuestion.score;\r\n            this.questions[index].is_shown = this.willAddQuestion.is_shown;\r\n            this.questions[index].last_question = this.willAddQuestion.last_question;\r\n            this.questions[index].last_option = this.willAddQuestion.last_option;\r\n            this.questions[index].options = JSON.parse(JSON.stringify(this.willAddQuestion.options));\r\n            this.questions[index].imgList=JSON.parse(JSON.stringify(this.willAddQuestion.imgList));\r\n            this.questions[index].videoList=JSON.parse(JSON.stringify(this.willAddQuestion.videoList));\r\n            // 大纲更新\r\n            this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n            this.qsEditDialogTitle = \"\";\r\n            this.qsEditDialogVisible = false;\r\n            this.$message({\r\n              type: 'success',\r\n              message: '修改成功!'\r\n            });\r\n            // 重置\r\n            this.resetWillAdd();\r\n            this.selectDisAble = false;\r\n          }\r\n        }\r\n        else{\r\n          if (this.willAddQuestion.title === '') {\r\n            this.$message({\r\n              type: 'error',\r\n              message: '标题不能为空!'\r\n            });\r\n          }\r\n          else if((this.willAddQuestion.type===\"radio\"||this.willAddQuestion.type===\"checkbox\")&&this.isExistEmptyOption()){\r\n            this.$message({\r\n              type: 'error',\r\n              message: '选项名不能为空!'\r\n            });\r\n          }\r\n          else if((this.willAddQuestion.type===\"radio\"||this.willAddQuestion.type===\"checkbox\")&&this.isExistSameOption()){\r\n            this.$message({\r\n              type: 'error',\r\n              message: '选项名不能重复!'\r\n            });\r\n          }\r\n          else {\r\n            this.qsEditDialogVisible = false;\r\n            this.willAddQuestion.id = this.questions.length + 1;\r\n            // 大纲更新\r\n            this.updateOutline(this.willAddQuestion.id, this.willAddQuestion.title);\r\n            this.questions.push(this.willAddQuestion);\r\n            this.$message({\r\n              type: 'success',\r\n              message: '添加成功!'\r\n            });\r\n            // 重置\r\n            this.resetWillAdd();\r\n          }\r\n        }\r\n      },\r\n      resetWillAdd(){\r\n        this.willAddQuestion={\r\n          question_id: 0,\r\n          id: 0,\r\n          type:'',\r\n          title:'',\r\n          must: false, // 是否必填\r\n          is_shown: true,   // 是否显示\r\n          last_question: 0,   // 前导问题\r\n          last_option: 0,     // 前导选项\r\n          description: '', // 问题描述\r\n          options:[\r\n            {\r\n              title:'', // 选项标题\r\n              id: 1 ,// 选项id\r\n              hasNumLimit:false,\r\n              supply:1,\r\n              consume:0,\r\n            }\r\n          ],\r\n          row:1, // 填空区域行数\r\n          score: 5, // 最大评分\r\n          imgList:[],\r\n          videoList:[]\r\n        }\r\n      },\r\n      dialogCancel: function(){\r\n        this.qsEditDialogTitle=\"新建题目\";\r\n        this.resetWillAdd();\r\n        this.qsEditDialogVisible=false;\r\n        this.selectDisAble=false;\r\n      },\r\n      cancel_pre: function () {\r\n        this.$confirm('已编辑的题目信息将不会保存,确认关闭？', '提示', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.dialogCancel();\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      LogicDialogCancel: function () {\r\n        this.qsLogicDialogVisible = false;\r\n        this.resetLogic();\r\n      },\r\n      cancel_pre_logic: function () {\r\n        this.$confirm('已编辑的题目关联逻辑将不会保存,确认关闭？', '提示', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.LogicDialogCancel();\r\n        }).catch(() => {\r\n        });\r\n      },\r\n      logicConfirm: function(index) {\r\n        console.log(this.questions);\r\n        let questions = this.questions;\r\n        let willAddLogic = this.willAddLogic;\r\n        questions[index].last_question = willAddLogic.question_id;\r\n        questions[index].last_option = willAddLogic.option_id;\r\n        questions[index].is_shown = willAddLogic.question_id === 0;\r\n        if (this.willAddLogic.question_id !== this.logicQuestionState || this.willAddLogic.option_id !== this.logicOptionState) {\r\n          this.$message({\r\n            type: 'success',\r\n            message: '问题关联设置成功'\r\n          });\r\n        }\r\n        this.qsLogicDialogVisible = false;\r\n        this.resetLogic();\r\n      },\r\n      logic: function (index) {\r\n        this.logicIndex = index-1;\r\n        this.willAddLogic.question_id = this.questions[index-1].last_question;\r\n        if (this.questions[index-1].last_option!==0) { this.willAddLogic.option_id = this.questions[index-1].last_option; }\r\n        else this.willAddLogic.option_id = 1;\r\n        console.log(this.questions);\r\n        this.qsLogicDialogVisible = true;\r\n        this.logicQuestionState = this.willAddLogic.question_id;\r\n        this.logicOptionState = this.willAddLogic.option_id;\r\n      },\r\n      resetLogic(){\r\n        this.willAddLogic = {\r\n          question_id: 0,\r\n          option_id: 1,\r\n        };\r\n        this.logicIndex = 0;\r\n      },\r\n      typeChange(value){\r\n        this.willAddQuestion.type = value;\r\n      },\r\n      addOption(){\r\n        // 问题关联检查\r\n        if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id-1).length !== 0) {\r\n          this.$message({\r\n            type: 'warning',\r\n            message: '此问题已被关联，无法新增选项，请删除关联信息后再试'\r\n          });\r\n          return;\r\n        }\r\n        this.willAddQuestion.options.push({\r\n          hasNumLimit:false,\r\n          title: '', // 选项标题\r\n          id: this.willAddQuestion.options.length + 1,\r\n          supply:1,\r\n          consume:0,\r\n        });\r\n      },\r\n      deleteOption(index){\r\n        if(this.willAddQuestion.options.length===1){\r\n          this.$message({\r\n            type:\"error\",\r\n            message:\"至少需要设置一个选项！\"\r\n          })\r\n        }\r\n        else {\r\n          // 问题关联检查\r\n          if (this.willAddQuestion.id !== 0 && this.sonGroup(this.willAddQuestion.id-1).length !== 0) {\r\n            this.$message({\r\n              type: 'warning',\r\n              message: '此问题已被关联，无法删除选项，请删除关联信息后再试'\r\n            });\r\n            return;\r\n          }\r\n          // id重排\r\n          for(let i=index+1; i<this.willAddQuestion.options.length; i++) {\r\n            this.willAddQuestion.options[i].id--;\r\n          }\r\n          this.willAddQuestion.options.splice(index,1);\r\n        }\r\n      },\r\n      changeTitle: function (value) {\r\n        this.title = value;\r\n      },\r\n      changeDescription: function (value) {\r\n        this.description = value;\r\n      },\r\n      openSetting: function () {\r\n        this.settingDialogVisible = true;\r\n      },\r\n      settingSuccess: function () {\r\n        this.settingDialogVisible = false;\r\n        this.$message({\r\n          type: 'success',\r\n          message: '设置已生效'\r\n        });\r\n      },\r\n      publish() {\r\n        if (this.questions.length === 0) {\r\n          this.$message.error(\"题目为空，无法发布！\");\r\n          return;\r\n        }\r\n  \r\n        this.$confirm('确认发布？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'success'\r\n        }).then(() => {\r\n          let loadingIns = this.$loading({fullscreen: true, text: '拼命加载中'});\r\n          this.publishSuccess();\r\n          var new_questions = JSON.parse(JSON.stringify(this.questions));\r\n          let url = '/sm/save/qn/deploy';\r\n          const userInfo = user.getters.getUser(user.state());\r\n          var param = {\r\n            username: userInfo.user.username,\r\n            title: this.title,\r\n            finished_time: this.timeFrame,\r\n            description: this.description,\r\n            type: this.type,\r\n            max_recycling: this.max_recycling,\r\n            qn_id: this.$route.query.pid,\r\n            questions: new_questions\r\n          };\r\n          var paramer = JSON.stringify(param, {questions: 'brackets'})\r\n          this.$axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: paramer,\r\n          })\r\n          .then(res => {\r\n            loadingIns.close();\r\n            if (res.data.status_code === 1) {\r\n              this.linkShare = this.GLOBAL.baseUrl + '/fill_form?mode=1&code=' + res.data.code;\r\n  \r\n              if (this.qrcode == null) {\r\n                this.qrcode = new QRCode(document.getElementById(\"qrcode_2\"), {\r\n                  width: 200, //生成的二维码的宽度\r\n                  height: 200, //生成的二维码的高度\r\n                  colorDark : \"#000000\", // 生成的二维码的深色部分\r\n                  colorLight : \"#ffffff\", //生成二维码的浅色部分\r\n                  correctLevel : QRCode.CorrectLevel.H\r\n                });\r\n              }\r\n              this.qrcode.clear();\r\n              this.qrcode.makeCode(this.linkShare);\r\n            }\r\n            else if (res.data.status_code === 2) {\r\n              this.$message.error(\"题目为空，无法发布！\");\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '取消发布'\r\n          });\r\n        });\r\n      },\r\n      saveinfo(tag) {\r\n        this.saveQnInfo(tag, \"4\");\r\n      },\r\n      save() {\r\n        this.saveinfo('save');\r\n      },\r\n      preview() {\r\n        this.saveinfo('preview');\r\n      },\r\n      up: function (index) {\r\n        index--;\r\n        let questions = this.questions;\r\n        if (index!==0) {\r\n          // 非法移动\r\n          if (questions[index].last_question === index) {\r\n            this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n            return;\r\n          }\r\n          // 关联维护\r\n          let arr = this.sonGroup(index);\r\n          let willSubtract = [];\r\n          if(arr.length !== 0) {\r\n            for(let j=0; j<arr.length; j++) {\r\n              willSubtract.push(arr[j].id-1);\r\n            }\r\n          }\r\n          arr = this.sonGroup(index-1);\r\n          if(arr.length !== 0) {\r\n            for(let j=0; j<arr.length; j++) {\r\n              questions[arr[j].id-1].last_question++;\r\n            }\r\n          }\r\n          for (let i=0; i<willSubtract.length; i++) {\r\n            questions[willSubtract[i]].last_question--;\r\n          }\r\n          // 题序维护\r\n          questions[index].id--;\r\n          questions[index-1].id++;\r\n          let temp = questions[index];\r\n          questions[index] = questions[index-1];\r\n          questions[index-1] = temp;\r\n          // 大纲维护\r\n          this.updateOutline(index, questions[index-1].title);\r\n          this.updateOutline(index+1, questions[index].title);\r\n        }\r\n      },\r\n      down: function (index) {\r\n        index--;\r\n        let questions = this.questions;\r\n        if (index!==questions.length-1) {\r\n          // 非法移动\r\n          if (questions[index+1].last_question === index+1) {\r\n            this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n            return;\r\n          }\r\n          // 关联维护\r\n          let arr = this.sonGroup(index);\r\n          let willAdd = [];\r\n          if(arr.length !== 0) {\r\n            for(let j=0; j<arr.length; j++) {\r\n              willAdd.push(arr[j].id-1);\r\n            }\r\n          }\r\n          arr = this.sonGroup(index+1);\r\n          if(arr.length !== 0) {\r\n            for(let j=0; j<arr.length; j++) {\r\n              questions[arr[j].id-1].last_question--;\r\n            }\r\n          }\r\n          for (let i=0; i<willAdd.length; i++) {\r\n            questions[willAdd[i]].last_question++;\r\n          }\r\n          // 题序维护\r\n          questions[index].id++;\r\n          questions[index+1].id--;\r\n          let temp = questions[index];\r\n          questions[index] = questions[index+1];\r\n          questions[index+1] = temp;\r\n          // 大纲维护\r\n          this.updateOutline(index+1, questions[index].title);\r\n          this.updateOutline(index+2, questions[index+1].title);\r\n        }\r\n      },\r\n      del_pre: function (index) {\r\n        // 问题关联检查\r\n        if (this.sonGroup(index-1).length !== 0) {\r\n          this.$confirm('该问题已被关联，删除此问题会删除所有相关关联信息', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            this.del_relation(index);\r\n            this.del(index)\r\n            this.$message({\r\n              type: 'success',\r\n              message: '问题及关联信息已成功删除'\r\n            });\r\n          }).catch(() => {\r\n            this.$message({\r\n              type: 'info',\r\n              message: '取消删除题目及关联'\r\n            });\r\n          });\r\n        } else {\r\n          this.$confirm('确认删除（不可恢复）？', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            this.del(index)\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功'\r\n            });\r\n          }).catch(() => {\r\n            this.$message({\r\n              type: 'info',\r\n              message: '取消删除'\r\n            });\r\n          });\r\n        }\r\n      },\r\n      del: function (index) {\r\n        index--;\r\n        let questions = this.questions;\r\n        let outline = this.outline;\r\n        // 维护关联关系\r\n        for (let i=index+1; i<questions.length; i++) {\r\n          let arr = this.sonGroup(i);\r\n          if(arr.length !== 0) {\r\n            for(let j=0; j<arr.length; j++) {\r\n              if (questions[arr[j].id-1] !== index) {\r\n                questions[arr[j].id-1].last_question--;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        // 维护题序\r\n        for (let i=index+1; i<questions.length; i++) {\r\n          questions[i].id--;\r\n        }\r\n        outline.splice(index,1);\r\n        questions.splice(index,1);\r\n        // 维护大纲\r\n        for (let num=index; num<outline.length; num++) {\r\n          this.updateOutline(num+1, questions[num].title);\r\n        }\r\n      },\r\n      copy: function (index) {\r\n        index--;\r\n        let questions = this.questions;\r\n        // 大纲更新\r\n        this.updateOutline(this.outline.length + 1, questions[index].title);\r\n        // 问卷更新\r\n        let temp = this.deepClone(questions[index]);\r\n        temp.id = questions.length+1;\r\n        temp.question_id = 0;\r\n        questions.push(temp);\r\n        this.$message.success(\"问题复制成功，已粘贴至问卷末尾\");\r\n      },\r\n      deepClone :function(initialObj) {\r\n        let obj = {};\r\n        try {\r\n          obj = JSON.parse(JSON.stringify(initialObj));\r\n          // eslint-disable-next-line no-empty\r\n        } finally {}\r\n        return obj;\r\n      },    // 深拷贝\r\n      updateOutline: function (id, label) {\r\n        if (label.length > 12) {\r\n          label = id + '. ' + label.substring(0, 11) + '...';\r\n        } else {\r\n          label = id + '. ' + label;\r\n        }\r\n        if (id <= this.questions.length) {\r\n          this.outline[id-1].id = id;\r\n          this.outline[id-1].label = label;\r\n        } else {\r\n          this.outline.push({\r\n            id: id,\r\n            label: label,\r\n          })\r\n        }\r\n      },\r\n      updateQuestions: function (start, end) {\r\n        let offset = end - start;\r\n        if (offset > 0) {\r\n          for (let i=0; i<offset; i++) {\r\n            this.down(start+i);\r\n          }\r\n        } else {\r\n          for (let i=0; i<offset*-1; i++) {\r\n            this.up(start-i);\r\n          }\r\n        }\r\n      },  // good\r\n      toFillQn: function (value) {\r\n        this.$router.push({\r\n          name: 'FillQn',\r\n          query: {\r\n            mode: value,\r\n            title: this.title,\r\n          }\r\n        });\r\n      },\r\n      InitOutline() {\r\n        for (var i = 0; i < this.questions.length; i++) {\r\n          this.outline.push({\r\n            id: this.questions[i].id,\r\n            label: (i+1) + \". \" + this.questions[i].title\r\n          })\r\n        }\r\n      },\r\n      copyToClip(message) {\r\n        var aux = document.createElement(\"input\");\r\n        aux.setAttribute(\"value\", this.linkShare);\r\n        document.body.appendChild(aux);\r\n        aux.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(aux);\r\n        if (message !== null) {\r\n          this.$message.success(\"复制成功\");\r\n        } else{\r\n          this.$message.error(\"复制失败\");\r\n        }\r\n      },\r\n      // 大纲拖拽处理函数(下3个)\r\n      handleDrop(draggingNode, dropNode, dropType) {\r\n        console.log('tree drop: ', draggingNode.key, dropNode.key, dropType);\r\n        if (this.isRightRelation(draggingNode.key, dropNode.key)) {\r\n          this.updateQuestions(draggingNode.key, dropNode.key);\r\n        } else {\r\n          this.outline.splice(0, this.outline.length);\r\n          this.InitOutline();\r\n          this.$message.error(\"拒绝移动！（试图将关联问题移至被关联问题上方，请检查您的关联逻辑）\");\r\n        }\r\n      },\r\n      allowDrop(draggingNode, dropNode, type) {\r\n        if (draggingNode.key > dropNode.key) {\r\n          return type === 'prev';\r\n        } else  {\r\n          return type==='next';\r\n        }\r\n      },\r\n      isRightRelation: function (index1, index2) {\r\n        console.log(index1, index2);\r\n        index1--;\r\n        index2--;\r\n        let questions=this.questions;\r\n        if (index1 < index2) {\r\n          for (let i=index1+1; i<=index2; i++) {\r\n            if (questions[i].last_question === index1+1) {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        } else {\r\n          for (let i=index1-1; i>=index2; i--) {\r\n            if (questions[index1].last_question === i+1) {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n      },\r\n      idTitle: function (item) {\r\n        if (item.id === 0) {\r\n          return item.title;\r\n        } else {\r\n          return item.id + \". \" + item.title;\r\n        }\r\n      },\r\n      relatedQs: function (item) {\r\n        return \"关联问题：\" + this.questions[item.last_question-1].id + \".\" + this.questions[item.last_question-1].title + \"(\" + this.questions[item.last_question-1].options[item.last_option-1].title + \")\";\r\n      },\r\n      // 遍历得爸爸\r\n      fatherIndex: function (qs_id) {\r\n        for (let i=0; i<this.questions.length; i++) {\r\n          if (this.questions[i].question_id === qs_id) {\r\n            return i;\r\n          }\r\n        }\r\n      },\r\n      // 遍历得儿子\r\n      sonGroup: function (index) {\r\n        let arr = [];\r\n        for (let i=0; i<this.questions.length; i++) {\r\n          if (this.questions[i].last_question === this.questions[index].id) {\r\n            arr.push(this.questions[i]);\r\n          }\r\n        }\r\n        return arr;\r\n      },\r\n      // 连带删除关联信息\r\n      del_relation: function (index) {\r\n        for (let i=0; i<this.questions.length; i++) {\r\n          // 保存加入后,下面需修改id为question_id\r\n          if (this.questions[i].last_question === this.questions[index-1].id) {\r\n            this.questions[i].last_option = 0;\r\n            this.questions[i].last_question = 0;\r\n            this.questions[i].is_shown = true;\r\n          }\r\n        }\r\n      },\r\n      // 关联信息存在性判断\r\n      isExistRelation: function () {\r\n        for (let i=0; i<this.questions.length; i++) {\r\n          if (this.questions[i].last_question !== 0) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n      // 监听：全局删除关联信息\r\n      closeGlobalLogic: function(state) {\r\n        if(!state && this.isExistRelation()) {\r\n          this.$confirm('检测到您已为题目添加关联，关闭设置将会删除所有关联信息，是否继续？', '提示', {\r\n            confirmButtonText: '确认',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            this.deleteGlobalRelation();\r\n            this.$message.info(\"关联信息已全部删除\");\r\n          }).catch(() => {\r\n            this.isLogic = true;\r\n            this.$message.info(\"取消操作\");\r\n          });\r\n        }\r\n      },\r\n      // 删除全局关联信息\r\n      deleteGlobalRelation: function () {\r\n        for (let i=0; i<this.questions.length; i++) {\r\n          this.questions[i].last_question = 0;\r\n          this.questions[i].last_option = 0;\r\n          this.questions[i].is_shown = true;\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      questionsFilter: function () {\r\n        let questions = this.questions;\r\n        let arr = [{\r\n          question_id: 0,\r\n          id: 0,\r\n          type: '',\r\n          title: '不设置关联题目',\r\n          must: false, // 是否必填\r\n          is_shown: true,   // 是否显示\r\n          last_question: 0,   // 前导问题\r\n          last_option: 0,     // 前导选项\r\n          description: '', // 问题描述\r\n          options:[\r\n            {\r\n              title: '', // 选项标题\r\n              id: 0 // 选项id\r\n            }\r\n          ],\r\n          row: 1, // 填空区域行数\r\n          score: 5, // 最大评分\r\n        }];\r\n        for (let i=0; i<this.logicIndex; i++) {\r\n          if (questions[i].type === \"radio\" || questions[i].type === \"checkbox\") {\r\n            arr.push(questions[i]);\r\n          }\r\n        }\r\n        return arr;\r\n      },\r\n    },\r\n    created() {\r\n      this.getQnDataSelf();\r\n    },\r\n    mounted() {\r\n      this.timer = setInterval(this.autoSave, 60000);\r\n    },\r\n    beforeDestroy() {\r\n      clearInterval(this.timer);\r\n    },\r\n    watch:{\r\n      hasRecycleLimit:\"recycleLimit\",\r\n    },\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .form .linkDialog{\r\n    text-align: left;\r\n  }\r\n  .form .container {\r\n    padding: 0;\r\n    height: auto;\r\n    min-height: 610px;\r\n  }\r\n  \r\n  .form header {\r\n    padding: 0 100px;\r\n  }\r\n  \r\n  .form .el-container {\r\n    padding: 0 100px;\r\n  }\r\n  \r\n  .form .side {\r\n    border-top: solid 1px #e3e3e3;\r\n    border-right: solid 1px #e3e3e3;\r\n    background: #FFFFFF;\r\n  }\r\n  \r\n  .form .main {\r\n    border-top: solid 1px #e3e3e3;\r\n    background: #FFFFFF;\r\n  }\r\n  \r\n  .form .edit {\r\n    margin-top: 0;\r\n    overflow: auto;\r\n    height: 550px;\r\n  }\r\n  \r\n  .form .outline {\r\n    overflow: auto;\r\n    height: 550px;\r\n  }\r\n  \r\n  .form .ques-type {\r\n    padding: 15px 0;\r\n    font-size: 16px;\r\n    border-bottom: dashed #e3e3e3 1px;\r\n  }\r\n  \r\n  .form .type-icon {\r\n    color: #1687fd;\r\n    display: inline-block;\r\n  }\r\n  \r\n  .form .type-icon:hover {\r\n    color: #409EFF;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .form .el-tabs__nav-scroll {\r\n    text-align: center;\r\n    height: 60px;\r\n    margin: 0 60px;\r\n  }\r\n  \r\n  .form .el-tabs__item {\r\n    font-weight: bold;\r\n    padding: 0 20px;\r\n    height: 60px;\r\n    box-sizing: border-box;\r\n    line-height: 60px;\r\n    display: inline-block;\r\n    list-style: none;\r\n    font-size: 16px;\r\n    color: black;\r\n    position: relative;\r\n  }\r\n  \r\n  .form .el-tabs__header {\r\n    margin: 0;\r\n  }\r\n  \r\n  .form .el-tree-node__content {\r\n    padding-left: 10px !important;\r\n    height: 40px;\r\n  }\r\n  \r\n  .form .main {\r\n    max-height: 610px;\r\n  }\r\n  \r\n  .form .ques .title {\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    padding-top: 10px;\r\n    padding-bottom: 26px;\r\n  }\r\n  \r\n  .form .ques .description {\r\n    text-align: left;\r\n    font-size: 18px;\r\n    padding-bottom: 30px;\r\n    color: black;\r\n    line-height: 30px;\r\n  }\r\n  \r\n  .form .ques-block {\r\n    padding-bottom: 15px;\r\n    border-top: solid #e3e3e3 1px;\r\n  }\r\n  \r\n  .form .ques-block:hover {\r\n    background: #f5f5f5;\r\n    transition: .3s;\r\n  }\r\n  \r\n  .form .ques-block .must {\r\n    font-weight: normal;\r\n    color: crimson;\r\n  }\r\n  \r\n  .form .block-title {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 20px 10px 10px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .form .block-description {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 5px;\r\n    padding-bottom: 15px;\r\n    padding-left: 10px;\r\n    color: #969696;\r\n  }\r\n  \r\n  .form .block-choice {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 5px 10px 10px;\r\n  }\r\n  \r\n  .form .el-button-group>.el-button:first-child {\r\n    border-radius: 0 0 0 8px;\r\n  }\r\n  \r\n  .form .el-button-group>.el-button:last-child {\r\n    border-radius: 0 0 8px 0;\r\n  }\r\n  \r\n  .form .block-button .el-button {\r\n    background: #b9b9b9;\r\n    border: transparent;\r\n  }\r\n  \r\n  .form .block-button .el-button:hover {\r\n    background: #989898;\r\n    border: transparent;\r\n  }\r\n  \r\n  .form .bt {\r\n    color: white;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .form .block-choice .el-textarea__inner {\r\n    max-height: 100px;\r\n  }\r\n  \r\n  .form .dialog{\r\n    text-align: left;\r\n    font-size: large;\r\n  }\r\n  .form .addOptionButton{\r\n    display: inline-block;\r\n    margin-left: 100px;\r\n  }\r\n  .form .deleteOptionButton{\r\n    margin-left: 20px;\r\n  }\r\n  .form .logic-description {\r\n    margin-top: -15px;\r\n    margin-bottom: 30px;\r\n    text-align: left;\r\n    padding-left: 6px;\r\n    font-size: 14px;\r\n    color: #aaaaaa;\r\n  }\r\n  \r\n  .form .important {\r\n    color: crimson;\r\n  }\r\n  \r\n  .form .logic-title {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    padding-left: 12px;\r\n    padding-bottom: 30px;\r\n  }\r\n  \r\n  .form .logic-bt {\r\n    text-align: center;\r\n  }\r\n  \r\n  .form .logic-form .el-input--suffix .el-input__inner {\r\n    width: 620px;\r\n  }\r\n  \r\n  .form .sideTitle{\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 10px;\r\n    margin-top: 20px;\r\n  }\r\n  .form .easyChoose{\r\n    font-size: medium;\r\n    margin-top: 10px;\r\n  }\r\n  .form .chooseLabel{\r\n    margin-right: 10px;\r\n    margin-left: 5px;\r\n  }\r\n  \r\n  .form .setting-item {\r\n    text-align: left;\r\n  }\r\n  \r\n  .form .setting-bt {\r\n    margin-top: 28px;\r\n  }\r\n  \r\n  .form .settingDialog .el-dialog__header {\r\n    text-align: left;\r\n  }\r\n  \r\n  .form .settingDialog .item-title {\r\n    padding-right: 20px;\r\n  }\r\n  \r\n  .form .logic-info {\r\n    color: #aaaaaa;\r\n    padding-top: 2px;\r\n    padding-left: 12px;\r\n    padding-bottom: 25px;\r\n  }\r\n  \r\n  .form .block-relation {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #1687fd;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}