{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport * as echarts from 'echarts/lib/echarts';\nimport ZRTextureAtlasSurface from '../../util/ZRTextureAtlasSurface';\nimport LabelsMesh from '../../util/mesh/LabelsMesh';\nimport retrieve from '../../util/retrieve';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nimport { createTextStyle } from 'echarts/lib/label/labelStyle';\nvar LABEL_NORMAL_SHOW_BIT = 1;\nvar LABEL_EMPHASIS_SHOW_BIT = 2;\nfunction LabelsBuilder(width, height, api) {\n  this._labelsMesh = new LabelsMesh();\n  this._labelTextureSurface = new ZRTextureAtlasSurface({\n    width: 512,\n    height: 512,\n    devicePixelRatio: api.getDevicePixelRatio(),\n    onupdate: function () {\n      api.getZr().refresh();\n    }\n  });\n  this._api = api;\n  this._labelsMesh.material.set('textureAtlas', this._labelTextureSurface.getTexture());\n}\nLabelsBuilder.prototype.getLabelPosition = function (dataIndex, positionDesc, distance) {\n  return [0, 0, 0];\n};\nLabelsBuilder.prototype.getLabelDistance = function (dataIndex, positionDesc, distance) {\n  return 0;\n};\nLabelsBuilder.prototype.getMesh = function () {\n  return this._labelsMesh;\n};\nLabelsBuilder.prototype.updateData = function (data, start, end) {\n  if (start == null) {\n    start = 0;\n  }\n  if (end == null) {\n    end = data.count();\n  }\n  if (!this._labelsVisibilitiesBits || this._labelsVisibilitiesBits.length !== end - start) {\n    this._labelsVisibilitiesBits = new Uint8Array(end - start);\n  }\n  var normalLabelVisibilityQuery = ['label', 'show'];\n  var emphasisLabelVisibilityQuery = ['emphasis', 'label', 'show'];\n  for (var idx = start; idx < end; idx++) {\n    var itemModel = data.getItemModel(idx);\n    var normalVisibility = itemModel.get(normalLabelVisibilityQuery);\n    var emphasisVisibility = itemModel.get(emphasisLabelVisibilityQuery);\n    if (emphasisVisibility == null) {\n      emphasisVisibility = normalVisibility;\n    }\n    var bit = (normalVisibility ? LABEL_NORMAL_SHOW_BIT : 0) | (emphasisVisibility ? LABEL_EMPHASIS_SHOW_BIT : 0);\n    this._labelsVisibilitiesBits[idx - start] = bit;\n  }\n  this._start = start;\n  this._end = end;\n  this._data = data;\n};\nLabelsBuilder.prototype.updateLabels = function (highlightDataIndices) {\n  if (!this._data) {\n    return;\n  }\n  highlightDataIndices = highlightDataIndices || [];\n  var hasHighlightData = highlightDataIndices.length > 0;\n  var highlightDataIndicesMap = {};\n  for (var i = 0; i < highlightDataIndices.length; i++) {\n    highlightDataIndicesMap[highlightDataIndices[i]] = true;\n  }\n  this._labelsMesh.geometry.convertToDynamicArray(true);\n  this._labelTextureSurface.clear();\n  var normalLabelQuery = ['label'];\n  var emphasisLabelQuery = ['emphasis', 'label'];\n  var seriesModel = this._data.hostModel;\n  var data = this._data;\n  var seriesLabelModel = seriesModel.getModel(normalLabelQuery);\n  var seriesLabelEmphasisModel = seriesModel.getModel(emphasisLabelQuery, seriesLabelModel);\n  var textAlignMap = {\n    left: 'right',\n    right: 'left',\n    top: 'center',\n    bottom: 'center'\n  };\n  var textVerticalAlignMap = {\n    left: 'middle',\n    right: 'middle',\n    top: 'bottom',\n    bottom: 'top'\n  };\n  for (var dataIndex = this._start; dataIndex < this._end; dataIndex++) {\n    var isEmphasis = false;\n    if (hasHighlightData && highlightDataIndicesMap[dataIndex]) {\n      isEmphasis = true;\n    }\n    var ifShow = this._labelsVisibilitiesBits[dataIndex - this._start] & (isEmphasis ? LABEL_EMPHASIS_SHOW_BIT : LABEL_NORMAL_SHOW_BIT);\n    if (!ifShow) {\n      continue;\n    }\n    var itemModel = data.getItemModel(dataIndex);\n    var labelModel = itemModel.getModel(isEmphasis ? emphasisLabelQuery : normalLabelQuery, isEmphasis ? seriesLabelEmphasisModel : seriesLabelModel);\n    var distance = labelModel.get('distance') || 0;\n    var position = labelModel.get('position');\n    var dpr = this._api.getDevicePixelRatio();\n    var text = seriesModel.getFormattedLabel(dataIndex, isEmphasis ? 'emphasis' : 'normal');\n    if (text == null || text === '') {\n      return;\n    } // TODO Background.\n\n    var textEl = new echarts.graphic.Text({\n      style: createTextStyle(labelModel, {\n        text: text,\n        fill: labelModel.get('color') || getItemVisualColor(data, dataIndex) || '#000',\n        align: 'left',\n        verticalAlign: 'top',\n        opacity: retrieve.firstNotNull(labelModel.get('opacity'), getItemVisualOpacity(data, dataIndex), 1)\n      })\n    });\n    var rect = textEl.getBoundingRect();\n    var lineHeight = 1.2;\n    rect.height *= lineHeight;\n    var coords = this._labelTextureSurface.add(textEl);\n    var textAlign = textAlignMap[position] || 'center';\n    var textVerticalAlign = textVerticalAlignMap[position] || 'bottom';\n    this._labelsMesh.geometry.addSprite(this.getLabelPosition(dataIndex, position, distance), [rect.width * dpr, rect.height * dpr], coords, textAlign, textVerticalAlign, this.getLabelDistance(dataIndex, position, distance) * dpr);\n  }\n  this._labelsMesh.material.set('uvScale', this._labelTextureSurface.getCoordsScale()); // var canvas = this._labelTextureSurface.getTexture().image;\n  // document.body.appendChild(canvas);\n  // canvas.style.cssText = 'position:absolute;z-index: 1000';\n  // Update image.\n\n  this._labelTextureSurface.getZr().refreshImmediately();\n  this._labelsMesh.geometry.convertToTypedArray();\n  this._labelsMesh.geometry.dirty();\n};\nLabelsBuilder.prototype.dispose = function () {\n  this._labelTextureSurface.dispose();\n};\nexport default LabelsBuilder;","map":{"version":3,"names":["echarts","ZRTextureAtlasSurface","LabelsMesh","retrieve","getItemVisualColor","getItemVisualOpacity","createTextStyle","LABEL_NORMAL_SHOW_BIT","LABEL_EMPHASIS_SHOW_BIT","LabelsBuilder","width","height","api","_labelsMesh","_labelTextureSurface","devicePixelRatio","getDevicePixelRatio","onupdate","getZr","refresh","_api","material","set","getTexture","prototype","getLabelPosition","dataIndex","positionDesc","distance","getLabelDistance","getMesh","updateData","data","start","end","count","_labelsVisibilitiesBits","length","Uint8Array","normalLabelVisibilityQuery","emphasisLabelVisibilityQuery","idx","itemModel","getItemModel","normalVisibility","get","emphasisVisibility","bit","_start","_end","_data","updateLabels","highlightDataIndices","hasHighlightData","highlightDataIndicesMap","i","geometry","convertToDynamicArray","clear","normalLabelQuery","emphasisLabelQuery","seriesModel","hostModel","seriesLabelModel","getModel","seriesLabelEmphasisModel","textAlignMap","left","right","top","bottom","textVerticalAlignMap","isEmphasis","ifShow","labelModel","position","dpr","text","getFormattedLabel","textEl","graphic","Text","style","fill","align","verticalAlign","opacity","firstNotNull","rect","getBoundingRect","lineHeight","coords","add","textAlign","textVerticalAlign","addSprite","getCoordsScale","refreshImmediately","convertToTypedArray","dirty","dispose"],"sources":["E:/mytest/node_modules/echarts-gl/lib/component/common/LabelsBuilder.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport ZRTextureAtlasSurface from '../../util/ZRTextureAtlasSurface';\nimport LabelsMesh from '../../util/mesh/LabelsMesh';\nimport retrieve from '../../util/retrieve';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nimport { createTextStyle } from 'echarts/lib/label/labelStyle';\nvar LABEL_NORMAL_SHOW_BIT = 1;\nvar LABEL_EMPHASIS_SHOW_BIT = 2;\n\nfunction LabelsBuilder(width, height, api) {\n  this._labelsMesh = new LabelsMesh();\n  this._labelTextureSurface = new ZRTextureAtlasSurface({\n    width: 512,\n    height: 512,\n    devicePixelRatio: api.getDevicePixelRatio(),\n    onupdate: function () {\n      api.getZr().refresh();\n    }\n  });\n  this._api = api;\n\n  this._labelsMesh.material.set('textureAtlas', this._labelTextureSurface.getTexture());\n}\n\nLabelsBuilder.prototype.getLabelPosition = function (dataIndex, positionDesc, distance) {\n  return [0, 0, 0];\n};\n\nLabelsBuilder.prototype.getLabelDistance = function (dataIndex, positionDesc, distance) {\n  return 0;\n};\n\nLabelsBuilder.prototype.getMesh = function () {\n  return this._labelsMesh;\n};\n\nLabelsBuilder.prototype.updateData = function (data, start, end) {\n  if (start == null) {\n    start = 0;\n  }\n\n  if (end == null) {\n    end = data.count();\n  }\n\n  if (!this._labelsVisibilitiesBits || this._labelsVisibilitiesBits.length !== end - start) {\n    this._labelsVisibilitiesBits = new Uint8Array(end - start);\n  }\n\n  var normalLabelVisibilityQuery = ['label', 'show'];\n  var emphasisLabelVisibilityQuery = ['emphasis', 'label', 'show'];\n\n  for (var idx = start; idx < end; idx++) {\n    var itemModel = data.getItemModel(idx);\n    var normalVisibility = itemModel.get(normalLabelVisibilityQuery);\n    var emphasisVisibility = itemModel.get(emphasisLabelVisibilityQuery);\n\n    if (emphasisVisibility == null) {\n      emphasisVisibility = normalVisibility;\n    }\n\n    var bit = (normalVisibility ? LABEL_NORMAL_SHOW_BIT : 0) | (emphasisVisibility ? LABEL_EMPHASIS_SHOW_BIT : 0);\n    this._labelsVisibilitiesBits[idx - start] = bit;\n  }\n\n  this._start = start;\n  this._end = end;\n  this._data = data;\n};\n\nLabelsBuilder.prototype.updateLabels = function (highlightDataIndices) {\n  if (!this._data) {\n    return;\n  }\n\n  highlightDataIndices = highlightDataIndices || [];\n  var hasHighlightData = highlightDataIndices.length > 0;\n  var highlightDataIndicesMap = {};\n\n  for (var i = 0; i < highlightDataIndices.length; i++) {\n    highlightDataIndicesMap[highlightDataIndices[i]] = true;\n  }\n\n  this._labelsMesh.geometry.convertToDynamicArray(true);\n\n  this._labelTextureSurface.clear();\n\n  var normalLabelQuery = ['label'];\n  var emphasisLabelQuery = ['emphasis', 'label'];\n  var seriesModel = this._data.hostModel;\n  var data = this._data;\n  var seriesLabelModel = seriesModel.getModel(normalLabelQuery);\n  var seriesLabelEmphasisModel = seriesModel.getModel(emphasisLabelQuery, seriesLabelModel);\n  var textAlignMap = {\n    left: 'right',\n    right: 'left',\n    top: 'center',\n    bottom: 'center'\n  };\n  var textVerticalAlignMap = {\n    left: 'middle',\n    right: 'middle',\n    top: 'bottom',\n    bottom: 'top'\n  };\n\n  for (var dataIndex = this._start; dataIndex < this._end; dataIndex++) {\n    var isEmphasis = false;\n\n    if (hasHighlightData && highlightDataIndicesMap[dataIndex]) {\n      isEmphasis = true;\n    }\n\n    var ifShow = this._labelsVisibilitiesBits[dataIndex - this._start] & (isEmphasis ? LABEL_EMPHASIS_SHOW_BIT : LABEL_NORMAL_SHOW_BIT);\n\n    if (!ifShow) {\n      continue;\n    }\n\n    var itemModel = data.getItemModel(dataIndex);\n    var labelModel = itemModel.getModel(isEmphasis ? emphasisLabelQuery : normalLabelQuery, isEmphasis ? seriesLabelEmphasisModel : seriesLabelModel);\n    var distance = labelModel.get('distance') || 0;\n    var position = labelModel.get('position');\n\n    var dpr = this._api.getDevicePixelRatio();\n\n    var text = seriesModel.getFormattedLabel(dataIndex, isEmphasis ? 'emphasis' : 'normal');\n\n    if (text == null || text === '') {\n      return;\n    } // TODO Background.\n\n\n    var textEl = new echarts.graphic.Text({\n      style: createTextStyle(labelModel, {\n        text: text,\n        fill: labelModel.get('color') || getItemVisualColor(data, dataIndex) || '#000',\n        align: 'left',\n        verticalAlign: 'top',\n        opacity: retrieve.firstNotNull(labelModel.get('opacity'), getItemVisualOpacity(data, dataIndex), 1)\n      })\n    });\n    var rect = textEl.getBoundingRect();\n    var lineHeight = 1.2;\n    rect.height *= lineHeight;\n\n    var coords = this._labelTextureSurface.add(textEl);\n\n    var textAlign = textAlignMap[position] || 'center';\n    var textVerticalAlign = textVerticalAlignMap[position] || 'bottom';\n\n    this._labelsMesh.geometry.addSprite(this.getLabelPosition(dataIndex, position, distance), [rect.width * dpr, rect.height * dpr], coords, textAlign, textVerticalAlign, this.getLabelDistance(dataIndex, position, distance) * dpr);\n  }\n\n  this._labelsMesh.material.set('uvScale', this._labelTextureSurface.getCoordsScale()); // var canvas = this._labelTextureSurface.getTexture().image;\n  // document.body.appendChild(canvas);\n  // canvas.style.cssText = 'position:absolute;z-index: 1000';\n  // Update image.\n\n\n  this._labelTextureSurface.getZr().refreshImmediately();\n\n  this._labelsMesh.geometry.convertToTypedArray();\n\n  this._labelsMesh.geometry.dirty();\n};\n\nLabelsBuilder.prototype.dispose = function () {\n  this._labelTextureSurface.dispose();\n};\n\nexport default LabelsBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}