{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nimport formatUtil from '../../util/format';\nimport formatTooltip from '../common/formatTooltip';\nimport createList from '../common/createList';\nexport default echarts.SeriesModel.extend({\n  type: 'series.scatter3D',\n  dependencies: ['globe', 'grid3D', 'geo3D'],\n  visualStyleAccessPath: 'itemStyle',\n  hasSymbolVisual: true,\n  getInitialData: function (option, ecModel) {\n    return createList(this);\n  },\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n    var text = formatUtil.getFormattedLabel(this, dataIndex, status, dataType, dimIndex);\n    if (text == null) {\n      var data = this.getData();\n      var lastDim = data.dimensions[data.dimensions.length - 1];\n      text = data.get(lastDim, dataIndex);\n    }\n    return text;\n  },\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian3D',\n    zlevel: -10,\n    progressive: 1e5,\n    progressiveThreshold: 1e5,\n    // Cartesian coordinate system\n    grid3DIndex: 0,\n    globeIndex: 0,\n    symbol: 'circle',\n    symbolSize: 10,\n    // Support source-over, lighter\n    blendMode: 'source-over',\n    label: {\n      show: false,\n      position: 'right',\n      // Screen space distance\n      distance: 5,\n      textStyle: {\n        fontSize: 14,\n        color: '#000',\n        backgroundColor: 'rgba(255,255,255,0.7)',\n        padding: 3,\n        borderRadius: 3\n      }\n    },\n    itemStyle: {\n      opacity: 0.8\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    },\n    animationDurationUpdate: 500\n  }\n});","map":{"version":3,"names":["echarts","formatUtil","formatTooltip","createList","SeriesModel","extend","type","dependencies","visualStyleAccessPath","hasSymbolVisual","getInitialData","option","ecModel","getFormattedLabel","dataIndex","status","dataType","dimIndex","text","data","getData","lastDim","dimensions","length","get","defaultOption","coordinateSystem","zlevel","progressive","progressiveThreshold","grid3DIndex","globeIndex","symbol","symbolSize","blendMode","label","show","position","distance","textStyle","fontSize","color","backgroundColor","padding","borderRadius","itemStyle","opacity","emphasis","animationDurationUpdate"],"sources":["E:/mytest/node_modules/echarts-gl/lib/chart/scatter3D/Scatter3DSeries.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nimport formatUtil from '../../util/format';\nimport formatTooltip from '../common/formatTooltip';\nimport createList from '../common/createList';\nexport default echarts.SeriesModel.extend({\n  type: 'series.scatter3D',\n  dependencies: ['globe', 'grid3D', 'geo3D'],\n  visualStyleAccessPath: 'itemStyle',\n  hasSymbolVisual: true,\n  getInitialData: function (option, ecModel) {\n    return createList(this);\n  },\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n    var text = formatUtil.getFormattedLabel(this, dataIndex, status, dataType, dimIndex);\n\n    if (text == null) {\n      var data = this.getData();\n      var lastDim = data.dimensions[data.dimensions.length - 1];\n      text = data.get(lastDim, dataIndex);\n    }\n\n    return text;\n  },\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian3D',\n    zlevel: -10,\n    progressive: 1e5,\n    progressiveThreshold: 1e5,\n    // Cartesian coordinate system\n    grid3DIndex: 0,\n    globeIndex: 0,\n    symbol: 'circle',\n    symbolSize: 10,\n    // Support source-over, lighter\n    blendMode: 'source-over',\n    label: {\n      show: false,\n      position: 'right',\n      // Screen space distance\n      distance: 5,\n      textStyle: {\n        fontSize: 14,\n        color: '#000',\n        backgroundColor: 'rgba(255,255,255,0.7)',\n        padding: 3,\n        borderRadius: 3\n      }\n    },\n    itemStyle: {\n      opacity: 0.8\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    },\n    animationDurationUpdate: 500\n  }\n});"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,qBAAqB;AAC9C,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,eAAeH,OAAO,CAACI,WAAW,CAACC,MAAM,CAAC;EACxCC,IAAI,EAAE,kBAAkB;EACxBC,YAAY,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;EAC1CC,qBAAqB,EAAE,WAAW;EAClCC,eAAe,EAAE,IAAI;EACrBC,cAAc,EAAE,SAAAA,CAAUC,MAAM,EAAEC,OAAO,EAAE;IACzC,OAAOT,UAAU,CAAC,IAAI,CAAC;EACzB,CAAC;EACDU,iBAAiB,EAAE,SAAAA,CAAUC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAClE,IAAIC,IAAI,GAAGjB,UAAU,CAACY,iBAAiB,CAAC,IAAI,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;IAEpF,IAAIC,IAAI,IAAI,IAAI,EAAE;MAChB,IAAIC,IAAI,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC;MACzB,IAAIC,OAAO,GAAGF,IAAI,CAACG,UAAU,CAACH,IAAI,CAACG,UAAU,CAACC,MAAM,GAAG,CAAC,CAAC;MACzDL,IAAI,GAAGC,IAAI,CAACK,GAAG,CAACH,OAAO,EAAEP,SAAS,CAAC;IACrC;IAEA,OAAOI,IAAI;EACb,CAAC;EACDhB,aAAa,EAAE,SAAAA,CAAUY,SAAS,EAAE;IAClC,OAAOZ,aAAa,CAAC,IAAI,EAAEY,SAAS,CAAC;EACvC,CAAC;EACDW,aAAa,EAAE;IACbC,gBAAgB,EAAE,aAAa;IAC/BC,MAAM,EAAE,CAAC,EAAE;IACXC,WAAW,EAAE,GAAG;IAChBC,oBAAoB,EAAE,GAAG;IACzB;IACAC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE,CAAC;IACbC,MAAM,EAAE,QAAQ;IAChBC,UAAU,EAAE,EAAE;IACd;IACAC,SAAS,EAAE,aAAa;IACxBC,KAAK,EAAE;MACLC,IAAI,EAAE,KAAK;MACXC,QAAQ,EAAE,OAAO;MACjB;MACAC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,MAAM;QACbC,eAAe,EAAE,uBAAuB;QACxCC,OAAO,EAAE,CAAC;QACVC,YAAY,EAAE;MAChB;IACF,CAAC;IACDC,SAAS,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;IACDC,QAAQ,EAAE;MACRZ,KAAK,EAAE;QACLC,IAAI,EAAE;MACR;IACF,CAAC;IACDY,uBAAuB,EAAE;EAC3B;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}