{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/**\n * Lines geometry\n * Use screen space projected lines lineWidth > MAX_LINE_WIDTH\n * https://mattdesl.svbtle.com/drawing-lines-is-hard\n * @module echarts-gl/util/geometry/LinesGeometry\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\n/**\n * @constructor\n * @alias module:echarts-gl/chart/flowGL/Line2D\n * @extends clay.Geometry\n */\n\nvar LinesGeometry = Geometry.extend(function () {\n  return {\n    dynamic: true,\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION')\n    }\n  };\n}, /** @lends module: echarts-gl/util/geometry/LinesGeometry.prototype */\n{\n  /**\n   * Reset offset\n   */\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._faceOffset = 0;\n  },\n  /**\n   * @param {number} nVertex\n   */\n  setLineCount: function (nLine) {\n    var attributes = this.attributes;\n    var nVertex = 4 * nLine;\n    var nTriangle = 2 * nLine;\n    if (this.vertexCount !== nVertex) {\n      attributes.position.init(nVertex);\n    }\n    if (this.triangleCount !== nTriangle) {\n      if (nTriangle === 0) {\n        this.indices = null;\n      } else {\n        this.indices = this.vertexCount > 0xffff ? new Uint32Array(nTriangle * 3) : new Uint16Array(nTriangle * 3);\n      }\n    }\n  },\n  addLine: function (p) {\n    var vertexOffset = this._vertexOffset;\n    this.attributes.position.set(vertexOffset, [p[0], p[1], 1]);\n    this.attributes.position.set(vertexOffset + 1, [p[0], p[1], -1]);\n    this.attributes.position.set(vertexOffset + 2, [p[0], p[1], 2]);\n    this.attributes.position.set(vertexOffset + 3, [p[0], p[1], -2]);\n    this.setTriangleIndices(this._faceOffset++, [vertexOffset, vertexOffset + 1, vertexOffset + 2]);\n    this.setTriangleIndices(this._faceOffset++, [vertexOffset + 1, vertexOffset + 2, vertexOffset + 3]);\n    this._vertexOffset += 4;\n  }\n});\nexport default LinesGeometry;","map":{"version":3,"names":["Geometry","echarts","LinesGeometry","extend","dynamic","attributes","position","Attribute","resetOffset","_vertexOffset","_faceOffset","setLineCount","nLine","nVertex","nTriangle","vertexCount","init","triangleCount","indices","Uint32Array","Uint16Array","addLine","p","vertexOffset","set","setTriangleIndices"],"sources":["E:/mytest/node_modules/echarts-gl/lib/chart/flowGL/Line2D.js"],"sourcesContent":["/**\n * Lines geometry\n * Use screen space projected lines lineWidth > MAX_LINE_WIDTH\n * https://mattdesl.svbtle.com/drawing-lines-is-hard\n * @module echarts-gl/util/geometry/LinesGeometry\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\n/**\n * @constructor\n * @alias module:echarts-gl/chart/flowGL/Line2D\n * @extends clay.Geometry\n */\n\nvar LinesGeometry = Geometry.extend(function () {\n  return {\n    dynamic: true,\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION')\n    }\n  };\n},\n/** @lends module: echarts-gl/util/geometry/LinesGeometry.prototype */\n{\n  /**\n   * Reset offset\n   */\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._faceOffset = 0;\n  },\n\n  /**\n   * @param {number} nVertex\n   */\n  setLineCount: function (nLine) {\n    var attributes = this.attributes;\n    var nVertex = 4 * nLine;\n    var nTriangle = 2 * nLine;\n\n    if (this.vertexCount !== nVertex) {\n      attributes.position.init(nVertex);\n    }\n\n    if (this.triangleCount !== nTriangle) {\n      if (nTriangle === 0) {\n        this.indices = null;\n      } else {\n        this.indices = this.vertexCount > 0xffff ? new Uint32Array(nTriangle * 3) : new Uint16Array(nTriangle * 3);\n      }\n    }\n  },\n  addLine: function (p) {\n    var vertexOffset = this._vertexOffset;\n    this.attributes.position.set(vertexOffset, [p[0], p[1], 1]);\n    this.attributes.position.set(vertexOffset + 1, [p[0], p[1], -1]);\n    this.attributes.position.set(vertexOffset + 2, [p[0], p[1], 2]);\n    this.attributes.position.set(vertexOffset + 3, [p[0], p[1], -2]);\n    this.setTriangleIndices(this._faceOffset++, [vertexOffset, vertexOffset + 1, vertexOffset + 2]);\n    this.setTriangleIndices(this._faceOffset++, [vertexOffset + 1, vertexOffset + 2, vertexOffset + 3]);\n    this._vertexOffset += 4;\n  }\n});\nexport default LinesGeometry;"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,KAAKC,OAAO,MAAM,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa,GAAGF,QAAQ,CAACG,MAAM,CAAC,YAAY;EAC9C,OAAO;IACLC,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE;MACVC,QAAQ,EAAE,IAAIN,QAAQ,CAACO,SAAS,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU;IACrE;EACF,CAAC;AACH,CAAC,EACD;AACA;EACE;AACF;AACA;EACEC,WAAW,EAAE,SAAAA,CAAA,EAAY;IACvB,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,WAAW,GAAG,CAAC;EACtB,CAAC;EAED;AACF;AACA;EACEC,YAAY,EAAE,SAAAA,CAAUC,KAAK,EAAE;IAC7B,IAAIP,UAAU,GAAG,IAAI,CAACA,UAAU;IAChC,IAAIQ,OAAO,GAAG,CAAC,GAAGD,KAAK;IACvB,IAAIE,SAAS,GAAG,CAAC,GAAGF,KAAK;IAEzB,IAAI,IAAI,CAACG,WAAW,KAAKF,OAAO,EAAE;MAChCR,UAAU,CAACC,QAAQ,CAACU,IAAI,CAACH,OAAO,CAAC;IACnC;IAEA,IAAI,IAAI,CAACI,aAAa,KAAKH,SAAS,EAAE;MACpC,IAAIA,SAAS,KAAK,CAAC,EAAE;QACnB,IAAI,CAACI,OAAO,GAAG,IAAI;MACrB,CAAC,MAAM;QACL,IAAI,CAACA,OAAO,GAAG,IAAI,CAACH,WAAW,GAAG,MAAM,GAAG,IAAII,WAAW,CAACL,SAAS,GAAG,CAAC,CAAC,GAAG,IAAIM,WAAW,CAACN,SAAS,GAAG,CAAC,CAAC;MAC5G;IACF;EACF,CAAC;EACDO,OAAO,EAAE,SAAAA,CAAUC,CAAC,EAAE;IACpB,IAAIC,YAAY,GAAG,IAAI,CAACd,aAAa;IACrC,IAAI,CAACJ,UAAU,CAACC,QAAQ,CAACkB,GAAG,CAACD,YAAY,EAAE,CAACD,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3D,IAAI,CAACjB,UAAU,CAACC,QAAQ,CAACkB,GAAG,CAACD,YAAY,GAAG,CAAC,EAAE,CAACD,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChE,IAAI,CAACjB,UAAU,CAACC,QAAQ,CAACkB,GAAG,CAACD,YAAY,GAAG,CAAC,EAAE,CAACD,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/D,IAAI,CAACjB,UAAU,CAACC,QAAQ,CAACkB,GAAG,CAACD,YAAY,GAAG,CAAC,EAAE,CAACD,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChE,IAAI,CAACG,kBAAkB,CAAC,IAAI,CAACf,WAAW,EAAE,EAAE,CAACa,YAAY,EAAEA,YAAY,GAAG,CAAC,EAAEA,YAAY,GAAG,CAAC,CAAC,CAAC;IAC/F,IAAI,CAACE,kBAAkB,CAAC,IAAI,CAACf,WAAW,EAAE,EAAE,CAACa,YAAY,GAAG,CAAC,EAAEA,YAAY,GAAG,CAAC,EAAEA,YAAY,GAAG,CAAC,CAAC,CAAC;IACnG,IAAI,CAACd,aAAa,IAAI,CAAC;EACzB;AACF,CAAC,CAAC;AACF,eAAeP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}