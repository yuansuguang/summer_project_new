{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"qn-result\"\n};\nconst _hoisted_2 = {\n  class: \"paper\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"padding-top\": \"50px\",\n    \"padding-bottom\": \"6px\"\n  }\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"恭喜你完成测试！您的分数是\")], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"note\"\n}, \" 您的总分 / 满分 \", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"评阅结果与参考答案\")], -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"main\"\n};\nconst _hoisted_9 = {\n  class: \"q-title\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"must\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"point\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"q-description\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"q-opt\"\n};\nconst _hoisted_14 = {\n  key: 2\n};\nconst _hoisted_15 = {\n  key: 4,\n  class: \"q-opt\"\n};\nconst _hoisted_16 = {\n  key: 5,\n  class: \"tail-info\"\n};\nconst _hoisted_17 = {\n  class: \"tail-point\"\n};\nconst _hoisted_18 = {\n  key: 0\n};\nconst _hoisted_19 = {\n  key: 1\n};\nconst _hoisted_20 = {\n  key: 0,\n  class: \"tail-refer\"\n};\nconst _hoisted_21 = {\n  key: 0\n};\nconst _hoisted_22 = {\n  key: 1\n};\nconst _hoisted_23 = {\n  key: 2\n};\nconst _hoisted_24 = {\n  key: 3\n};\nconst _hoisted_25 = {\n  key: 4\n};\nconst _hoisted_26 = {\n  class: \"tail\"\n};\nconst _hoisted_27 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"span\", _hoisted_5, [_createElementVNode(\"h1\", null, _toDisplayString($data.actualScore) + \"/\" + _toDisplayString($data.totalScore), 1 /* TEXT */)])]), _hoisted_6, _createVNode(_component_el_divider), _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass({\n        'ques-block-info': $options.isInfo(item),\n        'ques-block-right': $options.isRight(item),\n        'ques-block-wrong': !$options.isRight(item)\n      }),\n      key: item.id\n    }, [_createElementVNode(\"div\", _hoisted_9, [_createTextVNode(_toDisplayString(item.id) + \". \" + _toDisplayString(item.title) + \" \", 1 /* TEXT */), item.must ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, \"(必填)\")) : _createCommentVNode(\"v-if\", true), !$options.isInfo(item) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, \"  [分值 : \" + _toDisplayString(item.point) + \"] \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), item.description !== '' && item.description !== null && item.description !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _toDisplayString(item.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"     姓名/学号/班级/学校\"), $options.isInfo(item) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createVNode(_component_el_input, {\n      placeholder: \"请输入内容\",\n      modelValue: $data.answers[item.id - 1].ans,\n      \"onUpdate:modelValue\": $event => $data.answers[item.id - 1].ans = $event,\n      disabled: true\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"              判断/单选\"), item.type === 'radio' || item.type === 'judge' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.options, opt => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"q-opt\",\n        key: opt.id\n      }, [_createVNode(_component_el_radio, {\n        modelValue: $data.answers[item.id - 1].ans,\n        \"onUpdate:modelValue\": $event => $data.answers[item.id - 1].ans = $event,\n        label: opt.title,\n        disabled: true\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(opt.title), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"label\"])]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  多选\"), item.type === 'checkbox' ? (_openBlock(), _createBlock(_component_el_checkbox_group, {\n      key: 3,\n      class: \"q-opt\",\n      modelValue: $data.answers[item.id - 1].ansList,\n      \"onUpdate:modelValue\": $event => $data.answers[item.id - 1].ansList = $event\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.options, opt => {\n        return _openBlock(), _createBlock(_component_el_checkbox, {\n          key: opt.id,\n          label: opt.title,\n          disabled: true\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(opt.title), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"                  填空\"), item.type === 'text' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createVNode(_component_el_input, {\n      type: \"textarea\",\n      autosize: {\n        minRows: 2,\n        maxRows: item.row\n      },\n      placeholder: \"请输入内容\",\n      modelValue: $data.answers[item.id - 1].ans,\n      \"onUpdate:modelValue\": $event => $data.answers[item.id - 1].ans = $event,\n      disabled: true\n    }, null, 8 /* PROPS */, [\"autosize\", \"modelValue\", \"onUpdate:modelValue\"])])) : _createCommentVNode(\"v-if\", true), !$options.isInfo(item) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [$data.answers[item.id - 1].correct ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, \"您的得分：\" + _toDisplayString(item.point), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, \"您的得分：0\"))]), item.refer !== null && item.refer !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [item.type === 'radio' || item.type === 'judge' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, \"您的答案：\" + _toDisplayString($data.answers[item.id - 1].ans), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), item.type === 'checkbox' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, \"您的答案：\" + _toDisplayString($data.answers[item.id - 1].ansList), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), item.type === 'text' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, \"您的答案：\" + _toDisplayString($data.answers[item.id - 1].ans), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), item.refer !== '' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, \"参考答案：\" + _toDisplayString(item.refer), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), item.refer === '' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, \"参考答案：无\")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"a\", {\n    href: $data.rootUrl\n  }, \"问卷星球\", 8 /* PROPS */, _hoisted_27), _createTextVNode(\" 提供技术支持 \")])])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$data","actualScore","totalScore","_hoisted_6","_createVNode","_component_el_divider","_hoisted_7","_hoisted_8","_Fragment","_renderList","questions","item","_normalizeClass","$options","isInfo","isRight","id","_hoisted_9","_createTextVNode","title","must","_hoisted_10","_createCommentVNode","_hoisted_11","point","description","undefined","_hoisted_12","_hoisted_13","_component_el_input","placeholder","modelValue","answers","ans","$event","disabled","type","_hoisted_14","options","opt","_component_el_radio","label","default","_withCtx","_","_createBlock","_component_el_checkbox_group","ansList","_component_el_checkbox","_hoisted_15","autosize","minRows","maxRows","row","_hoisted_16","_hoisted_17","correct","_hoisted_18","_hoisted_19","refer","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","href","rootUrl","_hoisted_27"],"sources":["E:\\mytest\\src\\views\\qn-fillpane\\FinishTest.vue"],"sourcesContent":["<template>\r\n    <div class=\"qn-result\">\r\n      <div class=\"paper\">\r\n        <div style=\"padding-top: 50px; padding-bottom: 6px\" >\r\n          <span><h1>恭喜你完成测试！您的分数是</h1></span>\r\n          <span style=\"color: red;\"><h1>{{ actualScore }}/{{ totalScore }}</h1>\r\n          </span>\r\n        </div>\r\n  \r\n        <div class=\"note\">\r\n          您的总分 / 满分\r\n        </div>\r\n  \r\n        <el-divider></el-divider>\r\n  \r\n        <div class=\"title\">\r\n          <h2>评阅结果与参考答案</h2>\r\n        </div>\r\n  \r\n        <div class=\"main\">\r\n          <div v-bind:class=\"{ 'ques-block-info' : isInfo(item) ,'ques-block-right': isRight(item), 'ques-block-wrong': !isRight(item) }\" v-for=\"item in questions\" :key=\"item.id\">\r\n  \r\n            <div class=\"q-title\">\r\n              {{ item.id }}. {{ item.title }}\r\n              <span class=\"must\" v-if=\"item.must\">(必填)</span>\r\n              <span class=\"point\" v-if=\"!isInfo(item)\">\r\n                &ensp;[分值 : {{ item.point }}]\r\n              </span>\r\n            </div>\r\n  \r\n            <div\r\n                class=\"q-description\"\r\n                v-if=\"item.description!=='' && item.description!==null && item.description!==undefined\"\r\n            >\r\n              {{ item.description }}\r\n            </div>\r\n  \r\n            <!--     姓名/学号/班级/学校-->\r\n            <div class=\"q-opt\" v-if=\"isInfo(item)\">\r\n              <el-input\r\n                  placeholder=\"请输入内容\"\r\n                  v-model=\"answers[item.id-1].ans\"\r\n                  :disabled=\"true\">\r\n              </el-input>\r\n            </div>\r\n  \r\n            <!--              判断/单选-->\r\n            <div v-if=\"item.type==='radio' || item.type === 'judge'\">\r\n              <div class=\"q-opt\" v-for=\"opt in item.options\" :key=\"opt.id\">\r\n                <el-radio v-model=\"answers[item.id-1].ans\" :label=\"opt.title\" :disabled=\"true\">\r\n                  {{ opt.title }}\r\n                </el-radio>\r\n              </div>\r\n            </div>\r\n  \r\n            <!--                  多选-->\r\n            <el-checkbox-group class=\"q-opt\" v-if=\"item.type==='checkbox'\" v-model=\"answers[item.id-1].ansList\">\r\n              <el-checkbox v-for=\"opt in item.options\" :key=\"opt.id\" :label=\"opt.title\" :disabled=\"true\">\r\n                {{ opt.title }}\r\n              </el-checkbox>\r\n            </el-checkbox-group>\r\n  \r\n            <!--                  填空-->\r\n            <div class=\"q-opt\" v-if=\"item.type==='text'\">\r\n              <el-input\r\n                  type=\"textarea\"\r\n                  :autosize=\"{ minRows: 2, maxRows: item.row}\"\r\n                  placeholder=\"请输入内容\"\r\n                  v-model=\"answers[item.id-1].ans\"\r\n                  :disabled=\"true\">\r\n              </el-input>\r\n            </div>\r\n  \r\n            <div v-if=\"!isInfo(item)\" class=\"tail-info\">\r\n              <div class=\"tail-point\">\r\n                <div v-if=\"answers[item.id-1].correct\">您的得分：{{ item.point }}</div>\r\n                <div v-else>您的得分：0</div>\r\n              </div>\r\n  \r\n              <div class=\"tail-refer\" v-if=\"item.refer!==null && item.refer!==undefined\">\r\n                <div v-if=\"item.type==='radio' || item.type==='judge'\">您的答案：{{ answers[item.id-1].ans }}</div>\r\n                <div v-if=\"item.type==='checkbox'\">您的答案：{{ answers[item.id-1].ansList }}</div>\r\n                <div v-if=\"item.type==='text'\">您的答案：{{ answers[item.id-1].ans }}</div>\r\n                <div v-if=\"item.refer!==''\">参考答案：{{ item.refer }}</div>\r\n                <div v-if=\"item.refer===''\">参考答案：无</div>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"tail\">\r\n          <a :href=\"rootUrl\">问卷星球</a>&ensp;提供技术支持\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import user from \"@/storage/user\";\r\n  \r\n  export default {\r\n    name: \"FinishTest\",\r\n    props: {\r\n      quesStorage: []\r\n    },\r\n    data(){\r\n      return{\r\n        rootUrl: this.GLOBAL.baseUrl,\r\n  \r\n        hoverColor:{\r\n          \"--hcolor\":\"red\"\r\n        },\r\n        questions: [],\r\n        answers: [],\r\n        totalScore: null,\r\n        actualScore: null,\r\n        // questions: [\r\n        //   {\r\n        //     id: 1,\r\n        //     type: 'name',\r\n        //     title: '姓名',\r\n        //     must: true, // 是否必填\r\n        //     description: '', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '', // 选项标题\r\n        //         id: 0 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 1, // 填空区域行数\r\n        //     refer: '', // 参考答案\r\n        //     point: 0,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 2,\r\n        //     type: 'stuId',\r\n        //     title: '学号',\r\n        //     must: true, // 是否必填\r\n        //     description: '', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '', // 选项标题\r\n        //         id: 0 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 1, // 填空区域行数\r\n        //     refer: '', // 参考答案\r\n        //     point: 0,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 3,\r\n        //     type: 'class',\r\n        //     title: '班级',\r\n        //     must: true, // 是否必填\r\n        //     description: '', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '', // 选项标题\r\n        //         id: 0 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 1, // 填空区域行数\r\n        //     refer: '', // 参考答案\r\n        //     point: 0,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 4,\r\n        //     type: 'school',\r\n        //     title: '学校',\r\n        //     must: true, // 是否必填\r\n        //     description: '', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '', // 选项标题\r\n        //         id: 0 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 1, // 填空区域行数\r\n        //     refer: '', // 参考答案\r\n        //     point: 0,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 5,\r\n        //     type: 'radio',\r\n        //     title: '这是一个什么问卷？',\r\n        //     must: true, // 是否必填\r\n        //     description: '请谨慎做答', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '考试问卷', // 选项标题\r\n        //         id: 1 // 选项id\r\n        //       },\r\n        //       {\r\n        //         title: '调查问卷', // 选项标题\r\n        //         id: 2 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 0, // 填空区域行数\r\n        //     refer: '考试问卷', // 参考答案\r\n        //     point: 10,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 6,\r\n        //     type: 'checkbox',\r\n        //     title: '软工助教都有谁？',\r\n        //     must: false, // 是否必填\r\n        //     description: '', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: 'ZYH', // 选项标题\r\n        //         id: 1 // 选项id\r\n        //       },\r\n        //       {\r\n        //         title: 'LKW', // 选项标题\r\n        //         id: 2 // 选项id\r\n        //       },\r\n        //       {\r\n        //         title: 'MHY', // 选项标题\r\n        //         id: 3 // 选项id\r\n        //       },\r\n        //       {\r\n        //         title: 'HZH', // 选项标题\r\n        //         id: 4 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 0, // 填空区域行数\r\n        //     refer: '[\"LKW\", \"MHY\"]', // 参考答案\r\n        //     point: 20,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 7,\r\n        //     type: 'text',\r\n        //     title: '小学期累不累？',\r\n        //     must: false, // 是否必填\r\n        //     description: '请谨慎考虑做答', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '', // 选项标题\r\n        //         id: 0 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 5, // 填空区域行数\r\n        //     refer: '', // 参考答案\r\n        //     point: 30,  // 分值\r\n        //   },\r\n        //   {\r\n        //     id: 8,\r\n        //     type: 'judge',\r\n        //     title: '从来没有加过班',\r\n        //     must: true, // 是否必填\r\n        //     description: '请谨慎考虑做答', // 问题描述\r\n        //     options: [\r\n        //       {\r\n        //         title: '对', // 选项标题\r\n        //         id: 1 // 选项id\r\n        //       },\r\n        //       {\r\n        //         title: '错', // 选项标题\r\n        //         id: 2 // 选项id\r\n        //       },\r\n        //     ],\r\n        //     row: 0, // 填空区域行数\r\n        //     refer: '对', // 参考答案\r\n        //     point: 50,  // 分值\r\n        //   },\r\n        // ],\r\n        // answers: [\r\n        //   {\r\n        //     question_id: '1',\r\n        //     type: 'name',\r\n        //     ans: 'Zuo_zuo',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '2',\r\n        //     type: 'stuId',\r\n        //     ans: '19373260',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '3',\r\n        //     type: 'class',\r\n        //     ans: '192111',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '4',\r\n        //     type: 'school',\r\n        //     ans: '北航',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '5',\r\n        //     type: 'radio',\r\n        //     ans: '调查问卷',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '6',\r\n        //     type: 'checkbox',\r\n        //     ans: null,\r\n        //     ansList: [\"LKW\", \"MHY\"],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '7',\r\n        //     type: 'text',\r\n        //     ans: '累死啦',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        //   {\r\n        //     question_id: '8',\r\n        //     type: 'judge',\r\n        //     ans: '对',\r\n        //     ansList: [],\r\n        //     correct: null,\r\n        //   },\r\n        // ],\r\n      }\r\n    },\r\n    methods: {\r\n      isInfo: function (item) {\r\n        return item.type === 'name' || item.type === 'stuId' || item.type === 'class' || item.type === 'school'\r\n      },\r\n      isRight: function (item) {\r\n        return this.answers[item.id-1].correct;\r\n      },\r\n      judge() {\r\n        // 判卷\r\n        let questions = this.questions;\r\n        let answers = this.answers;\r\n        let total = 0;\r\n        let score = 0;\r\n        for (let i=0; i<questions.length; i++) {\r\n          // 略过信息和主观题\r\n          if (this.isInfo(questions[i])) { continue;}\r\n          // 统计\r\n          if (questions[i].type === 'radio' || questions[i].type === 'judge') {\r\n            if (questions[i].refer === answers[i].ans) {\r\n              answers[i].correct = true;\r\n              score += questions[i].point;\r\n            }\r\n            total += questions[i].point;\r\n          }\r\n          if (questions[i].type === 'checkbox') {\r\n            // 预处理\r\n            let reference = questions[i].refer;\r\n            // let reference = questions[i].refer.substring(1, questions[i].refer.length-1).replace(/\"/g, \"\").split(', ');\r\n            if (reference.sort().toString() === answers[i].ansList.sort().toString()) {\r\n              answers[i].correct = true;\r\n              score += questions[i].point;\r\n            }\r\n            total += questions[i].point;\r\n          } else if (questions[i].type === 'text') {\r\n            if (questions[i].refer === answers[i].ans) {\r\n              answers[i].correct = true;\r\n              score += questions[i].point;\r\n            }\r\n            total += questions[i].point;\r\n          }\r\n        }\r\n        this.actualScore = score;\r\n        this.totalScore = total;\r\n      },\r\n    },\r\n    created() {\r\n      var data = [];\r\n      this.questions = this.quesStorage;\r\n      const userInfo = user.getters.getUser(user.state());\r\n      const formData = new FormData();\r\n      formData.append(\"code\", this.$route.query.code);\r\n      formData.append(\"username\", userInfo.user.username);\r\n      this.$axios({\r\n        method: 'post',\r\n        url: '/sm/get/submit_answers/code',\r\n        data: formData,\r\n      })\r\n      .then(res => {\r\n        if (res.data.status_code === 1) {\r\n          data = res.data.answers;\r\n          this.questions = res.data.questions;\r\n  \r\n          for (var m=0; m<this.questions.length; m++) {\r\n            if (this.questions[m].type === 'checkbox') {\r\n              this.questions[m].refer = this.questions[m].refer.split('-<^-^>-');\r\n            }\r\n          }\r\n  \r\n          this.answers = [];\r\n          //建立答案框架\r\n          for (var i=0; i<this.questions.length; i++) {\r\n            this.answers.push({\r\n              question_id: this.questions[i].question_id,\r\n              type: this.questions[i].type,\r\n              ans: null,\r\n              ansList: [],\r\n              answer: ''\r\n            });\r\n          }\r\n          for (var j=0; j<this.answers.length; j++) {\r\n            for (var k=0; k<data.length; k++) {\r\n              if (this.answers[j].question_id === data[k].question_id) {\r\n                switch (this.answers[j].type) {\r\n                  case 'checkbox':\r\n                    this.answers[j].ansList = data[k].answer.split('-<^-^>-');\r\n                    break;\r\n                  case 'mark':\r\n                    this.answers[j].ans = parseInt(data[k].answer);\r\n                    this.answers[j].answer = data[k].answer;\r\n                    break;\r\n                  case 'radio':\r\n                    this.answers[j].ans = data[k].answer;\r\n                    this.answers[j].answer = data[k].answer;\r\n                    break;\r\n                  default:\r\n                    this.answers[j].ans = data[k].answer;\r\n                    this.answers[j].answer = data[k].answer;\r\n                    break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n  \r\n          this.judge();\r\n        } else {\r\n          this.$message.error(\"请求失败！\");\r\n        }\r\n      });\r\n    },\r\n  \r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .qn-result {\r\n    background-image: url(\"../../assets/images/preview_bk.png\");\r\n    background-repeat: repeat-y;\r\n    min-height: 800px;\r\n    overflow: hidden;\r\n    background-position:center;\r\n    background-size: 100% auto;\r\n  }\r\n  \r\n  .qn-result .paper {\r\n    margin: 120px auto 0;\r\n    width: 900px;\r\n    background-color: #FFFFFF;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, .12), 0 0 6px rgba(0, 0, 0, .04)\r\n  }\r\n  \r\n  .qn-result .note {\r\n    color: #b9b9b9;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .qn-result .block-refer {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #a3a3a3;\r\n  }\r\n  \r\n  .qn-result .block-yourAnswer {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #a3a3a3;\r\n  }\r\n  \r\n  .qn-result .block-point {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #e59824;\r\n  }\r\n  \r\n  .qn-result .title {\r\n    margin-top: 40px;\r\n    margin-bottom: 40px;\r\n    color: #1687fd;\r\n  }\r\n  \r\n  .qn-result .ques-block-info {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    text-align: center;\r\n    padding:20px\r\n  }\r\n  \r\n  .qn-result .ques-block-info:hover {\r\n    background: #f6f6f6 !important;\r\n    transition: .3s;\r\n  }\r\n  \r\n  .qn-result .ques-block-right {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    text-align: center;\r\n    padding:20px\r\n  }\r\n  \r\n  .qn-result .ques-block-right:hover {\r\n    background: #eef6fd;\r\n    transition: .3s;\r\n  }\r\n  \r\n  .qn-result .ques-block-wrong {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    text-align: center;\r\n    padding:20px\r\n  }\r\n  \r\n  .qn-result .ques-block-wrong:hover {\r\n    background: #fff2f2;\r\n    transition: .3s;\r\n  }\r\n  \r\n  .qn-result .q-title {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 0 10px 10px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .qn-result .q-description {\r\n    text-align: left;\r\n    font-size: 14px;\r\n    padding-left: 10px;\r\n    padding-top: 5px;\r\n    padding-bottom: 10px;\r\n    color: #969696;\r\n  }\r\n  \r\n  .qn-result .must {\r\n    font-weight: normal;\r\n    color: crimson;\r\n  }\r\n  \r\n  .qn-result .point {\r\n    font-weight: normal;\r\n    color: #EC9D2D;\r\n  }\r\n  \r\n  .qn-result .q-opt {\r\n    text-align: left;\r\n    /*border: solid 1px black;*/\r\n    font-size: 16px;\r\n    padding: 10px 10px 10px;\r\n  }\r\n  \r\n  .qn-result .el-checkbox {\r\n    padding: 10px 0;\r\n    display: block;\r\n  }\r\n  \r\n  .qn-result .q-opt .el-textarea__inner {\r\n    max-height: 100px;\r\n  }\r\n  \r\n  .qn-result .tail {\r\n    padding-top: 25px;\r\n    font-size: 15px;\r\n    color: #b9b9b9;\r\n    border-top: solid 1px #e3e3e3;\r\n    height: 50px;\r\n    margin: 0 30px 130px;\r\n  }\r\n  \r\n  .qn-result .tail-point {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: crimson;\r\n  }\r\n  \r\n  .qn-result .tail-refer {\r\n    text-align: right;\r\n    /*border: solid 1px black;*/\r\n    font-size: 14px;\r\n    padding-top: 8px;\r\n    padding-left: 10px;\r\n    color: #0404c9;\r\n  }\r\n  \r\n  .tail-info {\r\n    padding: 0 10px;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}